strict digraph "compose( ,  )" {
	node [label="\N"];
	"232:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff82753a090>",
		fillcolor=turquoise,
		label="232:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"233:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff82753a350>",
		fillcolor=springgreen,
		label="233:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"232:BL" -> "233:IF"	 [cond="[]",
		lineno=None];
	"221:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff82752d210>",
		def_var="['ExcessiveDefer']",
		fillcolor=deepskyblue,
		label="221:AS
ExcessiveDefer = (NibCnt[13:0] == 14'h17b7) & ~ExDfrEn;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['NibCnt', 'ExDfrEn']"];
	"191:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff82752c450>",
		def_var="['IncrementNibCnt']",
		fillcolor=deepskyblue,
		label="191:AS
IncrementNibCnt = StateIPG | StatePreamble | |StateData | StatePAD | StateFCS | StateJam | StateBackOff | StateDefer & ~ExcessiveDefer & \
TxStartFrm;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StateIPG', 'StatePreamble', 'StateData', 'StatePAD', 'StateFCS', 'StateJam', 'StateBackOff', 'StateDefer', 'ExcessiveDefer', '\
TxStartFrm']"];
	"221:AS" -> "191:AS";
	"195:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff82752c9d0>",
		def_var="['ResetNibCnt']",
		fillcolor=deepskyblue,
		label="195:AS
ResetNibCnt = StateDefer & ExcessiveDefer & ~TxStartFrm | StatePreamble & NibCntEq15 | StateJam & NibCntEq7 | StateIdle | \
StartDefer | StartIPG | StartFCS | StartJam;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StateDefer', 'ExcessiveDefer', 'TxStartFrm', 'StatePreamble', 'NibCntEq15', 'StateJam', 'NibCntEq7', 'StateIdle', 'StartDefer', '\
StartIPG', 'StartFCS', 'StartJam']"];
	"221:AS" -> "195:AS";
	"209:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff827521650>",
		fillcolor=firebrick,
		label="209:NS
NibCnt <= NibCnt + 16'd1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff827521650>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_199:AL"	 [def_var="['NibCnt']",
		label="Leaf_199:AL"];
	"209:NS" -> "Leaf_199:AL"	 [cond="[]",
		lineno=None];
	"234:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff82753a310>",
		fillcolor=firebrick,
		label="234:NS
ByteCnt[15:0] <= 16'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff82753a310>]",
		style=filled,
		typ=NonblockingSubstitution];
	"233:IF" -> "234:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=233];
	"236:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff82753a3d0>",
		fillcolor=turquoise,
		label="236:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"233:IF" -> "236:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=233];
	"238:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff82753a6d0>",
		fillcolor=firebrick,
		label="238:NS
ByteCnt[15:0] <= 16'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff82753a6d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_231:AL"	 [def_var="['ByteCnt']",
		label="Leaf_231:AL"];
	"238:NS" -> "Leaf_231:AL"	 [cond="[]",
		lineno=None];
	"253:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff8275222d0>",
		fillcolor=turquoise,
		label="253:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"254:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff8275224d0>",
		fillcolor=springgreen,
		label="254:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"253:BL" -> "254:IF"	 [cond="[]",
		lineno=None];
	"215:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8275218d0>",
		def_var="['NibCntEq15']",
		fillcolor=deepskyblue,
		label="215:AS
NibCntEq15 = &NibCnt[3:0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['NibCnt']"];
	"215:AS" -> "195:AS";
	"227:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff82752dd50>",
		def_var="['ResetByteCnt']",
		fillcolor=deepskyblue,
		label="227:AS
ResetByteCnt = StartBackoff | StateIdle & TxStartFrm | PacketFinished_q;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StartBackoff', 'StateIdle', 'TxStartFrm', 'PacketFinished_q']"];
	"231:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff82753a0d0>",
		clk_sens=False,
		fillcolor=gold,
		label="231:AL",
		sens="['MTxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'ByteCnt', 'IncrementByteCnt', 'ResetByteCnt']"];
	"227:AS" -> "231:AL";
	"199:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff82752ce90>",
		clk_sens=False,
		fillcolor=gold,
		label="199:AL",
		sens="['MTxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'IncrementNibCnt', 'NibCnt', 'ResetNibCnt']"];
	"191:AS" -> "199:AL";
	"240:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff82753a9d0>",
		fillcolor=springgreen,
		label="240:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"241:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff82753ab90>",
		fillcolor=firebrick,
		label="241:NS
ByteCnt[15:0] <= ByteCnt[15:0] + 16'd1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff82753ab90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"240:IF" -> "241:NS"	 [cond="['IncrementByteCnt']",
		label=IncrementByteCnt,
		lineno=240];
	"204:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff82752cfd0>",
		fillcolor=turquoise,
		label="204:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"205:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff827521350>",
		fillcolor=springgreen,
		label="205:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"204:BL" -> "205:IF"	 [cond="[]",
		lineno=None];
	"259:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff827522a10>",
		fillcolor=firebrick,
		label="259:NS
DlyCrcCnt <= 3'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff827522a10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_252:AL"	 [def_var="['DlyCrcCnt']",
		label="Leaf_252:AL"];
	"259:NS" -> "Leaf_252:AL"	 [cond="[]",
		lineno=None];
	"231:AL" -> "232:BL"	 [cond="[]",
		lineno=None];
	"262:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805bf8050>",
		fillcolor=firebrick,
		label="262:NS
DlyCrcCnt <= DlyCrcCnt + 3'd1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805bf8050>]",
		style=filled,
		typ=NonblockingSubstitution];
	"262:NS" -> "Leaf_252:AL"	 [cond="[]",
		lineno=None];
	"200:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff82752ced0>",
		fillcolor=turquoise,
		label="200:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"199:AL" -> "200:BL"	 [cond="[]",
		lineno=None];
	"208:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff827521490>",
		fillcolor=springgreen,
		label="208:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"208:IF" -> "209:NS"	 [cond="['IncrementNibCnt']",
		label=IncrementNibCnt,
		lineno=208];
	"202:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff827521050>",
		fillcolor=firebrick,
		label="202:NS
NibCnt <= 16'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff827521050>]",
		style=filled,
		typ=NonblockingSubstitution];
	"202:NS" -> "Leaf_199:AL"	 [cond="[]",
		lineno=None];
	"258:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff827522a50>",
		fillcolor=springgreen,
		label="258:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"258:IF" -> "259:NS"	 [cond="['StateData', 'DlyCrcCnt', 'StartJam', 'PacketFinished_q']",
		label="(StateData[1] & (DlyCrcCnt == 3'h4) | StartJam | PacketFinished_q)",
		lineno=258];
	"261:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff827522ed0>",
		fillcolor=springgreen,
		label="261:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"258:IF" -> "261:IF"	 [cond="['StateData', 'DlyCrcCnt', 'StartJam', 'PacketFinished_q']",
		label="!((StateData[1] & (DlyCrcCnt == 3'h4) | StartJam | PacketFinished_q))",
		lineno=258];
	"234:NS" -> "Leaf_231:AL"	 [cond="[]",
		lineno=None];
	"237:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff82753a710>",
		fillcolor=springgreen,
		label="237:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"236:BL" -> "237:IF"	 [cond="[]",
		lineno=None];
	"217:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff827521cd0>",
		def_var="['NibbleMinFl']",
		fillcolor=deepskyblue,
		label="217:AS
NibbleMinFl = NibCnt >= (MinFL - 16'd4 << 1) - 1;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['NibCnt', 'MinFL']"];
	"219:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff827521f10>",
		def_var="['ExcessiveDeferCnt']",
		fillcolor=deepskyblue,
		label="219:AS
ExcessiveDeferCnt = NibCnt[13:0] == 14'h17b7;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['NibCnt']"];
	"248:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff827522050>",
		def_var="['ByteCntMax']",
		fillcolor=deepskyblue,
		label="248:AS
ByteCntMax = &ByteCnt[15:0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ByteCnt']"];
	"223:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff82752d9d0>",
		def_var="['IncrementByteCnt']",
		fillcolor=deepskyblue,
		label="223:AS
IncrementByteCnt = StateData[1] & ~ByteCntMax | StateBackOff & &NibCnt[6:0] | (StatePAD | StateFCS) & NibCnt[0] & ~ByteCntMax;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StateData', 'ByteCntMax', 'StateBackOff', 'NibCnt', 'StatePAD', 'StateFCS', 'NibCnt', 'ByteCntMax']"];
	"248:AS" -> "223:AS";
	"246:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff82753ad10>",
		def_var="['MaxFrame']",
		fillcolor=deepskyblue,
		label="246:AS
MaxFrame = (ByteCnt[15:0] == MaxFL[15:0]) & ~HugEn;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ByteCnt', 'MaxFL', 'HugEn']"];
	"223:AS" -> "231:AL";
	"252:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff827522310>",
		clk_sens=False,
		fillcolor=gold,
		label="252:AL",
		sens="['MTxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['StateSFD', 'Reset', 'PacketFinished_q', 'DlyCrcCnt', 'StartJam', 'DlyCrcEn', 'StateData']"];
	"252:AL" -> "253:BL"	 [cond="[]",
		lineno=None];
	"205:IF" -> "208:IF"	 [cond="['ResetNibCnt']",
		label="!(ResetNibCnt)",
		lineno=205];
	"206:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff827521310>",
		fillcolor=firebrick,
		label="206:NS
NibCnt <= 16'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff827521310>]",
		style=filled,
		typ=NonblockingSubstitution];
	"205:IF" -> "206:NS"	 [cond="['ResetNibCnt']",
		label=ResetNibCnt,
		lineno=205];
	"Leaf_252:AL" -> "252:AL";
	"206:NS" -> "Leaf_199:AL"	 [cond="[]",
		lineno=None];
	"Leaf_199:AL" -> "221:AS";
	"Leaf_199:AL" -> "215:AS";
	"Leaf_199:AL" -> "199:AL";
	"Leaf_199:AL" -> "217:AS";
	"Leaf_199:AL" -> "219:AS";
	"Leaf_199:AL" -> "223:AS";
	"214:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff827521610>",
		def_var="['NibCntEq7']",
		fillcolor=deepskyblue,
		label="214:AS
NibCntEq7 = &NibCnt[2:0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['NibCnt']"];
	"Leaf_199:AL" -> "214:AS";
	"241:NS" -> "Leaf_231:AL"	 [cond="[]",
		lineno=None];
	"255:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff827522490>",
		fillcolor=firebrick,
		label="255:NS
DlyCrcCnt <= 3'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff827522490>]",
		style=filled,
		typ=NonblockingSubstitution];
	"255:NS" -> "Leaf_252:AL"	 [cond="[]",
		lineno=None];
	"237:IF" -> "238:NS"	 [cond="['ResetByteCnt']",
		label=ResetByteCnt,
		lineno=237];
	"237:IF" -> "240:IF"	 [cond="['ResetByteCnt']",
		label="!(ResetByteCnt)",
		lineno=237];
	"195:AS" -> "199:AL";
	"201:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff827521090>",
		fillcolor=springgreen,
		label="201:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"200:BL" -> "201:IF"	 [cond="[]",
		lineno=None];
	"254:IF" -> "255:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=254];
	"257:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff827522550>",
		fillcolor=turquoise,
		label="257:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"254:IF" -> "257:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=254];
	"214:AS" -> "195:AS";
	"257:BL" -> "258:IF"	 [cond="[]",
		lineno=None];
	"201:IF" -> "204:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=201];
	"201:IF" -> "202:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=201];
	"261:IF" -> "262:NS"	 [cond="['DlyCrcEn', 'StateSFD', 'StateData', 'DlyCrcCnt']",
		label="(DlyCrcEn & (StateSFD | StateData[1] & |DlyCrcCnt[2:0]))",
		lineno=261];
	"Leaf_231:AL" -> "231:AL";
	"Leaf_231:AL" -> "248:AS";
	"Leaf_231:AL" -> "246:AS";
}
