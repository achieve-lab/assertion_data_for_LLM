strict digraph "compose( ,  )" {
	node [label="\N"];
	"520:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8063386d0>",
		def_var="['Data_Crc']",
		fillcolor=deepskyblue,
		label="520:AS
Data_Crc[2] = (StateData[0])? TxData[1] : 
(StateData[1])? TxData[5] : 1'b0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StateData', 'TxData', 'StateData', 'TxData']"];
	"341:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff80629c050>",
		fillcolor=springgreen,
		label="341:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"342:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff80629c190>",
		fillcolor=firebrick,
		label="342:NS
TxDone <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff80629c190>]",
		style=filled,
		typ=NonblockingSubstitution];
	"341:IF" -> "342:NS"	 [cond="['StartTxDone']",
		label=StartTxDone,
		lineno=341];
	"409:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff80629fe90>",
		fillcolor=springgreen,
		label="409:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"410:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff80629fd90>",
		fillcolor=cadetblue,
		label="410:BS
MTxD_d[3:0] = { ~Crc[28], ~Crc[29], ~Crc[30], ~Crc[31] };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff80629fd90>]",
		style=filled,
		typ=BlockingSubstitution];
	"409:IF" -> "410:BS"	 [cond="['StateFCS']",
		label=StateFCS,
		lineno=409];
	"412:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff8065a3310>",
		fillcolor=springgreen,
		label="412:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"409:IF" -> "412:IF"	 [cond="['StateFCS']",
		label="!(StateFCS)",
		lineno=409];
	"Leaf_380:AL"	 [def_var="['RetryCnt']",
		label="Leaf_380:AL"];
	"396:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff806297950>",
		def_var="['RetryMax']",
		fillcolor=deepskyblue,
		label="396:AS
RetryMax = RetryCnt[3:0] == MaxRet[3:0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RetryCnt', 'MaxRet']"];
	"Leaf_380:AL" -> "396:AS";
	"380:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff806294550>",
		clk_sens=False,
		fillcolor=gold,
		label="380:AL",
		sens="['MTxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'StateJam', 'TxUnderRun', 'RetryMax', 'NibCntEq7', 'StateBackOff', 'RetryCnt', 'UnderRun', 'NoBckof', 'RandomEqByteCnt', '\
TooBig', 'ColWindow', 'RandomEq0', 'StartTxDone', 'ExcessiveDeferOccured']"];
	"Leaf_380:AL" -> "380:AL";
	"353:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff80629c4d0>",
		fillcolor=turquoise,
		label="353:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"354:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff80629c7d0>",
		fillcolor=springgreen,
		label="354:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"353:BL" -> "354:IF"	 [cond="[]",
		lineno=None];
	"323:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff8062814d0>",
		fillcolor=turquoise,
		label="323:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"324:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff8062815d0>",
		fillcolor=springgreen,
		label="324:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"323:BL" -> "324:IF"	 [cond="[]",
		lineno=None];
	"518:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff806326c10>",
		def_var="['Data_Crc']",
		fillcolor=deepskyblue,
		label="518:AS
Data_Crc[0] = (StateData[0])? TxData[3] : 
(StateData[1])? TxData[7] : 1'b0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StateData', 'TxData', 'StateData', 'TxData']"];
	"Leaf_469:AL"	 [def_var="['PacketFinished_q', 'PacketFinished']",
		label="Leaf_469:AL"];
	"469:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff8065adc50>",
		clk_sens=False,
		fillcolor=gold,
		label="469:AL",
		sens="['MTxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'PacketFinished', 'PacketFinished_d']"];
	"Leaf_469:AL" -> "469:AL";
	"465:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8065ad710>",
		def_var="['PacketFinished_d']",
		fillcolor=deepskyblue,
		label="465:AS
PacketFinished_d = StartTxDone | TooBig | UnderRun | LateCollision | MaxCollisionOccured | ExcessiveDeferOccured;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StartTxDone', 'TooBig', 'UnderRun', 'LateCollision', 'MaxCollisionOccured', 'ExcessiveDeferOccured']"];
	"465:AS" -> "469:AL";
	"374:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff806294450>",
		fillcolor=firebrick,
		label="374:NS
TxAbort <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff806294450>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_364:AL"	 [def_var="['TxAbort']",
		label="Leaf_364:AL"];
	"374:NS" -> "Leaf_364:AL"	 [cond="[]",
		lineno=None];
	"264:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8066cc790>",
		def_var="['LateCollision']",
		fillcolor=deepskyblue,
		label="264:AS
LateCollision = StartJam & ~ColWindow & ~UnderRun;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StartJam', 'ColWindow', 'UnderRun']"];
	"264:AS" -> "465:AS";
	"270:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8066cf0d0>",
		def_var="['StartTxAbort']",
		fillcolor=deepskyblue,
		label="270:AS
StartTxAbort = TooBig | UnderRun | ExcessiveDeferOccured | LateCollision | MaxCollisionOccured;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['TooBig', 'UnderRun', 'ExcessiveDeferOccured', 'LateCollision', 'MaxCollisionOccured']"];
	"264:AS" -> "270:AS";
	"458:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff8065ad150>",
		fillcolor=springgreen,
		label="458:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"461:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8065ad450>",
		fillcolor=firebrick,
		label="461:NS
WillTransmit <= StartPreamble | StatePreamble | |StateData | StatePAD | StateFCS | StateJam;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8065ad450>]",
		style=filled,
		typ=NonblockingSubstitution];
	"458:IF" -> "461:NS"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=458];
	"459:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8065ad090>",
		fillcolor=firebrick,
		label="459:NS
WillTransmit <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8065ad090>]",
		style=filled,
		typ=NonblockingSubstitution];
	"458:IF" -> "459:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=458];
	"322:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff806281490>",
		clk_sens=False,
		fillcolor=gold,
		label="322:AL",
		sens="['MTxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'StartData']"];
	"322:AL" -> "323:BL"	 [cond="[]",
		lineno=None];
	"255:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8062faa90>",
		def_var="['StartTxDone']",
		fillcolor=deepskyblue,
		label="255:AS
StartTxDone = ~Collision & (StateFCS & NibCntEq7 | StateData[1] & TxEndFrm & (~Pad | Pad & NibbleMinFl) & ~CrcEn);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Collision', 'StateFCS', 'NibCntEq7', 'StateData', 'TxEndFrm', 'Pad', 'Pad', 'NibbleMinFl', 'CrcEn']"];
	"255:AS" -> "465:AS";
	"255:AS" -> "380:AL";
	"332:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff8062819d0>",
		clk_sens=False,
		fillcolor=gold,
		label="332:AL",
		sens="['MTxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'StatusLatch', 'StartTxDone', 'TxStartFrm']"];
	"255:AS" -> "332:AL";
	"284:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8066cfb90>",
		fillcolor=firebrick,
		label="284:NS
StopExcessiveDeferOccured <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8066cfb90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_274:AL"	 [def_var="['StopExcessiveDeferOccured']",
		label="Leaf_274:AL"];
	"284:NS" -> "Leaf_274:AL"	 [cond="[]",
		lineno=None];
	"351:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff80629c410>",
		fillcolor=firebrick,
		label="351:NS
TxRetry <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff80629c410>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_348:AL"	 [def_var="['TxRetry']",
		label="Leaf_348:AL"];
	"351:NS" -> "Leaf_348:AL"	 [cond="[]",
		lineno=None];
	"327:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8062817d0>",
		fillcolor=firebrick,
		label="327:NS
TxUsedData <= |StartData;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8062817d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_322:AL"	 [def_var="['TxUsedData']",
		label="Leaf_322:AL"];
	"327:NS" -> "Leaf_322:AL"	 [cond="[]",
		lineno=None];
	"335:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff806281b50>",
		fillcolor=firebrick,
		label="335:NS
TxDone <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff806281b50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_332:AL"	 [def_var="['TxDone']",
		label="Leaf_332:AL"];
	"335:NS" -> "Leaf_332:AL"	 [cond="[]",
		lineno=None];
	"355:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff80629c790>",
		fillcolor=firebrick,
		label="355:NS
TxRetry <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff80629c790>]",
		style=filled,
		typ=NonblockingSubstitution];
	"355:NS" -> "Leaf_348:AL"	 [cond="[]",
		lineno=None];
	"396:AS" -> "380:AL";
	"266:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8066cca50>",
		def_var="['MaxCollisionOccured']",
		fillcolor=deepskyblue,
		label="266:AS
MaxCollisionOccured = StartJam & ColWindow & RetryMax;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StartJam', 'ColWindow', 'RetryMax']"];
	"396:AS" -> "266:AS";
	"262:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8066cc490>",
		def_var="['StartTxRetry']",
		fillcolor=deepskyblue,
		label="262:AS
StartTxRetry = StartJam & (ColWindow & ~RetryMax) & ~UnderRun;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StartJam', 'ColWindow', 'RetryMax', 'UnderRun']"];
	"396:AS" -> "262:AS";
	"386:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff806294fd0>",
		fillcolor=springgreen,
		label="386:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"390:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff806297610>",
		fillcolor=springgreen,
		label="390:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"386:IF" -> "390:IF"	 [cond="['ExcessiveDeferOccured', 'UnderRun', 'TooBig', 'StartTxDone', 'TxUnderRun', 'StateJam', 'NibCntEq7', 'ColWindow', 'RetryMax']",
		label="!((ExcessiveDeferOccured | UnderRun | TooBig | StartTxDone | TxUnderRun | StateJam & NibCntEq7 & (~ColWindow | RetryMax)))",
		lineno=386];
	"388:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff806294f90>",
		fillcolor=firebrick,
		label="388:NS
RetryCnt[3:0] <= 4'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff806294f90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"386:IF" -> "388:NS"	 [cond="['ExcessiveDeferOccured', 'UnderRun', 'TooBig', 'StartTxDone', 'TxUnderRun', 'StateJam', 'NibCntEq7', 'ColWindow', 'RetryMax']",
		label="(ExcessiveDeferOccured | UnderRun | TooBig | StartTxDone | TxUnderRun | StateJam & NibCntEq7 & (~ColWindow | RetryMax))",
		lineno=386];
	"369:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff80629cd90>",
		fillcolor=turquoise,
		label="369:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"370:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff8062941d0>",
		fillcolor=springgreen,
		label="370:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"369:BL" -> "370:IF"	 [cond="[]",
		lineno=None];
	"383:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff806294790>",
		fillcolor=firebrick,
		label="383:NS
RetryCnt[3:0] <= 4'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff806294790>]",
		style=filled,
		typ=NonblockingSubstitution];
	"383:NS" -> "Leaf_380:AL"	 [cond="[]",
		lineno=None];
	"325:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff806281610>",
		fillcolor=firebrick,
		label="325:NS
TxUsedData <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff806281610>]",
		style=filled,
		typ=NonblockingSubstitution];
	"325:NS" -> "Leaf_322:AL"	 [cond="[]",
		lineno=None];
	"Leaf_456:AL"	 [def_var="['WillTransmit']",
		label="Leaf_456:AL"];
	"334:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff806281b90>",
		fillcolor=springgreen,
		label="334:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"334:IF" -> "335:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=334];
	"337:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff806281c10>",
		fillcolor=turquoise,
		label="337:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"334:IF" -> "337:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=334];
	"308:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff8062a1d50>",
		fillcolor=springgreen,
		label="308:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"311:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff8062a1dd0>",
		fillcolor=turquoise,
		label="311:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"308:IF" -> "311:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=308];
	"309:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8062a1d10>",
		fillcolor=firebrick,
		label="309:NS
StatusLatch <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8062a1d10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"308:IF" -> "309:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=308];
	"350:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff80629c450>",
		fillcolor=springgreen,
		label="350:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"350:IF" -> "353:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=350];
	"350:IF" -> "351:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=350];
	"400:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff806297fd0>",
		clk_sens=False,
		fillcolor=gold,
		label="400:AL",
		sens="['StatePreamble', 'StateData', 'StateData', 'StateFCS', 'StateJam', 'StateSFD', 'TxData', 'Crc', 'NibCntEq15']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['StateJam', 'StateFCS', 'NibCntEq15', 'Crc', 'StateData', 'TxData', 'StatePreamble']"];
	"402:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff806297f90>",
		fillcolor=turquoise,
		label="402:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"400:AL" -> "402:BL"	 [cond="[]",
		lineno=None];
	"342:NS" -> "Leaf_332:AL"	 [cond="[]",
		lineno=None];
	"471:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff8065b7090>",
		fillcolor=springgreen,
		label="471:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"477:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff8065b7210>",
		fillcolor=turquoise,
		label="477:BL
PacketFinished <= PacketFinished_d;
PacketFinished_q <= PacketFinished;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8065b7250>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7ff8065b7410>]",
		style=filled,
		typ=Block];
	"471:IF" -> "477:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=471];
	"472:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff8065ade10>",
		fillcolor=turquoise,
		label="472:BL
PacketFinished <= 1'b0;
PacketFinished_q <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8065ade50>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7ff8065adfd0>]",
		style=filled,
		typ=Block];
	"471:IF" -> "472:BL"	 [cond="['Reset']",
		label=Reset,
		lineno=471];
	"366:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff80629cd10>",
		fillcolor=springgreen,
		label="366:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"366:IF" -> "369:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=366];
	"367:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff80629ccd0>",
		fillcolor=firebrick,
		label="367:NS
TxAbort <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff80629ccd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"366:IF" -> "367:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=366];
	"457:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff8065afed0>",
		fillcolor=turquoise,
		label="457:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"457:BL" -> "458:IF"	 [cond="[]",
		lineno=None];
	"413:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff8065a32d0>",
		fillcolor=cadetblue,
		label="413:BS
MTxD_d[3:0] = 4'h9;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff8065a32d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_400:AL"	 [def_var="['MTxD_d']",
		label="Leaf_400:AL"];
	"413:BS" -> "Leaf_400:AL"	 [cond="[]",
		lineno=None];
	"300:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8062a1a90>",
		fillcolor=firebrick,
		label="300:NS
ColWindow <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8062a1a90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_290:AL"	 [def_var="['ColWindow']",
		label="Leaf_290:AL"];
	"300:NS" -> "Leaf_290:AL"	 [cond="[]",
		lineno=None];
	"523:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff80633c210>",
		def_var="['Initialize_Crc']",
		fillcolor=deepskyblue,
		label="523:AS
Initialize_Crc = StateIdle | StatePreamble | |DlyCrcCnt;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StateIdle', 'StatePreamble', 'DlyCrcCnt']"];
	"268:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8066cccd0>",
		def_var="['StateSFD']",
		fillcolor=deepskyblue,
		label="268:AS
StateSFD = StatePreamble & NibCntEq15;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StatePreamble', 'NibCntEq15']"];
	"276:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff8066cf590>",
		fillcolor=springgreen,
		label="276:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"277:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8066cf550>",
		fillcolor=firebrick,
		label="277:NS
StopExcessiveDeferOccured <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8066cf550>]",
		style=filled,
		typ=NonblockingSubstitution];
	"276:IF" -> "277:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=276];
	"279:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff8066cf610>",
		fillcolor=turquoise,
		label="279:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"276:IF" -> "279:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=276];
	"516:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff806326950>",
		def_var="['Enable_Crc']",
		fillcolor=deepskyblue,
		label="516:AS
Enable_Crc = ~StateFCS;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StateFCS']"];
	"416:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff8065a3910>",
		fillcolor=springgreen,
		label="416:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"419:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff8065a3990>",
		fillcolor=cadetblue,
		label="419:BS
MTxD_d[3:0] = 4'h5;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff8065a3990>]",
		style=filled,
		typ=BlockingSubstitution];
	"416:IF" -> "419:BS"	 [cond="['NibCntEq15']",
		label="!(NibCntEq15)",
		lineno=416];
	"417:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff8065a3750>",
		fillcolor=cadetblue,
		label="417:BS
MTxD_d[3:0] = 4'hd;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff8065a3750>]",
		style=filled,
		typ=BlockingSubstitution];
	"416:IF" -> "417:BS"	 [cond="['NibCntEq15']",
		label=NibCntEq15,
		lineno=416];
	"364:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff80629cb50>",
		clk_sens=False,
		fillcolor=gold,
		label="364:AL",
		sens="['MTxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'StartTxAbort', 'TxStartFrm', 'StatusLatch', 'ExcessiveDeferOccured']"];
	"365:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff80629cb10>",
		fillcolor=turquoise,
		label="365:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"364:AL" -> "365:BL"	 [cond="[]",
		lineno=None];
	"315:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff806281250>",
		fillcolor=springgreen,
		label="315:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"316:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff806281390>",
		fillcolor=firebrick,
		label="316:NS
StatusLatch <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff806281390>]",
		style=filled,
		typ=NonblockingSubstitution];
	"315:IF" -> "316:NS"	 [cond="['ExcessiveDeferOccured', 'StateIdle']",
		label="(ExcessiveDeferOccured | StateIdle)",
		lineno=315];
	"415:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff8065a3a90>",
		fillcolor=springgreen,
		label="415:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"415:IF" -> "416:IF"	 [cond="['StatePreamble']",
		label=StatePreamble,
		lineno=415];
	"421:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff8065a3b10>",
		fillcolor=cadetblue,
		label="421:BS
MTxD_d[3:0] = 4'h0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff8065a3b10>]",
		style=filled,
		typ=BlockingSubstitution];
	"415:IF" -> "421:BS"	 [cond="['StatePreamble']",
		label="!(StatePreamble)",
		lineno=415];
	"313:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff806281050>",
		fillcolor=firebrick,
		label="313:NS
StatusLatch <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff806281050>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_306:AL"	 [def_var="['StatusLatch']",
		label="Leaf_306:AL"];
	"313:NS" -> "Leaf_306:AL"	 [cond="[]",
		lineno=None];
	"275:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff8066cf3d0>",
		fillcolor=turquoise,
		label="275:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"275:BL" -> "276:IF"	 [cond="[]",
		lineno=None];
	"257:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8062fac90>",
		def_var="['UnderRun']",
		fillcolor=deepskyblue,
		label="257:AS
UnderRun = StateData[0] & TxUnderRun & ~Collision;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StateData', 'TxUnderRun', 'Collision']"];
	"257:AS" -> "465:AS";
	"257:AS" -> "264:AS";
	"257:AS" -> "380:AL";
	"257:AS" -> "270:AS";
	"257:AS" -> "262:AS";
	"446:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff8065af910>",
		clk_sens=False,
		fillcolor=gold,
		label="446:AL",
		sens="['MTxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'TooBig', 'UnderRun']"];
	"257:AS" -> "446:AL";
	"381:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff806294510>",
		fillcolor=turquoise,
		label="381:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"382:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff8062947d0>",
		fillcolor=springgreen,
		label="382:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"381:BL" -> "382:IF"	 [cond="[]",
		lineno=None];
	"431:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8065a3e10>",
		fillcolor=firebrick,
		label="431:NS
MTxEn <= StatePreamble | |StateData | StatePAD | StateFCS | StateJam;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8065a3e10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_426:AL"	 [def_var="['MTxEn']",
		label="Leaf_426:AL"];
	"431:NS" -> "Leaf_426:AL"	 [cond="[]",
		lineno=None];
	"421:BS" -> "Leaf_400:AL"	 [cond="[]",
		lineno=None];
	"426:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff8065a3090>",
		clk_sens=False,
		fillcolor=gold,
		label="426:AL",
		sens="['MTxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'StateJam', 'StateFCS', 'StatePreamble', 'StatePAD', 'StateData']"];
	"427:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff8065a3390>",
		fillcolor=turquoise,
		label="427:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"426:AL" -> "427:BL"	 [cond="[]",
		lineno=None];
	"306:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff8062a1b90>",
		clk_sens=False,
		fillcolor=gold,
		label="306:AL",
		sens="['MTxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'StateIdle', 'TxStartFrm', 'ExcessiveDeferOccured']"];
	"307:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff8062a1b50>",
		fillcolor=turquoise,
		label="307:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"306:AL" -> "307:BL"	 [cond="[]",
		lineno=None];
	"441:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8065af6d0>",
		fillcolor=firebrick,
		label="441:NS
MTxD[3:0] <= MTxD_d[3:0];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8065af6d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_436:AL"	 [def_var="['MTxD']",
		label="Leaf_436:AL"];
	"441:NS" -> "Leaf_436:AL"	 [cond="[]",
		lineno=None];
	"419:BS" -> "Leaf_400:AL"	 [cond="[]",
		lineno=None];
	"403:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff80629f390>",
		fillcolor=springgreen,
		label="403:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"402:BL" -> "403:IF"	 [cond="[]",
		lineno=None];
	"281:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8066cf890>",
		fillcolor=firebrick,
		label="281:NS
StopExcessiveDeferOccured <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8066cf890>]",
		style=filled,
		typ=NonblockingSubstitution];
	"281:NS" -> "Leaf_274:AL"	 [cond="[]",
		lineno=None];
	"280:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff8066cf8d0>",
		fillcolor=springgreen,
		label="280:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"280:IF" -> "281:NS"	 [cond="['TxStartFrm']",
		label="(~TxStartFrm)",
		lineno=280];
	"283:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff8066cfa90>",
		fillcolor=springgreen,
		label="283:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"280:IF" -> "283:IF"	 [cond="['TxStartFrm']",
		label="!((~TxStartFrm))",
		lineno=280];
	"357:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff80629c910>",
		fillcolor=springgreen,
		label="357:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"358:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff80629ca50>",
		fillcolor=firebrick,
		label="358:NS
TxRetry <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff80629ca50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"357:IF" -> "358:NS"	 [cond="['StartTxRetry']",
		label=StartTxRetry,
		lineno=357];
	"251:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8062f7f50>",
		def_var="['ResetCollision']",
		fillcolor=deepskyblue,
		label="251:AS
ResetCollision = ~(StatePreamble | |StateData | StatePAD | StateFCS);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StatePreamble', 'StateData', 'StatePAD', 'StateFCS']"];
	"338:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff806281f10>",
		fillcolor=springgreen,
		label="338:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"337:BL" -> "338:IF"	 [cond="[]",
		lineno=None];
	"391:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8062977d0>",
		fillcolor=firebrick,
		label="391:NS
RetryCnt[3:0] <= RetryCnt[3:0] + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8062977d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"391:NS" -> "Leaf_380:AL"	 [cond="[]",
		lineno=None];
	"380:AL" -> "381:BL"	 [cond="[]",
		lineno=None];
	"373:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff806294310>",
		fillcolor=springgreen,
		label="373:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"373:IF" -> "374:NS"	 [cond="['StartTxAbort']",
		label=StartTxAbort,
		lineno=373];
	"312:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff8062a1fd0>",
		fillcolor=springgreen,
		label="312:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"312:IF" -> "315:IF"	 [cond="['TxStartFrm']",
		label="!((~TxStartFrm))",
		lineno=312];
	"312:IF" -> "313:NS"	 [cond="['TxStartFrm']",
		label="(~TxStartFrm)",
		lineno=312];
	"448:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff8065afa50>",
		fillcolor=springgreen,
		label="448:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"451:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8065afc90>",
		fillcolor=firebrick,
		label="451:NS
MTxErr <= TooBig | UnderRun;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8065afc90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"448:IF" -> "451:NS"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=448];
	"449:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8065afa90>",
		fillcolor=firebrick,
		label="449:NS
MTxErr <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8065afa90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"448:IF" -> "449:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=448];
	"Leaf_290:AL" -> "264:AS";
	"Leaf_290:AL" -> "380:AL";
	"Leaf_290:AL" -> "266:AS";
	"Leaf_290:AL" -> "262:AS";
	"404:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff80629f350>",
		fillcolor=cadetblue,
		label="404:BS
MTxD_d[3:0] = TxData[3:0];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff80629f350>]",
		style=filled,
		typ=BlockingSubstitution];
	"403:IF" -> "404:BS"	 [cond="['StateData']",
		label="StateData[0]",
		lineno=403];
	"406:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff80629f810>",
		fillcolor=springgreen,
		label="406:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"403:IF" -> "406:IF"	 [cond="['StateData']",
		label="!(StateData[0])",
		lineno=403];
	"Leaf_306:AL" -> "364:AL";
	"348:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff80629c290>",
		clk_sens=False,
		fillcolor=gold,
		label="348:AL",
		sens="['MTxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'StartTxRetry', 'StatusLatch', 'TxStartFrm']"];
	"Leaf_306:AL" -> "348:AL";
	"Leaf_306:AL" -> "332:AL";
	"367:NS" -> "Leaf_364:AL"	 [cond="[]",
		lineno=None];
	"259:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8066cc210>",
		def_var="['TooBig']",
		fillcolor=deepskyblue,
		label="259:AS
TooBig = ~Collision & MaxFrame & (StateData[0] & ~TxUnderRun | StateFCS);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Collision', 'MaxFrame', 'StateData', 'TxUnderRun', 'StateFCS']"];
	"259:AS" -> "465:AS";
	"259:AS" -> "380:AL";
	"259:AS" -> "270:AS";
	"259:AS" -> "446:AL";
	"349:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff80629c250>",
		fillcolor=turquoise,
		label="349:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"349:BL" -> "350:IF"	 [cond="[]",
		lineno=None];
	"270:AS" -> "364:AL";
	"338:IF" -> "341:IF"	 [cond="['TxStartFrm', 'StatusLatch']",
		label="!((TxStartFrm & ~StatusLatch))",
		lineno=338];
	"339:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff806281ed0>",
		fillcolor=firebrick,
		label="339:NS
TxDone <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff806281ed0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"338:IF" -> "339:NS"	 [cond="['TxStartFrm', 'StatusLatch']",
		label="(TxStartFrm & ~StatusLatch)",
		lineno=338];
	"477:BL" -> "Leaf_469:AL"	 [cond="[]",
		lineno=None];
	"266:AS" -> "465:AS";
	"266:AS" -> "270:AS";
	"439:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8065af410>",
		fillcolor=firebrick,
		label="439:NS
MTxD[3:0] <= 4'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8065af410>]",
		style=filled,
		typ=NonblockingSubstitution];
	"439:NS" -> "Leaf_436:AL"	 [cond="[]",
		lineno=None];
	"436:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff8065af1d0>",
		clk_sens=False,
		fillcolor=gold,
		label="436:AL",
		sens="['MTxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'MTxD_d']"];
	"437:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff8065af210>",
		fillcolor=turquoise,
		label="437:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"436:AL" -> "437:BL"	 [cond="[]",
		lineno=None];
	"291:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff8066cfbd0>",
		fillcolor=turquoise,
		label="291:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"292:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff8066cfe10>",
		fillcolor=springgreen,
		label="292:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"291:BL" -> "292:IF"	 [cond="[]",
		lineno=None];
	"283:IF" -> "284:NS"	 [cond="['ExcessiveDeferOccured']",
		label=ExcessiveDeferOccured,
		lineno=283];
	"410:BS" -> "Leaf_400:AL"	 [cond="[]",
		lineno=None];
	"Leaf_446:AL"	 [def_var="['MTxErr']",
		label="Leaf_446:AL"];
	"451:NS" -> "Leaf_446:AL"	 [cond="[]",
		lineno=None];
	"333:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff806281990>",
		fillcolor=turquoise,
		label="333:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"333:BL" -> "334:IF"	 [cond="[]",
		lineno=None];
	"348:AL" -> "349:BL"	 [cond="[]",
		lineno=None];
	"290:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff8066cfc50>",
		clk_sens=False,
		fillcolor=gold,
		label="290:AL",
		sens="['MTxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'CollValid', 'StateIdle', 'NibCnt', 'Collision', 'StateIPG', 'StatePAD', 'ByteCnt', 'StateData', 'StateFCS']"];
	"290:AL" -> "291:BL"	 [cond="[]",
		lineno=None];
	"447:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff8065af950>",
		fillcolor=turquoise,
		label="447:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"447:BL" -> "448:IF"	 [cond="[]",
		lineno=None];
	"277:NS" -> "Leaf_274:AL"	 [cond="[]",
		lineno=None];
	"253:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8062fa210>",
		def_var="['ExcessiveDeferOccured']",
		fillcolor=deepskyblue,
		label="253:AS
ExcessiveDeferOccured = TxStartFrm & StateDefer & ExcessiveDefer & ~StopExcessiveDeferOccured;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['TxStartFrm', 'StateDefer', 'ExcessiveDefer', 'StopExcessiveDeferOccured']"];
	"253:AS" -> "465:AS";
	"253:AS" -> "364:AL";
	"253:AS" -> "306:AL";
	"253:AS" -> "380:AL";
	"253:AS" -> "270:AS";
	"274:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff8066cf390>",
		clk_sens=False,
		fillcolor=gold,
		label="274:AL",
		sens="['MTxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'TxStartFrm', 'ExcessiveDeferOccured']"];
	"253:AS" -> "274:AL";
	"297:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8062a1790>",
		fillcolor=firebrick,
		label="297:NS
ColWindow <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8062a1790>]",
		style=filled,
		typ=NonblockingSubstitution];
	"297:NS" -> "Leaf_290:AL"	 [cond="[]",
		lineno=None];
	"339:NS" -> "Leaf_332:AL"	 [cond="[]",
		lineno=None];
	"429:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8065a3b50>",
		fillcolor=firebrick,
		label="429:NS
MTxEn <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8065a3b50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"429:NS" -> "Leaf_426:AL"	 [cond="[]",
		lineno=None];
	"470:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff8065adc90>",
		fillcolor=turquoise,
		label="470:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"470:BL" -> "471:IF"	 [cond="[]",
		lineno=None];
	"354:IF" -> "355:NS"	 [cond="['TxStartFrm', 'StatusLatch']",
		label="(TxStartFrm & ~StatusLatch)",
		lineno=354];
	"354:IF" -> "357:IF"	 [cond="['TxStartFrm', 'StatusLatch']",
		label="!((TxStartFrm & ~StatusLatch))",
		lineno=354];
	"428:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff8065a3ad0>",
		fillcolor=springgreen,
		label="428:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"428:IF" -> "431:NS"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=428];
	"428:IF" -> "429:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=428];
	"311:BL" -> "312:IF"	 [cond="[]",
		lineno=None];
	"438:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff8065af5d0>",
		fillcolor=springgreen,
		label="438:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"438:IF" -> "441:NS"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=438];
	"438:IF" -> "439:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=438];
	"461:NS" -> "Leaf_456:AL"	 [cond="[]",
		lineno=None];
	"382:IF" -> "383:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=382];
	"385:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff806294850>",
		fillcolor=turquoise,
		label="385:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"382:IF" -> "385:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=382];
	"407:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff80629f7d0>",
		fillcolor=cadetblue,
		label="407:BS
MTxD_d[3:0] = TxData[7:4];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff80629f7d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"407:BS" -> "Leaf_400:AL"	 [cond="[]",
		lineno=None];
	"262:AS" -> "348:AL";
	"274:AL" -> "275:BL"	 [cond="[]",
		lineno=None];
	"295:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff8066cfe90>",
		fillcolor=turquoise,
		label="295:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"292:IF" -> "295:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=292];
	"293:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8066cfdd0>",
		fillcolor=firebrick,
		label="293:NS
ColWindow <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8066cfdd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"292:IF" -> "293:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=292];
	"390:IF" -> "391:NS"	 [cond="['StateJam', 'NibCntEq7', 'ColWindow', 'RandomEq0', 'NoBckof', 'StateBackOff', 'RandomEqByteCnt']",
		label="(StateJam & NibCntEq7 & ColWindow & (RandomEq0 | NoBckof) | StateBackOff & RandomEqByteCnt)",
		lineno=390];
	"456:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff8065afe90>",
		clk_sens=False,
		fillcolor=gold,
		label="456:AL",
		sens="['MTxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'StateJam', 'StateFCS', 'StateData', 'StartPreamble', 'StatePAD', 'StatePreamble']"];
	"456:AL" -> "457:BL"	 [cond="[]",
		lineno=None];
	"521:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff806338c10>",
		def_var="['Data_Crc']",
		fillcolor=deepskyblue,
		label="521:AS
Data_Crc[3] = (StateData[0])? TxData[0] : 
(StateData[1])? TxData[4] : 1'b0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StateData', 'TxData', 'StateData', 'TxData']"];
	"279:BL" -> "280:IF"	 [cond="[]",
		lineno=None];
	"469:AL" -> "470:BL"	 [cond="[]",
		lineno=None];
	"365:BL" -> "366:IF"	 [cond="[]",
		lineno=None];
	"371:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff806294190>",
		fillcolor=firebrick,
		label="371:NS
TxAbort <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff806294190>]",
		style=filled,
		typ=NonblockingSubstitution];
	"371:NS" -> "Leaf_364:AL"	 [cond="[]",
		lineno=None];
	"446:AL" -> "447:BL"	 [cond="[]",
		lineno=None];
	"370:IF" -> "373:IF"	 [cond="['TxStartFrm', 'StatusLatch', 'ExcessiveDeferOccured']",
		label="!((TxStartFrm & ~StatusLatch & ~ExcessiveDeferOccured))",
		lineno=370];
	"370:IF" -> "371:NS"	 [cond="['TxStartFrm', 'StatusLatch', 'ExcessiveDeferOccured']",
		label="(TxStartFrm & ~StatusLatch & ~ExcessiveDeferOccured)",
		lineno=370];
	"417:BS" -> "Leaf_400:AL"	 [cond="[]",
		lineno=None];
	"385:BL" -> "386:IF"	 [cond="[]",
		lineno=None];
	"316:NS" -> "Leaf_306:AL"	 [cond="[]",
		lineno=None];
	"324:IF" -> "327:NS"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=324];
	"324:IF" -> "325:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=324];
	"296:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff8062a17d0>",
		fillcolor=springgreen,
		label="296:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"296:IF" -> "297:NS"	 [cond="['Collision', 'ByteCnt', 'CollValid', 'StateData', 'StatePAD', 'NibCnt', 'StateFCS', 'NibCnt']",
		label="(~Collision & (ByteCnt[5:0] == CollValid[5:0]) & (StateData[1] | StatePAD & NibCnt[0] | StateFCS & NibCnt[0]))",
		lineno=296];
	"299:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff8062a1950>",
		fillcolor=springgreen,
		label="299:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"296:IF" -> "299:IF"	 [cond="['Collision', 'ByteCnt', 'CollValid', 'StateData', 'StatePAD', 'NibCnt', 'StateFCS', 'NibCnt']",
		label="!((~Collision & (ByteCnt[5:0] == CollValid[5:0]) & (StateData[1] | StatePAD & NibCnt[0] | StateFCS & NibCnt[0])))",
		lineno=296];
	"358:NS" -> "Leaf_348:AL"	 [cond="[]",
		lineno=None];
	"459:NS" -> "Leaf_456:AL"	 [cond="[]",
		lineno=None];
	"307:BL" -> "308:IF"	 [cond="[]",
		lineno=None];
	"Leaf_400:AL" -> "436:AL";
	"472:BL" -> "Leaf_469:AL"	 [cond="[]",
		lineno=None];
	"Leaf_274:AL" -> "253:AS";
	"295:BL" -> "296:IF"	 [cond="[]",
		lineno=None];
	"332:AL" -> "333:BL"	 [cond="[]",
		lineno=None];
	"404:BS" -> "Leaf_400:AL"	 [cond="[]",
		lineno=None];
	"406:IF" -> "409:IF"	 [cond="['StateData']",
		label="!(StateData[1])",
		lineno=406];
	"406:IF" -> "407:BS"	 [cond="['StateData']",
		label="StateData[1]",
		lineno=406];
	"519:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff806338190>",
		def_var="['Data_Crc']",
		fillcolor=deepskyblue,
		label="519:AS
Data_Crc[1] = (StateData[0])? TxData[2] : 
(StateData[1])? TxData[6] : 1'b0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StateData', 'TxData', 'StateData', 'TxData']"];
	"437:BL" -> "438:IF"	 [cond="[]",
		lineno=None];
	"299:IF" -> "300:NS"	 [cond="['StateIdle', 'StateIPG']",
		label="(StateIdle | StateIPG)",
		lineno=299];
	"412:IF" -> "413:BS"	 [cond="['StateJam']",
		label=StateJam,
		lineno=412];
	"412:IF" -> "415:IF"	 [cond="['StateJam']",
		label="!(StateJam)",
		lineno=412];
	"427:BL" -> "428:IF"	 [cond="[]",
		lineno=None];
	"388:NS" -> "Leaf_380:AL"	 [cond="[]",
		lineno=None];
	"449:NS" -> "Leaf_446:AL"	 [cond="[]",
		lineno=None];
	"309:NS" -> "Leaf_306:AL"	 [cond="[]",
		lineno=None];
	"293:NS" -> "Leaf_290:AL"	 [cond="[]",
		lineno=None];
}
