strict digraph "" {
	node [label="\N"];
	"383:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8277fd410>",
		fillcolor=firebrick,
		label="383:NS
RetryCnt[3:0] <= 4'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8277fd410>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_380:AL"	 [def_var="['RetryCnt']",
		label="Leaf_380:AL"];
	"383:NS" -> "Leaf_380:AL"	 [cond="[]",
		lineno=None];
	"391:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8277fd890>",
		fillcolor=firebrick,
		label="391:NS
RetryCnt[3:0] <= RetryCnt[3:0] + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8277fd890>]",
		style=filled,
		typ=NonblockingSubstitution];
	"391:NS" -> "Leaf_380:AL"	 [cond="[]",
		lineno=None];
	"386:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff8277fd310>",
		fillcolor=springgreen,
		label="386:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"388:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8277fd850>",
		fillcolor=firebrick,
		label="388:NS
RetryCnt[3:0] <= 4'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8277fd850>]",
		style=filled,
		typ=NonblockingSubstitution];
	"386:IF" -> "388:NS"	 [cond="['ExcessiveDeferOccured', 'UnderRun', 'TooBig', 'StartTxDone', 'TxUnderRun', 'StateJam', 'NibCntEq7', 'ColWindow', 'RetryMax']",
		label="(ExcessiveDeferOccured | UnderRun | TooBig | StartTxDone | TxUnderRun | StateJam & NibCntEq7 & (~ColWindow | RetryMax))",
		lineno=386];
	"390:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff8277fd050>",
		fillcolor=springgreen,
		label="390:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"386:IF" -> "390:IF"	 [cond="['ExcessiveDeferOccured', 'UnderRun', 'TooBig', 'StartTxDone', 'TxUnderRun', 'StateJam', 'NibCntEq7', 'ColWindow', 'RetryMax']",
		label="!((ExcessiveDeferOccured | UnderRun | TooBig | StartTxDone | TxUnderRun | StateJam & NibCntEq7 & (~ColWindow | RetryMax)))",
		lineno=386];
	"381:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff826d9c2d0>",
		fillcolor=turquoise,
		label="381:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"382:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff826d9c310>",
		fillcolor=springgreen,
		label="382:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"381:BL" -> "382:IF"	 [cond="[]",
		lineno=None];
	"380:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff826d9c150>",
		clk_sens=False,
		fillcolor=gold,
		label="380:AL",
		sens="['MTxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'StateJam', 'TxUnderRun', 'RetryMax', 'NibCntEq7', 'StateBackOff', 'RetryCnt', 'UnderRun', 'NoBckof', 'RandomEqByteCnt', '\
TooBig', 'ColWindow', 'RandomEq0', 'StartTxDone', 'ExcessiveDeferOccured']"];
	"380:AL" -> "381:BL"	 [cond="[]",
		lineno=None];
	"385:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff826d9c350>",
		fillcolor=turquoise,
		label="385:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"385:BL" -> "386:IF"	 [cond="[]",
		lineno=None];
	"382:IF" -> "383:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=382];
	"382:IF" -> "385:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=382];
	"388:NS" -> "Leaf_380:AL"	 [cond="[]",
		lineno=None];
	"390:IF" -> "391:NS"	 [cond="['StateJam', 'NibCntEq7', 'ColWindow', 'RandomEq0', 'NoBckof', 'StateBackOff', 'RandomEqByteCnt']",
		label="(StateJam & NibCntEq7 & ColWindow & (RandomEq0 | NoBckof) | StateBackOff & RandomEqByteCnt)",
		lineno=390];
}
