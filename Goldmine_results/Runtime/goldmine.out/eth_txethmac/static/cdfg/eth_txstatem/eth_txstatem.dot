strict digraph "compose( ,  )" {
	node [label="\N"];
	"335:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff805e05890>",
		fillcolor=springgreen,
		label="335:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"336:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e05290>",
		fillcolor=firebrick,
		label="336:NS
Rule1 <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e05290>]",
		style=filled,
		typ=NonblockingSubstitution];
	"335:IF" -> "336:NS"	 [cond="['StatePreamble', 'FullD']",
		label="(StatePreamble | FullD)",
		lineno=335];
	"310:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff805e09490>",
		fillcolor=springgreen,
		label="310:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"311:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e09550>",
		fillcolor=firebrick,
		label="311:NS
StateBackOff <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e09550>]",
		style=filled,
		typ=NonblockingSubstitution];
	"310:IF" -> "311:NS"	 [cond="['StartDefer']",
		label=StartDefer,
		lineno=310];
	"313:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff805e09050>",
		fillcolor=springgreen,
		label="313:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"310:IF" -> "313:IF"	 [cond="['StartDefer']",
		label="!(StartDefer)",
		lineno=310];
	"254:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff806323fd0>",
		clk_sens=False,
		fillcolor=gold,
		label="254:AL",
		sens="['MTxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'StateJam', 'StartIPG', 'StartPAD', 'StartData', 'StartDefer', 'StartJam', 'StartBackoff', 'StartPreamble', 'StartIdle', '\
StartFCS']"];
	"255:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff806323f50>",
		fillcolor=turquoise,
		label="255:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"254:AL" -> "255:BL"	 [cond="[]",
		lineno=None];
	"Leaf_254:AL"	 [def_var="['StateJam', 'StateFCS', 'StateIdle', 'StateBackOff', 'StateDefer', 'StateIPG', 'StatePreamble', 'StatePAD', 'StateJam_q', 'StateData']",
		label="Leaf_254:AL"];
	"311:NS" -> "Leaf_254:AL"	 [cond="[]",
		lineno=None];
	"240:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff806323090>",
		def_var="['DeferIndication']",
		fillcolor=deepskyblue,
		label="240:AS
DeferIndication = StateIdle & CarrierSense;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StateIdle', 'CarrierSense']"];
	"301:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff805e17a90>",
		fillcolor=springgreen,
		label="301:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"302:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e17b50>",
		fillcolor=firebrick,
		label="302:NS
StateFCS <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e17b50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"301:IF" -> "302:NS"	 [cond="['StartFCS']",
		label=StartFCS,
		lineno=301];
	"326:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff805e09790>",
		clk_sens=False,
		fillcolor=gold,
		label="326:AL",
		sens="['MTxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['StateIdle', 'StateBackOff', 'Reset', 'FullD', 'StatePreamble']"];
	"327:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff805e09610>",
		fillcolor=turquoise,
		label="327:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"326:AL" -> "327:BL"	 [cond="[]",
		lineno=None];
	"287:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e17d50>",
		fillcolor=firebrick,
		label="287:NS
StatePreamble <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e17d50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"287:NS" -> "Leaf_254:AL"	 [cond="[]",
		lineno=None];
	"Leaf_254:AL" -> "254:AL";
	"Leaf_254:AL" -> "240:AS";
	"Leaf_254:AL" -> "326:AL";
	"232:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff806318d10>",
		def_var="['StartBackoff']",
		fillcolor=deepskyblue,
		label="232:AS
StartBackoff = StateJam & ~RandomEq0 & ColWindow & ~RetryMax & NibCntEq7 & ~NoBckof;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StateJam', 'RandomEq0', 'ColWindow', 'RetryMax', 'NibCntEq7', 'NoBckof']"];
	"Leaf_254:AL" -> "232:AS";
	"215:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff80630fa10>",
		def_var="['StartIPG']",
		fillcolor=deepskyblue,
		label="215:AS
StartIPG = StateDefer & ~ExcessiveDefer & ~CarrierSense;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StateDefer', 'ExcessiveDefer', 'CarrierSense']"];
	"Leaf_254:AL" -> "215:AS";
	"227:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff806332910>",
		def_var="['StartFCS']",
		fillcolor=deepskyblue,
		label="227:AS
StartFCS = ~Collision & StateData[1] & TxEndFrm & (~Pad | Pad & NibbleMinFl) & CrcEn | ~Collision & StatePAD & NibbleMinFl & \
CrcEn;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Collision', 'StateData', 'TxEndFrm', 'Pad', 'Pad', 'NibbleMinFl', 'CrcEn', 'Collision', 'StatePAD', 'NibbleMinFl', 'CrcEn']"];
	"Leaf_254:AL" -> "227:AS";
	"221:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff806307710>",
		def_var="['StartData']",
		fillcolor=deepskyblue,
		label="221:AS
StartData[0] = ~Collision & (StatePreamble & NibCntEq15 | StateData[1] & ~TxEndFrm);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Collision', 'StatePreamble', 'NibCntEq15', 'StateData', 'TxEndFrm']"];
	"Leaf_254:AL" -> "221:AS";
	"230:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8063323d0>",
		def_var="['StartJam']",
		fillcolor=deepskyblue,
		label="230:AS
StartJam = (Collision | UnderRun) & (StatePreamble & NibCntEq15 | |StateData[1:0] | StatePAD | StateFCS);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Collision', 'UnderRun', 'StatePreamble', 'NibCntEq15', 'StateData', 'StatePAD', 'StateFCS']"];
	"Leaf_254:AL" -> "230:AS";
	"225:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff806307b10>",
		def_var="['StartPAD']",
		fillcolor=deepskyblue,
		label="225:AS
StartPAD = ~Collision & StateData[1] & TxEndFrm & Pad & ~NibbleMinFl;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Collision', 'StateData', 'TxEndFrm', 'Pad', 'NibbleMinFl']"];
	"Leaf_254:AL" -> "225:AS";
	"219:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff806307f50>",
		def_var="['StartPreamble']",
		fillcolor=deepskyblue,
		label="219:AS
StartPreamble = StateIdle & TxStartFrm & ~CarrierSense;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StateIdle', 'TxStartFrm', 'CarrierSense']"];
	"Leaf_254:AL" -> "219:AS";
	"223:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff806307350>",
		def_var="['StartData']",
		fillcolor=deepskyblue,
		label="223:AS
StartData[1] = ~Collision & StateData[0] & ~TxUnderRun & ~MaxFrame;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Collision', 'StateData', 'TxUnderRun', 'MaxFrame']"];
	"Leaf_254:AL" -> "223:AS";
	"217:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff80630fd10>",
		def_var="['StartIdle']",
		fillcolor=deepskyblue,
		label="217:AS
StartIdle = StateIPG & (Rule1 & (NibCnt[6:0] >= IPGT) | ~Rule1 & (NibCnt[6:0] >= IPGR2));",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StateIPG', 'Rule1', 'NibCnt', 'IPGT', 'Rule1', 'NibCnt', 'IPGR2']"];
	"Leaf_254:AL" -> "217:AS";
	"234:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff806323e10>",
		def_var="['StartDefer']",
		fillcolor=deepskyblue,
		label="234:AS
StartDefer = StateIPG & ~Rule1 & CarrierSense & (NibCnt[6:0] <= IPGR1) & (NibCnt[6:0] != IPGR2) | StateIdle & CarrierSense | \
StateJam & NibCntEq7 & (NoBckof | RandomEq0 | ~ColWindow | RetryMax) | StateBackOff & (TxUnderRun | RandomEqByteCnt) | StartTxDone | \
TooBig;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StateIPG', 'Rule1', 'CarrierSense', 'NibCnt', 'IPGR1', 'NibCnt', 'IPGR2', 'StateIdle', 'CarrierSense', 'StateJam', 'NibCntEq7', '\
NoBckof', 'RandomEq0', 'ColWindow', 'RetryMax', 'StateBackOff', 'TxUnderRun', 'RandomEqByteCnt', 'StartTxDone', 'TooBig']"];
	"Leaf_254:AL" -> "234:AS";
	"245:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff806323b10>",
		fillcolor=turquoise,
		label="245:BL
StateTraffic = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff806323450>]",
		style=filled,
		typ=Block];
	"Leaf_244:AL"	 [def_var="['StateTraffic']",
		label="Leaf_244:AL"];
	"245:BL" -> "Leaf_244:AL"	 [cond="[]",
		lineno=None];
	"283:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff805e19950>",
		fillcolor=springgreen,
		label="283:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"284:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e19ad0>",
		fillcolor=firebrick,
		label="284:NS
StateIdle <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e19ad0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"283:IF" -> "284:NS"	 [cond="['StartIdle']",
		label=StartIdle,
		lineno=283];
	"256:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff806322c50>",
		fillcolor=springgreen,
		label="256:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"270:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff805e17ed0>",
		fillcolor=turquoise,
		label="270:BL
StateData[1:0] <= StartData[1:0];
StateJam_q <= StateJam;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e19790>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7ff805e19250>]",
		style=filled,
		typ=Block];
	"256:IF" -> "270:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=256];
	"257:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff806322ad0>",
		fillcolor=turquoise,
		label="257:BL
StateIPG <= 1'b0;
StateIdle <= 1'b0;
StatePreamble <= 1'b0;
StateData[1:0] <= 2'b0;
StatePAD <= 1'b0;
StateFCS <= 1'b0;
StateJam <= \
1'b0;
StateJam_q <= 1'b0;
StateBackOff <= 1'b0;
StateDefer <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff806322b10>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7ff806322390>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff806322050>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7ff806322f10>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff806322090>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7ff806322dd0>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff806322490>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7ff806322710>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff806322a50>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7ff806322cd0>]",
		style=filled,
		typ=Block];
	"256:IF" -> "257:BL"	 [cond="['Reset']",
		label=Reset,
		lineno=256];
	"278:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e19690>",
		fillcolor=firebrick,
		label="278:NS
StateIPG <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e19690>]",
		style=filled,
		typ=NonblockingSubstitution];
	"278:NS" -> "Leaf_254:AL"	 [cond="[]",
		lineno=None];
	"317:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e09250>",
		fillcolor=firebrick,
		label="317:NS
StateDefer <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e09250>]",
		style=filled,
		typ=NonblockingSubstitution];
	"317:NS" -> "Leaf_254:AL"	 [cond="[]",
		lineno=None];
	"295:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff805e17190>",
		fillcolor=springgreen,
		label="295:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"296:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e17590>",
		fillcolor=firebrick,
		label="296:NS
StatePAD <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e17590>]",
		style=filled,
		typ=NonblockingSubstitution];
	"295:IF" -> "296:NS"	 [cond="['StartPAD']",
		label=StartPAD,
		lineno=295];
	"284:NS" -> "Leaf_254:AL"	 [cond="[]",
		lineno=None];
	"232:AS" -> "254:AL";
	"308:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e09c50>",
		fillcolor=firebrick,
		label="308:NS
StateJam <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e09c50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"308:NS" -> "Leaf_254:AL"	 [cond="[]",
		lineno=None];
	"328:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff805e09d90>",
		fillcolor=springgreen,
		label="328:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"327:BL" -> "328:IF"	 [cond="[]",
		lineno=None];
	"332:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff805e05d90>",
		fillcolor=springgreen,
		label="332:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"332:IF" -> "335:IF"	 [cond="['StateIdle', 'StateBackOff']",
		label="!((StateIdle | StateBackOff))",
		lineno=332];
	"333:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e05e90>",
		fillcolor=firebrick,
		label="333:NS
Rule1 <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e05e90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"332:IF" -> "333:NS"	 [cond="['StateIdle', 'StateBackOff']",
		label="(StateIdle | StateBackOff)",
		lineno=332];
	"215:AS" -> "254:AL";
	"274:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff805e19d50>",
		fillcolor=springgreen,
		label="274:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"277:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff805e19050>",
		fillcolor=springgreen,
		label="277:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"274:IF" -> "277:IF"	 [cond="['StartDefer', 'StartIdle']",
		label="!((StartDefer | StartIdle))",
		lineno=274];
	"275:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e19d10>",
		fillcolor=firebrick,
		label="275:NS
StateIPG <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e19d10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"274:IF" -> "275:NS"	 [cond="['StartDefer', 'StartIdle']",
		label="(StartDefer | StartIdle)",
		lineno=274];
	"Leaf_248:AL"	 [def_var="['StateTraffic']",
		label="Leaf_248:AL"];
	"Leaf_326:AL"	 [def_var="['Rule1']",
		label="Leaf_326:AL"];
	"Leaf_326:AL" -> "217:AS";
	"Leaf_326:AL" -> "234:AS";
	"314:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e09690>",
		fillcolor=firebrick,
		label="314:NS
StateBackOff <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e09690>]",
		style=filled,
		typ=NonblockingSubstitution];
	"314:NS" -> "Leaf_254:AL"	 [cond="[]",
		lineno=None];
	"270:BL" -> "310:IF"	 [cond="[]",
		lineno=None];
	"270:BL" -> "274:IF"	 [cond="[]",
		lineno=None];
	"292:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff805e172d0>",
		fillcolor=springgreen,
		label="292:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"270:BL" -> "292:IF"	 [cond="[]",
		lineno=None];
	"304:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff805e17f50>",
		fillcolor=springgreen,
		label="304:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"270:BL" -> "304:IF"	 [cond="[]",
		lineno=None];
	"286:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff805e17ad0>",
		fillcolor=springgreen,
		label="286:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"270:BL" -> "286:IF"	 [cond="[]",
		lineno=None];
	"280:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff805e196d0>",
		fillcolor=springgreen,
		label="280:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"270:BL" -> "280:IF"	 [cond="[]",
		lineno=None];
	"316:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff805e09290>",
		fillcolor=springgreen,
		label="316:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"270:BL" -> "316:IF"	 [cond="[]",
		lineno=None];
	"298:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff805e17610>",
		fillcolor=springgreen,
		label="298:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"270:BL" -> "298:IF"	 [cond="[]",
		lineno=None];
	"257:BL" -> "Leaf_254:AL"	 [cond="[]",
		lineno=None];
	"290:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e171d0>",
		fillcolor=firebrick,
		label="290:NS
StatePreamble <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e171d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"290:NS" -> "Leaf_254:AL"	 [cond="[]",
		lineno=None];
	"305:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e17fd0>",
		fillcolor=firebrick,
		label="305:NS
StateJam <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e17fd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"305:NS" -> "Leaf_254:AL"	 [cond="[]",
		lineno=None];
	"307:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff805e09f50>",
		fillcolor=springgreen,
		label="307:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"307:IF" -> "308:NS"	 [cond="['StartJam']",
		label=StartJam,
		lineno=307];
	"227:AS" -> "254:AL";
	"221:AS" -> "254:AL";
	"313:IF" -> "314:NS"	 [cond="['StartBackoff']",
		label=StartBackoff,
		lineno=313];
	"230:AS" -> "254:AL";
	"320:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e09590>",
		fillcolor=firebrick,
		label="320:NS
StateDefer <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e09590>]",
		style=filled,
		typ=NonblockingSubstitution];
	"320:NS" -> "Leaf_254:AL"	 [cond="[]",
		lineno=None];
	"277:IF" -> "278:NS"	 [cond="['StartIPG']",
		label=StartIPG,
		lineno=277];
	"292:IF" -> "295:IF"	 [cond="['StartFCS', 'StartJam']",
		label="!((StartFCS | StartJam))",
		lineno=292];
	"293:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e17250>",
		fillcolor=firebrick,
		label="293:NS
StatePAD <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e17250>]",
		style=filled,
		typ=NonblockingSubstitution];
	"292:IF" -> "293:NS"	 [cond="['StartFCS', 'StartJam']",
		label="(StartFCS | StartJam)",
		lineno=292];
	"296:NS" -> "Leaf_254:AL"	 [cond="[]",
		lineno=None];
	"331:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff805e09e90>",
		fillcolor=turquoise,
		label="331:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"331:BL" -> "332:IF"	 [cond="[]",
		lineno=None];
	"289:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff805e17690>",
		fillcolor=springgreen,
		label="289:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"289:IF" -> "290:NS"	 [cond="['StartPreamble']",
		label=StartPreamble,
		lineno=289];
	"299:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e17510>",
		fillcolor=firebrick,
		label="299:NS
StateFCS <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e17510>]",
		style=filled,
		typ=NonblockingSubstitution];
	"299:NS" -> "Leaf_254:AL"	 [cond="[]",
		lineno=None];
	"225:AS" -> "254:AL";
	"304:IF" -> "305:NS"	 [cond="['StartBackoff', 'StartDefer']",
		label="(StartBackoff | StartDefer)",
		lineno=304];
	"304:IF" -> "307:IF"	 [cond="['StartBackoff', 'StartDefer']",
		label="!((StartBackoff | StartDefer))",
		lineno=304];
	"275:NS" -> "Leaf_254:AL"	 [cond="[]",
		lineno=None];
	"286:IF" -> "287:NS"	 [cond="['StartData', 'StartJam']",
		label="(StartData[0] | StartJam)",
		lineno=286];
	"286:IF" -> "289:IF"	 [cond="['StartData', 'StartJam']",
		label="!((StartData[0] | StartJam))",
		lineno=286];
	"336:NS" -> "Leaf_326:AL"	 [cond="[]",
		lineno=None];
	"328:IF" -> "331:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=328];
	"329:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e09b50>",
		fillcolor=firebrick,
		label="329:NS
Rule1 <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e09b50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"328:IF" -> "329:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=328];
	"249:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff806323790>",
		fillcolor=turquoise,
		label="249:BL
StateTraffic = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff806323850>]",
		style=filled,
		typ=Block];
	"249:BL" -> "Leaf_248:AL"	 [cond="[]",
		lineno=None];
	"329:NS" -> "Leaf_326:AL"	 [cond="[]",
		lineno=None];
	"219:AS" -> "254:AL";
	"223:AS" -> "254:AL";
	"217:AS" -> "254:AL";
	"255:BL" -> "256:IF"	 [cond="[]",
		lineno=None];
	"234:AS" -> "254:AL";
	"281:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e19550>",
		fillcolor=firebrick,
		label="281:NS
StateIdle <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e19550>]",
		style=filled,
		typ=NonblockingSubstitution];
	"281:NS" -> "Leaf_254:AL"	 [cond="[]",
		lineno=None];
	"333:NS" -> "Leaf_326:AL"	 [cond="[]",
		lineno=None];
	"280:IF" -> "283:IF"	 [cond="['StartDefer', 'StartPreamble']",
		label="!((StartDefer | StartPreamble))",
		lineno=280];
	"280:IF" -> "281:NS"	 [cond="['StartDefer', 'StartPreamble']",
		label="(StartDefer | StartPreamble)",
		lineno=280];
	"244:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff806323210>",
		clk_sens=False,
		fillcolor=gold,
		label="244:AL",
		sens="['TxStartFrm']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="[]"];
	"244:AL" -> "245:BL"	 [cond="[]",
		lineno=None];
	"319:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff805e092d0>",
		fillcolor=springgreen,
		label="319:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"319:IF" -> "320:NS"	 [cond="['StartDefer']",
		label=StartDefer,
		lineno=319];
	"248:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff806323810>",
		clk_sens=False,
		fillcolor=gold,
		label="248:AL",
		sens="['TxEndFrm']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="[]"];
	"248:AL" -> "249:BL"	 [cond="[]",
		lineno=None];
	"316:IF" -> "317:NS"	 [cond="['StartIPG']",
		label=StartIPG,
		lineno=316];
	"316:IF" -> "319:IF"	 [cond="['StartIPG']",
		label="!(StartIPG)",
		lineno=316];
	"302:NS" -> "Leaf_254:AL"	 [cond="[]",
		lineno=None];
	"298:IF" -> "301:IF"	 [cond="['StartJam', 'StartDefer']",
		label="!((StartJam | StartDefer))",
		lineno=298];
	"298:IF" -> "299:NS"	 [cond="['StartJam', 'StartDefer']",
		label="(StartJam | StartDefer)",
		lineno=298];
	"293:NS" -> "Leaf_254:AL"	 [cond="[]",
		lineno=None];
}
