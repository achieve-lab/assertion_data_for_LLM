strict digraph "compose( ,  )" {
	node [label="\N"];
	"txcounters1.232:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff82753a090>",
		fillcolor=turquoise,
		label="txcounters1.232:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"txcounters1.233:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff82753a350>",
		fillcolor=springgreen,
		label="txcounters1.233:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"txcounters1.232:BL" -> "txcounters1.233:IF"	 [cond="[]",
		lineno=None];
	"323:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff8062814d0>",
		fillcolor=turquoise,
		label="323:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"324:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff8062815d0>",
		fillcolor=springgreen,
		label="324:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"323:BL" -> "324:IF"	 [cond="[]",
		lineno=None];
	"315:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff806281250>",
		fillcolor=springgreen,
		label="315:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"316:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff806281390>",
		fillcolor=firebrick,
		label="316:NS
StatusLatch <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff806281390>]",
		style=filled,
		typ=NonblockingSubstitution];
	"315:IF" -> "316:NS"	 [cond="['ExcessiveDeferOccured', 'StateIdle']",
		label="(ExcessiveDeferOccured | StateIdle)",
		lineno=315];
	"Leaf_469:AL"	 [def_var="['PacketFinished_q', 'PacketFinished']",
		label="Leaf_469:AL"];
	"469:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff8065adc50>",
		clk_sens=False,
		fillcolor=gold,
		label="469:AL",
		sens="['MTxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'PacketFinished', 'PacketFinished_d']"];
	"Leaf_469:AL" -> "469:AL";
	"txcounters1.227:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff82752dd50>",
		def_var="['ResetByteCnt']",
		fillcolor=deepskyblue,
		label="txcounters1.227:AS
ResetByteCnt = StartBackoff | StateIdle & TxStartFrm | PacketFinished_q;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StartBackoff', 'StateIdle', 'TxStartFrm', 'PacketFinished_q']"];
	"Leaf_469:AL" -> "txcounters1.227:AS";
	"txcounters1.252:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff827522310>",
		clk_sens=False,
		fillcolor=gold,
		label="txcounters1.252:AL",
		sens="['MTxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['StateSFD', 'Reset', 'PacketFinished_q', 'DlyCrcCnt', 'StartJam', 'DlyCrcEn', 'StateData']"];
	"Leaf_469:AL" -> "txcounters1.252:AL";
	"465:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8065ad710>",
		def_var="['PacketFinished_d']",
		fillcolor=deepskyblue,
		label="465:AS
PacketFinished_d = StartTxDone | TooBig | UnderRun | LateCollision | MaxCollisionOccured | ExcessiveDeferOccured;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StartTxDone', 'TooBig', 'UnderRun', 'LateCollision', 'MaxCollisionOccured', 'ExcessiveDeferOccured']"];
	"465:AS" -> "469:AL";
	"txcounters1.209:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff827521650>",
		fillcolor=firebrick,
		label="txcounters1.209:NS
NibCnt <= NibCnt + 16'd1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff827521650>]",
		style=filled,
		typ=NonblockingSubstitution];
	"txcounters1.Leaf_199:AL"	 [def_var="['NibCnt']",
		label="txcounters1.Leaf_199:AL"];
	"txcounters1.209:NS" -> "txcounters1.Leaf_199:AL"	 [cond="[]",
		lineno=None];
	"264:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8066cc790>",
		def_var="['LateCollision']",
		fillcolor=deepskyblue,
		label="264:AS
LateCollision = StartJam & ~ColWindow & ~UnderRun;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StartJam', 'ColWindow', 'UnderRun']"];
	"264:AS" -> "465:AS";
	"270:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8066cf0d0>",
		def_var="['StartTxAbort']",
		fillcolor=deepskyblue,
		label="270:AS
StartTxAbort = TooBig | UnderRun | ExcessiveDeferOccured | LateCollision | MaxCollisionOccured;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['TooBig', 'UnderRun', 'ExcessiveDeferOccured', 'LateCollision', 'MaxCollisionOccured']"];
	"264:AS" -> "270:AS";
	"txstatem1.Leaf_254:AL"	 [def_var="['StateJam', 'StateFCS', 'StateIdle', 'StateBackOff', 'StateDefer', 'StateIPG', 'StatePreamble', 'StatePAD', 'StateJam_q', 'StateData']",
		label="txstatem1.Leaf_254:AL"];
	"255:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8062faa90>",
		def_var="['StartTxDone']",
		fillcolor=deepskyblue,
		label="255:AS
StartTxDone = ~Collision & (StateFCS & NibCntEq7 | StateData[1] & TxEndFrm & (~Pad | Pad & NibbleMinFl) & ~CrcEn);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Collision', 'StateFCS', 'NibCntEq7', 'StateData', 'TxEndFrm', 'Pad', 'Pad', 'NibbleMinFl', 'CrcEn']"];
	"txstatem1.Leaf_254:AL" -> "255:AS";
	"txstatem1.240:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff806323090>",
		def_var="['DeferIndication']",
		fillcolor=deepskyblue,
		label="txstatem1.240:AS
DeferIndication = StateIdle & CarrierSense;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StateIdle', 'CarrierSense']"];
	"txstatem1.Leaf_254:AL" -> "txstatem1.240:AS";
	"268:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8066cccd0>",
		def_var="['StateSFD']",
		fillcolor=deepskyblue,
		label="268:AS
StateSFD = StatePreamble & NibCntEq15;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StatePreamble', 'NibCntEq15']"];
	"txstatem1.Leaf_254:AL" -> "268:AS";
	"518:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff806326c10>",
		def_var="['Data_Crc']",
		fillcolor=deepskyblue,
		label="518:AS
Data_Crc[0] = (StateData[0])? TxData[3] : 
(StateData[1])? TxData[7] : 1'b0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StateData', 'TxData', 'StateData', 'TxData']"];
	"txstatem1.Leaf_254:AL" -> "518:AS";
	"txstatem1.227:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff806332910>",
		def_var="['StartFCS']",
		fillcolor=deepskyblue,
		label="txstatem1.227:AS
StartFCS = ~Collision & StateData[1] & TxEndFrm & (~Pad | Pad & NibbleMinFl) & CrcEn | ~Collision & StatePAD & \
NibbleMinFl & CrcEn;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Collision', 'StateData', 'TxEndFrm', 'Pad', 'Pad', 'NibbleMinFl', 'CrcEn', 'Collision', 'StatePAD', 'NibbleMinFl', 'CrcEn']"];
	"txstatem1.Leaf_254:AL" -> "txstatem1.227:AS";
	"txstatem1.225:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff806307b10>",
		def_var="['StartPAD']",
		fillcolor=deepskyblue,
		label="txstatem1.225:AS
StartPAD = ~Collision & StateData[1] & TxEndFrm & Pad & ~NibbleMinFl;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Collision', 'StateData', 'TxEndFrm', 'Pad', 'NibbleMinFl']"];
	"txstatem1.Leaf_254:AL" -> "txstatem1.225:AS";
	"txstatem1.219:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff806307f50>",
		def_var="['StartPreamble']",
		fillcolor=deepskyblue,
		label="txstatem1.219:AS
StartPreamble = StateIdle & TxStartFrm & ~CarrierSense;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StateIdle', 'TxStartFrm', 'CarrierSense']"];
	"txstatem1.Leaf_254:AL" -> "txstatem1.219:AS";
	"txstatem1.221:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff806307710>",
		def_var="['StartData']",
		fillcolor=deepskyblue,
		label="txstatem1.221:AS
StartData[0] = ~Collision & (StatePreamble & NibCntEq15 | StateData[1] & ~TxEndFrm);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Collision', 'StatePreamble', 'NibCntEq15', 'StateData', 'TxEndFrm']"];
	"txstatem1.Leaf_254:AL" -> "txstatem1.221:AS";
	"txstatem1.254:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff806323fd0>",
		clk_sens=False,
		fillcolor=gold,
		label="txstatem1.254:AL",
		sens="['MTxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'StateJam', 'StartIPG', 'StartPAD', 'StartData', 'StartDefer', 'StartJam', 'StartBackoff', 'StartPreamble', 'StartIdle', '\
StartFCS']"];
	"txstatem1.Leaf_254:AL" -> "txstatem1.254:AL";
	"txstatem1.232:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff806318d10>",
		def_var="['StartBackoff']",
		fillcolor=deepskyblue,
		label="txstatem1.232:AS
StartBackoff = StateJam & ~RandomEq0 & ColWindow & ~RetryMax & NibCntEq7 & ~NoBckof;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StateJam', 'RandomEq0', 'ColWindow', 'RetryMax', 'NibCntEq7', 'NoBckof']"];
	"txstatem1.Leaf_254:AL" -> "txstatem1.232:AS";
	"523:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff80633c210>",
		def_var="['Initialize_Crc']",
		fillcolor=deepskyblue,
		label="523:AS
Initialize_Crc = StateIdle | StatePreamble | |DlyCrcCnt;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StateIdle', 'StatePreamble', 'DlyCrcCnt']"];
	"txstatem1.Leaf_254:AL" -> "523:AS";
	"400:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff806297fd0>",
		clk_sens=False,
		fillcolor=gold,
		label="400:AL",
		sens="['StatePreamble', 'StateData', 'StateData', 'StateFCS', 'StateJam', 'StateSFD', 'TxData', 'Crc', 'NibCntEq15']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['StateJam', 'StateFCS', 'NibCntEq15', 'Crc', 'StateData', 'TxData', 'StatePreamble']"];
	"txstatem1.Leaf_254:AL" -> "400:AL";
	"290:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff8066cfc50>",
		clk_sens=False,
		fillcolor=gold,
		label="290:AL",
		sens="['MTxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'CollValid', 'StateIdle', 'NibCnt', 'Collision', 'StateIPG', 'StatePAD', 'ByteCnt', 'StateData', 'StateFCS']"];
	"txstatem1.Leaf_254:AL" -> "290:AL";
	"txstatem1.230:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8063323d0>",
		def_var="['StartJam']",
		fillcolor=deepskyblue,
		label="txstatem1.230:AS
StartJam = (Collision | UnderRun) & (StatePreamble & NibCntEq15 | |StateData[1:0] | StatePAD | StateFCS);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Collision', 'UnderRun', 'StatePreamble', 'NibCntEq15', 'StateData', 'StatePAD', 'StateFCS']"];
	"txstatem1.Leaf_254:AL" -> "txstatem1.230:AS";
	"426:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff8065a3090>",
		clk_sens=False,
		fillcolor=gold,
		label="426:AL",
		sens="['MTxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'StateJam', 'StateFCS', 'StatePreamble', 'StatePAD', 'StateData']"];
	"txstatem1.Leaf_254:AL" -> "426:AL";
	"520:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8063386d0>",
		def_var="['Data_Crc']",
		fillcolor=deepskyblue,
		label="520:AS
Data_Crc[2] = (StateData[0])? TxData[1] : 
(StateData[1])? TxData[5] : 1'b0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StateData', 'TxData', 'StateData', 'TxData']"];
	"txstatem1.Leaf_254:AL" -> "520:AS";
	"txstatem1.326:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff805e09790>",
		clk_sens=False,
		fillcolor=gold,
		label="txstatem1.326:AL",
		sens="['MTxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['StateIdle', 'StateBackOff', 'Reset', 'FullD', 'StatePreamble']"];
	"txstatem1.Leaf_254:AL" -> "txstatem1.326:AL";
	"516:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff806326950>",
		def_var="['Enable_Crc']",
		fillcolor=deepskyblue,
		label="516:AS
Enable_Crc = ~StateFCS;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StateFCS']"];
	"txstatem1.Leaf_254:AL" -> "516:AS";
	"257:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8062fac90>",
		def_var="['UnderRun']",
		fillcolor=deepskyblue,
		label="257:AS
UnderRun = StateData[0] & TxUnderRun & ~Collision;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StateData', 'TxUnderRun', 'Collision']"];
	"txstatem1.Leaf_254:AL" -> "257:AS";
	"306:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff8062a1b90>",
		clk_sens=False,
		fillcolor=gold,
		label="306:AL",
		sens="['MTxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'StateIdle', 'TxStartFrm', 'ExcessiveDeferOccured']"];
	"txstatem1.Leaf_254:AL" -> "306:AL";
	"txstatem1.215:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff80630fa10>",
		def_var="['StartIPG']",
		fillcolor=deepskyblue,
		label="txstatem1.215:AS
StartIPG = StateDefer & ~ExcessiveDefer & ~CarrierSense;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StateDefer', 'ExcessiveDefer', 'CarrierSense']"];
	"txstatem1.Leaf_254:AL" -> "txstatem1.215:AS";
	"259:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8066cc210>",
		def_var="['TooBig']",
		fillcolor=deepskyblue,
		label="259:AS
TooBig = ~Collision & MaxFrame & (StateData[0] & ~TxUnderRun | StateFCS);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Collision', 'MaxFrame', 'StateData', 'TxUnderRun', 'StateFCS']"];
	"txstatem1.Leaf_254:AL" -> "259:AS";
	"456:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff8065afe90>",
		clk_sens=False,
		fillcolor=gold,
		label="456:AL",
		sens="['MTxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'StateJam', 'StateFCS', 'StateData', 'StartPreamble', 'StatePAD', 'StatePreamble']"];
	"txstatem1.Leaf_254:AL" -> "456:AL";
	"521:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff806338c10>",
		def_var="['Data_Crc']",
		fillcolor=deepskyblue,
		label="521:AS
Data_Crc[3] = (StateData[0])? TxData[0] : 
(StateData[1])? TxData[4] : 1'b0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StateData', 'TxData', 'StateData', 'TxData']"];
	"txstatem1.Leaf_254:AL" -> "521:AS";
	"txstatem1.234:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff806323e10>",
		def_var="['StartDefer']",
		fillcolor=deepskyblue,
		label="txstatem1.234:AS
StartDefer = StateIPG & ~Rule1 & CarrierSense & (NibCnt[6:0] <= IPGR1) & (NibCnt[6:0] != IPGR2) | StateIdle & CarrierSense | \
StateJam & NibCntEq7 & (NoBckof | RandomEq0 | ~ColWindow | RetryMax) | StateBackOff & (TxUnderRun | RandomEqByteCnt) | StartTxDone | \
TooBig;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StateIPG', 'Rule1', 'CarrierSense', 'NibCnt', 'IPGR1', 'NibCnt', 'IPGR2', 'StateIdle', 'CarrierSense', 'StateJam', 'NibCntEq7', '\
NoBckof', 'RandomEq0', 'ColWindow', 'RetryMax', 'StateBackOff', 'TxUnderRun', 'RandomEqByteCnt', 'StartTxDone', 'TooBig']"];
	"txstatem1.Leaf_254:AL" -> "txstatem1.234:AS";
	"251:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8062f7f50>",
		def_var="['ResetCollision']",
		fillcolor=deepskyblue,
		label="251:AS
ResetCollision = ~(StatePreamble | |StateData | StatePAD | StateFCS);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StatePreamble', 'StateData', 'StatePAD', 'StateFCS']"];
	"txstatem1.Leaf_254:AL" -> "251:AS";
	"txstatem1.223:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff806307350>",
		def_var="['StartData']",
		fillcolor=deepskyblue,
		label="txstatem1.223:AS
StartData[1] = ~Collision & StateData[0] & ~TxUnderRun & ~MaxFrame;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Collision', 'StateData', 'TxUnderRun', 'MaxFrame']"];
	"txstatem1.Leaf_254:AL" -> "txstatem1.223:AS";
	"txstatem1.217:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff80630fd10>",
		def_var="['StartIdle']",
		fillcolor=deepskyblue,
		label="txstatem1.217:AS
StartIdle = StateIPG & (Rule1 & (NibCnt[6:0] >= IPGT) | ~Rule1 & (NibCnt[6:0] >= IPGR2));",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StateIPG', 'Rule1', 'NibCnt', 'IPGT', 'Rule1', 'NibCnt', 'IPGR2']"];
	"txstatem1.Leaf_254:AL" -> "txstatem1.217:AS";
	"380:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff806294550>",
		clk_sens=False,
		fillcolor=gold,
		label="380:AL",
		sens="['MTxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'StateJam', 'TxUnderRun', 'RetryMax', 'NibCntEq7', 'StateBackOff', 'RetryCnt', 'UnderRun', 'NoBckof', 'RandomEqByteCnt', '\
TooBig', 'ColWindow', 'RandomEq0', 'StartTxDone', 'ExcessiveDeferOccured']"];
	"txstatem1.Leaf_254:AL" -> "380:AL";
	"random1.172:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff8066ead10>",
		clk_sens=False,
		fillcolor=gold,
		label="random1.172:AL",
		sens="['MTxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'StateJam', 'Random', 'StateJam_q']"];
	"txstatem1.Leaf_254:AL" -> "random1.172:AL";
	"253:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8062fa210>",
		def_var="['ExcessiveDeferOccured']",
		fillcolor=deepskyblue,
		label="253:AS
ExcessiveDeferOccured = TxStartFrm & StateDefer & ExcessiveDefer & ~StopExcessiveDeferOccured;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['TxStartFrm', 'StateDefer', 'ExcessiveDefer', 'StopExcessiveDeferOccured']"];
	"txstatem1.Leaf_254:AL" -> "253:AS";
	"519:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff806338190>",
		def_var="['Data_Crc']",
		fillcolor=deepskyblue,
		label="519:AS
Data_Crc[1] = (StateData[0])? TxData[2] : 
(StateData[1])? TxData[6] : 1'b0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StateData', 'TxData', 'StateData', 'TxData']"];
	"txstatem1.Leaf_254:AL" -> "519:AS";
	"255:AS" -> "465:AS";
	"255:AS" -> "txstatem1.234:AS";
	"332:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff8062819d0>",
		clk_sens=False,
		fillcolor=gold,
		label="332:AL",
		sens="['MTxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'StatusLatch', 'StartTxDone', 'TxStartFrm']"];
	"255:AS" -> "332:AL";
	"255:AS" -> "380:AL";
	"txcrc.174:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff805bd9290>",
		def_var="['CrcNext']",
		fillcolor=deepskyblue,
		label="txcrc.174:AS
CrcNext[29] = Enable & (Data[3] ^ Crc[31]) ^ Crc[25];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Enable', 'Data', 'Crc', 'Crc']"];
	"txcrc.179:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff805bd9910>",
		clk_sens=False,
		fillcolor=gold,
		label="txcrc.179:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Initialize', 'Reset', 'CrcNext']"];
	"txcrc.174:AS" -> "txcrc.179:AL";
	"txstatem1.304:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff805e17f50>",
		fillcolor=springgreen,
		label="txstatem1.304:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"txstatem1.305:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e17fd0>",
		fillcolor=firebrick,
		label="txstatem1.305:NS
StateJam <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e17fd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"txstatem1.304:IF" -> "txstatem1.305:NS"	 [cond="['StartBackoff', 'StartDefer']",
		label="(StartBackoff | StartDefer)",
		lineno=304];
	"txstatem1.307:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff805e09f50>",
		fillcolor=springgreen,
		label="txstatem1.307:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"txstatem1.304:IF" -> "txstatem1.307:IF"	 [cond="['StartBackoff', 'StartDefer']",
		label="!((StartBackoff | StartDefer))",
		lineno=304];
	"txstatem1.332:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff805e05d90>",
		fillcolor=springgreen,
		label="txstatem1.332:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"txstatem1.333:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e05e90>",
		fillcolor=firebrick,
		label="txstatem1.333:NS
Rule1 <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e05e90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"txstatem1.332:IF" -> "txstatem1.333:NS"	 [cond="['StateIdle', 'StateBackOff']",
		label="(StateIdle | StateBackOff)",
		lineno=332];
	"txstatem1.335:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff805e05890>",
		fillcolor=springgreen,
		label="txstatem1.335:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"txstatem1.332:IF" -> "txstatem1.335:IF"	 [cond="['StateIdle', 'StateBackOff']",
		label="!((StateIdle | StateBackOff))",
		lineno=332];
	"327:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8062817d0>",
		fillcolor=firebrick,
		label="327:NS
TxUsedData <= |StartData;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8062817d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_322:AL"	 [def_var="['TxUsedData']",
		label="Leaf_322:AL"];
	"327:NS" -> "Leaf_322:AL"	 [cond="[]",
		lineno=None];
	"459:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8065ad090>",
		fillcolor=firebrick,
		label="459:NS
WillTransmit <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8065ad090>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_456:AL"	 [def_var="['WillTransmit']",
		label="Leaf_456:AL"];
	"459:NS" -> "Leaf_456:AL"	 [cond="[]",
		lineno=None];
	"txstatem1.331:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff805e09e90>",
		fillcolor=turquoise,
		label="txstatem1.331:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"txstatem1.331:BL" -> "txstatem1.332:IF"	 [cond="[]",
		lineno=None];
	"386:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff806294fd0>",
		fillcolor=springgreen,
		label="386:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"390:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff806297610>",
		fillcolor=springgreen,
		label="390:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"386:IF" -> "390:IF"	 [cond="['ExcessiveDeferOccured', 'UnderRun', 'TooBig', 'StartTxDone', 'TxUnderRun', 'StateJam', 'NibCntEq7', 'ColWindow', 'RetryMax']",
		label="!((ExcessiveDeferOccured | UnderRun | TooBig | StartTxDone | TxUnderRun | StateJam & NibCntEq7 & (~ColWindow | RetryMax)))",
		lineno=386];
	"388:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff806294f90>",
		fillcolor=firebrick,
		label="388:NS
RetryCnt[3:0] <= 4'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff806294f90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"386:IF" -> "388:NS"	 [cond="['ExcessiveDeferOccured', 'UnderRun', 'TooBig', 'StartTxDone', 'TxUnderRun', 'StateJam', 'NibCntEq7', 'ColWindow', 'RetryMax']",
		label="(ExcessiveDeferOccured | UnderRun | TooBig | StartTxDone | TxUnderRun | StateJam & NibCntEq7 & (~ColWindow | RetryMax))",
		lineno=386];
	"random1.175:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff80672c410>",
		fillcolor=firebrick,
		label="random1.175:NS
RandomLatched <= 10'h000;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff80672c410>]",
		style=filled,
		typ=NonblockingSubstitution];
	"random1.Leaf_172:AL"	 [def_var="['RandomLatched']",
		label="random1.Leaf_172:AL"];
	"random1.175:NS" -> "random1.Leaf_172:AL"	 [cond="[]",
		lineno=None];
	"369:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff80629cd90>",
		fillcolor=turquoise,
		label="369:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"370:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff8062941d0>",
		fillcolor=springgreen,
		label="370:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"369:BL" -> "370:IF"	 [cond="[]",
		lineno=None];
	"txcounters1.237:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff82753a710>",
		fillcolor=springgreen,
		label="txcounters1.237:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"txcounters1.238:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff82753a6d0>",
		fillcolor=firebrick,
		label="txcounters1.238:NS
ByteCnt[15:0] <= 16'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff82753a6d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"txcounters1.237:IF" -> "txcounters1.238:NS"	 [cond="['ResetByteCnt']",
		label=ResetByteCnt,
		lineno=237];
	"txcounters1.240:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff82753a9d0>",
		fillcolor=springgreen,
		label="txcounters1.240:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"txcounters1.237:IF" -> "txcounters1.240:IF"	 [cond="['ResetByteCnt']",
		label="!(ResetByteCnt)",
		lineno=237];
	"325:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff806281610>",
		fillcolor=firebrick,
		label="325:NS
TxUsedData <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff806281610>]",
		style=filled,
		typ=NonblockingSubstitution];
	"325:NS" -> "Leaf_322:AL"	 [cond="[]",
		lineno=None];
	"txstatem1.314:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e09690>",
		fillcolor=firebrick,
		label="txstatem1.314:NS
StateBackOff <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e09690>]",
		style=filled,
		typ=NonblockingSubstitution];
	"txstatem1.314:NS" -> "txstatem1.Leaf_254:AL"	 [cond="[]",
		lineno=None];
	"308:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff8062a1d50>",
		fillcolor=springgreen,
		label="308:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"311:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff8062a1dd0>",
		fillcolor=turquoise,
		label="311:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"308:IF" -> "311:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=308];
	"309:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8062a1d10>",
		fillcolor=firebrick,
		label="309:NS
StatusLatch <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8062a1d10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"308:IF" -> "309:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=308];
	"txcrc.165:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8274e2050>",
		def_var="['CrcNext']",
		fillcolor=deepskyblue,
		label="txcrc.165:AS
CrcNext[20] = Crc[16];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Crc']"];
	"txcrc.165:AS" -> "txcrc.179:AL";
	"txstatem1.290:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e171d0>",
		fillcolor=firebrick,
		label="txstatem1.290:NS
StatePreamble <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e171d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"txstatem1.290:NS" -> "txstatem1.Leaf_254:AL"	 [cond="[]",
		lineno=None];
	"268:AS" -> "txcounters1.252:AL";
	"txcrc.163:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8274c3810>",
		def_var="['CrcNext']",
		fillcolor=deepskyblue,
		label="txcrc.163:AS
CrcNext[18] = Enable & (Data[2] ^ Crc[30]) ^ Crc[14];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Enable', 'Data', 'Crc', 'Crc']"];
	"txcrc.163:AS" -> "txcrc.179:AL";
	"407:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff80629f7d0>",
		fillcolor=cadetblue,
		label="407:BS
MTxD_d[3:0] = TxData[7:4];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff80629f7d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_400:AL"	 [def_var="['MTxD_d']",
		label="Leaf_400:AL"];
	"407:BS" -> "Leaf_400:AL"	 [cond="[]",
		lineno=None];
	"random1.151:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff805bf86d0>",
		fillcolor=turquoise,
		label="random1.151:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"random1.152:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff8066e4710>",
		fillcolor=springgreen,
		label="random1.152:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"random1.151:BL" -> "random1.152:IF"	 [cond="[]",
		lineno=None];
	"518:AS" -> "txcrc.174:AS";
	"518:AS" -> "txcrc.163:AS";
	"txcrc.168:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8274f0550>",
		def_var="['CrcNext']",
		fillcolor=deepskyblue,
		label="txcrc.168:AS
CrcNext[23] = Enable & (Data[1] ^ Data[0] ^ Crc[29] ^ Crc[28]) ^ Crc[19];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Enable', 'Data', 'Data', 'Crc', 'Crc', 'Crc']"];
	"518:AS" -> "txcrc.168:AS";
	"txcrc.155:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8274feb50>",
		def_var="['CrcNext']",
		fillcolor=deepskyblue,
		label="txcrc.155:AS
CrcNext[10] = Enable & (Data[3] ^ Data[2] ^ Data[0] ^ Crc[28] ^ Crc[30] ^ Crc[31]) ^ Crc[6];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Enable', 'Data', 'Data', 'Data', 'Crc', 'Crc', 'Crc', 'Crc']"];
	"518:AS" -> "txcrc.155:AS";
	"txcrc.172:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8274f9dd0>",
		def_var="['CrcNext']",
		fillcolor=deepskyblue,
		label="txcrc.172:AS
CrcNext[27] = Enable & (Data[1] ^ Crc[29]) ^ Crc[23];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Enable', 'Data', 'Crc', 'Crc']"];
	"518:AS" -> "txcrc.172:AS";
	"txcrc.157:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8274e6d90>",
		def_var="['CrcNext']",
		fillcolor=deepskyblue,
		label="txcrc.157:AS
CrcNext[12] = Enable & (Data[2] ^ Data[1] ^ Data[0] ^ Crc[28] ^ Crc[29] ^ Crc[30]) ^ Crc[8];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Enable', 'Data', 'Data', 'Data', 'Crc', 'Crc', 'Crc', 'Crc']"];
	"518:AS" -> "txcrc.157:AS";
	"txcrc.152:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff827500390>",
		def_var="['CrcNext']",
		fillcolor=deepskyblue,
		label="txcrc.152:AS
CrcNext[7] = Enable & (Data[3] ^ Data[2] ^ Data[0] ^ Crc[28] ^ Crc[30] ^ Crc[31]) ^ Crc[3];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Enable', 'Data', 'Data', 'Data', 'Crc', 'Crc', 'Crc', 'Crc']"];
	"518:AS" -> "txcrc.152:AS";
	"txcrc.149:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff805bd5ed0>",
		def_var="['CrcNext']",
		fillcolor=deepskyblue,
		label="txcrc.149:AS
CrcNext[4] = Enable & (Data[3] ^ Data[2] ^ Data[0] ^ Crc[28] ^ Crc[30] ^ Crc[31]) ^ Crc[0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Enable', 'Data', 'Data', 'Data', 'Crc', 'Crc', 'Crc', 'Crc']"];
	"518:AS" -> "txcrc.149:AS";
	"txcrc.160:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8274ccad0>",
		def_var="['CrcNext']",
		fillcolor=deepskyblue,
		label="txcrc.160:AS
CrcNext[15] = Enable & (Data[3] ^ Crc[31]) ^ Crc[11];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Enable', 'Data', 'Crc', 'Crc']"];
	"518:AS" -> "txcrc.160:AS";
	"txcrc.158:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8274cc890>",
		def_var="['CrcNext']",
		fillcolor=deepskyblue,
		label="txcrc.158:AS
CrcNext[13] = Enable & (Data[3] ^ Data[2] ^ Data[1] ^ Crc[29] ^ Crc[30] ^ Crc[31]) ^ Crc[9];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Enable', 'Data', 'Data', 'Data', 'Crc', 'Crc', 'Crc', 'Crc']"];
	"518:AS" -> "txcrc.158:AS";
	"txcrc.162:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8274c32d0>",
		def_var="['CrcNext']",
		fillcolor=deepskyblue,
		label="txcrc.162:AS
CrcNext[17] = Enable & (Data[1] ^ Crc[29]) ^ Crc[13];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Enable', 'Data', 'Crc', 'Crc']"];
	"518:AS" -> "txcrc.162:AS";
	"txcrc.154:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8274fca10>",
		def_var="['CrcNext']",
		fillcolor=deepskyblue,
		label="txcrc.154:AS
CrcNext[9] = Enable & (Data[2] ^ Data[1] ^ Crc[29] ^ Crc[30]) ^ Crc[5];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Enable', 'Data', 'Data', 'Crc', 'Crc', 'Crc']"];
	"518:AS" -> "txcrc.154:AS";
	"txcrc.150:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff805bf8bd0>",
		def_var="['CrcNext']",
		fillcolor=deepskyblue,
		label="txcrc.150:AS
CrcNext[5] = Enable & (Data[3] ^ Data[1] ^ Data[0] ^ Crc[28] ^ Crc[29] ^ Crc[31]) ^ Crc[1];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Enable', 'Data', 'Data', 'Data', 'Crc', 'Crc', 'Crc', 'Crc']"];
	"518:AS" -> "txcrc.150:AS";
	"txcrc.151:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff827500cd0>",
		def_var="['CrcNext']",
		fillcolor=deepskyblue,
		label="txcrc.151:AS
CrcNext[6] = Enable & (Data[2] ^ Data[1] ^ Crc[29] ^ Crc[30]) ^ Crc[2];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Enable', 'Data', 'Data', 'Crc', 'Crc', 'Crc']"];
	"518:AS" -> "txcrc.151:AS";
	"txcrc.169:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8274f0990>",
		def_var="['CrcNext']",
		fillcolor=deepskyblue,
		label="txcrc.169:AS
CrcNext[24] = Enable & (Data[2] ^ Data[1] ^ Crc[30] ^ Crc[29]) ^ Crc[20];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Enable', 'Data', 'Data', 'Crc', 'Crc', 'Crc']"];
	"518:AS" -> "txcrc.169:AS";
	"txcrc.145:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff826d6ee50>",
		def_var="['CrcNext']",
		fillcolor=deepskyblue,
		label="txcrc.145:AS
CrcNext[0] = Enable & (Data[0] ^ Crc[28]);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Enable', 'Data', 'Crc']"];
	"518:AS" -> "txcrc.145:AS";
	"txcrc.159:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8274cc250>",
		def_var="['CrcNext']",
		fillcolor=deepskyblue,
		label="txcrc.159:AS
CrcNext[14] = Enable & (Data[3] ^ Data[2] ^ Crc[30] ^ Crc[31]) ^ Crc[10];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Enable', 'Data', 'Data', 'Crc', 'Crc', 'Crc']"];
	"518:AS" -> "txcrc.159:AS";
	"txcrc.167:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8274e2a50>",
		def_var="['CrcNext']",
		fillcolor=deepskyblue,
		label="txcrc.167:AS
CrcNext[22] = Enable & (Data[0] ^ Crc[28]) ^ Crc[18];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Enable', 'Data', 'Crc', 'Crc']"];
	"518:AS" -> "txcrc.167:AS";
	"txcrc.161:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8274c37d0>",
		def_var="['CrcNext']",
		fillcolor=deepskyblue,
		label="txcrc.161:AS
CrcNext[16] = Enable & (Data[0] ^ Crc[28]) ^ Crc[12];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Enable', 'Data', 'Crc', 'Crc']"];
	"518:AS" -> "txcrc.161:AS";
	"txcrc.148:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff805bd5250>",
		def_var="['CrcNext']",
		fillcolor=deepskyblue,
		label="txcrc.148:AS
CrcNext[3] = Enable & (Data[3] ^ Data[2] ^ Data[1] ^ Crc[29] ^ Crc[30] ^ Crc[31]);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Enable', 'Data', 'Data', 'Data', 'Crc', 'Crc', 'Crc']"];
	"518:AS" -> "txcrc.148:AS";
	"txcrc.153:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8274fca50>",
		def_var="['CrcNext']",
		fillcolor=deepskyblue,
		label="txcrc.153:AS
CrcNext[8] = Enable & (Data[3] ^ Data[1] ^ Data[0] ^ Crc[28] ^ Crc[29] ^ Crc[31]) ^ Crc[4];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Enable', 'Data', 'Data', 'Data', 'Crc', 'Crc', 'Crc', 'Crc']"];
	"518:AS" -> "txcrc.153:AS";
	"txcrc.146:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8277d8190>",
		def_var="['CrcNext']",
		fillcolor=deepskyblue,
		label="txcrc.146:AS
CrcNext[1] = Enable & (Data[1] ^ Data[0] ^ Crc[28] ^ Crc[29]);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Enable', 'Data', 'Data', 'Crc', 'Crc']"];
	"518:AS" -> "txcrc.146:AS";
	"txcrc.164:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8274e2b50>",
		def_var="['CrcNext']",
		fillcolor=deepskyblue,
		label="txcrc.164:AS
CrcNext[19] = Enable & (Data[3] ^ Crc[31]) ^ Crc[15];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Enable', 'Data', 'Crc', 'Crc']"];
	"518:AS" -> "txcrc.164:AS";
	"txcrc.170:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8274f9750>",
		def_var="['CrcNext']",
		fillcolor=deepskyblue,
		label="txcrc.170:AS
CrcNext[25] = Enable & (Data[3] ^ Data[2] ^ Crc[31] ^ Crc[30]) ^ Crc[21];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Enable', 'Data', 'Data', 'Crc', 'Crc', 'Crc']"];
	"518:AS" -> "txcrc.170:AS";
	"txcrc.147:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff805bddd90>",
		def_var="['CrcNext']",
		fillcolor=deepskyblue,
		label="txcrc.147:AS
CrcNext[2] = Enable & (Data[2] ^ Data[1] ^ Data[0] ^ Crc[28] ^ Crc[29] ^ Crc[30]);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Enable', 'Data', 'Data', 'Data', 'Crc', 'Crc', 'Crc']"];
	"518:AS" -> "txcrc.147:AS";
	"txcrc.156:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8274fe490>",
		def_var="['CrcNext']",
		fillcolor=deepskyblue,
		label="txcrc.156:AS
CrcNext[11] = Enable & (Data[3] ^ Data[1] ^ Data[0] ^ Crc[28] ^ Crc[29] ^ Crc[31]) ^ Crc[7];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Enable', 'Data', 'Data', 'Data', 'Crc', 'Crc', 'Crc', 'Crc']"];
	"518:AS" -> "txcrc.156:AS";
	"txcrc.173:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff82775f4d0>",
		def_var="['CrcNext']",
		fillcolor=deepskyblue,
		label="txcrc.173:AS
CrcNext[28] = Enable & (Data[2] ^ Crc[30]) ^ Crc[24];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Enable', 'Data', 'Crc', 'Crc']"];
	"518:AS" -> "txcrc.173:AS";
	"txcrc.171:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8274f9650>",
		def_var="['CrcNext']",
		fillcolor=deepskyblue,
		label="txcrc.171:AS
CrcNext[26] = Enable & (Data[3] ^ Data[0] ^ Crc[31] ^ Crc[28]) ^ Crc[22];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Enable', 'Data', 'Data', 'Crc', 'Crc', 'Crc']"];
	"518:AS" -> "txcrc.171:AS";
	"txstatem1.317:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e09250>",
		fillcolor=firebrick,
		label="txstatem1.317:NS
StateDefer <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e09250>]",
		style=filled,
		typ=NonblockingSubstitution];
	"txstatem1.317:NS" -> "txstatem1.Leaf_254:AL"	 [cond="[]",
		lineno=None];
	"txcrc.168:AS" -> "txcrc.179:AL";
	"421:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff8065a3b10>",
		fillcolor=cadetblue,
		label="421:BS
MTxD_d[3:0] = 4'h0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff8065a3b10>]",
		style=filled,
		typ=BlockingSubstitution];
	"421:BS" -> "Leaf_400:AL"	 [cond="[]",
		lineno=None];
	"txcounters1.259:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff827522a10>",
		fillcolor=firebrick,
		label="txcounters1.259:NS
DlyCrcCnt <= 3'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff827522a10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"txcounters1.Leaf_252:AL"	 [def_var="['DlyCrcCnt']",
		label="txcounters1.Leaf_252:AL"];
	"txcounters1.259:NS" -> "txcounters1.Leaf_252:AL"	 [cond="[]",
		lineno=None];
	"txstatem1.311:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e09550>",
		fillcolor=firebrick,
		label="txstatem1.311:NS
StateBackOff <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e09550>]",
		style=filled,
		typ=NonblockingSubstitution];
	"txstatem1.311:NS" -> "txstatem1.Leaf_254:AL"	 [cond="[]",
		lineno=None];
	"txcounters1.202:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff827521050>",
		fillcolor=firebrick,
		label="txcounters1.202:NS
NibCnt <= 16'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff827521050>]",
		style=filled,
		typ=NonblockingSubstitution];
	"txcounters1.202:NS" -> "txcounters1.Leaf_199:AL"	 [cond="[]",
		lineno=None];
	"441:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8065af6d0>",
		fillcolor=firebrick,
		label="441:NS
MTxD[3:0] <= MTxD_d[3:0];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8065af6d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_436:AL"	 [def_var="['MTxD']",
		label="Leaf_436:AL"];
	"441:NS" -> "Leaf_436:AL"	 [cond="[]",
		lineno=None];
	"402:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff806297f90>",
		fillcolor=turquoise,
		label="402:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"403:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff80629f390>",
		fillcolor=springgreen,
		label="403:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"402:BL" -> "403:IF"	 [cond="[]",
		lineno=None];
	"txcrc.155:AS" -> "txcrc.179:AL";
	"447:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff8065af950>",
		fillcolor=turquoise,
		label="447:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"448:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff8065afa50>",
		fillcolor=springgreen,
		label="448:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"447:BL" -> "448:IF"	 [cond="[]",
		lineno=None];
	"391:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8062977d0>",
		fillcolor=firebrick,
		label="391:NS
RetryCnt[3:0] <= RetryCnt[3:0] + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8062977d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_380:AL"	 [def_var="['RetryCnt']",
		label="Leaf_380:AL"];
	"391:NS" -> "Leaf_380:AL"	 [cond="[]",
		lineno=None];
	"373:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff806294310>",
		fillcolor=springgreen,
		label="373:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"374:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff806294450>",
		fillcolor=firebrick,
		label="374:NS
TxAbort <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff806294450>]",
		style=filled,
		typ=NonblockingSubstitution];
	"373:IF" -> "374:NS"	 [cond="['StartTxAbort']",
		label=StartTxAbort,
		lineno=373];
	"txcrc.190:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff805bdc9d0>",
		def_var="['CrcError']",
		fillcolor=deepskyblue,
		label="txcrc.190:AS
CrcError = Crc[31:0] != 32'hc704dd7b;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Crc']"];
	"Leaf_306:AL"	 [def_var="['StatusLatch']",
		label="Leaf_306:AL"];
	"364:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff80629cb50>",
		clk_sens=False,
		fillcolor=gold,
		label="364:AL",
		sens="['MTxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'StartTxAbort', 'TxStartFrm', 'StatusLatch', 'ExcessiveDeferOccured']"];
	"Leaf_306:AL" -> "364:AL";
	"348:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff80629c290>",
		clk_sens=False,
		fillcolor=gold,
		label="348:AL",
		sens="['MTxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'StartTxRetry', 'StatusLatch', 'TxStartFrm']"];
	"Leaf_306:AL" -> "348:AL";
	"Leaf_306:AL" -> "332:AL";
	"txcounters1.255:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff827522490>",
		fillcolor=firebrick,
		label="txcounters1.255:NS
DlyCrcCnt <= 3'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff827522490>]",
		style=filled,
		typ=NonblockingSubstitution];
	"txcounters1.255:NS" -> "txcounters1.Leaf_252:AL"	 [cond="[]",
		lineno=None];
	"txcounters1.195:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff82752c9d0>",
		def_var="['ResetNibCnt']",
		fillcolor=deepskyblue,
		label="txcounters1.195:AS
ResetNibCnt = StateDefer & ExcessiveDefer & ~TxStartFrm | StatePreamble & NibCntEq15 | StateJam & NibCntEq7 | \
StateIdle | StartDefer | StartIPG | StartFCS | StartJam;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StateDefer', 'ExcessiveDefer', 'TxStartFrm', 'StatePreamble', 'NibCntEq15', 'StateJam', 'NibCntEq7', 'StateIdle', 'StartDefer', '\
StartIPG', 'StartFCS', 'StartJam']"];
	"txstatem1.227:AS" -> "txcounters1.195:AS";
	"txstatem1.227:AS" -> "txstatem1.254:AL";
	"349:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff80629c250>",
		fillcolor=turquoise,
		label="349:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"350:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff80629c450>",
		fillcolor=springgreen,
		label="350:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"349:BL" -> "350:IF"	 [cond="[]",
		lineno=None];
	"338:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff806281f10>",
		fillcolor=springgreen,
		label="338:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"341:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff80629c050>",
		fillcolor=springgreen,
		label="341:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"338:IF" -> "341:IF"	 [cond="['TxStartFrm', 'StatusLatch']",
		label="!((TxStartFrm & ~StatusLatch))",
		lineno=338];
	"339:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff806281ed0>",
		fillcolor=firebrick,
		label="339:NS
TxDone <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff806281ed0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"338:IF" -> "339:NS"	 [cond="['TxStartFrm', 'StatusLatch']",
		label="(TxStartFrm & ~StatusLatch)",
		lineno=338];
	"txstatem1.284:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e19ad0>",
		fillcolor=firebrick,
		label="txstatem1.284:NS
StateIdle <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e19ad0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"txstatem1.284:NS" -> "txstatem1.Leaf_254:AL"	 [cond="[]",
		lineno=None];
	"266:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8066cca50>",
		def_var="['MaxCollisionOccured']",
		fillcolor=deepskyblue,
		label="266:AS
MaxCollisionOccured = StartJam & ColWindow & RetryMax;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StartJam', 'ColWindow', 'RetryMax']"];
	"266:AS" -> "465:AS";
	"266:AS" -> "270:AS";
	"txstatem1.225:AS" -> "txstatem1.254:AL";
	"txcounters1.199:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff82752ce90>",
		clk_sens=False,
		fillcolor=gold,
		label="txcounters1.199:AL",
		sens="['MTxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'IncrementNibCnt', 'NibCnt', 'ResetNibCnt']"];
	"txcounters1.195:AS" -> "txcounters1.199:AL";
	"txcrc.172:AS" -> "txcrc.179:AL";
	"txstatem1.336:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e05290>",
		fillcolor=firebrick,
		label="txstatem1.336:NS
Rule1 <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e05290>]",
		style=filled,
		typ=NonblockingSubstitution];
	"txstatem1.Leaf_326:AL"	 [def_var="['Rule1']",
		label="txstatem1.Leaf_326:AL"];
	"txstatem1.336:NS" -> "txstatem1.Leaf_326:AL"	 [cond="[]",
		lineno=None];
	"297:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8062a1790>",
		fillcolor=firebrick,
		label="297:NS
ColWindow <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8062a1790>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_290:AL"	 [def_var="['ColWindow']",
		label="Leaf_290:AL"];
	"297:NS" -> "Leaf_290:AL"	 [cond="[]",
		lineno=None];
	"txcrc.180:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff805bd9990>",
		fillcolor=turquoise,
		label="txcrc.180:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"txcrc.181:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff805bd9c90>",
		fillcolor=springgreen,
		label="txcrc.181:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"txcrc.180:BL" -> "txcrc.181:IF"	 [cond="[]",
		lineno=None];
	"429:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8065a3b50>",
		fillcolor=firebrick,
		label="429:NS
MTxEn <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8065a3b50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_426:AL"	 [def_var="['MTxEn']",
		label="Leaf_426:AL"];
	"429:NS" -> "Leaf_426:AL"	 [cond="[]",
		lineno=None];
	"txcrc.157:AS" -> "txcrc.179:AL";
	"428:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff8065a3ad0>",
		fillcolor=springgreen,
		label="428:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"428:IF" -> "429:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=428];
	"431:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8065a3e10>",
		fillcolor=firebrick,
		label="431:NS
MTxEn <= StatePreamble | |StateData | StatePAD | StateFCS | StateJam;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8065a3e10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"428:IF" -> "431:NS"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=428];
	"312:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff8062a1fd0>",
		fillcolor=springgreen,
		label="312:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"311:BL" -> "312:IF"	 [cond="[]",
		lineno=None];
	"262:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8066cc490>",
		def_var="['StartTxRetry']",
		fillcolor=deepskyblue,
		label="262:AS
StartTxRetry = StartJam & (ColWindow & ~RetryMax) & ~UnderRun;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StartJam', 'ColWindow', 'RetryMax', 'UnderRun']"];
	"262:AS" -> "348:AL";
	"410:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff80629fd90>",
		fillcolor=cadetblue,
		label="410:BS
MTxD_d[3:0] = { ~Crc[28], ~Crc[29], ~Crc[30], ~Crc[31] };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff80629fd90>]",
		style=filled,
		typ=BlockingSubstitution];
	"410:BS" -> "Leaf_400:AL"	 [cond="[]",
		lineno=None];
	"279:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff8066cf610>",
		fillcolor=turquoise,
		label="279:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"280:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff8066cf8d0>",
		fillcolor=springgreen,
		label="280:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"279:BL" -> "280:IF"	 [cond="[]",
		lineno=None];
	"txcounters1.201:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff827521090>",
		fillcolor=springgreen,
		label="txcounters1.201:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"txcounters1.201:IF" -> "txcounters1.202:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=201];
	"txcounters1.204:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff82752cfd0>",
		fillcolor=turquoise,
		label="txcounters1.204:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"txcounters1.201:IF" -> "txcounters1.204:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=201];
	"446:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff8065af910>",
		clk_sens=False,
		fillcolor=gold,
		label="446:AL",
		sens="['MTxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'TooBig', 'UnderRun']"];
	"446:AL" -> "447:BL"	 [cond="[]",
		lineno=None];
	"txstatem1.219:AS" -> "txstatem1.254:AL";
	"txstatem1.219:AS" -> "456:AL";
	"txcrc.176:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff805bd9750>",
		def_var="['CrcNext']",
		fillcolor=deepskyblue,
		label="txcrc.176:AS
CrcNext[31] = Crc[27];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Crc']"];
	"txcrc.176:AS" -> "txcrc.179:AL";
	"txcrc.152:AS" -> "txcrc.179:AL";
	"296:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff8062a17d0>",
		fillcolor=springgreen,
		label="296:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"296:IF" -> "297:NS"	 [cond="['Collision', 'ByteCnt', 'CollValid', 'StateData', 'StatePAD', 'NibCnt', 'StateFCS', 'NibCnt']",
		label="(~Collision & (ByteCnt[5:0] == CollValid[5:0]) & (StateData[1] | StatePAD & NibCnt[0] | StateFCS & NibCnt[0]))",
		lineno=296];
	"299:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff8062a1950>",
		fillcolor=springgreen,
		label="299:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"296:IF" -> "299:IF"	 [cond="['Collision', 'ByteCnt', 'CollValid', 'StateData', 'StatePAD', 'NibCnt', 'StateFCS', 'NibCnt']",
		label="!((~Collision & (ByteCnt[5:0] == CollValid[5:0]) & (StateData[1] | StatePAD & NibCnt[0] | StateFCS & NibCnt[0])))",
		lineno=296];
	"txstatem1.221:AS" -> "txstatem1.254:AL";
	"322:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff806281490>",
		clk_sens=False,
		fillcolor=gold,
		label="322:AL",
		sens="['MTxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'StartData']"];
	"txstatem1.221:AS" -> "322:AL";
	"txstatem1.333:NS" -> "txstatem1.Leaf_326:AL"	 [cond="[]",
		lineno=None];
	"436:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff8065af1d0>",
		clk_sens=False,
		fillcolor=gold,
		label="436:AL",
		sens="['MTxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'MTxD_d']"];
	"Leaf_400:AL" -> "436:AL";
	"Leaf_274:AL"	 [def_var="['StopExcessiveDeferOccured']",
		label="Leaf_274:AL"];
	"Leaf_274:AL" -> "253:AS";
	"random1.153:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8066e4750>",
		fillcolor=firebrick,
		label="random1.153:NS
x[9:0] <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8066e4750>]",
		style=filled,
		typ=NonblockingSubstitution];
	"random1.Leaf_150:AL"	 [def_var="['x']",
		label="random1.Leaf_150:AL"];
	"random1.153:NS" -> "random1.Leaf_150:AL"	 [cond="[]",
		lineno=None];
	"404:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff80629f350>",
		fillcolor=cadetblue,
		label="404:BS
MTxD_d[3:0] = TxData[3:0];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff80629f350>]",
		style=filled,
		typ=BlockingSubstitution];
	"404:BS" -> "Leaf_400:AL"	 [cond="[]",
		lineno=None];
	"txstatem1.255:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff806323f50>",
		fillcolor=turquoise,
		label="txstatem1.255:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"txstatem1.254:AL" -> "txstatem1.255:BL"	 [cond="[]",
		lineno=None];
	"txstatem1.232:AS" -> "txstatem1.254:AL";
	"txstatem1.232:AS" -> "txcounters1.227:AS";
	"437:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff8065af210>",
		fillcolor=turquoise,
		label="437:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"438:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff8065af5d0>",
		fillcolor=springgreen,
		label="438:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"437:BL" -> "438:IF"	 [cond="[]",
		lineno=None];
	"412:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff8065a3310>",
		fillcolor=springgreen,
		label="412:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"413:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff8065a32d0>",
		fillcolor=cadetblue,
		label="413:BS
MTxD_d[3:0] = 4'h9;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff8065a32d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"412:IF" -> "413:BS"	 [cond="['StateJam']",
		label=StateJam,
		lineno=412];
	"415:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff8065a3a90>",
		fillcolor=springgreen,
		label="415:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"412:IF" -> "415:IF"	 [cond="['StateJam']",
		label="!(StateJam)",
		lineno=412];
	"293:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8066cfdd0>",
		fillcolor=firebrick,
		label="293:NS
ColWindow <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8066cfdd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"293:NS" -> "Leaf_290:AL"	 [cond="[]",
		lineno=None];
	"txstatem1.302:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e17b50>",
		fillcolor=firebrick,
		label="txstatem1.302:NS
StateFCS <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e17b50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"txstatem1.302:NS" -> "txstatem1.Leaf_254:AL"	 [cond="[]",
		lineno=None];
	"txcrc.149:AS" -> "txcrc.179:AL";
	"txcrc.160:AS" -> "txcrc.179:AL";
	"Leaf_348:AL"	 [def_var="['TxRetry']",
		label="Leaf_348:AL"];
	"txstatem1.283:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff805e19950>",
		fillcolor=springgreen,
		label="txstatem1.283:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"txstatem1.283:IF" -> "txstatem1.284:NS"	 [cond="['StartIdle']",
		label=StartIdle,
		lineno=283];
	"random1.163:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8066e87d0>",
		def_var="['Random']",
		fillcolor=deepskyblue,
		label="random1.163:AS
Random[3] = (RetryCnt > 3)? x[3] : 1'b0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RetryCnt', 'x']"];
	"random1.163:AS" -> "random1.172:AL";
	"291:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff8066cfbd0>",
		fillcolor=turquoise,
		label="291:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"292:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff8066cfe10>",
		fillcolor=springgreen,
		label="292:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"291:BL" -> "292:IF"	 [cond="[]",
		lineno=None];
	"txcrc.158:AS" -> "txcrc.179:AL";
	"txstatem1.245:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff806323b10>",
		fillcolor=turquoise,
		label="txstatem1.245:BL
StateTraffic = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff806323450>]",
		style=filled,
		typ=Block];
	"txstatem1.Leaf_244:AL"	 [def_var="['StateTraffic']",
		label="txstatem1.Leaf_244:AL"];
	"txstatem1.245:BL" -> "txstatem1.Leaf_244:AL"	 [cond="[]",
		lineno=None];
	"txcounters1.241:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff82753ab90>",
		fillcolor=firebrick,
		label="txcounters1.241:NS
ByteCnt[15:0] <= ByteCnt[15:0] + 16'd1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff82753ab90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"txcounters1.Leaf_231:AL"	 [def_var="['ByteCnt']",
		label="txcounters1.Leaf_231:AL"];
	"txcounters1.241:NS" -> "txcounters1.Leaf_231:AL"	 [cond="[]",
		lineno=None];
	"txcrc.Leaf_179:AL"	 [def_var="['Crc']",
		label="txcrc.Leaf_179:AL"];
	"txcrc.Leaf_179:AL" -> "txcrc.174:AS";
	"txcrc.Leaf_179:AL" -> "txcrc.165:AS";
	"txcrc.Leaf_179:AL" -> "txcrc.163:AS";
	"txcrc.Leaf_179:AL" -> "txcrc.168:AS";
	"txcrc.Leaf_179:AL" -> "txcrc.155:AS";
	"txcrc.Leaf_179:AL" -> "txcrc.190:AS";
	"txcrc.Leaf_179:AL" -> "txcrc.172:AS";
	"txcrc.Leaf_179:AL" -> "txcrc.157:AS";
	"txcrc.Leaf_179:AL" -> "txcrc.176:AS";
	"txcrc.Leaf_179:AL" -> "txcrc.152:AS";
	"txcrc.Leaf_179:AL" -> "txcrc.149:AS";
	"txcrc.Leaf_179:AL" -> "txcrc.160:AS";
	"txcrc.Leaf_179:AL" -> "txcrc.158:AS";
	"txcrc.Leaf_179:AL" -> "txcrc.162:AS";
	"txcrc.Leaf_179:AL" -> "txcrc.154:AS";
	"txcrc.175:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff805bd9590>",
		def_var="['CrcNext']",
		fillcolor=deepskyblue,
		label="txcrc.175:AS
CrcNext[30] = Crc[26];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Crc']"];
	"txcrc.Leaf_179:AL" -> "txcrc.175:AS";
	"txcrc.Leaf_179:AL" -> "400:AL";
	"txcrc.Leaf_179:AL" -> "txcrc.150:AS";
	"txcrc.Leaf_179:AL" -> "txcrc.151:AS";
	"txcrc.Leaf_179:AL" -> "txcrc.169:AS";
	"txcrc.Leaf_179:AL" -> "txcrc.145:AS";
	"txcrc.Leaf_179:AL" -> "txcrc.159:AS";
	"txcrc.Leaf_179:AL" -> "txcrc.167:AS";
	"txcrc.Leaf_179:AL" -> "txcrc.161:AS";
	"txcrc.Leaf_179:AL" -> "txcrc.148:AS";
	"txcrc.Leaf_179:AL" -> "txcrc.153:AS";
	"txcrc.Leaf_179:AL" -> "txcrc.146:AS";
	"txcrc.Leaf_179:AL" -> "txcrc.164:AS";
	"txcrc.166:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8274e20d0>",
		def_var="['CrcNext']",
		fillcolor=deepskyblue,
		label="txcrc.166:AS
CrcNext[21] = Crc[17];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Crc']"];
	"txcrc.Leaf_179:AL" -> "txcrc.166:AS";
	"txcrc.Leaf_179:AL" -> "txcrc.170:AS";
	"txcrc.Leaf_179:AL" -> "txcrc.147:AS";
	"txcrc.Leaf_179:AL" -> "txcrc.156:AS";
	"txcrc.Leaf_179:AL" -> "txcrc.173:AS";
	"txcrc.Leaf_179:AL" -> "txcrc.171:AS";
	"342:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff80629c190>",
		fillcolor=firebrick,
		label="342:NS
TxDone <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff80629c190>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_332:AL"	 [def_var="['TxDone']",
		label="Leaf_332:AL"];
	"342:NS" -> "Leaf_332:AL"	 [cond="[]",
		lineno=None];
	"txstatem1.329:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e09b50>",
		fillcolor=firebrick,
		label="txstatem1.329:NS
Rule1 <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e09b50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"txstatem1.329:NS" -> "txstatem1.Leaf_326:AL"	 [cond="[]",
		lineno=None];
	"413:BS" -> "Leaf_400:AL"	 [cond="[]",
		lineno=None];
	"300:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8062a1a90>",
		fillcolor=firebrick,
		label="300:NS
ColWindow <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8062a1a90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"300:NS" -> "Leaf_290:AL"	 [cond="[]",
		lineno=None];
	"523:AS" -> "txcrc.179:AL";
	"txcrc.162:AS" -> "txcrc.179:AL";
	"txstatem1.281:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e19550>",
		fillcolor=firebrick,
		label="txstatem1.281:NS
StateIdle <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e19550>]",
		style=filled,
		typ=NonblockingSubstitution];
	"txstatem1.281:NS" -> "txstatem1.Leaf_254:AL"	 [cond="[]",
		lineno=None];
	"415:IF" -> "421:BS"	 [cond="['StatePreamble']",
		label="!(StatePreamble)",
		lineno=415];
	"416:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff8065a3910>",
		fillcolor=springgreen,
		label="416:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"415:IF" -> "416:IF"	 [cond="['StatePreamble']",
		label=StatePreamble,
		lineno=415];
	"381:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff806294510>",
		fillcolor=turquoise,
		label="381:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"382:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff8062947d0>",
		fillcolor=springgreen,
		label="382:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"381:BL" -> "382:IF"	 [cond="[]",
		lineno=None];
	"txcounters1.200:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff82752ced0>",
		fillcolor=turquoise,
		label="txcounters1.200:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"txcounters1.200:BL" -> "txcounters1.201:IF"	 [cond="[]",
		lineno=None];
	"txcrc.154:AS" -> "txcrc.179:AL";
	"txcrc.175:AS" -> "txcrc.179:AL";
	"txcrc.185:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805bd9c10>",
		fillcolor=firebrick,
		label="txcrc.185:NS
Crc <= 32'hffffffff;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805bd9c10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"txcrc.185:NS" -> "txcrc.Leaf_179:AL"	 [cond="[]",
		lineno=None];
	"419:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff8065a3990>",
		fillcolor=cadetblue,
		label="419:BS
MTxD_d[3:0] = 4'h5;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff8065a3990>]",
		style=filled,
		typ=BlockingSubstitution];
	"419:BS" -> "Leaf_400:AL"	 [cond="[]",
		lineno=None];
	"txcrc.182:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805bd9cd0>",
		fillcolor=firebrick,
		label="txcrc.182:NS
Crc <= 32'hffffffff;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805bd9cd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"txcrc.182:NS" -> "txcrc.Leaf_179:AL"	 [cond="[]",
		lineno=None];
	"427:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff8065a3390>",
		fillcolor=turquoise,
		label="427:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"427:BL" -> "428:IF"	 [cond="[]",
		lineno=None];
	"337:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff806281c10>",
		fillcolor=turquoise,
		label="337:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"337:BL" -> "338:IF"	 [cond="[]",
		lineno=None];
	"396:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff806297950>",
		def_var="['RetryMax']",
		fillcolor=deepskyblue,
		label="396:AS
RetryMax = RetryCnt[3:0] == MaxRet[3:0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RetryCnt', 'MaxRet']"];
	"396:AS" -> "266:AS";
	"396:AS" -> "262:AS";
	"396:AS" -> "380:AL";
	"312:IF" -> "315:IF"	 [cond="['TxStartFrm']",
		label="!((~TxStartFrm))",
		lineno=312];
	"313:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff806281050>",
		fillcolor=firebrick,
		label="313:NS
StatusLatch <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff806281050>]",
		style=filled,
		typ=NonblockingSubstitution];
	"312:IF" -> "313:NS"	 [cond="['TxStartFrm']",
		label="(~TxStartFrm)",
		lineno=312];
	"txstatem1.298:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff805e17610>",
		fillcolor=springgreen,
		label="txstatem1.298:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"txstatem1.301:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff805e17a90>",
		fillcolor=springgreen,
		label="txstatem1.301:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"txstatem1.298:IF" -> "txstatem1.301:IF"	 [cond="['StartJam', 'StartDefer']",
		label="!((StartJam | StartDefer))",
		lineno=298];
	"txstatem1.299:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e17510>",
		fillcolor=firebrick,
		label="txstatem1.299:NS
StateFCS <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e17510>]",
		style=filled,
		typ=NonblockingSubstitution];
	"txstatem1.298:IF" -> "txstatem1.299:NS"	 [cond="['StartJam', 'StartDefer']",
		label="(StartJam | StartDefer)",
		lineno=298];
	"403:IF" -> "404:BS"	 [cond="['StateData']",
		label="StateData[0]",
		lineno=403];
	"406:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff80629f810>",
		fillcolor=springgreen,
		label="406:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"403:IF" -> "406:IF"	 [cond="['StateData']",
		label="!(StateData[0])",
		lineno=403];
	"txstatem1.249:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff806323790>",
		fillcolor=turquoise,
		label="txstatem1.249:BL
StateTraffic = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff806323850>]",
		style=filled,
		typ=Block];
	"txstatem1.Leaf_248:AL"	 [def_var="['StateTraffic']",
		label="txstatem1.Leaf_248:AL"];
	"txstatem1.249:BL" -> "txstatem1.Leaf_248:AL"	 [cond="[]",
		lineno=None];
	"400:AL" -> "402:BL"	 [cond="[]",
		lineno=None];
	"txstatem1.289:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff805e17690>",
		fillcolor=springgreen,
		label="txstatem1.289:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"txstatem1.289:IF" -> "txstatem1.290:NS"	 [cond="['StartPreamble']",
		label=StartPreamble,
		lineno=289];
	"txcrc.179:AL" -> "txcrc.180:BL"	 [cond="[]",
		lineno=None];
	"451:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8065afc90>",
		fillcolor=firebrick,
		label="451:NS
MTxErr <= TooBig | UnderRun;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8065afc90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_446:AL"	 [def_var="['MTxErr']",
		label="Leaf_446:AL"];
	"451:NS" -> "Leaf_446:AL"	 [cond="[]",
		lineno=None];
	"txcrc.150:AS" -> "txcrc.179:AL";
	"290:AL" -> "291:BL"	 [cond="[]",
		lineno=None];
	"txcrc.151:AS" -> "txcrc.179:AL";
	"txstatem1.277:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff805e19050>",
		fillcolor=springgreen,
		label="txstatem1.277:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"txstatem1.278:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e19690>",
		fillcolor=firebrick,
		label="txstatem1.278:NS
StateIPG <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e19690>]",
		style=filled,
		typ=NonblockingSubstitution];
	"txstatem1.277:IF" -> "txstatem1.278:NS"	 [cond="['StartIPG']",
		label=StartIPG,
		lineno=277];
	"277:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8066cf550>",
		fillcolor=firebrick,
		label="277:NS
StopExcessiveDeferOccured <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8066cf550>]",
		style=filled,
		typ=NonblockingSubstitution];
	"277:NS" -> "Leaf_274:AL"	 [cond="[]",
		lineno=None];
	"txcrc.169:AS" -> "txcrc.179:AL";
	"txcrc.187:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805bd9f10>",
		fillcolor=firebrick,
		label="txcrc.187:NS
Crc <= CrcNext;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805bd9f10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"txcrc.187:NS" -> "txcrc.Leaf_179:AL"	 [cond="[]",
		lineno=None];
	"471:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff8065b7090>",
		fillcolor=springgreen,
		label="471:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"477:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff8065b7210>",
		fillcolor=turquoise,
		label="477:BL
PacketFinished <= PacketFinished_d;
PacketFinished_q <= PacketFinished;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8065b7250>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7ff8065b7410>]",
		style=filled,
		typ=Block];
	"471:IF" -> "477:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=471];
	"472:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff8065ade10>",
		fillcolor=turquoise,
		label="472:BL
PacketFinished <= 1'b0;
PacketFinished_q <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8065ade50>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7ff8065adfd0>]",
		style=filled,
		typ=Block];
	"471:IF" -> "472:BL"	 [cond="['Reset']",
		label=Reset,
		lineno=471];
	"txcounters1.236:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff82753a3d0>",
		fillcolor=turquoise,
		label="txcounters1.236:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"txcounters1.236:BL" -> "txcounters1.237:IF"	 [cond="[]",
		lineno=None];
	"txstatem1.230:AS" -> "264:AS";
	"txstatem1.230:AS" -> "266:AS";
	"txstatem1.230:AS" -> "262:AS";
	"txstatem1.230:AS" -> "txstatem1.254:AL";
	"438:IF" -> "441:NS"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=438];
	"439:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8065af410>",
		fillcolor=firebrick,
		label="439:NS
MTxD[3:0] <= 4'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8065af410>]",
		style=filled,
		typ=NonblockingSubstitution];
	"438:IF" -> "439:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=438];
	"385:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff806294850>",
		fillcolor=turquoise,
		label="385:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"385:BL" -> "386:IF"	 [cond="[]",
		lineno=None];
	"txcounters1.205:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff827521350>",
		fillcolor=springgreen,
		label="txcounters1.205:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"txcounters1.206:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff827521310>",
		fillcolor=firebrick,
		label="txcounters1.206:NS
NibCnt <= 16'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff827521310>]",
		style=filled,
		typ=NonblockingSubstitution];
	"txcounters1.205:IF" -> "txcounters1.206:NS"	 [cond="['ResetNibCnt']",
		label=ResetNibCnt,
		lineno=205];
	"txcounters1.208:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff827521490>",
		fillcolor=springgreen,
		label="txcounters1.208:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"txcounters1.205:IF" -> "txcounters1.208:IF"	 [cond="['ResetNibCnt']",
		label="!(ResetNibCnt)",
		lineno=205];
	"292:IF" -> "293:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=292];
	"295:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff8066cfe90>",
		fillcolor=turquoise,
		label="295:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"292:IF" -> "295:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=292];
	"274:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff8066cf390>",
		clk_sens=False,
		fillcolor=gold,
		label="274:AL",
		sens="['MTxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'TxStartFrm', 'ExcessiveDeferOccured']"];
	"275:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff8066cf3d0>",
		fillcolor=turquoise,
		label="275:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"274:AL" -> "275:BL"	 [cond="[]",
		lineno=None];
	"txcrc.145:AS" -> "txcrc.179:AL";
	"random1.186:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff80672c610>",
		def_var="['RandomEqByteCnt']",
		fillcolor=deepskyblue,
		label="random1.186:AS
RandomEqByteCnt = (ByteCnt[9:0] == RandomLatched) & &NibCnt[6:0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ByteCnt', 'RandomLatched', 'NibCnt']"];
	"random1.186:AS" -> "380:AL";
	"365:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff80629cb10>",
		fillcolor=turquoise,
		label="365:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"366:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff80629cd10>",
		fillcolor=springgreen,
		label="366:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"365:BL" -> "366:IF"	 [cond="[]",
		lineno=None];
	"txcounters1.199:AL" -> "txcounters1.200:BL"	 [cond="[]",
		lineno=None];
	"txcounters1.246:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff82753ad10>",
		def_var="['MaxFrame']",
		fillcolor=deepskyblue,
		label="txcounters1.246:AS
MaxFrame = (ByteCnt[15:0] == MaxFL[15:0]) & ~HugEn;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ByteCnt', 'MaxFL', 'HugEn']"];
	"txcounters1.246:AS" -> "259:AS";
	"txcounters1.234:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff82753a310>",
		fillcolor=firebrick,
		label="txcounters1.234:NS
ByteCnt[15:0] <= 16'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff82753a310>]",
		style=filled,
		typ=NonblockingSubstitution];
	"txcounters1.234:NS" -> "txcounters1.Leaf_231:AL"	 [cond="[]",
		lineno=None];
	"random1.160:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8066e4b90>",
		def_var="['Random']",
		fillcolor=deepskyblue,
		label="random1.160:AS
Random[0] = x[0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['x']"];
	"random1.160:AS" -> "random1.172:AL";
	"324:IF" -> "327:NS"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=324];
	"324:IF" -> "325:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=324];
	"txstatem1.270:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff805e17ed0>",
		fillcolor=turquoise,
		label="txstatem1.270:BL
StateData[1:0] <= StartData[1:0];
StateJam_q <= StateJam;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e19790>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7ff805e19250>]",
		style=filled,
		typ=Block];
	"txstatem1.270:BL" -> "txstatem1.304:IF"	 [cond="[]",
		lineno=None];
	"txstatem1.270:BL" -> "txstatem1.298:IF"	 [cond="[]",
		lineno=None];
	"txstatem1.274:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff805e19d50>",
		fillcolor=springgreen,
		label="txstatem1.274:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"txstatem1.270:BL" -> "txstatem1.274:IF"	 [cond="[]",
		lineno=None];
	"txstatem1.292:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff805e172d0>",
		fillcolor=springgreen,
		label="txstatem1.292:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"txstatem1.270:BL" -> "txstatem1.292:IF"	 [cond="[]",
		lineno=None];
	"txstatem1.280:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff805e196d0>",
		fillcolor=springgreen,
		label="txstatem1.280:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"txstatem1.270:BL" -> "txstatem1.280:IF"	 [cond="[]",
		lineno=None];
	"txstatem1.316:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff805e09290>",
		fillcolor=springgreen,
		label="txstatem1.316:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"txstatem1.270:BL" -> "txstatem1.316:IF"	 [cond="[]",
		lineno=None];
	"txstatem1.286:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff805e17ad0>",
		fillcolor=springgreen,
		label="txstatem1.286:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"txstatem1.270:BL" -> "txstatem1.286:IF"	 [cond="[]",
		lineno=None];
	"txstatem1.310:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff805e09490>",
		fillcolor=springgreen,
		label="txstatem1.310:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"txstatem1.270:BL" -> "txstatem1.310:IF"	 [cond="[]",
		lineno=None];
	"txstatem1.274:IF" -> "txstatem1.277:IF"	 [cond="['StartDefer', 'StartIdle']",
		label="!((StartDefer | StartIdle))",
		lineno=274];
	"txstatem1.275:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e19d10>",
		fillcolor=firebrick,
		label="txstatem1.275:NS
StateIPG <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e19d10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"txstatem1.274:IF" -> "txstatem1.275:NS"	 [cond="['StartDefer', 'StartIdle']",
		label="(StartDefer | StartIdle)",
		lineno=274];
	"307:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff8062a1b50>",
		fillcolor=turquoise,
		label="307:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"307:BL" -> "308:IF"	 [cond="[]",
		lineno=None];
	"426:AL" -> "427:BL"	 [cond="[]",
		lineno=None];
	"txstatem1.301:IF" -> "txstatem1.302:NS"	 [cond="['StartFCS']",
		label=StartFCS,
		lineno=301];
	"txcrc.159:AS" -> "txcrc.179:AL";
	"txcrc.167:AS" -> "txcrc.179:AL";
	"txcounters1.258:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff827522a50>",
		fillcolor=springgreen,
		label="txcounters1.258:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"txcounters1.258:IF" -> "txcounters1.259:NS"	 [cond="['StateData', 'DlyCrcCnt', 'StartJam', 'PacketFinished_q']",
		label="(StateData[1] & (DlyCrcCnt == 3'h4) | StartJam | PacketFinished_q)",
		lineno=258];
	"txcounters1.261:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff827522ed0>",
		fillcolor=springgreen,
		label="txcounters1.261:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"txcounters1.258:IF" -> "txcounters1.261:IF"	 [cond="['StateData', 'DlyCrcCnt', 'StartJam', 'PacketFinished_q']",
		label="!((StateData[1] & (DlyCrcCnt == 3'h4) | StartJam | PacketFinished_q))",
		lineno=258];
	"txstatem1.257:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff806322ad0>",
		fillcolor=turquoise,
		label="txstatem1.257:BL
StateIPG <= 1'b0;
StateIdle <= 1'b0;
StatePreamble <= 1'b0;
StateData[1:0] <= 2'b0;
StatePAD <= 1'b0;
StateFCS <= \
1'b0;
StateJam <= 1'b0;
StateJam_q <= 1'b0;
StateBackOff <= 1'b0;
StateDefer <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff806322b10>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7ff806322390>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff806322050>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7ff806322f10>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff806322090>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7ff806322dd0>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff806322490>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7ff806322710>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff806322a50>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7ff806322cd0>]",
		style=filled,
		typ=Block];
	"txstatem1.257:BL" -> "txstatem1.Leaf_254:AL"	 [cond="[]",
		lineno=None];
	"txcrc.161:AS" -> "txcrc.179:AL";
	"520:AS" -> "txcrc.174:AS";
	"520:AS" -> "txcrc.163:AS";
	"520:AS" -> "txcrc.168:AS";
	"520:AS" -> "txcrc.155:AS";
	"520:AS" -> "txcrc.172:AS";
	"520:AS" -> "txcrc.157:AS";
	"520:AS" -> "txcrc.152:AS";
	"520:AS" -> "txcrc.149:AS";
	"520:AS" -> "txcrc.160:AS";
	"520:AS" -> "txcrc.158:AS";
	"520:AS" -> "txcrc.162:AS";
	"520:AS" -> "txcrc.154:AS";
	"520:AS" -> "txcrc.150:AS";
	"520:AS" -> "txcrc.151:AS";
	"520:AS" -> "txcrc.169:AS";
	"520:AS" -> "txcrc.145:AS";
	"520:AS" -> "txcrc.159:AS";
	"520:AS" -> "txcrc.167:AS";
	"520:AS" -> "txcrc.161:AS";
	"520:AS" -> "txcrc.148:AS";
	"520:AS" -> "txcrc.153:AS";
	"520:AS" -> "txcrc.146:AS";
	"520:AS" -> "txcrc.164:AS";
	"520:AS" -> "txcrc.170:AS";
	"520:AS" -> "txcrc.147:AS";
	"520:AS" -> "txcrc.156:AS";
	"520:AS" -> "txcrc.173:AS";
	"520:AS" -> "txcrc.171:AS";
	"txcounters1.215:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8275218d0>",
		def_var="['NibCntEq15']",
		fillcolor=deepskyblue,
		label="txcounters1.215:AS
NibCntEq15 = &NibCnt[3:0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['NibCnt']"];
	"txcounters1.215:AS" -> "268:AS";
	"txcounters1.215:AS" -> "txcounters1.195:AS";
	"txcounters1.215:AS" -> "400:AL";
	"txstatem1.248:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff806323810>",
		clk_sens=False,
		fillcolor=gold,
		label="txstatem1.248:AL",
		sens="['TxEndFrm']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="[]"];
	"txstatem1.248:AL" -> "txstatem1.249:BL"	 [cond="[]",
		lineno=None];
	"390:IF" -> "391:NS"	 [cond="['StateJam', 'NibCntEq7', 'ColWindow', 'RandomEq0', 'NoBckof', 'StateBackOff', 'RandomEqByteCnt']",
		label="(StateJam & NibCntEq7 & ColWindow & (RandomEq0 | NoBckof) | StateBackOff & RandomEqByteCnt)",
		lineno=390];
	"txstatem1.308:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e09c50>",
		fillcolor=firebrick,
		label="txstatem1.308:NS
StateJam <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e09c50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"txstatem1.308:NS" -> "txstatem1.Leaf_254:AL"	 [cond="[]",
		lineno=None];
	"txcrc.148:AS" -> "txcrc.179:AL";
	"random1.184:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff80672cc10>",
		def_var="['RandomEq0']",
		fillcolor=deepskyblue,
		label="random1.184:AS
RandomEq0 = RandomLatched == 10'h0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RandomLatched']"];
	"random1.184:AS" -> "380:AL";
	"txstatem1.327:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff805e09610>",
		fillcolor=turquoise,
		label="txstatem1.327:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"txstatem1.326:AL" -> "txstatem1.327:BL"	 [cond="[]",
		lineno=None];
	"458:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff8065ad150>",
		fillcolor=springgreen,
		label="458:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"458:IF" -> "459:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=458];
	"461:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8065ad450>",
		fillcolor=firebrick,
		label="461:NS
WillTransmit <= StartPreamble | StatePreamble | |StateData | StatePAD | StateFCS | StateJam;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8065ad450>]",
		style=filled,
		typ=NonblockingSubstitution];
	"458:IF" -> "461:NS"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=458];
	"random1.173:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff8066eac50>",
		fillcolor=turquoise,
		label="random1.173:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"random1.174:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff80672c050>",
		fillcolor=springgreen,
		label="random1.174:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"random1.173:BL" -> "random1.174:IF"	 [cond="[]",
		lineno=None];
	"txcrc.153:AS" -> "txcrc.179:AL";
	"383:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff806294790>",
		fillcolor=firebrick,
		label="383:NS
RetryCnt[3:0] <= 4'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff806294790>]",
		style=filled,
		typ=NonblockingSubstitution];
	"383:NS" -> "Leaf_380:AL"	 [cond="[]",
		lineno=None];
	"334:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff806281b90>",
		fillcolor=springgreen,
		label="334:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"334:IF" -> "337:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=334];
	"335:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff806281b50>",
		fillcolor=firebrick,
		label="335:NS
TxDone <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff806281b50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"334:IF" -> "335:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=334];
	"353:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff80629c4d0>",
		fillcolor=turquoise,
		label="353:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"350:IF" -> "353:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=350];
	"351:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff80629c410>",
		fillcolor=firebrick,
		label="351:NS
TxRetry <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff80629c410>]",
		style=filled,
		typ=NonblockingSubstitution];
	"350:IF" -> "351:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=350];
	"457:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff8065afed0>",
		fillcolor=turquoise,
		label="457:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"457:BL" -> "458:IF"	 [cond="[]",
		lineno=None];
	"txstatem1.328:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff805e09d90>",
		fillcolor=springgreen,
		label="txstatem1.328:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"txstatem1.327:BL" -> "txstatem1.328:IF"	 [cond="[]",
		lineno=None];
	"354:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff80629c7d0>",
		fillcolor=springgreen,
		label="354:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"353:BL" -> "354:IF"	 [cond="[]",
		lineno=None];
	"516:AS" -> "txcrc.174:AS";
	"516:AS" -> "txcrc.163:AS";
	"516:AS" -> "txcrc.168:AS";
	"516:AS" -> "txcrc.155:AS";
	"516:AS" -> "txcrc.172:AS";
	"516:AS" -> "txcrc.157:AS";
	"516:AS" -> "txcrc.152:AS";
	"516:AS" -> "txcrc.149:AS";
	"516:AS" -> "txcrc.160:AS";
	"516:AS" -> "txcrc.158:AS";
	"516:AS" -> "txcrc.162:AS";
	"516:AS" -> "txcrc.154:AS";
	"516:AS" -> "txcrc.150:AS";
	"516:AS" -> "txcrc.151:AS";
	"516:AS" -> "txcrc.169:AS";
	"516:AS" -> "txcrc.145:AS";
	"516:AS" -> "txcrc.159:AS";
	"516:AS" -> "txcrc.167:AS";
	"516:AS" -> "txcrc.161:AS";
	"516:AS" -> "txcrc.148:AS";
	"516:AS" -> "txcrc.153:AS";
	"516:AS" -> "txcrc.146:AS";
	"516:AS" -> "txcrc.164:AS";
	"516:AS" -> "txcrc.170:AS";
	"516:AS" -> "txcrc.147:AS";
	"516:AS" -> "txcrc.156:AS";
	"516:AS" -> "txcrc.173:AS";
	"516:AS" -> "txcrc.171:AS";
	"364:AL" -> "365:BL"	 [cond="[]",
		lineno=None];
	"txstatem1.293:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e17250>",
		fillcolor=firebrick,
		label="txstatem1.293:NS
StatePAD <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e17250>]",
		style=filled,
		typ=NonblockingSubstitution];
	"txstatem1.292:IF" -> "txstatem1.293:NS"	 [cond="['StartFCS', 'StartJam']",
		label="(StartFCS | StartJam)",
		lineno=292];
	"txstatem1.295:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff805e17190>",
		fillcolor=springgreen,
		label="txstatem1.295:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"txstatem1.292:IF" -> "txstatem1.295:IF"	 [cond="['StartFCS', 'StartJam']",
		label="!((StartFCS | StartJam))",
		lineno=292];
	"txstatem1.275:NS" -> "txstatem1.Leaf_254:AL"	 [cond="[]",
		lineno=None];
	"txstatem1.280:IF" -> "txstatem1.283:IF"	 [cond="['StartDefer', 'StartPreamble']",
		label="!((StartDefer | StartPreamble))",
		lineno=280];
	"txstatem1.280:IF" -> "txstatem1.281:NS"	 [cond="['StartDefer', 'StartPreamble']",
		label="(StartDefer | StartPreamble)",
		lineno=280];
	"random1.174:IF" -> "random1.175:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=174];
	"random1.177:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff80672c390>",
		fillcolor=turquoise,
		label="random1.177:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"random1.174:IF" -> "random1.177:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=174];
	"257:AS" -> "465:AS";
	"257:AS" -> "264:AS";
	"257:AS" -> "262:AS";
	"257:AS" -> "446:AL";
	"257:AS" -> "270:AS";
	"257:AS" -> "380:AL";
	"461:NS" -> "Leaf_456:AL"	 [cond="[]",
		lineno=None];
	"random1.Leaf_172:AL" -> "random1.186:AS";
	"random1.Leaf_172:AL" -> "random1.184:AS";
	"306:AL" -> "307:BL"	 [cond="[]",
		lineno=None];
	"txstatem1.305:NS" -> "txstatem1.Leaf_254:AL"	 [cond="[]",
		lineno=None];
	"txcrc.184:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff805bd9b50>",
		fillcolor=springgreen,
		label="txcrc.184:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"txcrc.184:IF" -> "txcrc.185:NS"	 [cond="['Initialize']",
		label=Initialize,
		lineno=184];
	"txcrc.184:IF" -> "txcrc.187:NS"	 [cond="['Initialize']",
		label="!(Initialize)",
		lineno=184];
	"281:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8066cf890>",
		fillcolor=firebrick,
		label="281:NS
StopExcessiveDeferOccured <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8066cf890>]",
		style=filled,
		typ=NonblockingSubstitution];
	"280:IF" -> "281:NS"	 [cond="['TxStartFrm']",
		label="(~TxStartFrm)",
		lineno=280];
	"283:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff8066cfa90>",
		fillcolor=springgreen,
		label="283:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"280:IF" -> "283:IF"	 [cond="['TxStartFrm']",
		label="!((~TxStartFrm))",
		lineno=280];
	"txstatem1.215:AS" -> "txcounters1.195:AS";
	"txstatem1.215:AS" -> "txstatem1.254:AL";
	"470:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff8065adc90>",
		fillcolor=turquoise,
		label="470:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"469:AL" -> "470:BL"	 [cond="[]",
		lineno=None];
	"448:IF" -> "451:NS"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=448];
	"449:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8065afa90>",
		fillcolor=firebrick,
		label="449:NS
MTxErr <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8065afa90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"448:IF" -> "449:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=448];
	"Leaf_290:AL" -> "264:AS";
	"Leaf_290:AL" -> "266:AS";
	"Leaf_290:AL" -> "262:AS";
	"Leaf_290:AL" -> "380:AL";
	"random1.162:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8069c9610>",
		def_var="['Random']",
		fillcolor=deepskyblue,
		label="random1.162:AS
Random[2] = (RetryCnt > 2)? x[2] : 1'b0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RetryCnt', 'x']"];
	"random1.162:AS" -> "random1.172:AL";
	"367:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff80629ccd0>",
		fillcolor=firebrick,
		label="367:NS
TxAbort <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff80629ccd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_364:AL"	 [def_var="['TxAbort']",
		label="Leaf_364:AL"];
	"367:NS" -> "Leaf_364:AL"	 [cond="[]",
		lineno=None];
	"259:AS" -> "465:AS";
	"259:AS" -> "446:AL";
	"259:AS" -> "270:AS";
	"259:AS" -> "380:AL";
	"random1.167:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8066ea450>",
		def_var="['Random']",
		fillcolor=deepskyblue,
		label="random1.167:AS
Random[7] = (RetryCnt > 7)? x[7] : 1'b0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RetryCnt', 'x']"];
	"random1.167:AS" -> "random1.172:AL";
	"270:AS" -> "364:AL";
	"txcounters1.238:NS" -> "txcounters1.Leaf_231:AL"	 [cond="[]",
		lineno=None];
	"txcrc.146:AS" -> "txcrc.179:AL";
	"477:BL" -> "Leaf_469:AL"	 [cond="[]",
		lineno=None];
	"random1.168:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8066ea510>",
		def_var="['Random']",
		fillcolor=deepskyblue,
		label="random1.168:AS
Random[8] = (RetryCnt > 8)? x[8] : 1'b0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RetryCnt', 'x']"];
	"random1.168:AS" -> "random1.172:AL";
	"txcounters1.231:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff82753a0d0>",
		clk_sens=False,
		fillcolor=gold,
		label="txcounters1.231:AL",
		sens="['MTxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'ByteCnt', 'IncrementByteCnt', 'ResetByteCnt']"];
	"txcounters1.227:AS" -> "txcounters1.231:AL";
	"txstatem1.287:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e17d50>",
		fillcolor=firebrick,
		label="txstatem1.287:NS
StatePreamble <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e17d50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"txstatem1.287:NS" -> "txstatem1.Leaf_254:AL"	 [cond="[]",
		lineno=None];
	"txstatem1.278:NS" -> "txstatem1.Leaf_254:AL"	 [cond="[]",
		lineno=None];
	"436:AL" -> "437:BL"	 [cond="[]",
		lineno=None];
	"322:AL" -> "323:BL"	 [cond="[]",
		lineno=None];
	"txcounters1.262:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805bf8050>",
		fillcolor=firebrick,
		label="txcounters1.262:NS
DlyCrcCnt <= DlyCrcCnt + 3'd1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805bf8050>]",
		style=filled,
		typ=NonblockingSubstitution];
	"txcounters1.262:NS" -> "txcounters1.Leaf_252:AL"	 [cond="[]",
		lineno=None];
	"333:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff806281990>",
		fillcolor=turquoise,
		label="333:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"333:BL" -> "334:IF"	 [cond="[]",
		lineno=None];
	"348:AL" -> "349:BL"	 [cond="[]",
		lineno=None];
	"txcounters1.231:AL" -> "txcounters1.232:BL"	 [cond="[]",
		lineno=None];
	"random1.150:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff805bf8650>",
		clk_sens=False,
		fillcolor=gold,
		label="random1.150:AL",
		sens="['MTxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'x', 'Feedback']"];
	"random1.150:AL" -> "random1.151:BL"	 [cond="[]",
		lineno=None];
	"txcounters1.191:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff82752c450>",
		def_var="['IncrementNibCnt']",
		fillcolor=deepskyblue,
		label="txcounters1.191:AS
IncrementNibCnt = StateIPG | StatePreamble | |StateData | StatePAD | StateFCS | StateJam | StateBackOff | StateDefer & ~\
ExcessiveDefer & TxStartFrm;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StateIPG', 'StatePreamble', 'StateData', 'StatePAD', 'StateFCS', 'StateJam', 'StateBackOff', 'StateDefer', 'ExcessiveDefer', '\
TxStartFrm']"];
	"txcounters1.191:AS" -> "txcounters1.199:AL";
	"470:BL" -> "471:IF"	 [cond="[]",
		lineno=None];
	"355:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff80629c790>",
		fillcolor=firebrick,
		label="355:NS
TxRetry <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff80629c790>]",
		style=filled,
		typ=NonblockingSubstitution];
	"354:IF" -> "355:NS"	 [cond="['TxStartFrm', 'StatusLatch']",
		label="(TxStartFrm & ~StatusLatch)",
		lineno=354];
	"357:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff80629c910>",
		fillcolor=springgreen,
		label="357:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"354:IF" -> "357:IF"	 [cond="['TxStartFrm', 'StatusLatch']",
		label="!((TxStartFrm & ~StatusLatch))",
		lineno=354];
	"382:IF" -> "385:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=382];
	"382:IF" -> "383:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=382];
	"txcrc.164:AS" -> "txcrc.179:AL";
	"txcounters1.254:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff8275224d0>",
		fillcolor=springgreen,
		label="txcounters1.254:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"txcounters1.254:IF" -> "txcounters1.255:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=254];
	"txcounters1.257:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff827522550>",
		fillcolor=turquoise,
		label="txcounters1.257:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"txcounters1.254:IF" -> "txcounters1.257:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=254];
	"txcounters1.Leaf_231:AL" -> "290:AL";
	"txcounters1.Leaf_231:AL" -> "txcounters1.246:AS";
	"txcounters1.Leaf_231:AL" -> "txcounters1.231:AL";
	"txcounters1.248:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff827522050>",
		def_var="['ByteCntMax']",
		fillcolor=deepskyblue,
		label="txcounters1.248:AS
ByteCntMax = &ByteCnt[15:0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ByteCnt']"];
	"txcounters1.Leaf_231:AL" -> "txcounters1.248:AS";
	"txcrc.166:AS" -> "txcrc.179:AL";
	"txstatem1.256:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff806322c50>",
		fillcolor=springgreen,
		label="txstatem1.256:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"txstatem1.256:IF" -> "txstatem1.270:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=256];
	"txstatem1.256:IF" -> "txstatem1.257:BL"	 [cond="['Reset']",
		label=Reset,
		lineno=256];
	"456:AL" -> "457:BL"	 [cond="[]",
		lineno=None];
	"521:AS" -> "txcrc.174:AS";
	"521:AS" -> "txcrc.163:AS";
	"521:AS" -> "txcrc.168:AS";
	"521:AS" -> "txcrc.155:AS";
	"521:AS" -> "txcrc.172:AS";
	"521:AS" -> "txcrc.157:AS";
	"521:AS" -> "txcrc.152:AS";
	"521:AS" -> "txcrc.149:AS";
	"521:AS" -> "txcrc.160:AS";
	"521:AS" -> "txcrc.158:AS";
	"521:AS" -> "txcrc.162:AS";
	"521:AS" -> "txcrc.154:AS";
	"521:AS" -> "txcrc.150:AS";
	"521:AS" -> "txcrc.151:AS";
	"521:AS" -> "txcrc.169:AS";
	"521:AS" -> "txcrc.145:AS";
	"521:AS" -> "txcrc.159:AS";
	"521:AS" -> "txcrc.167:AS";
	"521:AS" -> "txcrc.161:AS";
	"521:AS" -> "txcrc.148:AS";
	"521:AS" -> "txcrc.153:AS";
	"521:AS" -> "txcrc.146:AS";
	"521:AS" -> "txcrc.164:AS";
	"521:AS" -> "txcrc.170:AS";
	"521:AS" -> "txcrc.147:AS";
	"521:AS" -> "txcrc.156:AS";
	"521:AS" -> "txcrc.173:AS";
	"521:AS" -> "txcrc.171:AS";
	"371:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff806294190>",
		fillcolor=firebrick,
		label="371:NS
TxAbort <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff806294190>]",
		style=filled,
		typ=NonblockingSubstitution];
	"371:NS" -> "Leaf_364:AL"	 [cond="[]",
		lineno=None];
	"txcounters1.204:BL" -> "txcounters1.205:IF"	 [cond="[]",
		lineno=None];
	"370:IF" -> "373:IF"	 [cond="['TxStartFrm', 'StatusLatch', 'ExcessiveDeferOccured']",
		label="!((TxStartFrm & ~StatusLatch & ~ExcessiveDeferOccured))",
		lineno=370];
	"370:IF" -> "371:NS"	 [cond="['TxStartFrm', 'StatusLatch', 'ExcessiveDeferOccured']",
		label="(TxStartFrm & ~StatusLatch & ~ExcessiveDeferOccured)",
		lineno=370];
	"316:NS" -> "Leaf_306:AL"	 [cond="[]",
		lineno=None];
	"358:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff80629ca50>",
		fillcolor=firebrick,
		label="358:NS
TxRetry <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff80629ca50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"358:NS" -> "Leaf_348:AL"	 [cond="[]",
		lineno=None];
	"txstatem1.234:AS" -> "txcounters1.195:AS";
	"txstatem1.234:AS" -> "txstatem1.254:AL";
	"txstatem1.320:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e09590>",
		fillcolor=firebrick,
		label="txstatem1.320:NS
StateDefer <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e09590>]",
		style=filled,
		typ=NonblockingSubstitution];
	"txstatem1.320:NS" -> "txstatem1.Leaf_254:AL"	 [cond="[]",
		lineno=None];
	"472:BL" -> "Leaf_469:AL"	 [cond="[]",
		lineno=None];
	"txstatem1.335:IF" -> "txstatem1.336:NS"	 [cond="['StatePreamble', 'FullD']",
		label="(StatePreamble | FullD)",
		lineno=335];
	"txcrc.170:AS" -> "txcrc.179:AL";
	"332:AL" -> "333:BL"	 [cond="[]",
		lineno=None];
	"txcounters1.253:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff8275222d0>",
		fillcolor=turquoise,
		label="txcounters1.253:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"txcounters1.253:BL" -> "txcounters1.254:IF"	 [cond="[]",
		lineno=None];
	"txstatem1.316:IF" -> "txstatem1.317:NS"	 [cond="['StartIPG']",
		label=StartIPG,
		lineno=316];
	"txstatem1.319:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff805e092d0>",
		fillcolor=springgreen,
		label="txstatem1.319:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"txstatem1.316:IF" -> "txstatem1.319:IF"	 [cond="['StartIPG']",
		label="!(StartIPG)",
		lineno=316];
	"449:NS" -> "Leaf_446:AL"	 [cond="[]",
		lineno=None];
	"341:IF" -> "342:NS"	 [cond="['StartTxDone']",
		label=StartTxDone,
		lineno=341];
	"409:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff80629fe90>",
		fillcolor=springgreen,
		label="409:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"409:IF" -> "410:BS"	 [cond="['StateFCS']",
		label=StateFCS,
		lineno=409];
	"409:IF" -> "412:IF"	 [cond="['StateFCS']",
		label="!(StateFCS)",
		lineno=409];
	"txstatem1.296:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e17590>",
		fillcolor=firebrick,
		label="txstatem1.296:NS
StatePAD <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff805e17590>]",
		style=filled,
		typ=NonblockingSubstitution];
	"txstatem1.296:NS" -> "txstatem1.Leaf_254:AL"	 [cond="[]",
		lineno=None];
	"Leaf_380:AL" -> "random1.163:AS";
	"Leaf_380:AL" -> "396:AS";
	"Leaf_380:AL" -> "random1.162:AS";
	"Leaf_380:AL" -> "random1.167:AS";
	"Leaf_380:AL" -> "random1.168:AS";
	"random1.161:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8066e4f50>",
		def_var="['Random']",
		fillcolor=deepskyblue,
		label="random1.161:AS
Random[1] = (RetryCnt > 1)? x[1] : 1'b0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RetryCnt', 'x']"];
	"Leaf_380:AL" -> "random1.161:AS";
	"random1.165:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8066e8790>",
		def_var="['Random']",
		fillcolor=deepskyblue,
		label="random1.165:AS
Random[5] = (RetryCnt > 5)? x[5] : 1'b0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RetryCnt', 'x']"];
	"Leaf_380:AL" -> "random1.165:AS";
	"random1.164:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8066e8650>",
		def_var="['Random']",
		fillcolor=deepskyblue,
		label="random1.164:AS
Random[4] = (RetryCnt > 4)? x[4] : 1'b0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RetryCnt', 'x']"];
	"Leaf_380:AL" -> "random1.164:AS";
	"Leaf_380:AL" -> "380:AL";
	"random1.169:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8066ea3d0>",
		def_var="['Random']",
		fillcolor=deepskyblue,
		label="random1.169:AS
Random[9] = (RetryCnt > 9)? x[9] : 1'b0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RetryCnt', 'x']"];
	"Leaf_380:AL" -> "random1.169:AS";
	"random1.166:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8066e8dd0>",
		def_var="['Random']",
		fillcolor=deepskyblue,
		label="random1.166:AS
Random[6] = (RetryCnt > 6)? x[6] : 1'b0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RetryCnt', 'x']"];
	"Leaf_380:AL" -> "random1.166:AS";
	"txstatem1.244:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff806323210>",
		clk_sens=False,
		fillcolor=gold,
		label="txstatem1.244:AL",
		sens="['TxStartFrm']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="[]"];
	"txstatem1.244:AL" -> "txstatem1.245:BL"	 [cond="[]",
		lineno=None];
	"txstatem1.223:AS" -> "txstatem1.254:AL";
	"txstatem1.223:AS" -> "322:AL";
	"random1.152:IF" -> "random1.153:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=152];
	"random1.155:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8066e4350>",
		fillcolor=firebrick,
		label="random1.155:NS
x[9:0] <= { x[8:0], Feedback };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8066e4350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"random1.152:IF" -> "random1.155:NS"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=152];
	"random1.158:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff8066e4a50>",
		def_var="['Feedback']",
		fillcolor=deepskyblue,
		label="random1.158:AS
Feedback = ~(x[2] ^ x[9]);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['x', 'x']"];
	"random1.158:AS" -> "random1.150:AL";
	"random1.178:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff80672cb50>",
		fillcolor=springgreen,
		label="random1.178:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"random1.179:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff80672c510>",
		fillcolor=firebrick,
		label="random1.179:NS
RandomLatched <= Random;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff80672c510>]",
		style=filled,
		typ=NonblockingSubstitution];
	"random1.178:IF" -> "random1.179:NS"	 [cond="['StateJam', 'StateJam_q']",
		label="(StateJam & StateJam_q)",
		lineno=178];
	"284:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8066cfb90>",
		fillcolor=firebrick,
		label="284:NS
StopExcessiveDeferOccured <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff8066cfb90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"284:NS" -> "Leaf_274:AL"	 [cond="[]",
		lineno=None];
	"txcounters1.221:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff82752d210>",
		def_var="['ExcessiveDefer']",
		fillcolor=deepskyblue,
		label="txcounters1.221:AS
ExcessiveDefer = (NibCnt[13:0] == 14'h17b7) & ~ExDfrEn;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['NibCnt', 'ExDfrEn']"];
	"txcounters1.221:AS" -> "txcounters1.195:AS";
	"txcounters1.221:AS" -> "txcounters1.191:AS";
	"txcounters1.221:AS" -> "253:AS";
	"335:NS" -> "Leaf_332:AL"	 [cond="[]",
		lineno=None];
	"txcrc.147:AS" -> "txcrc.179:AL";
	"355:NS" -> "Leaf_348:AL"	 [cond="[]",
		lineno=None];
	"random1.161:AS" -> "random1.172:AL";
	"txstatem1.Leaf_326:AL" -> "txstatem1.234:AS";
	"txstatem1.Leaf_326:AL" -> "txstatem1.217:AS";
	"366:IF" -> "369:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=366];
	"366:IF" -> "367:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=366];
	"random1.165:AS" -> "random1.172:AL";
	"random1.164:AS" -> "random1.172:AL";
	"276:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff8066cf590>",
		fillcolor=springgreen,
		label="276:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"276:IF" -> "279:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=276];
	"276:IF" -> "277:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=276];
	"416:IF" -> "419:BS"	 [cond="['NibCntEq15']",
		label="!(NibCntEq15)",
		lineno=416];
	"417:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff8065a3750>",
		fillcolor=cadetblue,
		label="417:BS
MTxD_d[3:0] = 4'hd;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff8065a3750>]",
		style=filled,
		typ=BlockingSubstitution];
	"416:IF" -> "417:BS"	 [cond="['NibCntEq15']",
		label=NibCntEq15,
		lineno=416];
	"txstatem1.319:IF" -> "txstatem1.320:NS"	 [cond="['StartDefer']",
		label=StartDefer,
		lineno=319];
	"txstatem1.299:NS" -> "txstatem1.Leaf_254:AL"	 [cond="[]",
		lineno=None];
	"txstatem1.217:AS" -> "txstatem1.254:AL";
	"txstatem1.255:BL" -> "txstatem1.256:IF"	 [cond="[]",
		lineno=None];
	"275:BL" -> "276:IF"	 [cond="[]",
		lineno=None];
	"351:NS" -> "Leaf_348:AL"	 [cond="[]",
		lineno=None];
	"431:NS" -> "Leaf_426:AL"	 [cond="[]",
		lineno=None];
	"380:AL" -> "381:BL"	 [cond="[]",
		lineno=None];
	"281:NS" -> "Leaf_274:AL"	 [cond="[]",
		lineno=None];
	"txcounters1.233:IF" -> "txcounters1.236:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=233];
	"txcounters1.233:IF" -> "txcounters1.234:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=233];
	"txstatem1.328:IF" -> "txstatem1.331:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=328];
	"txstatem1.328:IF" -> "txstatem1.329:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=328];
	"357:IF" -> "358:NS"	 [cond="['StartTxRetry']",
		label=StartTxRetry,
		lineno=357];
	"txcounters1.Leaf_252:AL" -> "523:AS";
	"txcounters1.Leaf_252:AL" -> "txcounters1.252:AL";
	"txcounters1.223:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff82752d9d0>",
		def_var="['IncrementByteCnt']",
		fillcolor=deepskyblue,
		label="txcounters1.223:AS
IncrementByteCnt = StateData[1] & ~ByteCntMax | StateBackOff & &NibCnt[6:0] | (StatePAD | StateFCS) & NibCnt[\
0] & ~ByteCntMax;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StateData', 'ByteCntMax', 'StateBackOff', 'NibCnt', 'StatePAD', 'StateFCS', 'NibCnt', 'ByteCntMax']"];
	"txcounters1.223:AS" -> "txcounters1.231:AL";
	"txcounters1.252:AL" -> "txcounters1.253:BL"	 [cond="[]",
		lineno=None];
	"random1.169:AS" -> "random1.172:AL";
	"txcounters1.206:NS" -> "txcounters1.Leaf_199:AL"	 [cond="[]",
		lineno=None];
	"txcounters1.Leaf_199:AL" -> "290:AL";
	"txcounters1.Leaf_199:AL" -> "txcounters1.199:AL";
	"txcounters1.Leaf_199:AL" -> "txcounters1.215:AS";
	"txcounters1.Leaf_199:AL" -> "txcounters1.221:AS";
	"txcounters1.Leaf_199:AL" -> "txcounters1.223:AS";
	"txcounters1.214:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff827521610>",
		def_var="['NibCntEq7']",
		fillcolor=deepskyblue,
		label="txcounters1.214:AS
NibCntEq7 = &NibCnt[2:0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['NibCnt']"];
	"txcounters1.Leaf_199:AL" -> "txcounters1.214:AS";
	"txcounters1.219:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff827521f10>",
		def_var="['ExcessiveDeferCnt']",
		fillcolor=deepskyblue,
		label="txcounters1.219:AS
ExcessiveDeferCnt = NibCnt[13:0] == 14'h17b7;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['NibCnt']"];
	"txcounters1.Leaf_199:AL" -> "txcounters1.219:AS";
	"txcounters1.217:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff827521cd0>",
		def_var="['NibbleMinFl']",
		fillcolor=deepskyblue,
		label="txcounters1.217:AS
NibbleMinFl = NibCnt >= (MinFL - 16'd4 << 1) - 1;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['NibCnt', 'MinFL']"];
	"txcounters1.Leaf_199:AL" -> "txcounters1.217:AS";
	"random1.177:BL" -> "random1.178:IF"	 [cond="[]",
		lineno=None];
	"313:NS" -> "Leaf_306:AL"	 [cond="[]",
		lineno=None];
	"txcounters1.214:AS" -> "255:AS";
	"txcounters1.214:AS" -> "txcounters1.195:AS";
	"txcounters1.214:AS" -> "380:AL";
	"439:NS" -> "Leaf_436:AL"	 [cond="[]",
		lineno=None];
	"random1.Leaf_150:AL" -> "random1.163:AS";
	"random1.Leaf_150:AL" -> "random1.160:AS";
	"random1.Leaf_150:AL" -> "random1.162:AS";
	"random1.Leaf_150:AL" -> "random1.167:AS";
	"random1.Leaf_150:AL" -> "random1.168:AS";
	"random1.Leaf_150:AL" -> "random1.150:AL";
	"random1.Leaf_150:AL" -> "random1.158:AS";
	"random1.Leaf_150:AL" -> "random1.161:AS";
	"random1.Leaf_150:AL" -> "random1.165:AS";
	"random1.Leaf_150:AL" -> "random1.164:AS";
	"random1.Leaf_150:AL" -> "random1.169:AS";
	"random1.Leaf_150:AL" -> "random1.166:AS";
	"283:IF" -> "284:NS"	 [cond="['ExcessiveDeferOccured']",
		label=ExcessiveDeferOccured,
		lineno=283];
	"random1.179:NS" -> "random1.Leaf_172:AL"	 [cond="[]",
		lineno=None];
	"txcounters1.208:IF" -> "txcounters1.209:NS"	 [cond="['IncrementNibCnt']",
		label=IncrementNibCnt,
		lineno=208];
	"txcounters1.240:IF" -> "txcounters1.241:NS"	 [cond="['IncrementByteCnt']",
		label=IncrementByteCnt,
		lineno=240];
	"txcrc.156:AS" -> "txcrc.179:AL";
	"txcrc.181:IF" -> "txcrc.182:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=181];
	"txcrc.181:IF" -> "txcrc.184:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=181];
	"txcrc.173:AS" -> "txcrc.179:AL";
	"txstatem1.286:IF" -> "txstatem1.289:IF"	 [cond="['StartData', 'StartJam']",
		label="!((StartData[0] | StartJam))",
		lineno=286];
	"txstatem1.286:IF" -> "txstatem1.287:NS"	 [cond="['StartData', 'StartJam']",
		label="(StartData[0] | StartJam)",
		lineno=286];
	"339:NS" -> "Leaf_332:AL"	 [cond="[]",
		lineno=None];
	"txcounters1.261:IF" -> "txcounters1.262:NS"	 [cond="['DlyCrcEn', 'StateSFD', 'StateData', 'DlyCrcCnt']",
		label="(DlyCrcEn & (StateSFD | StateData[1] & |DlyCrcCnt[2:0]))",
		lineno=261];
	"txstatem1.307:IF" -> "txstatem1.308:NS"	 [cond="['StartJam']",
		label=StartJam,
		lineno=307];
	"random1.155:NS" -> "random1.Leaf_150:AL"	 [cond="[]",
		lineno=None];
	"random1.172:AL" -> "random1.173:BL"	 [cond="[]",
		lineno=None];
	"txcounters1.217:AS" -> "255:AS";
	"253:AS" -> "465:AS";
	"253:AS" -> "274:AL";
	"253:AS" -> "364:AL";
	"253:AS" -> "306:AL";
	"253:AS" -> "270:AS";
	"253:AS" -> "380:AL";
	"txcounters1.257:BL" -> "txcounters1.258:IF"	 [cond="[]",
		lineno=None];
	"txstatem1.293:NS" -> "txstatem1.Leaf_254:AL"	 [cond="[]",
		lineno=None];
	"417:BS" -> "Leaf_400:AL"	 [cond="[]",
		lineno=None];
	"txstatem1.313:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff805e09050>",
		fillcolor=springgreen,
		label="txstatem1.313:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"txstatem1.313:IF" -> "txstatem1.314:NS"	 [cond="['StartBackoff']",
		label=StartBackoff,
		lineno=313];
	"txstatem1.310:IF" -> "txstatem1.311:NS"	 [cond="['StartDefer']",
		label=StartDefer,
		lineno=310];
	"txstatem1.310:IF" -> "txstatem1.313:IF"	 [cond="['StartDefer']",
		label="!(StartDefer)",
		lineno=310];
	"txcounters1.248:AS" -> "txcounters1.223:AS";
	"txstatem1.295:IF" -> "txstatem1.296:NS"	 [cond="['StartPAD']",
		label=StartPAD,
		lineno=295];
	"388:NS" -> "Leaf_380:AL"	 [cond="[]",
		lineno=None];
	"295:BL" -> "296:IF"	 [cond="[]",
		lineno=None];
	"random1.166:AS" -> "random1.172:AL";
	"txcrc.171:AS" -> "txcrc.179:AL";
	"406:IF" -> "407:BS"	 [cond="['StateData']",
		label="StateData[1]",
		lineno=406];
	"406:IF" -> "409:IF"	 [cond="['StateData']",
		label="!(StateData[1])",
		lineno=406];
	"519:AS" -> "txcrc.174:AS";
	"519:AS" -> "txcrc.163:AS";
	"519:AS" -> "txcrc.168:AS";
	"519:AS" -> "txcrc.155:AS";
	"519:AS" -> "txcrc.172:AS";
	"519:AS" -> "txcrc.157:AS";
	"519:AS" -> "txcrc.152:AS";
	"519:AS" -> "txcrc.149:AS";
	"519:AS" -> "txcrc.160:AS";
	"519:AS" -> "txcrc.158:AS";
	"519:AS" -> "txcrc.162:AS";
	"519:AS" -> "txcrc.154:AS";
	"519:AS" -> "txcrc.150:AS";
	"519:AS" -> "txcrc.151:AS";
	"519:AS" -> "txcrc.169:AS";
	"519:AS" -> "txcrc.145:AS";
	"519:AS" -> "txcrc.159:AS";
	"519:AS" -> "txcrc.167:AS";
	"519:AS" -> "txcrc.161:AS";
	"519:AS" -> "txcrc.148:AS";
	"519:AS" -> "txcrc.153:AS";
	"519:AS" -> "txcrc.146:AS";
	"519:AS" -> "txcrc.164:AS";
	"519:AS" -> "txcrc.170:AS";
	"519:AS" -> "txcrc.147:AS";
	"519:AS" -> "txcrc.156:AS";
	"519:AS" -> "txcrc.173:AS";
	"519:AS" -> "txcrc.171:AS";
	"299:IF" -> "300:NS"	 [cond="['StateIdle', 'StateIPG']",
		label="(StateIdle | StateIPG)",
		lineno=299];
	"309:NS" -> "Leaf_306:AL"	 [cond="[]",
		lineno=None];
	"374:NS" -> "Leaf_364:AL"	 [cond="[]",
		lineno=None];
}
