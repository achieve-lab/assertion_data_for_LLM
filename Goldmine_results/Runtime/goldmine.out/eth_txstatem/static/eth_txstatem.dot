strict digraph "" {
	StateJam -> StartDefer	 [weight=1.0];
	StateJam -> StartBackoff	 [weight=1.0];
	StateJam -> StateJam_q	 [weight=1.0];
	StartPAD -> StatePAD	 [weight=1.0];
	StateFCS -> StartJam	 [weight=1.0];
	TxStartFrm -> StartPreamble	 [weight=1.0];
	StartDefer -> StateJam	 [weight=2.0];
	StartDefer -> StateFCS	 [weight=2.0];
	StartDefer -> StateIdle	 [weight=2.0];
	StartDefer -> StateBackOff	 [weight=2.0];
	StartDefer -> StateIPG	 [weight=2.0];
	StartDefer -> StateDefer	 [weight=1.0];
	NibbleMinFl -> StartPAD	 [weight=1.0];
	NibbleMinFl -> StartFCS	 [weight=1.0];
	Pad -> StartPAD	 [weight=1.0];
	Pad -> StartFCS	 [weight=1.0];
	StartPreamble -> StateIdle	 [weight=2.0];
	StartPreamble -> StatePreamble	 [weight=1.0];
	IPGR2 -> StartDefer	 [weight=1.0];
	IPGR2 -> StartIdle	 [weight=1.0];
	TooBig -> StartDefer	 [weight=1.0];
	StartFCS -> StateFCS	 [weight=1.0];
	StartFCS -> StatePAD	 [weight=2.0];
	StateData -> StartPAD	 [weight=1.0];
	StateData -> StartFCS	 [weight=1.0];
	StateData -> StartJam	 [weight=1.0];
	StateData -> StartData	 [weight=2.0];
	TxEndFrm -> StartPAD	 [weight=1.0];
	TxEndFrm -> StartFCS	 [weight=1.0];
	TxEndFrm -> StartData	 [weight=1.0];
	StateIdle -> StartDefer	 [weight=1.0];
	StateIdle -> StartPreamble	 [weight=1.0];
	StateIdle -> DeferIndication	 [weight=1.0];
	StateIdle -> Rule1	 [weight=2.0];
	StateBackOff -> StartDefer	 [weight=1.0];
	StateBackOff -> Rule1	 [weight=2.0];
	NibCntEq15 -> StartJam	 [weight=1.0];
	NibCntEq15 -> StartData	 [weight=1.0];
	StartJam -> StateJam	 [weight=1.0];
	StartJam -> StateFCS	 [weight=2.0];
	StartJam -> StatePreamble	 [weight=2.0];
	StartJam -> StatePAD	 [weight=2.0];
	UnderRun -> StartJam	 [weight=1.0];
	NoBckof -> StartDefer	 [weight=1.0];
	NoBckof -> StartBackoff	 [weight=1.0];
	CrcEn -> StartFCS	 [weight=1.0];
	StatePreamble -> StartJam	 [weight=1.0];
	StatePreamble -> StartData	 [weight=1.0];
	StatePreamble -> Rule1	 [weight=1.0];
	StatePAD -> StartFCS	 [weight=1.0];
	StatePAD -> StartJam	 [weight=1.0];
	RandomEqByteCnt -> StartDefer	 [weight=1.0];
	CarrierSense -> StartDefer	 [weight=1.0];
	CarrierSense -> StartPreamble	 [weight=1.0];
	CarrierSense -> DeferIndication	 [weight=1.0];
	CarrierSense -> StartIPG	 [weight=1.0];
	StartIdle -> StateIdle	 [weight=1.0];
	StartIdle -> StateIPG	 [weight=2.0];
	ExcessiveDefer -> StartIPG	 [weight=1.0];
	Reset -> StateJam	 [weight=3.0];
	Reset -> StateFCS	 [weight=3.0];
	Reset -> StateData	 [weight=17.0];
	Reset -> StateIdle	 [weight=3.0];
	Reset -> StateBackOff	 [weight=3.0];
	Reset -> StatePreamble	 [weight=3.0];
	Reset -> StatePAD	 [weight=3.0];
	Reset -> StateIPG	 [weight=3.0];
	Reset -> Rule1	 [weight=3.0];
	Reset -> StateDefer	 [weight=3.0];
	Reset -> StateJam_q	 [weight=17.0];
	TxUnderRun -> StartDefer	 [weight=1.0];
	TxUnderRun -> StartData	 [weight=1.0];
	RetryMax -> StartDefer	 [weight=1.0];
	RetryMax -> StartBackoff	 [weight=1.0];
	NibCntEq7 -> StartDefer	 [weight=1.0];
	NibCntEq7 -> StartBackoff	 [weight=1.0];
	NibCnt -> StartDefer	 [weight=1.0];
	NibCnt -> StartIdle	 [weight=1.0];
	MaxFrame -> StartData	 [weight=1.0];
	StateIPG -> StartDefer	 [weight=1.0];
	StateIPG -> StartIdle	 [weight=1.0];
	RandomEq0 -> StartDefer	 [weight=1.0];
	RandomEq0 -> StartBackoff	 [weight=1.0];
	StartData -> StateData	 [weight=1.0];
	StartData -> StatePreamble	 [weight=2.0];
	StartBackoff -> StateJam	 [weight=2.0];
	StartBackoff -> StateBackOff	 [weight=1.0];
	StartIPG -> StateIPG	 [weight=1.0];
	StartIPG -> StateDefer	 [weight=2.0];
	ColWindow -> StartDefer	 [weight=1.0];
	ColWindow -> StartBackoff	 [weight=1.0];
	IPGT -> StartIdle	 [weight=1.0];
	Rule1 -> StartDefer	 [weight=1.0];
	Rule1 -> StartIdle	 [weight=1.0];
	Collision -> StartPAD	 [weight=1.0];
	Collision -> StartFCS	 [weight=1.0];
	Collision -> StartJam	 [weight=1.0];
	Collision -> StartData	 [weight=2.0];
	StateDefer -> StartIPG	 [weight=1.0];
	FullD -> Rule1	 [weight=1.0];
	IPGR1 -> StartDefer	 [weight=1.0];
	StartTxDone -> StartDefer	 [weight=1.0];
	StateTraffic;
}
