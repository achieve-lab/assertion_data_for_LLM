digraph "" {
	data_out_shift -> data_out	 [weight=1.0];
	data_out_shift -> mdio_oe	 [weight=1.0];
	S_OP_CODE -> next	 [weight=2.0];
	S_RD_DATA -> next	 [weight=2.0];
	S_TA -> next	 [weight=1.0];
	data_out -> mdio_out	 [weight=1.0];
	data_out -> data_out	 [weight=1.0];
	data_rd -> data_out	 [weight=1.0];
	data_out_load -> data_out	 [weight=2.0];
	next -> present	 [weight=1.0];
	reg_addr_shift -> reg_addr	 [weight=1.0];
	phy_addr_done -> next	 [weight=1.0];
	data_in_shift -> data_in	 [weight=1.0];
	S_PREAMBLE -> next	 [weight=6.0];
	S_PREAMBLE -> present	 [weight=1.0];
	ta1_done -> mdio_out	 [weight=1.0];
	ta1_done -> data_out_load	 [weight=1.0];
	ta1_done -> next	 [weight=1.0];
	ta1_done -> mdio_oe	 [weight=1.0];
	pos_cnt -> phy_addr_done	 [weight=1.0];
	pos_cnt -> ta1_done	 [weight=1.0];
	pos_cnt -> pos_cnt	 [weight=1.0];
	pos_cnt -> op_code_done	 [weight=1.0];
	pos_cnt -> ta0_done	 [weight=1.0];
	pos_cnt -> data_done	 [weight=1.0];
	pos_cnt -> reg_addr_done	 [weight=1.0];
	op_is_wr -> next	 [weight=1.0];
	op_is_wr -> op_is_invalid	 [weight=1.0];
	op_is_rd -> mdio_out	 [weight=1.0];
	op_is_rd -> data_out_load	 [weight=1.0];
	op_is_rd -> next	 [weight=1.0];
	op_is_rd -> op_is_invalid	 [weight=1.0];
	op_is_rd -> mdio_oe	 [weight=1.0];
	preamble_match -> next	 [weight=1.0];
	preamble_match -> preamble_cnt	 [weight=1.0];
	S_WR_COMMIT -> next	 [weight=1.0];
	reg_addr -> data_addr	 [weight=1.0];
	reg_addr -> reg_addr	 [weight=1.0];
	op_code_done -> next	 [weight=1.0];
	phy_addr_match -> next	 [weight=2.0];
	phy_addr_match -> reg_addr_shift	 [weight=1.0];
	phy_addr_match -> pos_cnt_inc	 [weight=1.0];
	present -> data_out_shift	 [weight=1.0];
	present -> data_out_load	 [weight=1.0];
	present -> next	 [weight=11.0];
	present -> reg_addr_shift	 [weight=1.0];
	present -> data_in_shift	 [weight=1.0];
	present -> strobe_wr	 [weight=1.0];
	present -> op_code_shift	 [weight=1.0];
	present -> pos_cnt_inc	 [weight=6.0];
	present -> phy_addr_shift	 [weight=1.0];
	op_code_shift -> op_code	 [weight=1.0];
	reset -> data_out	 [weight=3.0];
	reset -> pos_cnt	 [weight=2.0];
	reset -> reg_addr	 [weight=2.0];
	reset -> present	 [weight=1.0];
	reset -> preamble_cnt	 [weight=2.0];
	reset -> data_in	 [weight=2.0];
	reset -> st	 [weight=2.0];
	reset -> phy_addr	 [weight=2.0];
	reset -> op_code	 [weight=2.0];
	S_PHY_ADDR -> next	 [weight=2.0];
	preamble_cnt -> preamble_match	 [weight=1.0];
	preamble_cnt -> preamble_cnt	 [weight=1.0];
	mdio -> next	 [weight=2.0];
	mdio -> st_match	 [weight=1.0];
	mdio -> reg_addr	 [weight=1.0];
	mdio -> preamble_cnt	 [weight=1.0];
	mdio -> data_in	 [weight=1.0];
	mdio -> st	 [weight=1.0];
	mdio -> phy_addr	 [weight=1.0];
	mdio -> op_code	 [weight=1.0];
	data_in -> data_wr	 [weight=1.0];
	data_in -> data_in	 [weight=1.0];
	st_latch -> st	 [weight=1.0];
	st -> st_match	 [weight=1.0];
	pos_cnt_inc -> pos_cnt	 [weight=1.0];
	data_done -> next	 [weight=2.0];
	phy_addr -> phy_addr_match	 [weight=1.0];
	phy_addr -> phy_addr	 [weight=1.0];
	reg_addr_done -> next	 [weight=1.0];
	S_WR_DATA -> next	 [weight=2.0];
	op_code -> op_is_wr	 [weight=1.0];
	op_code -> op_is_rd	 [weight=1.0];
	op_code -> op_code	 [weight=1.0];
	S_ST -> next	 [weight=1.0];
	S_REG_ADDR -> next	 [weight=2.0];
	phy_addr_shift -> phy_addr	 [weight=1.0];
}
