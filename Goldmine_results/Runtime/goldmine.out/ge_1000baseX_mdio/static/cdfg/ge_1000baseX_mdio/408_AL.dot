strict digraph "" {
	node [label="\N"];
	"455:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2608cf1d10>",
		fillcolor=cadetblue,
		label="455:BS
next = S_PREAMBLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2608cf1d10>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_408:AL"	 [def_var="['data_out_shift', 'pos_cnt_inc', 'data_out_load', 'phy_addr_shift', 'st_latch', 'next', 'reg_addr_shift', 'strobe_wr', 'data_in_\
shift', 'op_code_shift']",
		label="Leaf_408:AL"];
	"455:BS" -> "Leaf_408:AL"	 [cond="[]",
		lineno=None];
	"432:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f2608cf1e50>",
		fillcolor=lightcyan,
		label="432:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"433:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2608cf1ed0>",
		fillcolor=turquoise,
		label="433:BL
pos_cnt_inc = 1;
op_code_shift = 1;
next = (op_code_done)? S_PHY_ADDR : S_OP_CODE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2608cf1f10>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2608c7d090>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2608c7d210>]",
		style=filled,
		typ=Block];
	"432:CA" -> "433:BL"	 [cond="[]",
		lineno=None];
	"428:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2608c7d910>",
		fillcolor=turquoise,
		label="428:BL
next = (mdio)? S_OP_CODE : S_PREAMBLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2608c7d750>]",
		style=filled,
		typ=Block];
	"428:BL" -> "Leaf_408:AL"	 [cond="[]",
		lineno=None];
	"486:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f2608c7d950>",
		fillcolor=lightcyan,
		label="486:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"487:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2608c7d690>",
		fillcolor=turquoise,
		label="487:BL
strobe_wr = 1;
next = S_PREAMBLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2608c7d450>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2608c7d550>]",
		style=filled,
		typ=Block];
	"486:CA" -> "487:BL"	 [cond="[]",
		lineno=None];
	"446:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f2608c7d9d0>",
		fillcolor=lightcyan,
		label="446:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"447:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2608c7da90>",
		fillcolor=turquoise,
		label="447:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"446:CA" -> "447:BL"	 [cond="[]",
		lineno=None];
	"409:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2608c88ed0>",
		fillcolor=turquoise,
		label="409:BL
next = present;
pos_cnt_inc = 0;
st_latch = 0;
op_code_shift = 0;
phy_addr_shift = 0;
reg_addr_shift = 0;
data_in_shift = \
0;
data_out_load = 0;
data_out_shift = 0;
strobe_wr = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2608c880d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2608c88210>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2608c88350>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2608c88490>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2608c88610>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2608c88790>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2608c88910>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2608c88a90>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2608c88c10>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2608c88d90>]",
		style=filled,
		typ=Block];
	"420:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f2608c88f10>",
		fillcolor=linen,
		label="420:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"409:BL" -> "420:CS"	 [cond="[]",
		lineno=None];
	"459:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2608c97a90>",
		fillcolor=turquoise,
		label="459:BL
pos_cnt_inc = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2608c97ad0>]",
		style=filled,
		typ=Block];
	"462:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2608c97c50>",
		fillcolor=springgreen,
		label="462:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"459:BL" -> "462:IF"	 [cond="[]",
		lineno=None];
	"462:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2608c97c90>",
		fillcolor=turquoise,
		label="462:BL
data_out_load = op_is_rd;
next = (op_is_rd)? S_RD_DATA : 
       (op_is_wr)? S_WR_DATA : S_PREAMBLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2608c97cd0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2608c97e50>]",
		style=filled,
		typ=Block];
	"462:BL" -> "Leaf_408:AL"	 [cond="[]",
		lineno=None];
	"487:BL" -> "Leaf_408:AL"	 [cond="[]",
		lineno=None];
	"458:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f2608c97a10>",
		fillcolor=lightcyan,
		label="458:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"458:CA" -> "459:BL"	 [cond="[]",
		lineno=None];
	"408:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f2608ca0d10>",
		clk_sens=False,
		fillcolor=gold,
		label="408:AL",
		sens="['S_PHY_ADDR', 'op_is_wr', 'op_code_done', 'op_is_rd', 'preamble_match', 'S_WR_DATA', 'S_RD_DATA', 'mdio', 'S_WR_COMMIT', 'S_OP_\
CODE', 'data_done', 'S_ST', 'phy_addr_done', 'reg_addr_done', 'S_TA', 'S_PREAMBLE', 'S_REG_ADDR', 'present']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['S_PHY_ADDR', 'op_is_wr', 'op_code_done', 'op_is_rd', 'preamble_match', 'S_WR_DATA', 'S_RD_DATA', 'mdio', 'S_WR_COMMIT', 'S_OP_\
CODE', 'data_done', 'S_ST', 'phy_addr_done', 'reg_addr_done', 'S_TA', 'S_PREAMBLE', 'ta1_done', 'S_REG_ADDR', 'phy_addr_match', '\
present']"];
	"408:AL" -> "409:BL"	 [cond="[]",
		lineno=None];
	"433:BL" -> "Leaf_408:AL"	 [cond="[]",
		lineno=None];
	"448:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2608c7dad0>",
		fillcolor=turquoise,
		label="448:BL
pos_cnt_inc = 1;
reg_addr_shift = 1;
next = (reg_addr_done)? S_TA : S_REG_ADDR;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2608c7db10>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2608c7dc50>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2608c7ddd0>]",
		style=filled,
		typ=Block];
	"448:BL" -> "Leaf_408:AL"	 [cond="[]",
		lineno=None];
	"439:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f2608c97450>",
		fillcolor=lightcyan,
		label="439:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"440:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2608c974d0>",
		fillcolor=turquoise,
		label="440:BL
pos_cnt_inc = 1;
phy_addr_shift = 1;
next = (phy_addr_done)? S_REG_ADDR : S_PHY_ADDR;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2608c97510>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2608c97650>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2608c977d0>]",
		style=filled,
		typ=Block];
	"439:CA" -> "440:BL"	 [cond="[]",
		lineno=None];
	"479:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2608ca07d0>",
		fillcolor=turquoise,
		label="479:BL
pos_cnt_inc = 1;
data_out_shift = 1;
next = (data_done)? S_PREAMBLE : S_RD_DATA;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2608ca0810>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2608ca0990>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2608ca0b10>]",
		style=filled,
		typ=Block];
	"479:BL" -> "Leaf_408:AL"	 [cond="[]",
		lineno=None];
	"478:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f2608ca0750>",
		fillcolor=lightcyan,
		label="478:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"478:CA" -> "479:BL"	 [cond="[]",
		lineno=None];
	"422:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f2608c88fd0>",
		fillcolor=lightcyan,
		label="422:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"423:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2608c97090>",
		fillcolor=turquoise,
		label="423:BL
next = (preamble_match & ~mdio)? S_ST : S_PREAMBLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2608c970d0>]",
		style=filled,
		typ=Block];
	"422:CA" -> "423:BL"	 [cond="[]",
		lineno=None];
	"423:BL" -> "Leaf_408:AL"	 [cond="[]",
		lineno=None];
	"448:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2608c7da50>",
		fillcolor=springgreen,
		label="448:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"447:BL" -> "448:IF"	 [cond="[]",
		lineno=None];
	"440:BL" -> "Leaf_408:AL"	 [cond="[]",
		lineno=None];
	"420:CS" -> "432:CA"	 [cond="['present']",
		label=present,
		lineno=420];
	"420:CS" -> "486:CA"	 [cond="['present']",
		label=present,
		lineno=420];
	"420:CS" -> "446:CA"	 [cond="['present']",
		label=present,
		lineno=420];
	"420:CS" -> "458:CA"	 [cond="['present']",
		label=present,
		lineno=420];
	"420:CS" -> "439:CA"	 [cond="['present']",
		label=present,
		lineno=420];
	"420:CS" -> "478:CA"	 [cond="['present']",
		label=present,
		lineno=420];
	"420:CS" -> "422:CA"	 [cond="['present']",
		label=present,
		lineno=420];
	"427:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f2608c973d0>",
		fillcolor=lightcyan,
		label="427:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"420:CS" -> "427:CA"	 [cond="['present']",
		label=present,
		lineno=420];
	"471:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f2608ca0190>",
		fillcolor=lightcyan,
		label="471:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"420:CS" -> "471:CA"	 [cond="['present']",
		label=present,
		lineno=420];
	"427:CA" -> "428:BL"	 [cond="[]",
		lineno=None];
	"472:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2608ca0210>",
		fillcolor=turquoise,
		label="472:BL
pos_cnt_inc = 1;
data_in_shift = 1;
next = (data_done)? S_WR_COMMIT : S_WR_DATA;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2608ca0250>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2608ca03d0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2608ca0550>]",
		style=filled,
		typ=Block];
	"471:CA" -> "472:BL"	 [cond="[]",
		lineno=None];
	"448:IF" -> "455:BS"	 [cond="['phy_addr_match']",
		label="!(phy_addr_match)",
		lineno=448];
	"448:IF" -> "448:BL"	 [cond="['phy_addr_match']",
		label=phy_addr_match,
		lineno=448];
	"462:IF" -> "462:BL"	 [cond="['ta1_done']",
		label=ta1_done,
		lineno=462];
	"472:BL" -> "Leaf_408:AL"	 [cond="[]",
		lineno=None];
}
