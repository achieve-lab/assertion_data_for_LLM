strict digraph "compose( ,  )" {
	node [label="\N"];
	"308:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f25e7b06ed0>",
		clk_sens=True,
		fillcolor=gold,
		label="308:AL",
		sens="['mdc', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'mdio', 'st_latch']"];
	"309:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25e7b06fd0>",
		fillcolor=springgreen,
		label="309:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"308:AL" -> "309:IF"	 [cond="[]",
		lineno=None];
	"455:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f25e76f4450>",
		fillcolor=cadetblue,
		label="455:BS
next = S_PREAMBLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f25e76f4450>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_408:AL"	 [def_var="['data_out_shift', 'pos_cnt_inc', 'data_out_load', 'phy_addr_shift', 'st_latch', 'next', 'reg_addr_shift', 'strobe_wr', 'data_in_\
shift', 'op_code_shift']",
		label="Leaf_408:AL"];
	"455:BS" -> "Leaf_408:AL"	 [cond="[]",
		lineno=None];
	"Leaf_380:AL"	 [def_var="['data_out']",
		label="Leaf_380:AL"];
	"380:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f25e76da7d0>",
		clk_sens=True,
		fillcolor=gold,
		label="380:AL",
		sens="['mdc', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'data_out_load', 'data_out_shift', 'data_out', 'data_rd']"];
	"Leaf_380:AL" -> "380:AL";
	"393:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f25e76ba350>",
		def_var="['mdio_out']",
		fillcolor=deepskyblue,
		label="393:AS
mdio_out = (ta1_done & op_is_rd)? 1'b1 : data_out[15];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ta1_done', 'op_is_rd', 'data_out']"];
	"Leaf_380:AL" -> "393:AS";
	"278:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f25e7730210>",
		fillcolor=cadetblue,
		label="278:BS
preamble_cnt = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f25e7730210>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_276:AL"	 [def_var="['preamble_cnt']",
		label="Leaf_276:AL"];
	"278:BS" -> "Leaf_276:AL"	 [cond="[]",
		lineno=None];
	"446:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f25e76f8bd0>",
		fillcolor=lightcyan,
		label="446:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"447:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25e76f8c10>",
		fillcolor=turquoise,
		label="447:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"446:CA" -> "447:BL"	 [cond="[]",
		lineno=None];
	"Leaf_338:AL"	 [def_var="['phy_addr']",
		label="Leaf_338:AL"];
	"338:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f25e7b0b790>",
		clk_sens=True,
		fillcolor=gold,
		label="338:AL",
		sens="['mdc', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'phy_addr_shift', 'mdio', 'phy_addr']"];
	"Leaf_338:AL" -> "338:AL";
	"344:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f25e7b0bdd0>",
		def_var="['phy_addr_match']",
		fillcolor=deepskyblue,
		label="344:AS
phy_addr_match = phy_addr == PHY_ADDR;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['phy_addr']"];
	"Leaf_338:AL" -> "344:AS";
	"340:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25e7b0b8d0>",
		fillcolor=firebrick,
		label="340:NS
phy_addr <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25e7b0b8d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"340:NS" -> "Leaf_338:AL"	 [cond="[]",
		lineno=None];
	"295:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f25e7b061d0>",
		def_var="['op_code_done']",
		fillcolor=deepskyblue,
		label="295:AS
op_code_done = pos_cnt == 1;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pos_cnt']"];
	"408:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f25e76ba810>",
		clk_sens=False,
		fillcolor=gold,
		label="408:AL",
		sens="['S_PHY_ADDR', 'op_is_wr', 'op_code_done', 'op_is_rd', 'preamble_match', 'S_WR_DATA', 'S_RD_DATA', 'mdio', 'S_WR_COMMIT', 'S_OP_\
CODE', 'data_done', 'S_ST', 'phy_addr_done', 'reg_addr_done', 'S_TA', 'S_PREAMBLE', 'S_REG_ADDR', 'present']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['S_PHY_ADDR', 'op_is_wr', 'op_code_done', 'op_is_rd', 'preamble_match', 'S_WR_DATA', 'S_RD_DATA', 'mdio', 'S_WR_COMMIT', 'S_OP_\
CODE', 'data_done', 'S_ST', 'phy_addr_done', 'reg_addr_done', 'S_TA', 'S_PREAMBLE', 'ta1_done', 'S_REG_ADDR', 'phy_addr_match', '\
present']"];
	"295:AS" -> "408:AL";
	"322:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f25e7b09890>",
		clk_sens=True,
		fillcolor=gold,
		label="322:AL",
		sens="['mdc', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'op_code', 'mdio', 'op_code_shift']"];
	"323:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25e7b09a10>",
		fillcolor=springgreen,
		label="323:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"322:AL" -> "323:IF"	 [cond="[]",
		lineno=None];
	"312:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25e7b091d0>",
		fillcolor=springgreen,
		label="312:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"309:IF" -> "312:IF"	 [cond="['reset']",
		label="!(reset)",
		lineno=309];
	"310:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25e7b09050>",
		fillcolor=firebrick,
		label="310:NS
st <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25e7b09050>]",
		style=filled,
		typ=NonblockingSubstitution];
	"309:IF" -> "310:NS"	 [cond="['reset']",
		label=reset,
		lineno=309];
	"276:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f25e7730090>",
		clk_sens=True,
		fillcolor=gold,
		label="276:AL",
		sens="['mdc', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'preamble_match', 'mdio', 'preamble_cnt']"];
	"Leaf_276:AL" -> "276:AL";
	"274:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f25e7e02d50>",
		def_var="['preamble_match']",
		fillcolor=deepskyblue,
		label="274:AS
preamble_match = preamble_cnt == 31;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['preamble_cnt']"];
	"Leaf_276:AL" -> "274:AS";
	"314:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f25e7b09310>",
		def_var="['st_match']",
		fillcolor=deepskyblue,
		label="314:AS
st_match = ~st & mdio;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['st', 'mdio']"];
	"330:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f25e7b0b210>",
		def_var="['op_is_invalid']",
		fillcolor=deepskyblue,
		label="330:AS
op_is_invalid = ~op_is_rd & ~op_is_wr;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['op_is_rd', 'op_is_wr']"];
	"409:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25e76cd690>",
		fillcolor=turquoise,
		label="409:BL
next = present;
pos_cnt_inc = 0;
st_latch = 0;
op_code_shift = 0;
phy_addr_shift = 0;
reg_addr_shift = 0;
data_in_shift = \
0;
data_out_load = 0;
data_out_shift = 0;
strobe_wr = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f25e76ba950>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f25e76baa90>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f25e76babd0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f25e76bad50>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f25e76baed0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f25e76cd090>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f25e76cd210>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f25e76cd390>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f25e76cd510>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f25e76cd650>]",
		style=filled,
		typ=Block];
	"408:AL" -> "409:BL"	 [cond="[]",
		lineno=None];
	"433:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25e76f8290>",
		fillcolor=turquoise,
		label="433:BL
pos_cnt_inc = 1;
op_code_shift = 1;
next = (op_code_done)? S_PHY_ADDR : S_OP_CODE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f25e76f8110>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f25e76f82d0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f25e76f8510>]",
		style=filled,
		typ=Block];
	"433:BL" -> "Leaf_408:AL"	 [cond="[]",
		lineno=None];
	"448:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25e76f4050>",
		fillcolor=turquoise,
		label="448:BL
pos_cnt_inc = 1;
reg_addr_shift = 1;
next = (reg_addr_done)? S_TA : S_REG_ADDR;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f25e76f8e90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f25e76f4090>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f25e76f42d0>]",
		style=filled,
		typ=Block];
	"448:BL" -> "Leaf_408:AL"	 [cond="[]",
		lineno=None];
	"479:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25e76f7490>",
		fillcolor=turquoise,
		label="479:BL
pos_cnt_inc = 1;
data_out_shift = 1;
next = (data_done)? S_PREAMBLE : S_RD_DATA;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f25e76f7310>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f25e76f74d0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f25e76f76d0>]",
		style=filled,
		typ=Block];
	"479:BL" -> "Leaf_408:AL"	 [cond="[]",
		lineno=None];
	"422:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f25e76cd810>",
		fillcolor=lightcyan,
		label="422:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"423:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25e76cd990>",
		fillcolor=turquoise,
		label="423:BL
next = (preamble_match & ~mdio)? S_ST : S_PREAMBLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f25e76cdb10>]",
		style=filled,
		typ=Block];
	"422:CA" -> "423:BL"	 [cond="[]",
		lineno=None];
	"391:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f25e76ba090>",
		def_var="['mdio_oe']",
		fillcolor=deepskyblue,
		label="391:AS
mdio_oe = ta1_done & op_is_rd | data_out_shift;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ta1_done', 'op_is_rd', 'data_out_shift']"];
	"367:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25e76d9e90>",
		fillcolor=springgreen,
		label="367:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"370:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25e76da050>",
		fillcolor=springgreen,
		label="370:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"367:IF" -> "370:IF"	 [cond="['reset']",
		label="!(reset)",
		lineno=367];
	"368:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25e76d9e50>",
		fillcolor=firebrick,
		label="368:NS
data_in <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25e76d9e50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"367:IF" -> "368:NS"	 [cond="['reset']",
		label=reset,
		lineno=367];
	"324:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25e7b099d0>",
		fillcolor=firebrick,
		label="324:NS
op_code <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25e7b099d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"323:IF" -> "324:NS"	 [cond="['reset']",
		label=reset,
		lineno=323];
	"326:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25e7b09b90>",
		fillcolor=springgreen,
		label="326:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"323:IF" -> "326:IF"	 [cond="['reset']",
		label="!(reset)",
		lineno=323];
	"366:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f25e76d9d10>",
		clk_sens=True,
		fillcolor=gold,
		label="366:AL",
		sens="['mdc', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'mdio', 'data_in', 'data_in_shift']"];
	"366:AL" -> "367:IF"	 [cond="[]",
		lineno=None];
	"385:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25e76daf90>",
		fillcolor=firebrick,
		label="385:NS
data_out <= { data_out[14:0], 1'b0 };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25e76daf90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"385:NS" -> "Leaf_380:AL"	 [cond="[]",
		lineno=None];
	"401:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25e76ba710>",
		fillcolor=firebrick,
		label="401:NS
present <= (reset)? S_PREAMBLE : next;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25e76ba710>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_399:AL"	 [def_var="['present']",
		label="Leaf_399:AL"];
	"401:NS" -> "Leaf_399:AL"	 [cond="[]",
		lineno=None];
	"399:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f25e76ba390>",
		clk_sens=True,
		fillcolor=gold,
		label="399:AL",
		sens="['mdc', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'S_PREAMBLE', 'next']"];
	"399:AL" -> "401:NS"	 [cond="[]",
		lineno=None];
	"432:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f25e76cdf90>",
		fillcolor=lightcyan,
		label="432:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"432:CA" -> "433:BL"	 [cond="[]",
		lineno=None];
	"381:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25e76da950>",
		fillcolor=springgreen,
		label="381:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"384:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25e76dab90>",
		fillcolor=springgreen,
		label="384:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"381:IF" -> "384:IF"	 [cond="['reset']",
		label="!(reset)",
		lineno=381];
	"382:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25e76da910>",
		fillcolor=firebrick,
		label="382:NS
data_out <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25e76da910>]",
		style=filled,
		typ=NonblockingSubstitution];
	"381:IF" -> "382:NS"	 [cond="['reset']",
		label=reset,
		lineno=381];
	"Leaf_289:AL"	 [def_var="['pos_cnt']",
		label="Leaf_289:AL"];
	"Leaf_289:AL" -> "295:AS";
	"300:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f25e7b06b10>",
		def_var="['data_done']",
		fillcolor=deepskyblue,
		label="300:AS
data_done = pos_cnt == 29;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pos_cnt']"];
	"Leaf_289:AL" -> "300:AS";
	"298:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f25e7b06790>",
		def_var="['ta0_done']",
		fillcolor=deepskyblue,
		label="298:AS
ta0_done = pos_cnt == 12;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pos_cnt']"];
	"Leaf_289:AL" -> "298:AS";
	"297:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f25e7b065d0>",
		def_var="['reg_addr_done']",
		fillcolor=deepskyblue,
		label="297:AS
reg_addr_done = pos_cnt == 11;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pos_cnt']"];
	"Leaf_289:AL" -> "297:AS";
	"289:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f25e7730c10>",
		clk_sens=True,
		fillcolor=gold,
		label="289:AL",
		sens="['mdc', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'pos_cnt_inc', 'pos_cnt']"];
	"Leaf_289:AL" -> "289:AL";
	"296:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f25e7b063d0>",
		def_var="['phy_addr_done']",
		fillcolor=deepskyblue,
		label="296:AS
phy_addr_done = pos_cnt == 6;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pos_cnt']"];
	"Leaf_289:AL" -> "296:AS";
	"299:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f25e7b06950>",
		def_var="['ta1_done']",
		fillcolor=deepskyblue,
		label="299:AS
ta1_done = pos_cnt == 13;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pos_cnt']"];
	"Leaf_289:AL" -> "299:AS";
	"277:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25e77302d0>",
		fillcolor=springgreen,
		label="277:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"277:IF" -> "278:BS"	 [cond="['reset']",
		label=reset,
		lineno=277];
	"280:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25e77303d0>",
		fillcolor=firebrick,
		label="280:NS
preamble_cnt <= (mdio & ~preamble_match)? preamble_cnt + 1 : 
                (mdio & preamble_match)? preamble_cnt : 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25e77303d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"277:IF" -> "280:NS"	 [cond="['reset']",
		label="!(reset)",
		lineno=277];
	"Leaf_366:AL"	 [def_var="['data_in']",
		label="Leaf_366:AL"];
	"Leaf_366:AL" -> "366:AL";
	"372:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f25e76da2d0>",
		def_var="['data_wr']",
		fillcolor=deepskyblue,
		label="372:AS
data_wr = data_in;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['data_in']"];
	"Leaf_366:AL" -> "372:AS";
	"276:AL" -> "277:IF"	 [cond="[]",
		lineno=None];
	"385:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25e76dad90>",
		fillcolor=springgreen,
		label="385:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"385:IF" -> "385:NS"	 [cond="['data_out_shift']",
		label=data_out_shift,
		lineno=385];
	"300:AS" -> "408:AL";
	"459:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25e76f4610>",
		fillcolor=turquoise,
		label="459:BL
pos_cnt_inc = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f25e76f45d0>]",
		style=filled,
		typ=Block];
	"462:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25e76f4710>",
		fillcolor=springgreen,
		label="462:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"459:BL" -> "462:IF"	 [cond="[]",
		lineno=None];
	"326:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25e7b09d90>",
		fillcolor=firebrick,
		label="326:NS
op_code <= { op_code[0], mdio };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25e7b09d90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_322:AL"	 [def_var="['op_code']",
		label="Leaf_322:AL"];
	"326:NS" -> "Leaf_322:AL"	 [cond="[]",
		lineno=None];
	"342:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25e7b0bc90>",
		fillcolor=firebrick,
		label="342:NS
phy_addr <= { phy_addr[3:0], mdio };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25e7b0bc90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"342:NS" -> "Leaf_338:AL"	 [cond="[]",
		lineno=None];
	"356:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25e76d97d0>",
		fillcolor=firebrick,
		label="356:NS
reg_addr <= { reg_addr[3:0], mdio };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25e76d97d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_352:AL"	 [def_var="['reg_addr']",
		label="Leaf_352:AL"];
	"356:NS" -> "Leaf_352:AL"	 [cond="[]",
		lineno=None];
	"380:AL" -> "381:IF"	 [cond="[]",
		lineno=None];
	"439:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f25e76f85d0>",
		fillcolor=lightcyan,
		label="439:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"440:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25e76f8890>",
		fillcolor=turquoise,
		label="440:BL
pos_cnt_inc = 1;
phy_addr_shift = 1;
next = (phy_addr_done)? S_REG_ADDR : S_PHY_ADDR;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f25e76f8710>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f25e76f88d0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f25e76f8b10>]",
		style=filled,
		typ=Block];
	"439:CA" -> "440:BL"	 [cond="[]",
		lineno=None];
	"478:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f25e76f71d0>",
		fillcolor=lightcyan,
		label="478:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"478:CA" -> "479:BL"	 [cond="[]",
		lineno=None];
	"423:BL" -> "Leaf_408:AL"	 [cond="[]",
		lineno=None];
	"448:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25e76f4350>",
		fillcolor=springgreen,
		label="448:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"447:BL" -> "448:IF"	 [cond="[]",
		lineno=None];
	"440:BL" -> "Leaf_408:AL"	 [cond="[]",
		lineno=None];
	"420:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f25e76f7750>",
		fillcolor=linen,
		label="420:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"420:CS" -> "446:CA"	 [cond="['present']",
		label=present,
		lineno=420];
	"420:CS" -> "422:CA"	 [cond="['present']",
		label=present,
		lineno=420];
	"420:CS" -> "432:CA"	 [cond="['present']",
		label=present,
		lineno=420];
	"420:CS" -> "439:CA"	 [cond="['present']",
		label=present,
		lineno=420];
	"420:CS" -> "478:CA"	 [cond="['present']",
		label=present,
		lineno=420];
	"471:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f25e76f4c50>",
		fillcolor=lightcyan,
		label="471:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"420:CS" -> "471:CA"	 [cond="['present']",
		label=present,
		lineno=420];
	"486:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f25e76f7790>",
		fillcolor=lightcyan,
		label="486:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"420:CS" -> "486:CA"	 [cond="['present']",
		label=present,
		lineno=420];
	"458:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f25e76f4410>",
		fillcolor=lightcyan,
		label="458:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"420:CS" -> "458:CA"	 [cond="['present']",
		label=present,
		lineno=420];
	"427:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f25e76cdc90>",
		fillcolor=lightcyan,
		label="427:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"420:CS" -> "427:CA"	 [cond="['present']",
		label=present,
		lineno=420];
	"312:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25e7b092d0>",
		fillcolor=firebrick,
		label="312:NS
st <= mdio;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25e7b092d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"312:IF" -> "312:NS"	 [cond="['st_latch']",
		label=st_latch,
		lineno=312];
	"472:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25e76f4e90>",
		fillcolor=turquoise,
		label="472:BL
pos_cnt_inc = 1;
data_in_shift = 1;
next = (data_done)? S_WR_COMMIT : S_WR_DATA;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f25e76f4d50>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f25e76f4ed0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f25e76f7110>]",
		style=filled,
		typ=Block];
	"471:CA" -> "472:BL"	 [cond="[]",
		lineno=None];
	"448:IF" -> "455:BS"	 [cond="['phy_addr_match']",
		label="!(phy_addr_match)",
		lineno=448];
	"448:IF" -> "448:BL"	 [cond="['phy_addr_match']",
		label=phy_addr_match,
		lineno=448];
	"324:NS" -> "Leaf_322:AL"	 [cond="[]",
		lineno=None];
	"354:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25e76d9410>",
		fillcolor=firebrick,
		label="354:NS
reg_addr <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25e76d9410>]",
		style=filled,
		typ=NonblockingSubstitution];
	"354:NS" -> "Leaf_352:AL"	 [cond="[]",
		lineno=None];
	"339:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25e7b0b910>",
		fillcolor=springgreen,
		label="339:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"339:IF" -> "340:NS"	 [cond="['reset']",
		label=reset,
		lineno=339];
	"342:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25e7b0ba90>",
		fillcolor=springgreen,
		label="342:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"339:IF" -> "342:IF"	 [cond="['reset']",
		label="!(reset)",
		lineno=339];
	"Leaf_322:AL" -> "322:AL";
	"328:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f25e7b09f90>",
		def_var="['op_is_wr']",
		fillcolor=deepskyblue,
		label="328:AS
op_is_wr = op_code == 2'b01;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['op_code']"];
	"Leaf_322:AL" -> "328:AS";
	"280:NS" -> "Leaf_276:AL"	 [cond="[]",
		lineno=None];
	"428:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25e76cdd90>",
		fillcolor=turquoise,
		label="428:BL
next = (mdio)? S_OP_CODE : S_PREAMBLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f25e76cde90>]",
		style=filled,
		typ=Block];
	"428:BL" -> "Leaf_408:AL"	 [cond="[]",
		lineno=None];
	"487:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25e76f7950>",
		fillcolor=turquoise,
		label="487:BL
strobe_wr = 1;
next = S_PREAMBLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f25e76f78d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f25e76f7a50>]",
		style=filled,
		typ=Block];
	"486:CA" -> "487:BL"	 [cond="[]",
		lineno=None];
	"384:IF" -> "385:IF"	 [cond="['data_out_load']",
		label="!(data_out_load)",
		lineno=384];
	"384:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25e76dabd0>",
		fillcolor=firebrick,
		label="384:NS
data_out <= data_rd;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25e76dabd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"384:IF" -> "384:NS"	 [cond="['data_out_load']",
		label=data_out_load,
		lineno=384];
	"338:AL" -> "339:IF"	 [cond="[]",
		lineno=None];
	"356:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25e76d95d0>",
		fillcolor=springgreen,
		label="356:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"356:IF" -> "356:NS"	 [cond="['reg_addr_shift']",
		label=reg_addr_shift,
		lineno=356];
	"Leaf_308:AL"	 [def_var="['st']",
		label="Leaf_308:AL"];
	"310:NS" -> "Leaf_308:AL"	 [cond="[]",
		lineno=None];
	"342:IF" -> "342:NS"	 [cond="['phy_addr_shift']",
		label=phy_addr_shift,
		lineno=342];
	"291:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25e7730d50>",
		fillcolor=firebrick,
		label="291:NS
pos_cnt <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25e7730d50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"291:NS" -> "Leaf_289:AL"	 [cond="[]",
		lineno=None];
	"353:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25e76d9450>",
		fillcolor=springgreen,
		label="353:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"353:IF" -> "354:NS"	 [cond="['reset']",
		label=reset,
		lineno=353];
	"353:IF" -> "356:IF"	 [cond="['reset']",
		label="!(reset)",
		lineno=353];
	"462:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25e76f4950>",
		fillcolor=turquoise,
		label="462:BL
data_out_load = op_is_rd;
next = (op_is_rd)? S_RD_DATA : 
       (op_is_wr)? S_WR_DATA : S_PREAMBLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f25e76f48d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f25e76f4b10>]",
		style=filled,
		typ=Block];
	"462:BL" -> "Leaf_408:AL"	 [cond="[]",
		lineno=None];
	"370:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25e76da250>",
		fillcolor=firebrick,
		label="370:NS
data_in <= { data_in[14:0], mdio };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25e76da250>]",
		style=filled,
		typ=NonblockingSubstitution];
	"370:NS" -> "Leaf_366:AL"	 [cond="[]",
		lineno=None];
	"458:CA" -> "459:BL"	 [cond="[]",
		lineno=None];
	"352:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f25e76d92d0>",
		clk_sens=True,
		fillcolor=gold,
		label="352:AL",
		sens="['mdc', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'reg_addr', 'reg_addr_shift', 'mdio']"];
	"Leaf_352:AL" -> "352:AL";
	"358:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f25e76d9850>",
		def_var="['data_addr']",
		fillcolor=deepskyblue,
		label="358:AS
data_addr = reg_addr;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['reg_addr']"];
	"Leaf_352:AL" -> "358:AS";
	"384:NS" -> "Leaf_380:AL"	 [cond="[]",
		lineno=None];
	"352:AL" -> "353:IF"	 [cond="[]",
		lineno=None];
	"274:AS" -> "408:AL";
	"274:AS" -> "276:AL";
	"Leaf_399:AL" -> "408:AL";
	"427:CA" -> "428:BL"	 [cond="[]",
		lineno=None];
	"326:IF" -> "326:NS"	 [cond="['op_code_shift']",
		label=op_code_shift,
		lineno=326];
	"328:AS" -> "330:AS";
	"328:AS" -> "408:AL";
	"328:AS" -> "391:AS";
	"328:AS" -> "393:AS";
	"297:AS" -> "408:AL";
	"409:BL" -> "420:CS"	 [cond="[]",
		lineno=None];
	"382:NS" -> "Leaf_380:AL"	 [cond="[]",
		lineno=None];
	"344:AS" -> "408:AL";
	"290:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25e7730d10>",
		fillcolor=springgreen,
		label="290:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"289:AL" -> "290:IF"	 [cond="[]",
		lineno=None];
	"312:NS" -> "Leaf_308:AL"	 [cond="[]",
		lineno=None];
	"296:AS" -> "408:AL";
	"370:IF" -> "370:NS"	 [cond="['data_in_shift']",
		label=data_in_shift,
		lineno=370];
	"Leaf_308:AL" -> "314:AS";
	"487:BL" -> "Leaf_408:AL"	 [cond="[]",
		lineno=None];
	"290:IF" -> "291:NS"	 [cond="['reset']",
		label=reset,
		lineno=290];
	"293:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25e7730e90>",
		fillcolor=firebrick,
		label="293:NS
pos_cnt <= (pos_cnt_inc)? pos_cnt + 1 : 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25e7730e90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"290:IF" -> "293:NS"	 [cond="['reset']",
		label="!(reset)",
		lineno=290];
	"472:BL" -> "Leaf_408:AL"	 [cond="[]",
		lineno=None];
	"299:AS" -> "408:AL";
	"299:AS" -> "391:AS";
	"299:AS" -> "393:AS";
	"Leaf_408:AL" -> "308:AL";
	"Leaf_408:AL" -> "322:AL";
	"Leaf_408:AL" -> "391:AS";
	"Leaf_408:AL" -> "366:AL";
	"Leaf_408:AL" -> "399:AL";
	"Leaf_408:AL" -> "380:AL";
	"Leaf_408:AL" -> "338:AL";
	"Leaf_408:AL" -> "352:AL";
	"Leaf_408:AL" -> "289:AL";
	"368:NS" -> "Leaf_366:AL"	 [cond="[]",
		lineno=None];
	"462:IF" -> "462:BL"	 [cond="['ta1_done']",
		label=ta1_done,
		lineno=462];
	"293:NS" -> "Leaf_289:AL"	 [cond="[]",
		lineno=None];
}
