strict digraph "compose( ,  )" {
	node [label="\N"];
	"127:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f052b757510>",
		fillcolor=firebrick,
		label="127:NS
cnt128d_rd <= #1 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f052b757510>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_126:AL"	 [def_var="['cnt128d_rd']",
		label="Leaf_126:AL"];
	"127:NS" -> "Leaf_126:AL"	 [cond="[]",
		lineno=None];
	"103:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f052ba37f10>",
		def_var="['wr_DATA']",
		fillcolor=deepskyblue,
		label="103:AS
wr_DATA = { { 16 - N{ 1'b0 } }, inp_data };",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['inp_data']"];
	"121:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f052b750b90>",
		fillcolor=springgreen,
		label="121:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"121:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f052b750b50>",
		fillcolor=firebrick,
		label="121:NS
cnt128d_rd_valid <= #1 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f052b750b50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"121:IF" -> "121:NS"	 [cond="['rstn']",
		label="(!rstn)",
		lineno=121];
	"122:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f052b750f10>",
		fillcolor=springgreen,
		label="122:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"121:IF" -> "122:IF"	 [cond="['rstn']",
		label="!((!rstn))",
		lineno=121];
	"130:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f052b757c90>",
		def_var="['rd_ADDR']",
		fillcolor=deepskyblue,
		label="130:AS
rd_ADDR = { cnt128d_rd[6], cnt128d_rd[2:0], cnt128d_rd[5:3] };",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cnt128d_rd', 'cnt128d_rd', 'cnt128d_rd']"];
	"111:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f052b37d9d0>",
		fillcolor=firebrick,
		label="111:NS
indicator_1d <= #1 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f052b37d9d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_110:AL"	 [def_var="['indicator_1d']",
		label="Leaf_110:AL"];
	"111:NS" -> "Leaf_110:AL"	 [cond="[]",
		lineno=None];
	"100:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f052ba37990>",
		fillcolor=firebrick,
		label="100:NS
cnt128d_wr <= #1 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f052ba37990>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_99:AL"	 [def_var="['cnt128d_wr']",
		label="Leaf_99:AL"];
	"100:NS" -> "Leaf_99:AL"	 [cond="[]",
		lineno=None];
	"135:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f052b75b290>",
		fillcolor=springgreen,
		label="135:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"136:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f052b75b450>",
		fillcolor=firebrick,
		label="136:NS
mem_valid <= #1 cnt128d_rd_valid;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f052b75b450>]",
		style=filled,
		typ=NonblockingSubstitution];
	"135:IF" -> "136:NS"	 [cond="['rstn']",
		label="!((!rstn))",
		lineno=135];
	"135:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f052b75b210>",
		fillcolor=firebrick,
		label="135:NS
mem_valid <= #1 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f052b75b210>]",
		style=filled,
		typ=NonblockingSubstitution];
	"135:IF" -> "135:NS"	 [cond="['rstn']",
		label="(!rstn)",
		lineno=135];
	"128:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f052b757710>",
		fillcolor=springgreen,
		label="128:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"128:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f052b757910>",
		fillcolor=firebrick,
		label="128:NS
cnt128d_rd <= #1 cnt128d_rd + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f052b757910>]",
		style=filled,
		typ=NonblockingSubstitution];
	"128:IF" -> "128:NS"	 [cond="['cnt128d_rd_valid']",
		label=cnt128d_rd_valid,
		lineno=128];
	"101:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f052ba37b50>",
		fillcolor=springgreen,
		label="101:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"101:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f052ba37d50>",
		fillcolor=firebrick,
		label="101:NS
cnt128d_wr <= #1 cnt128d_wr + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f052ba37d50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"101:IF" -> "101:NS"	 [cond="['inp_valid']",
		label=inp_valid,
		lineno=101];
	"117:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f052b750390>",
		def_var="['cnt128d_rd_valid_start']",
		fillcolor=deepskyblue,
		label="117:AS
cnt128d_rd_valid_start = indicator_pos_edge | indicator_neg_edge;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['indicator_pos_edge', 'indicator_neg_edge']"];
	"120:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f052b750950>",
		clk_sens=True,
		fillcolor=gold,
		label="120:AL",
		sens="['sclk', 'rstn']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rstn', 'cnt128d_rd_valid_stop', 'cnt128d_rd_valid_start']"];
	"117:AS" -> "120:AL";
	"Leaf_134:AL"	 [def_var="['mem_valid']",
		label="Leaf_134:AL"];
	"136:NS" -> "Leaf_134:AL"	 [cond="[]",
		lineno=None];
	"122:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f052b750ed0>",
		fillcolor=firebrick,
		label="122:NS
cnt128d_rd_valid <= #1 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f052b750ed0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_120:AL"	 [def_var="['cnt128d_rd_valid']",
		label="Leaf_120:AL"];
	"122:NS" -> "Leaf_120:AL"	 [cond="[]",
		lineno=None];
	"121:NS" -> "Leaf_120:AL"	 [cond="[]",
		lineno=None];
	"109:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f052b37d590>",
		def_var="['indicator']",
		fillcolor=deepskyblue,
		label="109:AS
indicator = cnt128d_wr[6];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cnt128d_wr']"];
	"Leaf_99:AL" -> "109:AS";
	"104:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f052b37d0d0>",
		def_var="['wr_ADDR']",
		fillcolor=deepskyblue,
		label="104:AS
wr_ADDR = cnt128d_wr;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cnt128d_wr']"];
	"Leaf_99:AL" -> "104:AS";
	"99:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f052ba377d0>",
		clk_sens=True,
		fillcolor=gold,
		label="99:AL",
		sens="['sclk', 'rstn']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['inp_valid', 'rstn', 'cnt128d_wr']"];
	"Leaf_99:AL" -> "99:AL";
	"118:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f052b750710>",
		def_var="['cnt128d_rd_valid_stop']",
		fillcolor=deepskyblue,
		label="118:AS
cnt128d_rd_valid_stop = (cnt128d_rd[5:0] == 63)? 1'b1 : 1'b0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cnt128d_rd']"];
	"118:AS" -> "120:AL";
	"114:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f052b37de50>",
		def_var="['indicator_pos_edge']",
		fillcolor=deepskyblue,
		label="114:AS
indicator_pos_edge = indicator & ~indicator_1d;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['indicator', 'indicator_1d']"];
	"114:AS" -> "117:AS";
	"Leaf_126:AL" -> "130:AS";
	"Leaf_126:AL" -> "118:AS";
	"126:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f052b757350>",
		clk_sens=True,
		fillcolor=gold,
		label="126:AL",
		sens="['sclk', 'rstn']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['cnt128d_rd_valid', 'rstn', 'cnt128d_rd']"];
	"Leaf_126:AL" -> "126:AL";
	"112:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f052b37dc10>",
		fillcolor=firebrick,
		label="112:NS
indicator_1d <= #1 indicator;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f052b37dc10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"112:NS" -> "Leaf_110:AL"	 [cond="[]",
		lineno=None];
	"123:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f052b757150>",
		fillcolor=springgreen,
		label="123:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"123:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f052b757290>",
		fillcolor=firebrick,
		label="123:NS
cnt128d_rd_valid <= #1 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f052b757290>]",
		style=filled,
		typ=NonblockingSubstitution];
	"123:IF" -> "123:NS"	 [cond="['cnt128d_rd_valid_stop']",
		label=cnt128d_rd_valid_stop,
		lineno=123];
	"109:AS" -> "114:AS";
	"115:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f052b750050>",
		def_var="['indicator_neg_edge']",
		fillcolor=deepskyblue,
		label="115:AS
indicator_neg_edge = ~indicator & indicator_1d;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['indicator', 'indicator_1d']"];
	"109:AS" -> "115:AS";
	"110:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f052b37d7d0>",
		clk_sens=True,
		fillcolor=gold,
		label="110:AL",
		sens="['sclk', 'rstn']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['indicator', 'rstn']"];
	"109:AS" -> "110:AL";
	"106:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f052b37d3d0>",
		def_var="['wr_WEN']",
		fillcolor=deepskyblue,
		label="106:AS
wr_WEN = ~inp_valid;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['inp_valid']"];
	"100:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f052ba379d0>",
		fillcolor=springgreen,
		label="100:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"100:IF" -> "100:NS"	 [cond="['rstn']",
		label="(!rstn)",
		lineno=100];
	"100:IF" -> "101:IF"	 [cond="['rstn']",
		label="!((!rstn))",
		lineno=100];
	"115:AS" -> "117:AS";
	"138:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f052b75b650>",
		def_var="['mem_data']",
		fillcolor=deepskyblue,
		label="138:AS
mem_data = rd_DATA[7:0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['rd_DATA']"];
	"127:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f052b757550>",
		fillcolor=springgreen,
		label="127:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"127:IF" -> "127:NS"	 [cond="['rstn']",
		label="(!rstn)",
		lineno=127];
	"127:IF" -> "128:IF"	 [cond="['rstn']",
		label="!((!rstn))",
		lineno=127];
	"120:AL" -> "121:IF"	 [cond="[]",
		lineno=None];
	"135:NS" -> "Leaf_134:AL"	 [cond="[]",
		lineno=None];
	"131:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f052b757dd0>",
		def_var="['rd_CSN']",
		fillcolor=deepskyblue,
		label="131:AS
rd_CSN = ~cnt128d_rd_valid;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cnt128d_rd_valid']"];
	"111:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f052b37dad0>",
		fillcolor=springgreen,
		label="111:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"111:IF" -> "111:NS"	 [cond="['rstn']",
		label="(!rstn)",
		lineno=111];
	"111:IF" -> "112:NS"	 [cond="['rstn']",
		label="!((!rstn))",
		lineno=111];
	"101:NS" -> "Leaf_99:AL"	 [cond="[]",
		lineno=None];
	"123:NS" -> "Leaf_120:AL"	 [cond="[]",
		lineno=None];
	"99:AL" -> "100:IF"	 [cond="[]",
		lineno=None];
	"Leaf_120:AL" -> "131:AS";
	"Leaf_120:AL" -> "126:AL";
	"134:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f052b757fd0>",
		clk_sens=True,
		fillcolor=gold,
		label="134:AL",
		sens="['sclk', 'rstn']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['cnt128d_rd_valid', 'rstn']"];
	"Leaf_120:AL" -> "134:AL";
	"Leaf_110:AL" -> "114:AS";
	"Leaf_110:AL" -> "115:AS";
	"126:AL" -> "127:IF"	 [cond="[]",
		lineno=None];
	"110:AL" -> "111:IF"	 [cond="[]",
		lineno=None];
	"134:AL" -> "135:IF"	 [cond="[]",
		lineno=None];
	"105:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f052b37d250>",
		def_var="['wr_CSN']",
		fillcolor=deepskyblue,
		label="105:AS
wr_CSN = ~inp_valid;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['inp_valid']"];
	"122:IF" -> "122:NS"	 [cond="['cnt128d_rd_valid_start']",
		label=cnt128d_rd_valid_start,
		lineno=122];
	"122:IF" -> "123:IF"	 [cond="['cnt128d_rd_valid_start']",
		label="!(cnt128d_rd_valid_start)",
		lineno=122];
	"128:NS" -> "Leaf_126:AL"	 [cond="[]",
		lineno=None];
}
