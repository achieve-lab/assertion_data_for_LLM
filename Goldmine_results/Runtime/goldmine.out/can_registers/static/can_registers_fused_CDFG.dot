strict digraph "compose( ,  )" {
	node [label="\N"];
	"1867:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd773795150>",
		fillcolor=springgreen,
		label="1867:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1869:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd773795650>",
		fillcolor=springgreen,
		label="1869:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1867:IF" -> "1869:IF"	 [cond="['rst']",
		label="!(rst)",
		lineno=1867];
	"1868:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd773795190>",
		fillcolor=firebrick,
		label="1868:NS
receive_irq <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd773795190>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1867:IF" -> "1868:NS"	 [cond="['rst']",
		label=rst,
		lineno=1867];
	"1820:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737fce10>",
		fillcolor=cadetblue,
		label="1820:BS
data_out = (reset_mode)? 8'hff : tx_data_3;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737fce10>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_1772:AL"	 [def_var="['data_out']",
		label="Leaf_1772:AL"];
	"1820:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"Leaf_1369:AL"	 [def_var="['overrun_status']",
		label="Leaf_1369:AL"];
	"1342:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd75224d510>",
		def_var="['status']",
		fillcolor=deepskyblue,
		label="1342:AS
status[1] = overrun_status;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['overrun_status']"];
	"Leaf_1369:AL" -> "1342:AS";
	"TX_DATA_REG12.855:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>",
		fillcolor=firebrick,
		label="TX_DATA_REG12.855:NS
data_out <= #1 data_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>]",
		style=filled,
		typ=NonblockingSubstitution];
	"TX_DATA_REG12.Leaf_852:AL"	 [def_var="['data_out']",
		label="TX_DATA_REG12.Leaf_852:AL"];
	"TX_DATA_REG12.855:NS" -> "TX_DATA_REG12.Leaf_852:AL"	 [cond="[]",
		lineno=None];
	"1532:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd751d84d50>",
		fillcolor=springgreen,
		label="1532:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1534:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd751d84f50>",
		fillcolor=springgreen,
		label="1534:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1532:IF" -> "1534:IF"	 [cond="['rst']",
		label="!(rst)",
		lineno=1532];
	"1533:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd751d84d90>",
		fillcolor=firebrick,
		label="1533:NS
clkout_tmp <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd751d84d90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1532:IF" -> "1533:NS"	 [cond="['rst']",
		label=rst,
		lineno=1532];
	"1816:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737fc110>",
		fillcolor=cadetblue,
		label="1816:BS
data_out = (reset_mode)? bus_timing_1 : 8'hff;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737fc110>]",
		style=filled,
		typ=BlockingSubstitution];
	"1816:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"TX_DATA_REG3.852:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd752616050>",
		clk_sens=True,
		fillcolor=gold,
		label="TX_DATA_REG3.852:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['we', 'data_in']"];
	"TX_DATA_REG3.853:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd7526160d0>",
		fillcolor=turquoise,
		label="TX_DATA_REG3.853:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"TX_DATA_REG3.852:AL" -> "TX_DATA_REG3.853:BL"	 [cond="[]",
		lineno=None];
	"1803:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd7737ed610>",
		fillcolor=lightcyan,
		label="1803:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1803:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737ed810>",
		fillcolor=cadetblue,
		label="1803:BS
data_out = 8'h0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737ed810>]",
		style=filled,
		typ=BlockingSubstitution];
	"1803:CA" -> "1803:BS"	 [cond="[]",
		lineno=None];
	"1813:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737f7650>",
		fillcolor=cadetblue,
		label="1813:BS
data_out = (reset_mode)? acceptance_code_0 : 8'hff;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737f7650>]",
		style=filled,
		typ=BlockingSubstitution];
	"1813:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"1372:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752267f90>",
		fillcolor=firebrick,
		label="1372:NS
overrun_status <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752267f90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1372:NS" -> "Leaf_1369:AL"	 [cond="[]",
		lineno=None];
	"IRQ_EN_REG.854:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752624f90>",
		fillcolor=springgreen,
		label="IRQ_EN_REG.854:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"IRQ_EN_REG.855:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>",
		fillcolor=firebrick,
		label="IRQ_EN_REG.855:NS
data_out <= #1 data_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>]",
		style=filled,
		typ=NonblockingSubstitution];
	"IRQ_EN_REG.854:IF" -> "IRQ_EN_REG.855:NS"	 [cond="['we']",
		label=we,
		lineno=854];
	"1414:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd751d78550>",
		def_var="['data_overrun_irq_en_ext']",
		fillcolor=deepskyblue,
		label="1414:AS
data_overrun_irq_en_ext = irq_en_ext[3];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['irq_en_ext']"];
	"1834:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd773805910>",
		def_var="['data_overrun_irq_en']",
		fillcolor=deepskyblue,
		label="1834:AS
data_overrun_irq_en = (extended_mode)? data_overrun_irq_en_ext : overrun_irq_en_basic;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['extended_mode', 'data_overrun_irq_en_ext', 'overrun_irq_en_basic']"];
	"1414:AS" -> "1834:AS";
	"COMMAND_REG0.688:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752624210>",
		fillcolor=firebrick,
		label="COMMAND_REG0.688:NS
data_out <= #1 RESET_VALUE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752624210>]",
		style=filled,
		typ=NonblockingSubstitution];
	"COMMAND_REG0.Leaf_683:AL"	 [def_var="['data_out']",
		label="COMMAND_REG0.Leaf_683:AL"];
	"COMMAND_REG0.688:NS" -> "COMMAND_REG0.Leaf_683:AL"	 [cond="[]",
		lineno=None];
	"BUS_TIMING_1_REG.853:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd7526160d0>",
		fillcolor=turquoise,
		label="BUS_TIMING_1_REG.853:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"BUS_TIMING_1_REG.854:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752624f90>",
		fillcolor=springgreen,
		label="BUS_TIMING_1_REG.854:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"BUS_TIMING_1_REG.853:BL" -> "BUS_TIMING_1_REG.854:IF"	 [cond="[]",
		lineno=None];
	"1792:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd7737e3810>",
		fillcolor=lightcyan,
		label="1792:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1792:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737e3a10>",
		fillcolor=cadetblue,
		label="1792:BS
data_out = rx_err_cnt;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737e3a10>]",
		style=filled,
		typ=BlockingSubstitution];
	"1792:CA" -> "1792:BS"	 [cond="[]",
		lineno=None];
	"Leaf_1877:AL"	 [def_var="['error_irq']",
		label="Leaf_1877:AL"];
	"1928:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd7737a9350>",
		def_var="['irq']",
		fillcolor=deepskyblue,
		label="1928:AS
irq = data_overrun_irq | transmit_irq | receive_irq | error_irq | bus_error_irq | arbitration_lost_irq | error_passive_irq;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['data_overrun_irq', 'transmit_irq', 'receive_irq', 'error_irq', 'bus_error_irq', 'arbitration_lost_irq', 'error_passive_irq']"];
	"Leaf_1877:AL" -> "1928:AS";
	"1926:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd7737a9150>",
		def_var="['irq_reg']",
		fillcolor=deepskyblue,
		label="1926:AS
irq_reg = { bus_error_irq, arbitration_lost_irq, error_passive_irq, 1'b0, data_overrun_irq, error_irq, transmit_irq, receive_\
irq };",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['bus_error_irq', 'arbitration_lost_irq', 'error_passive_irq', 'data_overrun_irq', 'error_irq', 'transmit_irq', 'receive_irq']"];
	"Leaf_1877:AL" -> "1926:AS";
	"1814:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd7737f7750>",
		fillcolor=lightcyan,
		label="1814:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1814:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737f79d0>",
		fillcolor=cadetblue,
		label="1814:BS
data_out = (reset_mode)? acceptance_mask_0 : 8'hff;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737f79d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"1814:CA" -> "1814:BS"	 [cond="[]",
		lineno=None];
	"1772:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd7737d8810>",
		clk_sens=False,
		fillcolor=gold,
		label="1772:AL",
		sens="['addr', 'extended_mode', 'mode', 'bus_timing_0', 'bus_timing_1', 'clock_divider', 'acceptance_code_0', 'acceptance_code_1', 'acceptance_\
code_2', 'acceptance_code_3', 'acceptance_mask_0', 'acceptance_mask_1', 'acceptance_mask_2', 'acceptance_mask_3', 'reset_mode', '\
tx_data_0', 'tx_data_1', 'tx_data_2', 'tx_data_3', 'tx_data_4', 'tx_data_5', 'tx_data_6', 'tx_data_7', 'tx_data_8', 'tx_data_9', '\
status', 'error_warning_limit', 'rx_err_cnt', 'tx_err_cnt', 'irq_en_ext', 'irq_reg', 'mode_ext', 'arbitration_lost_capture', 'rx_\
message_counter', 'mode_basic', 'error_capture_code']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['irq_en_ext', 'mode_ext', 'rx_err_cnt', 'error_capture_code', 'arbitration_lost_capture', 'addr', 'reset_mode', 'mode_basic', '\
tx_data_9', 'tx_data_8', 'rx_message_counter', 'tx_data_3', 'tx_data_2', 'acceptance_code_1', 'acceptance_code_0', 'tx_data_7', '\
tx_data_6', 'tx_data_5', 'tx_data_4', 'status', 'tx_data_1', 'irq_reg', 'acceptance_mask_0', 'acceptance_code_3', 'acceptance_mask_\
2', 'acceptance_mask_3', 'error_warning_limit', 'acceptance_code_2', 'clock_divider', 'tx_err_cnt', 'tx_data_0', 'extended_mode', '\
acceptance_mask_1', 'bus_timing_0', 'bus_timing_1', 'mode']"];
	"1342:AS" -> "1772:AL";
	"1795:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd7737e8090>",
		fillcolor=lightcyan,
		label="1795:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1795:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737e8250>",
		fillcolor=cadetblue,
		label="1795:BS
data_out = acceptance_code_1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737e8250>]",
		style=filled,
		typ=BlockingSubstitution];
	"1795:CA" -> "1795:BS"	 [cond="[]",
		lineno=None];
	"1845:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd77380bd50>",
		fillcolor=springgreen,
		label="1845:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1847:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd77380bfd0>",
		fillcolor=springgreen,
		label="1847:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1845:IF" -> "1847:IF"	 [cond="['overrun', 'overrun_q', 'data_overrun_irq_en']",
		label="!((overrun & ~overrun_q & data_overrun_irq_en))",
		lineno=1845];
	"1846:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd77380bd10>",
		fillcolor=firebrick,
		label="1846:NS
data_overrun_irq <= #Tp 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd77380bd10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1845:IF" -> "1846:NS"	 [cond="['overrun', 'overrun_q', 'data_overrun_irq_en']",
		label="(overrun & ~overrun_q & data_overrun_irq_en)",
		lineno=1845];
	"1822:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7738014d0>",
		fillcolor=cadetblue,
		label="1822:BS
data_out = (reset_mode)? 8'hff : tx_data_5;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7738014d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"1822:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"1933:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd7737a9a10>",
		fillcolor=springgreen,
		label="1933:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1935:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd7737a9e50>",
		fillcolor=springgreen,
		label="1935:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1933:IF" -> "1935:IF"	 [cond="['rst']",
		label="!(rst)",
		lineno=1933];
	"1934:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd7737a9a50>",
		fillcolor=firebrick,
		label="1934:NS
irq_n <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd7737a9a50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1933:IF" -> "1934:NS"	 [cond="['rst']",
		label=rst,
		lineno=1933];
	"COMMAND_REG0.683:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd752245d10>",
		clk_sens=True,
		fillcolor=gold,
		label="COMMAND_REG0.683:AL",
		sens="['clk', 'rst']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst', 'we', 'rst_sync', 'data_in']"];
	"COMMAND_REG0.684:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd752245d50>",
		fillcolor=turquoise,
		label="COMMAND_REG0.684:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"COMMAND_REG0.683:AL" -> "COMMAND_REG0.684:BL"	 [cond="[]",
		lineno=None];
	"1149:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd752209ad0>",
		def_var="['we_tx_data_2']",
		fillcolor=deepskyblue,
		label="1149:AS
we_tx_data_2 = cs & we & ~reset_mode & (~extended_mode & (addr == 8'd12) | extended_mode & (addr == 8'd18)) & transmit_buffer_\
status;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cs', 'we', 'reset_mode', 'extended_mode', 'addr', 'extended_mode', 'addr', 'transmit_buffer_status']"];
	"TX_DATA_REG2.852:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd752616050>",
		clk_sens=True,
		fillcolor=gold,
		label="TX_DATA_REG2.852:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['we', 'data_in']"];
	"1149:AS" -> "TX_DATA_REG2.852:AL";
	"1146:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd75220a310>",
		def_var="['we_acceptance_mask_0']",
		fillcolor=deepskyblue,
		label="1146:AS
we_acceptance_mask_0 = cs & we & reset_mode & (~extended_mode & (addr == 8'd5) | extended_mode & (addr == 8'd20));",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cs', 'we', 'reset_mode', 'extended_mode', 'addr', 'extended_mode', 'addr']"];
	"ACCEPTANCE_MASK_REG0.852:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd752616050>",
		clk_sens=True,
		fillcolor=gold,
		label="ACCEPTANCE_MASK_REG0.852:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['we', 'data_in']"];
	"1146:AS" -> "ACCEPTANCE_MASK_REG0.852:AL";
	"1908:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd77379fe50>",
		fillcolor=firebrick,
		label="1908:NS
arbitration_lost_irq <= #Tp 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd77379fe50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_1901:AL"	 [def_var="['arbitration_lost_irq']",
		label="Leaf_1901:AL"];
	"1908:NS" -> "Leaf_1901:AL"	 [cond="[]",
		lineno=None];
	"1895:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd77379f150>",
		fillcolor=springgreen,
		label="1895:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1896:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd77379f290>",
		fillcolor=firebrick,
		label="1896:NS
bus_error_irq <= #Tp 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd77379f290>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1895:IF" -> "1896:NS"	 [cond="['reset_mode', 'read_irq_reg']",
		label="(reset_mode || read_irq_reg)",
		lineno=1895];
	"1794:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737e3f50>",
		fillcolor=cadetblue,
		label="1794:BS
data_out = acceptance_code_0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737e3f50>]",
		style=filled,
		typ=BlockingSubstitution];
	"1794:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"CLOCK_DIVIDER_REG_LOW.515:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752633ad0>",
		fillcolor=springgreen,
		label="CLOCK_DIVIDER_REG_LOW.515:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"CLOCK_DIVIDER_REG_LOW.516:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd754a92f50>",
		fillcolor=firebrick,
		label="CLOCK_DIVIDER_REG_LOW.516:NS
data_out <= #1 data_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd754a92f50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"CLOCK_DIVIDER_REG_LOW.515:IF" -> "CLOCK_DIVIDER_REG_LOW.516:NS"	 [cond="['we']",
		label=we,
		lineno=515];
	"1166:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd752506050>",
		def_var="['we_rx_err_cnt']",
		fillcolor=deepskyblue,
		label="1166:AS
we_rx_err_cnt = cs & we & (addr == 8'd14) & reset_mode & extended_mode;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cs', 'we', 'addr', 'reset_mode', 'extended_mode']"];
	"1298:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd75227a390>",
		fillcolor=springgreen,
		label="1298:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1299:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd75227a4d0>",
		fillcolor=firebrick,
		label="1299:NS
single_shot_transmission <= #Tp 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd75227a4d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1298:IF" -> "1299:NS"	 [cond="['tx_state', 'tx_state_q']",
		label="(~tx_state & tx_state_q)",
		lineno=1298];
	"1789:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737e32d0>",
		fillcolor=cadetblue,
		label="1789:BS
data_out = { 3'h0, arbitration_lost_capture[4:0] };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737e32d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"1789:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"1937:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd7737a9f90>",
		fillcolor=springgreen,
		label="1937:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1935:IF" -> "1937:IF"	 [cond="['read_irq_reg', 'release_buffer']",
		label="!((read_irq_reg || release_buffer))",
		lineno=1935];
	"1936:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd7737a9e10>",
		fillcolor=firebrick,
		label="1936:NS
irq_n <= #Tp 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd7737a9e10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1935:IF" -> "1936:NS"	 [cond="['read_irq_reg', 'release_buffer']",
		label="(read_irq_reg || release_buffer)",
		lineno=1935];
	"Leaf_1901:AL" -> "1928:AS";
	"Leaf_1901:AL" -> "1926:AS";
	"1521:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd751d84550>",
		fillcolor=firebrick,
		label="1521:NS
clkout_cnt <= 3'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd751d84550>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_1518:AL"	 [def_var="['clkout_cnt']",
		label="Leaf_1518:AL"];
	"1521:NS" -> "Leaf_1518:AL"	 [cond="[]",
		lineno=None];
	"TX_DATA_REG3.855:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>",
		fillcolor=firebrick,
		label="TX_DATA_REG3.855:NS
data_out <= #1 data_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>]",
		style=filled,
		typ=NonblockingSubstitution];
	"TX_DATA_REG3.Leaf_852:AL"	 [def_var="['data_out']",
		label="TX_DATA_REG3.Leaf_852:AL"];
	"TX_DATA_REG3.855:NS" -> "TX_DATA_REG3.Leaf_852:AL"	 [cond="[]",
		lineno=None];
	"1286:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd752275090>",
		def_var="['clear_data_overrun']",
		fillcolor=deepskyblue,
		label="1286:AS
clear_data_overrun = command[3];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['command']"];
	"1369:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd752267dd0>",
		clk_sens=True,
		fillcolor=gold,
		label="1369:AL",
		sens="['clk', 'rst']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst', 'clear_data_overrun', 'reset_mode', 'overrun_q', 'overrun']"];
	"1286:AS" -> "1369:AL";
	"Leaf_1889:AL"	 [def_var="['bus_error_irq']",
		label="Leaf_1889:AL"];
	"Leaf_1889:AL" -> "1928:AS";
	"Leaf_1889:AL" -> "1926:AS";
	"TX_DATA_REG0.855:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>",
		fillcolor=firebrick,
		label="TX_DATA_REG0.855:NS
data_out <= #1 data_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>]",
		style=filled,
		typ=NonblockingSubstitution];
	"TX_DATA_REG0.Leaf_852:AL"	 [def_var="['data_out']",
		label="TX_DATA_REG0.Leaf_852:AL"];
	"TX_DATA_REG0.855:NS" -> "TX_DATA_REG0.Leaf_852:AL"	 [cond="[]",
		lineno=None];
	"1507:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd751d70610>",
		fillcolor=lightcyan,
		label="1507:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1507:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd751d70710>",
		fillcolor=cadetblue,
		label="1507:BS
clkout_div = 3'd2;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd751d70710>]",
		style=filled,
		typ=BlockingSubstitution];
	"1507:CA" -> "1507:BS"	 [cond="[]",
		lineno=None];
	"ACCEPTANCE_MASK_REG2.852:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd752616050>",
		clk_sens=True,
		fillcolor=gold,
		label="ACCEPTANCE_MASK_REG2.852:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['we', 'data_in']"];
	"ACCEPTANCE_MASK_REG2.853:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd7526160d0>",
		fillcolor=turquoise,
		label="ACCEPTANCE_MASK_REG2.853:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"ACCEPTANCE_MASK_REG2.852:AL" -> "ACCEPTANCE_MASK_REG2.853:BL"	 [cond="[]",
		lineno=None];
	"1805:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd7737edb10>",
		fillcolor=lightcyan,
		label="1805:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1805:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737edd10>",
		fillcolor=cadetblue,
		label="1805:BS
data_out = 8'h0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737edd10>]",
		style=filled,
		typ=BlockingSubstitution];
	"1805:CA" -> "1805:BS"	 [cond="[]",
		lineno=None];
	"TX_DATA_REG3.Leaf_852:AL" -> "1772:AL";
	"TX_DATA_REG7.855:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>",
		fillcolor=firebrick,
		label="TX_DATA_REG7.855:NS
data_out <= #1 data_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>]",
		style=filled,
		typ=NonblockingSubstitution];
	"TX_DATA_REG7.Leaf_852:AL"	 [def_var="['data_out']",
		label="TX_DATA_REG7.Leaf_852:AL"];
	"TX_DATA_REG7.855:NS" -> "TX_DATA_REG7.Leaf_852:AL"	 [cond="[]",
		lineno=None];
	"1791:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd7737e3550>",
		fillcolor=lightcyan,
		label="1791:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1791:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737e3790>",
		fillcolor=cadetblue,
		label="1791:BS
data_out = error_warning_limit;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737e3790>]",
		style=filled,
		typ=BlockingSubstitution];
	"1791:CA" -> "1791:BS"	 [cond="[]",
		lineno=None];
	"1938:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd7737ae150>",
		fillcolor=firebrick,
		label="1938:NS
irq_n <= #Tp 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd7737ae150>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_1931:AL"	 [def_var="['irq_n']",
		label="Leaf_1931:AL"];
	"1938:NS" -> "Leaf_1931:AL"	 [cond="[]",
		lineno=None];
	"BUS_TIMING_0_REG.855:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>",
		fillcolor=firebrick,
		label="BUS_TIMING_0_REG.855:NS
data_out <= #1 data_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>]",
		style=filled,
		typ=NonblockingSubstitution];
	"BUS_TIMING_0_REG.Leaf_852:AL"	 [def_var="['data_out']",
		label="BUS_TIMING_0_REG.Leaf_852:AL"];
	"BUS_TIMING_0_REG.855:NS" -> "BUS_TIMING_0_REG.Leaf_852:AL"	 [cond="[]",
		lineno=None];
	"CLOCK_DIVIDER_REG_3.516:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd754a92f50>",
		fillcolor=firebrick,
		label="CLOCK_DIVIDER_REG_3.516:NS
data_out <= #1 data_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd754a92f50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"CLOCK_DIVIDER_REG_3.Leaf_511:AL"	 [def_var="['data_out']",
		label="CLOCK_DIVIDER_REG_3.Leaf_511:AL"];
	"CLOCK_DIVIDER_REG_3.516:NS" -> "CLOCK_DIVIDER_REG_3.Leaf_511:AL"	 [cond="[]",
		lineno=None];
	"TX_DATA_REG12.853:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd7526160d0>",
		fillcolor=turquoise,
		label="TX_DATA_REG12.853:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"TX_DATA_REG12.854:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752624f90>",
		fillcolor=springgreen,
		label="TX_DATA_REG12.854:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"TX_DATA_REG12.853:BL" -> "TX_DATA_REG12.854:IF"	 [cond="[]",
		lineno=None];
	"1231:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd75226ed90>",
		def_var="['error_irq_en_basic']",
		fillcolor=deepskyblue,
		label="1231:AS
error_irq_en_basic = mode_basic[3];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['mode_basic']"];
	"1835:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd773805c10>",
		def_var="['error_warning_irq_en']",
		fillcolor=deepskyblue,
		label="1835:AS
error_warning_irq_en = (extended_mode)? error_warning_irq_en_ext : error_irq_en_basic;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['extended_mode', 'error_warning_irq_en_ext', 'error_irq_en_basic']"];
	"1231:AS" -> "1835:AS";
	"Leaf_1841:AL"	 [def_var="['data_overrun_irq']",
		label="Leaf_1841:AL"];
	"Leaf_1841:AL" -> "1928:AS";
	"Leaf_1841:AL" -> "1926:AS";
	"1870:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd773795610>",
		fillcolor=firebrick,
		label="1870:NS
receive_irq <= #Tp 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd773795610>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1869:IF" -> "1870:NS"	 [cond="['info_empty', 'receive_irq', 'receive_irq_en']",
		label="(~info_empty & ~receive_irq & receive_irq_en)",
		lineno=1869];
	"1871:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd773795850>",
		fillcolor=springgreen,
		label="1871:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1869:IF" -> "1871:IF"	 [cond="['info_empty', 'receive_irq', 'receive_irq_en']",
		label="!((~info_empty & ~receive_irq & receive_irq_en))",
		lineno=1869];
	"1826:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd773805050>",
		fillcolor=lightcyan,
		label="1826:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1826:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd773805210>",
		fillcolor=cadetblue,
		label="1826:BS
data_out = (reset_mode)? 8'hff : tx_data_9;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd773805210>]",
		style=filled,
		typ=BlockingSubstitution];
	"1826:CA" -> "1826:BS"	 [cond="[]",
		lineno=None];
	"1915:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd7737a40d0>",
		fillcolor=turquoise,
		label="1915:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1916:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd7737a4210>",
		fillcolor=springgreen,
		label="1916:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1915:BL" -> "1916:IF"	 [cond="[]",
		lineno=None];
	"1431:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd751d5e690>",
		def_var="['sync_jump_width']",
		fillcolor=deepskyblue,
		label="1431:AS
sync_jump_width = bus_timing_0[7:6];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['bus_timing_0']"];
	"CLOCK_DIVIDER_REG_3.514:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd7526334d0>",
		fillcolor=firebrick,
		label="CLOCK_DIVIDER_REG_3.514:NS
data_out <= #1 RESET_VALUE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd7526334d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"CLOCK_DIVIDER_REG_3.514:NS" -> "CLOCK_DIVIDER_REG_3.Leaf_511:AL"	 [cond="[]",
		lineno=None];
	"1361:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd7522675d0>",
		fillcolor=firebrick,
		label="1361:NS
transmit_buffer_status <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd7522675d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_1358:AL"	 [def_var="['transmit_buffer_status']",
		label="Leaf_1358:AL"];
	"1361:NS" -> "Leaf_1358:AL"	 [cond="[]",
		lineno=None];
	"1821:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd7737fcf10>",
		fillcolor=lightcyan,
		label="1821:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1821:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd773801190>",
		fillcolor=cadetblue,
		label="1821:BS
data_out = (reset_mode)? 8'hff : tx_data_4;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd773801190>]",
		style=filled,
		typ=BlockingSubstitution];
	"1821:CA" -> "1821:BS"	 [cond="[]",
		lineno=None];
	"1323:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd75227a150>",
		def_var="['overload_request']",
		fillcolor=deepskyblue,
		label="1323:AS
overload_request = 0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="[]"];
	"COMMAND_REG4.684:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd752245d50>",
		fillcolor=turquoise,
		label="COMMAND_REG4.684:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"COMMAND_REG4.685:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752245f10>",
		fillcolor=springgreen,
		label="COMMAND_REG4.685:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"COMMAND_REG4.684:BL" -> "COMMAND_REG4.685:IF"	 [cond="[]",
		lineno=None];
	"TX_DATA_REG1.854:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752624f90>",
		fillcolor=springgreen,
		label="TX_DATA_REG1.854:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"TX_DATA_REG1.855:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>",
		fillcolor=firebrick,
		label="TX_DATA_REG1.855:NS
data_out <= #1 data_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>]",
		style=filled,
		typ=NonblockingSubstitution];
	"TX_DATA_REG1.854:IF" -> "TX_DATA_REG1.855:NS"	 [cond="['we']",
		label=we,
		lineno=854];
	"1132:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd7521e2790>",
		def_var="['we_mode']",
		fillcolor=deepskyblue,
		label="1132:AS
we_mode = cs & we & (addr == 8'd0);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cs', 'we', 'addr']"];
	"MODE_REG_EXT.511:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd752f2c4d0>",
		clk_sens=True,
		fillcolor=gold,
		label="MODE_REG_EXT.511:AL",
		sens="['clk', 'rst']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst', 'we', 'data_in']"];
	"1132:AS" -> "MODE_REG_EXT.511:AL";
	"MODE_REG0.683:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd752245d10>",
		clk_sens=True,
		fillcolor=gold,
		label="MODE_REG0.683:AL",
		sens="['clk', 'rst']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst', 'we', 'rst_sync', 'data_in']"];
	"1132:AS" -> "MODE_REG0.683:AL";
	"MODE_REG_BASIC.511:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd752f2c4d0>",
		clk_sens=True,
		fillcolor=gold,
		label="MODE_REG_BASIC.511:AL",
		sens="['clk', 'rst']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst', 'we', 'data_in']"];
	"1132:AS" -> "MODE_REG_BASIC.511:AL";
	"1824:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd773801910>",
		fillcolor=lightcyan,
		label="1824:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1824:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd773801b50>",
		fillcolor=cadetblue,
		label="1824:BS
data_out = (reset_mode)? 8'hff : tx_data_7;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd773801b50>]",
		style=filled,
		typ=BlockingSubstitution];
	"1824:CA" -> "1824:BS"	 [cond="[]",
		lineno=None];
	"TX_DATA_REG5.855:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>",
		fillcolor=firebrick,
		label="TX_DATA_REG5.855:NS
data_out <= #1 data_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>]",
		style=filled,
		typ=NonblockingSubstitution];
	"TX_DATA_REG5.Leaf_852:AL"	 [def_var="['data_out']",
		label="TX_DATA_REG5.Leaf_852:AL"];
	"TX_DATA_REG5.855:NS" -> "TX_DATA_REG5.Leaf_852:AL"	 [cond="[]",
		lineno=None];
	"ACCEPTANCE_CODE_REG3.854:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752624f90>",
		fillcolor=springgreen,
		label="ACCEPTANCE_CODE_REG3.854:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"ACCEPTANCE_CODE_REG3.855:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>",
		fillcolor=firebrick,
		label="ACCEPTANCE_CODE_REG3.855:NS
data_out <= #1 data_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>]",
		style=filled,
		typ=NonblockingSubstitution];
	"ACCEPTANCE_CODE_REG3.854:IF" -> "ACCEPTANCE_CODE_REG3.855:NS"	 [cond="['we']",
		label=we,
		lineno=854];
	"1907:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd77379fd10>",
		fillcolor=springgreen,
		label="1907:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1907:IF" -> "1908:NS"	 [cond="['reset_mode', 'read_irq_reg']",
		label="(reset_mode || read_irq_reg)",
		lineno=1907];
	"1848:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd773790150>",
		fillcolor=firebrick,
		label="1848:NS
data_overrun_irq <= #Tp 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd773790150>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1847:IF" -> "1848:NS"	 [cond="['reset_mode', 'read_irq_reg']",
		label="(reset_mode || read_irq_reg)",
		lineno=1847];
	"ERROR_WARNING_REG.Leaf_511:AL"	 [def_var="['data_out']",
		label="ERROR_WARNING_REG.Leaf_511:AL"];
	"ERROR_WARNING_REG.Leaf_511:AL" -> "1772:AL";
	"1815:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd7737f7ad0>",
		fillcolor=lightcyan,
		label="1815:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1815:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737f7d50>",
		fillcolor=cadetblue,
		label="1815:BS
data_out = (reset_mode)? bus_timing_0 : 8'hff;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737f7d50>]",
		style=filled,
		typ=BlockingSubstitution];
	"1815:CA" -> "1815:BS"	 [cond="[]",
		lineno=None];
	"ACCEPTANCE_MASK_REG2.854:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752624f90>",
		fillcolor=springgreen,
		label="ACCEPTANCE_MASK_REG2.854:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"ACCEPTANCE_MASK_REG2.853:BL" -> "ACCEPTANCE_MASK_REG2.854:IF"	 [cond="[]",
		lineno=None];
	"MODE_REG_EXT.515:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752633ad0>",
		fillcolor=springgreen,
		label="MODE_REG_EXT.515:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"MODE_REG_EXT.516:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd754a92f50>",
		fillcolor=firebrick,
		label="MODE_REG_EXT.516:NS
data_out <= #1 data_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd754a92f50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"MODE_REG_EXT.515:IF" -> "MODE_REG_EXT.516:NS"	 [cond="['we']",
		label=we,
		lineno=515];
	"1881:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd77379b390>",
		fillcolor=springgreen,
		label="1881:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1883:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd77379b510>",
		fillcolor=springgreen,
		label="1883:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1881:IF" -> "1883:IF"	 [cond="['error_status', 'error_status_q', 'node_bus_off', 'node_bus_off_q', 'error_warning_irq_en']",
		label="!(((error_status ^ error_status_q | node_bus_off ^ node_bus_off_q) & error_warning_irq_en))",
		lineno=1881];
	"1882:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd77379b350>",
		fillcolor=firebrick,
		label="1882:NS
error_irq <= #Tp 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd77379b350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1881:IF" -> "1882:NS"	 [cond="['error_status', 'error_status_q', 'node_bus_off', 'node_bus_off_q', 'error_warning_irq_en']",
		label="((error_status ^ error_status_q | node_bus_off ^ node_bus_off_q) & error_warning_irq_en)",
		lineno=1881];
	"1444:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd751d5ef50>",
		def_var="['time_segment1']",
		fillcolor=deepskyblue,
		label="1444:AS
time_segment1 = bus_timing_1[3:0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['bus_timing_1']"];
	"ACCEPTANCE_MASK_REG2.855:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>",
		fillcolor=firebrick,
		label="ACCEPTANCE_MASK_REG2.855:NS
data_out <= #1 data_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>]",
		style=filled,
		typ=NonblockingSubstitution];
	"ACCEPTANCE_MASK_REG2.Leaf_852:AL"	 [def_var="['data_out']",
		label="ACCEPTANCE_MASK_REG2.Leaf_852:AL"];
	"ACCEPTANCE_MASK_REG2.855:NS" -> "ACCEPTANCE_MASK_REG2.Leaf_852:AL"	 [cond="[]",
		lineno=None];
	"COMMAND_REG0.687:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752624250>",
		fillcolor=springgreen,
		label="COMMAND_REG0.687:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"COMMAND_REG0.687:IF" -> "COMMAND_REG0.688:NS"	 [cond="['rst_sync']",
		label=rst_sync,
		lineno=687];
	"COMMAND_REG0.689:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752624390>",
		fillcolor=springgreen,
		label="COMMAND_REG0.689:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"COMMAND_REG0.687:IF" -> "COMMAND_REG0.689:IF"	 [cond="['rst_sync']",
		label="!(rst_sync)",
		lineno=687];
	"CLOCK_DIVIDER_REG_7.512:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd75264b890>",
		fillcolor=turquoise,
		label="CLOCK_DIVIDER_REG_7.512:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"CLOCK_DIVIDER_REG_7.513:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752633650>",
		fillcolor=springgreen,
		label="CLOCK_DIVIDER_REG_7.513:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"CLOCK_DIVIDER_REG_7.512:BL" -> "CLOCK_DIVIDER_REG_7.513:IF"	 [cond="[]",
		lineno=None];
	"1884:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd77379b690>",
		fillcolor=firebrick,
		label="1884:NS
error_irq <= #Tp 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd77379b690>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1883:IF" -> "1884:NS"	 [cond="['read_irq_reg']",
		label=read_irq_reg,
		lineno=1883];
	"COMMAND_REG.685:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752245f10>",
		fillcolor=springgreen,
		label="COMMAND_REG.685:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"COMMAND_REG.686:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752245ed0>",
		fillcolor=firebrick,
		label="COMMAND_REG.686:NS
data_out <= #1 RESET_VALUE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752245ed0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"COMMAND_REG.685:IF" -> "COMMAND_REG.686:NS"	 [cond="['rst']",
		label=rst,
		lineno=685];
	"COMMAND_REG.687:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752624250>",
		fillcolor=springgreen,
		label="COMMAND_REG.687:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"COMMAND_REG.685:IF" -> "COMMAND_REG.687:IF"	 [cond="['rst']",
		label="!(rst)",
		lineno=685];
	"TX_DATA_REG6.854:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752624f90>",
		fillcolor=springgreen,
		label="TX_DATA_REG6.854:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"TX_DATA_REG6.855:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>",
		fillcolor=firebrick,
		label="TX_DATA_REG6.855:NS
data_out <= #1 data_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>]",
		style=filled,
		typ=NonblockingSubstitution];
	"TX_DATA_REG6.854:IF" -> "TX_DATA_REG6.855:NS"	 [cond="['we']",
		label=we,
		lineno=854];
	"1360:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752267590>",
		fillcolor=springgreen,
		label="1360:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1360:IF" -> "1361:NS"	 [cond="['rst']",
		label=rst,
		lineno=1360];
	"1362:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752267910>",
		fillcolor=springgreen,
		label="1362:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1360:IF" -> "1362:IF"	 [cond="['rst']",
		label="!(rst)",
		lineno=1360];
	"1430:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd751d5e410>",
		def_var="['baud_r_presc']",
		fillcolor=deepskyblue,
		label="1430:AS
baud_r_presc = bus_timing_0[5:0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['bus_timing_0']"];
	"IRQ_EN_REG.Leaf_852:AL"	 [def_var="['data_out']",
		label="IRQ_EN_REG.Leaf_852:AL"];
	"IRQ_EN_REG.Leaf_852:AL" -> "1414:AS";
	"1417:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd751d78b50>",
		def_var="['receive_irq_en_ext']",
		fillcolor=deepskyblue,
		label="1417:AS
receive_irq_en_ext = irq_en_ext[0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['irq_en_ext']"];
	"IRQ_EN_REG.Leaf_852:AL" -> "1417:AS";
	"1415:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd751d78750>",
		def_var="['error_warning_irq_en_ext']",
		fillcolor=deepskyblue,
		label="1415:AS
error_warning_irq_en_ext = irq_en_ext[2];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['irq_en_ext']"];
	"IRQ_EN_REG.Leaf_852:AL" -> "1415:AS";
	"1416:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd751d78950>",
		def_var="['transmit_irq_en_ext']",
		fillcolor=deepskyblue,
		label="1416:AS
transmit_irq_en_ext = irq_en_ext[1];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['irq_en_ext']"];
	"IRQ_EN_REG.Leaf_852:AL" -> "1416:AS";
	"1413:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd751d78350>",
		def_var="['error_passive_irq_en']",
		fillcolor=deepskyblue,
		label="1413:AS
error_passive_irq_en = irq_en_ext[5];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['irq_en_ext']"];
	"IRQ_EN_REG.Leaf_852:AL" -> "1413:AS";
	"1411:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd751d64f10>",
		def_var="['bus_error_irq_en']",
		fillcolor=deepskyblue,
		label="1411:AS
bus_error_irq_en = irq_en_ext[7];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['irq_en_ext']"];
	"IRQ_EN_REG.Leaf_852:AL" -> "1411:AS";
	"1412:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd751d78150>",
		def_var="['arbitration_lost_irq_en']",
		fillcolor=deepskyblue,
		label="1412:AS
arbitration_lost_irq_en = irq_en_ext[6];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['irq_en_ext']"];
	"IRQ_EN_REG.Leaf_852:AL" -> "1412:AS";
	"IRQ_EN_REG.Leaf_852:AL" -> "1772:AL";
	"TX_DATA_REG8.854:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752624f90>",
		fillcolor=springgreen,
		label="TX_DATA_REG8.854:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"TX_DATA_REG8.855:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>",
		fillcolor=firebrick,
		label="TX_DATA_REG8.855:NS
data_out <= #1 data_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>]",
		style=filled,
		typ=NonblockingSubstitution];
	"TX_DATA_REG8.854:IF" -> "TX_DATA_REG8.855:NS"	 [cond="['we']",
		label=we,
		lineno=854];
	"COMMAND_REG1.684:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd752245d50>",
		fillcolor=turquoise,
		label="COMMAND_REG1.684:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"COMMAND_REG1.685:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752245f10>",
		fillcolor=springgreen,
		label="COMMAND_REG1.685:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"COMMAND_REG1.684:BL" -> "COMMAND_REG1.685:IF"	 [cond="[]",
		lineno=None];
	"1905:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd77379fa90>",
		fillcolor=springgreen,
		label="1905:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1905:IF" -> "1907:IF"	 [cond="['set_arbitration_lost_irq', 'arbitration_lost_irq_en']",
		label="!((set_arbitration_lost_irq & arbitration_lost_irq_en))",
		lineno=1905];
	"1906:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd77379fa50>",
		fillcolor=firebrick,
		label="1906:NS
arbitration_lost_irq <= #Tp 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd77379fa50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1905:IF" -> "1906:NS"	 [cond="['set_arbitration_lost_irq', 'arbitration_lost_irq_en']",
		label="(set_arbitration_lost_irq & arbitration_lost_irq_en)",
		lineno=1905];
	"1505:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd751d70210>",
		fillcolor=lightcyan,
		label="1505:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1505:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd751d70310>",
		fillcolor=cadetblue,
		label="1505:BS
clkout_div = 3'd0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd751d70310>]",
		style=filled,
		typ=BlockingSubstitution];
	"1505:CA" -> "1505:BS"	 [cond="[]",
		lineno=None];
	"MODE_REG0.686:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752245ed0>",
		fillcolor=firebrick,
		label="MODE_REG0.686:NS
data_out <= #1 RESET_VALUE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752245ed0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"MODE_REG0.Leaf_683:AL"	 [def_var="['data_out']",
		label="MODE_REG0.Leaf_683:AL"];
	"MODE_REG0.686:NS" -> "MODE_REG0.Leaf_683:AL"	 [cond="[]",
		lineno=None];
	"1848:NS" -> "Leaf_1841:AL"	 [cond="[]",
		lineno=None];
	"1809:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737f2910>",
		fillcolor=cadetblue,
		label="1809:BS
data_out = { 3'b001, mode_basic[4:1], mode[0] };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737f2910>]",
		style=filled,
		typ=BlockingSubstitution];
	"1809:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"1225:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd75226e210>",
		def_var="['listen_only_mode']",
		fillcolor=deepskyblue,
		label="1225:AS
listen_only_mode = extended_mode & mode_ext[1];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['extended_mode', 'mode_ext']"];
	"1364:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752267b90>",
		fillcolor=springgreen,
		label="1364:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1365:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752267cd0>",
		fillcolor=firebrick,
		label="1365:NS
transmit_buffer_status <= #Tp 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752267cd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1364:IF" -> "1365:NS"	 [cond="['reset_mode', 'need_to_tx']",
		label="(reset_mode || !need_to_tx)",
		lineno=1364];
	"1937:IF" -> "1938:NS"	 [cond="['irq']",
		label=irq,
		lineno=1937];
	"1817:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd7737fc210>",
		fillcolor=lightcyan,
		label="1817:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1817:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737fc450>",
		fillcolor=cadetblue,
		label="1817:BS
data_out = (reset_mode)? 8'hff : tx_data_0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737fc450>]",
		style=filled,
		typ=BlockingSubstitution];
	"1817:CA" -> "1817:BS"	 [cond="[]",
		lineno=None];
	"ACCEPTANCE_MASK_REG3.854:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752624f90>",
		fillcolor=springgreen,
		label="ACCEPTANCE_MASK_REG3.854:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"ACCEPTANCE_MASK_REG3.855:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>",
		fillcolor=firebrick,
		label="ACCEPTANCE_MASK_REG3.855:NS
data_out <= #1 data_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>]",
		style=filled,
		typ=NonblockingSubstitution];
	"ACCEPTANCE_MASK_REG3.854:IF" -> "ACCEPTANCE_MASK_REG3.855:NS"	 [cond="['we']",
		label=we,
		lineno=854];
	"TX_DATA_REG4.855:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>",
		fillcolor=firebrick,
		label="TX_DATA_REG4.855:NS
data_out <= #1 data_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>]",
		style=filled,
		typ=NonblockingSubstitution];
	"TX_DATA_REG4.Leaf_852:AL"	 [def_var="['data_out']",
		label="TX_DATA_REG4.Leaf_852:AL"];
	"TX_DATA_REG4.855:NS" -> "TX_DATA_REG4.Leaf_852:AL"	 [cond="[]",
		lineno=None];
	"1518:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd751d843d0>",
		clk_sens=True,
		fillcolor=gold,
		label="1518:AL",
		sens="['clk', 'rst']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst', 'clkout_cnt', 'clkout_div']"];
	"Leaf_1518:AL" -> "1518:AL";
	"1530:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd751d84c10>",
		clk_sens=True,
		fillcolor=gold,
		label="1530:AL",
		sens="['clk', 'rst']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst', 'clkout_tmp', 'clkout_cnt', 'clkout_div']"];
	"Leaf_1518:AL" -> "1530:AL";
	"1807:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737f2350>",
		fillcolor=cadetblue,
		label="1807:BS
data_out = { 1'b0, rx_message_counter };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737f2350>]",
		style=filled,
		typ=BlockingSubstitution];
	"1807:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"1798:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737e8a90>",
		fillcolor=cadetblue,
		label="1798:BS
data_out = acceptance_mask_0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737e8a90>]",
		style=filled,
		typ=BlockingSubstitution];
	"1798:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"ACCEPTANCE_MASK_REG0.854:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752624f90>",
		fillcolor=springgreen,
		label="ACCEPTANCE_MASK_REG0.854:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"ACCEPTANCE_MASK_REG0.855:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>",
		fillcolor=firebrick,
		label="ACCEPTANCE_MASK_REG0.855:NS
data_out <= #1 data_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>]",
		style=filled,
		typ=NonblockingSubstitution];
	"ACCEPTANCE_MASK_REG0.854:IF" -> "ACCEPTANCE_MASK_REG0.855:NS"	 [cond="['we']",
		label=we,
		lineno=854];
	"1523:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd751d84890>",
		fillcolor=firebrick,
		label="1523:NS
clkout_cnt <= #Tp 3'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd751d84890>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1523:NS" -> "Leaf_1518:AL"	 [cond="[]",
		lineno=None];
	"1806:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737edf90>",
		fillcolor=cadetblue,
		label="1806:BS
data_out = 8'h0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737edf90>]",
		style=filled,
		typ=BlockingSubstitution];
	"1806:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"1522:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd751d848d0>",
		fillcolor=springgreen,
		label="1522:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1522:IF" -> "1523:NS"	 [cond="['clkout_cnt', 'clkout_div']",
		label="(clkout_cnt == clkout_div)",
		lineno=1522];
	"1525:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd751d84ad0>",
		fillcolor=firebrick,
		label="1525:NS
clkout_cnt <= clkout_cnt + 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd751d84ad0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1522:IF" -> "1525:NS"	 [cond="['clkout_cnt', 'clkout_div']",
		label="!((clkout_cnt == clkout_div))",
		lineno=1522];
	"1348:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd75224d990>",
		fillcolor=turquoise,
		label="1348:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1349:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd75224dad0>",
		fillcolor=springgreen,
		label="1349:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1348:BL" -> "1349:IF"	 [cond="[]",
		lineno=None];
	"TX_DATA_REG5.Leaf_852:AL" -> "1772:AL";
	"1797:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737e87d0>",
		fillcolor=cadetblue,
		label="1797:BS
data_out = acceptance_code_3;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737e87d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"1797:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"TX_DATA_REG7.853:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd7526160d0>",
		fillcolor=turquoise,
		label="TX_DATA_REG7.853:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"TX_DATA_REG7.854:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752624f90>",
		fillcolor=springgreen,
		label="TX_DATA_REG7.854:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"TX_DATA_REG7.853:BL" -> "TX_DATA_REG7.854:IF"	 [cond="[]",
		lineno=None];
	"COMMAND_REG0.685:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752245f10>",
		fillcolor=springgreen,
		label="COMMAND_REG0.685:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"COMMAND_REG0.685:IF" -> "COMMAND_REG0.687:IF"	 [cond="['rst']",
		label="!(rst)",
		lineno=685];
	"COMMAND_REG0.686:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752245ed0>",
		fillcolor=firebrick,
		label="COMMAND_REG0.686:NS
data_out <= #1 RESET_VALUE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752245ed0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"COMMAND_REG0.685:IF" -> "COMMAND_REG0.686:NS"	 [cond="['rst']",
		label=rst,
		lineno=685];
	"1812:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd7737f7090>",
		fillcolor=lightcyan,
		label="1812:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1812:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737f7410>",
		fillcolor=cadetblue,
		label="1812:BS
data_out = { 4'he, irq_reg[3:0] };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737f7410>]",
		style=filled,
		typ=BlockingSubstitution];
	"1812:CA" -> "1812:BS"	 [cond="[]",
		lineno=None];
	"1337:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd75227aad0>",
		def_var="['status']",
		fillcolor=deepskyblue,
		label="1337:AS
status[6] = error_status;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['error_status']"];
	"1337:AS" -> "1772:AL";
	"1786:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd7737df650>",
		fillcolor=lightcyan,
		label="1786:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1786:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737df850>",
		fillcolor=cadetblue,
		label="1786:BS
data_out = irq_en_ext;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737df850>]",
		style=filled,
		typ=BlockingSubstitution];
	"1786:CA" -> "1786:BS"	 [cond="[]",
		lineno=None];
	"ACCEPTANCE_CODE_REG0.853:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd7526160d0>",
		fillcolor=turquoise,
		label="ACCEPTANCE_CODE_REG0.853:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"ACCEPTANCE_CODE_REG0.854:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752624f90>",
		fillcolor=springgreen,
		label="ACCEPTANCE_CODE_REG0.854:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"ACCEPTANCE_CODE_REG0.853:BL" -> "ACCEPTANCE_CODE_REG0.854:IF"	 [cond="[]",
		lineno=None];
	"1350:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd75224db10>",
		fillcolor=firebrick,
		label="1350:NS
transmission_complete <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd75224db10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1349:IF" -> "1350:NS"	 [cond="['rst']",
		label=rst,
		lineno=1349];
	"1351:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752267050>",
		fillcolor=springgreen,
		label="1351:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1349:IF" -> "1351:IF"	 [cond="['rst']",
		label="!(rst)",
		lineno=1349];
	"1336:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd75227a8d0>",
		def_var="['status']",
		fillcolor=deepskyblue,
		label="1336:AS
status[7] = node_bus_off;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['node_bus_off']"];
	"1336:AS" -> "1772:AL";
	"1173:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd752279250>",
		def_var="['we_acceptance_mask_3']",
		fillcolor=deepskyblue,
		label="1173:AS
we_acceptance_mask_3 = cs & we & (addr == 8'd23) & reset_mode & extended_mode;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cs', 'we', 'addr', 'reset_mode', 'extended_mode']"];
	"ACCEPTANCE_MASK_REG3.852:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd752616050>",
		clk_sens=True,
		fillcolor=gold,
		label="ACCEPTANCE_MASK_REG3.852:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['we', 'data_in']"];
	"1173:AS" -> "ACCEPTANCE_MASK_REG3.852:AL";
	"1280:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd75227fb90>",
		fillcolor=firebrick,
		label="1280:NS
self_rx_request <= #Tp 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd75227fb90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_1275:AL"	 [def_var="['self_rx_request']",
		label="Leaf_1275:AL"];
	"1280:NS" -> "Leaf_1275:AL"	 [cond="[]",
		lineno=None];
	"1151:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd7524f0a90>",
		def_var="['we_tx_data_4']",
		fillcolor=deepskyblue,
		label="1151:AS
we_tx_data_4 = cs & we & ~reset_mode & (~extended_mode & (addr == 8'd14) | extended_mode & (addr == 8'd20)) & transmit_buffer_\
status;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cs', 'we', 'reset_mode', 'extended_mode', 'addr', 'extended_mode', 'addr', 'transmit_buffer_status']"];
	"TX_DATA_REG4.852:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd752616050>",
		clk_sens=True,
		fillcolor=gold,
		label="TX_DATA_REG4.852:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['we', 'data_in']"];
	"1151:AS" -> "TX_DATA_REG4.852:AL";
	"1884:NS" -> "Leaf_1877:AL"	 [cond="[]",
		lineno=None];
	"1857:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd773790910>",
		fillcolor=springgreen,
		label="1857:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1858:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd7737908d0>",
		fillcolor=firebrick,
		label="1858:NS
transmit_irq <= #Tp 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd7737908d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1857:IF" -> "1858:NS"	 [cond="['reset_mode', 'read_irq_reg']",
		label="(reset_mode || read_irq_reg)",
		lineno=1857];
	"1859:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd773790cd0>",
		fillcolor=springgreen,
		label="1859:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1857:IF" -> "1859:IF"	 [cond="['reset_mode', 'read_irq_reg']",
		label="!((reset_mode || read_irq_reg))",
		lineno=1857];
	"1936:NS" -> "Leaf_1931:AL"	 [cond="[]",
		lineno=None];
	"1787:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737dfb10>",
		fillcolor=cadetblue,
		label="1787:BS
data_out = bus_timing_0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737dfb10>]",
		style=filled,
		typ=BlockingSubstitution];
	"1787:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"CLOCK_DIVIDER_REG_7.515:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752633ad0>",
		fillcolor=springgreen,
		label="CLOCK_DIVIDER_REG_7.515:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"CLOCK_DIVIDER_REG_7.513:IF" -> "CLOCK_DIVIDER_REG_7.515:IF"	 [cond="['rst']",
		label="!(rst)",
		lineno=513];
	"CLOCK_DIVIDER_REG_7.514:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd7526334d0>",
		fillcolor=firebrick,
		label="CLOCK_DIVIDER_REG_7.514:NS
data_out <= #1 RESET_VALUE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd7526334d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"CLOCK_DIVIDER_REG_7.513:IF" -> "CLOCK_DIVIDER_REG_7.514:NS"	 [cond="['rst']",
		label=rst,
		lineno=513];
	"1837:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd77380b250>",
		def_var="['receive_irq_en']",
		fillcolor=deepskyblue,
		label="1837:AS
receive_irq_en = (extended_mode)? receive_irq_en_ext : receive_irq_en_basic;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['extended_mode', 'receive_irq_en_ext', 'receive_irq_en_basic']"];
	"1417:AS" -> "1837:AS";
	"COMMAND_REG4.690:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752624510>",
		fillcolor=firebrick,
		label="COMMAND_REG4.690:NS
data_out <= #1 data_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752624510>]",
		style=filled,
		typ=NonblockingSubstitution];
	"COMMAND_REG4.Leaf_683:AL"	 [def_var="['data_out']",
		label="COMMAND_REG4.Leaf_683:AL"];
	"COMMAND_REG4.690:NS" -> "COMMAND_REG4.Leaf_683:AL"	 [cond="[]",
		lineno=None];
	"1178:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd752279450>",
		clk_sens=True,
		fillcolor=gold,
		label="1178:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['node_error_passive', 'tx_successful', 'error_status', 'transmit_buffer_status', 'node_bus_off', 'overrun']"];
	"1179:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd752279e90>",
		fillcolor=turquoise,
		label="1179:BL
tx_successful_q <= #Tp tx_successful;
overrun_q <= #Tp overrun;
transmit_buffer_status_q <= #Tp transmit_buffer_status;
\
error_status_q <= #Tp error_status;
node_bus_off_q <= #Tp node_bus_off;
node_error_passive_q <= #Tp node_error_passive;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd7522795d0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7fd752279790>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd7522799d0>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7fd752279c10>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752279e50>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7fd75225d0d0>]",
		style=filled,
		typ=Block];
	"1178:AL" -> "1179:BL"	 [cond="[]",
		lineno=None];
	"Leaf_1853:AL"	 [def_var="['transmit_irq']",
		label="Leaf_1853:AL"];
	"Leaf_1853:AL" -> "1928:AS";
	"Leaf_1853:AL" -> "1926:AS";
	"1289:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd752275790>",
		def_var="['abort_tx']",
		fillcolor=deepskyblue,
		label="1289:AS
abort_tx = command[1] & ~tx_request;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['command', 'tx_request']"];
	"COMMAND_REG1.683:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd752245d10>",
		clk_sens=True,
		fillcolor=gold,
		label="COMMAND_REG1.683:AL",
		sens="['clk', 'rst']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst', 'we', 'rst_sync', 'data_in']"];
	"1289:AS" -> "COMMAND_REG1.683:AL";
	"1347:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd75224d950>",
		clk_sens=True,
		fillcolor=gold,
		label="1347:AL",
		sens="['clk', 'rst']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst', 'tx_successful', 'tx_request', 'tx_successful_q', 'abort_tx']"];
	"1289:AS" -> "1347:AL";
	"1854:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd773790390>",
		fillcolor=turquoise,
		label="1854:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1855:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd7737904d0>",
		fillcolor=springgreen,
		label="1855:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1854:BL" -> "1855:IF"	 [cond="[]",
		lineno=None];
	"Leaf_1865:AL"	 [def_var="['receive_irq']",
		label="Leaf_1865:AL"];
	"1868:NS" -> "Leaf_1865:AL"	 [cond="[]",
		lineno=None];
	"1804:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737eda90>",
		fillcolor=cadetblue,
		label="1804:BS
data_out = 8'h0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737eda90>]",
		style=filled,
		typ=BlockingSubstitution];
	"1804:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"BUS_TIMING_0_REG.853:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd7526160d0>",
		fillcolor=turquoise,
		label="BUS_TIMING_0_REG.853:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"BUS_TIMING_0_REG.854:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752624f90>",
		fillcolor=springgreen,
		label="BUS_TIMING_0_REG.854:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"BUS_TIMING_0_REG.853:BL" -> "BUS_TIMING_0_REG.854:IF"	 [cond="[]",
		lineno=None];
	"1145:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd752207c10>",
		def_var="['we_acceptance_code_0']",
		fillcolor=deepskyblue,
		label="1145:AS
we_acceptance_code_0 = cs & we & reset_mode & (~extended_mode & (addr == 8'd4) | extended_mode & (addr == 8'd16));",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cs', 'we', 'reset_mode', 'extended_mode', 'addr', 'extended_mode', 'addr']"];
	"ACCEPTANCE_CODE_REG0.852:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd752616050>",
		clk_sens=True,
		fillcolor=gold,
		label="ACCEPTANCE_CODE_REG0.852:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['we', 'data_in']"];
	"1145:AS" -> "ACCEPTANCE_CODE_REG0.852:AL";
	"Leaf_1530:AL"	 [def_var="['clkout_tmp']",
		label="Leaf_1530:AL"];
	"Leaf_1530:AL" -> "1530:AL";
	"1539:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd751d6a1d0>",
		def_var="['clkout']",
		fillcolor=deepskyblue,
		label="1539:AS
clkout = (clock_off)? 1'b1 : 
(&cd)? clk : clkout_tmp;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['clock_off', 'cd', 'clk', 'clkout_tmp']"];
	"Leaf_1530:AL" -> "1539:AS";
	"1359:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd752267450>",
		fillcolor=turquoise,
		label="1359:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1359:BL" -> "1360:IF"	 [cond="[]",
		lineno=None];
	"MODE_REG0.690:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752624510>",
		fillcolor=firebrick,
		label="MODE_REG0.690:NS
data_out <= #1 data_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752624510>]",
		style=filled,
		typ=NonblockingSubstitution];
	"MODE_REG0.690:NS" -> "MODE_REG0.Leaf_683:AL"	 [cond="[]",
		lineno=None];
	"Leaf_1347:AL"	 [def_var="['transmission_complete']",
		label="Leaf_1347:AL"];
	"1340:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd75224d110>",
		def_var="['status']",
		fillcolor=deepskyblue,
		label="1340:AS
status[3] = transmission_complete;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['transmission_complete']"];
	"Leaf_1347:AL" -> "1340:AS";
	"1846:NS" -> "Leaf_1841:AL"	 [cond="[]",
		lineno=None];
	"1498:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd751d51e90>",
		def_var="['cd']",
		fillcolor=deepskyblue,
		label="1498:AS
cd[2:0] = clock_divider[2:0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['clock_divider']"];
	"1502:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd751d70090>",
		clk_sens=False,
		fillcolor=gold,
		label="1502:AL",
		sens="['cd']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['cd']"];
	"1498:AS" -> "1502:AL";
	"1498:AS" -> "1539:AS";
	"ERROR_WARNING_REG.512:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd75264b890>",
		fillcolor=turquoise,
		label="ERROR_WARNING_REG.512:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"ERROR_WARNING_REG.513:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752633650>",
		fillcolor=springgreen,
		label="ERROR_WARNING_REG.513:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"ERROR_WARNING_REG.512:BL" -> "ERROR_WARNING_REG.513:IF"	 [cond="[]",
		lineno=None];
	"CLOCK_DIVIDER_REG_7.Leaf_511:AL"	 [def_var="['data_out']",
		label="CLOCK_DIVIDER_REG_7.Leaf_511:AL"];
	"Leaf_1865:AL" -> "1928:AS";
	"1865:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd773790fd0>",
		clk_sens=True,
		fillcolor=gold,
		label="1865:AL",
		sens="['clk', 'rst']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset_mode', 'receive_irq_en', 'release_buffer', 'receive_irq', 'rst', 'info_empty']"];
	"Leaf_1865:AL" -> "1865:AL";
	"Leaf_1865:AL" -> "1926:AS";
	"COMMAND_REG1.690:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752624510>",
		fillcolor=firebrick,
		label="COMMAND_REG1.690:NS
data_out <= #1 data_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752624510>]",
		style=filled,
		typ=NonblockingSubstitution];
	"COMMAND_REG1.Leaf_683:AL"	 [def_var="['data_out']",
		label="COMMAND_REG1.Leaf_683:AL"];
	"COMMAND_REG1.690:NS" -> "COMMAND_REG1.Leaf_683:AL"	 [cond="[]",
		lineno=None];
	"1934:NS" -> "Leaf_1931:AL"	 [cond="[]",
		lineno=None];
	"1882:NS" -> "Leaf_1877:AL"	 [cond="[]",
		lineno=None];
	"1354:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752267350>",
		fillcolor=firebrick,
		label="1354:NS
transmission_complete <= #Tp 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752267350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1354:NS" -> "Leaf_1347:AL"	 [cond="[]",
		lineno=None];
	"1232:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd75226ef90>",
		def_var="['overrun_irq_en_basic']",
		fillcolor=deepskyblue,
		label="1232:AS
overrun_irq_en_basic = mode_basic[4];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['mode_basic']"];
	"1232:AS" -> "1834:AS";
	"ACCEPTANCE_CODE_REG3.Leaf_852:AL"	 [def_var="['data_out']",
		label="ACCEPTANCE_CODE_REG3.Leaf_852:AL"];
	"ACCEPTANCE_CODE_REG3.855:NS" -> "ACCEPTANCE_CODE_REG3.Leaf_852:AL"	 [cond="[]",
		lineno=None];
	"1508:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd751d70910>",
		fillcolor=cadetblue,
		label="1508:BS
clkout_div = 3'd3;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd751d70910>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_1502:AL"	 [def_var="['clkout_div']",
		label="Leaf_1502:AL"];
	"1508:BS" -> "Leaf_1502:AL"	 [cond="[]",
		lineno=None];
	"TX_DATA_REG2.Leaf_852:AL"	 [def_var="['data_out']",
		label="TX_DATA_REG2.Leaf_852:AL"];
	"TX_DATA_REG2.Leaf_852:AL" -> "1772:AL";
	"1860:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd773790e10>",
		fillcolor=firebrick,
		label="1860:NS
transmit_irq <= #Tp 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd773790e10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1860:NS" -> "Leaf_1853:AL"	 [cond="[]",
		lineno=None];
	"1381:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd751d678d0>",
		fillcolor=turquoise,
		label="1381:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1382:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd751d67a10>",
		fillcolor=springgreen,
		label="1382:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1381:BL" -> "1382:IF"	 [cond="[]",
		lineno=None];
	"1386:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd751d64090>",
		fillcolor=springgreen,
		label="1386:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1387:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd751d641d0>",
		fillcolor=firebrick,
		label="1387:NS
receive_buffer_status <= #Tp 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd751d641d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1386:IF" -> "1387:NS"	 [cond="['info_empty']",
		label="(~info_empty)",
		lineno=1386];
	"1287:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd752275250>",
		def_var="['release_buffer']",
		fillcolor=deepskyblue,
		label="1287:AS
release_buffer = command[2];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['command']"];
	"1380:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd751d67890>",
		clk_sens=True,
		fillcolor=gold,
		label="1380:AL",
		sens="['clk', 'rst']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst', 'reset_mode', 'info_empty', 'release_buffer']"];
	"1287:AS" -> "1380:AL";
	"1287:AS" -> "1865:AL";
	"1931:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd7737a98d0>",
		clk_sens=True,
		fillcolor=gold,
		label="1931:AL",
		sens="['clk', 'rst']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['read_irq_reg', 'irq', 'release_buffer', 'rst']"];
	"1287:AS" -> "1931:AL";
	"ACCEPTANCE_MASK_REG2.Leaf_852:AL" -> "1772:AL";
	"1794:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd7737e3d10>",
		fillcolor=lightcyan,
		label="1794:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1794:CA" -> "1794:BS"	 [cond="[]",
		lineno=None];
	"1917:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd7737a4250>",
		fillcolor=firebrick,
		label="1917:NS
error_passive_irq <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd7737a4250>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_1914:AL"	 [def_var="['error_passive_irq']",
		label="Leaf_1914:AL"];
	"1917:NS" -> "Leaf_1914:AL"	 [cond="[]",
		lineno=None];
	"TX_DATA_REG4.Leaf_852:AL" -> "1772:AL";
	"1380:AL" -> "1381:BL"	 [cond="[]",
		lineno=None];
	"1535:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd751d6a110>",
		fillcolor=firebrick,
		label="1535:NS
clkout_tmp <= #Tp ~clkout_tmp;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd751d6a110>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1534:IF" -> "1535:NS"	 [cond="['clkout_cnt', 'clkout_div']",
		label="(clkout_cnt == clkout_div)",
		lineno=1534];
	"1827:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd773805310>",
		fillcolor=lightcyan,
		label="1827:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1827:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd773805550>",
		fillcolor=cadetblue,
		label="1827:BS
data_out = clock_divider;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd773805550>]",
		style=filled,
		typ=BlockingSubstitution];
	"1827:CA" -> "1827:BS"	 [cond="[]",
		lineno=None];
	"1374:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd751d67390>",
		fillcolor=firebrick,
		label="1374:NS
overrun_status <= #Tp 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd751d67390>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1374:NS" -> "Leaf_1369:AL"	 [cond="[]",
		lineno=None];
	"COMMAND_REG.689:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752624390>",
		fillcolor=springgreen,
		label="COMMAND_REG.689:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"COMMAND_REG.690:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752624510>",
		fillcolor=firebrick,
		label="COMMAND_REG.690:NS
data_out <= #1 data_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752624510>]",
		style=filled,
		typ=NonblockingSubstitution];
	"COMMAND_REG.689:IF" -> "COMMAND_REG.690:NS"	 [cond="['we']",
		label=we,
		lineno=689];
	"1827:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"1226:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd75226e4d0>",
		def_var="['self_test_mode']",
		fillcolor=deepskyblue,
		label="1226:AS
self_test_mode = extended_mode & mode_ext[2];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['extended_mode', 'mode_ext']"];
	"1446:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd751d52490>",
		def_var="['triple_sampling']",
		fillcolor=deepskyblue,
		label="1446:AS
triple_sampling = bus_timing_1[7];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['bus_timing_1']"];
	"1168:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd752506a10>",
		def_var="['we_acceptance_code_1']",
		fillcolor=deepskyblue,
		label="1168:AS
we_acceptance_code_1 = cs & we & (addr == 8'd17) & reset_mode & extended_mode;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cs', 'we', 'addr', 'reset_mode', 'extended_mode']"];
	"ACCEPTANCE_CODE_REG1.852:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd752616050>",
		clk_sens=True,
		fillcolor=gold,
		label="ACCEPTANCE_CODE_REG1.852:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['we', 'data_in']"];
	"1168:AS" -> "ACCEPTANCE_CODE_REG1.852:AL";
	"COMMAND_REG1.683:AL" -> "COMMAND_REG1.684:BL"	 [cond="[]",
		lineno=None];
	"1147:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd75220ab10>",
		def_var="['we_tx_data_0']",
		fillcolor=deepskyblue,
		label="1147:AS
we_tx_data_0 = cs & we & ~reset_mode & (~extended_mode & (addr == 8'd10) | extended_mode & (addr == 8'd16)) & transmit_buffer_\
status;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cs', 'we', 'reset_mode', 'extended_mode', 'addr', 'extended_mode', 'addr', 'transmit_buffer_status']"];
	"TX_DATA_REG0.852:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd752616050>",
		clk_sens=True,
		fillcolor=gold,
		label="TX_DATA_REG0.852:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['we', 'data_in']"];
	"1147:AS" -> "TX_DATA_REG0.852:AL";
	"1798:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd7737e8850>",
		fillcolor=lightcyan,
		label="1798:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1798:CA" -> "1798:BS"	 [cond="[]",
		lineno=None];
	"1914:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd7737a4090>",
		clk_sens=True,
		fillcolor=gold,
		label="1914:AL",
		sens="['clk', 'rst']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['read_irq_reg', 'error_passive_irq_en', 'node_error_active', 'reset_mode', 'node_error_passive_q', 'node_error_passive', 'rst']"];
	"1914:AL" -> "1915:BL"	 [cond="[]",
		lineno=None];
	"1788:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737dfdd0>",
		fillcolor=cadetblue,
		label="1788:BS
data_out = bus_timing_1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737dfdd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"1788:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"TX_DATA_REG8.853:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd7526160d0>",
		fillcolor=turquoise,
		label="TX_DATA_REG8.853:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"TX_DATA_REG8.853:BL" -> "TX_DATA_REG8.854:IF"	 [cond="[]",
		lineno=None];
	"1890:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd77379b8d0>",
		fillcolor=turquoise,
		label="1890:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1891:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd77379ba10>",
		fillcolor=springgreen,
		label="1891:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1890:BL" -> "1891:IF"	 [cond="[]",
		lineno=None];
	"1224:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd752285f10>",
		def_var="['reset_mode']",
		fillcolor=deepskyblue,
		label="1224:AS
reset_mode = mode[0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['mode']"];
	"MODE_REG0.Leaf_683:AL" -> "1224:AS";
	"MODE_REG0.Leaf_683:AL" -> "1772:AL";
	"1347:AL" -> "1348:BL"	 [cond="[]",
		lineno=None];
	"TX_DATA_REG5.852:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd752616050>",
		clk_sens=True,
		fillcolor=gold,
		label="TX_DATA_REG5.852:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['we', 'data_in']"];
	"TX_DATA_REG5.853:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd7526160d0>",
		fillcolor=turquoise,
		label="TX_DATA_REG5.853:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"TX_DATA_REG5.852:AL" -> "TX_DATA_REG5.853:BL"	 [cond="[]",
		lineno=None];
	"MODE_REG_BASIC.516:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd754a92f50>",
		fillcolor=firebrick,
		label="MODE_REG_BASIC.516:NS
data_out <= #1 data_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd754a92f50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"MODE_REG_BASIC.Leaf_511:AL"	 [def_var="['data_out']",
		label="MODE_REG_BASIC.Leaf_511:AL"];
	"MODE_REG_BASIC.516:NS" -> "MODE_REG_BASIC.Leaf_511:AL"	 [cond="[]",
		lineno=None];
	"1820:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd7737fcbd0>",
		fillcolor=lightcyan,
		label="1820:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1820:CA" -> "1820:BS"	 [cond="[]",
		lineno=None];
	"1824:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"ACCEPTANCE_CODE_REG1.853:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd7526160d0>",
		fillcolor=turquoise,
		label="ACCEPTANCE_CODE_REG1.853:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"ACCEPTANCE_CODE_REG1.854:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752624f90>",
		fillcolor=springgreen,
		label="ACCEPTANCE_CODE_REG1.854:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"ACCEPTANCE_CODE_REG1.853:BL" -> "ACCEPTANCE_CODE_REG1.854:IF"	 [cond="[]",
		lineno=None];
	"1445:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd751d52210>",
		def_var="['time_segment2']",
		fillcolor=deepskyblue,
		label="1445:AS
time_segment2 = bus_timing_1[6:4];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['bus_timing_1']"];
	"COMMAND_REG1.686:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752245ed0>",
		fillcolor=firebrick,
		label="COMMAND_REG1.686:NS
data_out <= #1 RESET_VALUE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752245ed0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"COMMAND_REG1.686:NS" -> "COMMAND_REG1.Leaf_683:AL"	 [cond="[]",
		lineno=None];
	"1801:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737ed310>",
		fillcolor=cadetblue,
		label="1801:BS
data_out = acceptance_mask_3;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737ed310>]",
		style=filled,
		typ=BlockingSubstitution];
	"1801:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"1916:IF" -> "1917:NS"	 [cond="['rst']",
		label=rst,
		lineno=1916];
	"1918:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd7737a4a10>",
		fillcolor=springgreen,
		label="1918:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1916:IF" -> "1918:IF"	 [cond="['rst']",
		label="!(rst)",
		lineno=1916];
	"1352:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd75224dfd0>",
		fillcolor=firebrick,
		label="1352:NS
transmission_complete <= #Tp 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd75224dfd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1352:NS" -> "Leaf_1347:AL"	 [cond="[]",
		lineno=None];
	"TX_DATA_REG3.854:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752624f90>",
		fillcolor=springgreen,
		label="TX_DATA_REG3.854:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"TX_DATA_REG3.853:BL" -> "TX_DATA_REG3.854:IF"	 [cond="[]",
		lineno=None];
	"1815:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"Leaf_1292:AL"	 [def_var="['single_shot_transmission']",
		label="Leaf_1292:AL"];
	"1866:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd773790f90>",
		fillcolor=turquoise,
		label="1866:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1866:BL" -> "1867:IF"	 [cond="[]",
		lineno=None];
	"1810:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737f2cd0>",
		fillcolor=cadetblue,
		label="1810:BS
data_out = 8'hff;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737f2cd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"1810:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"1928:AS" -> "1931:AL";
	"1784:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737df350>",
		fillcolor=cadetblue,
		label="1784:BS
data_out = status;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737df350>]",
		style=filled,
		typ=BlockingSubstitution];
	"1784:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"1799:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737e8d50>",
		fillcolor=cadetblue,
		label="1799:BS
data_out = acceptance_mask_1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737e8d50>]",
		style=filled,
		typ=BlockingSubstitution];
	"1799:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"1142:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd752207610>",
		def_var="['read_error_code_capture_reg']",
		fillcolor=deepskyblue,
		label="1142:AS
read_error_code_capture_reg = read & extended_mode & (addr == 8'd12);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['read', 'extended_mode', 'addr']"];
	"1823:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd773801810>",
		fillcolor=cadetblue,
		label="1823:BS
data_out = (reset_mode)? 8'hff : tx_data_6;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd773801810>]",
		style=filled,
		typ=BlockingSubstitution];
	"1823:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"1519:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd751d84410>",
		fillcolor=turquoise,
		label="1519:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1520:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd751d84510>",
		fillcolor=springgreen,
		label="1520:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1519:BL" -> "1520:IF"	 [cond="[]",
		lineno=None];
	"1415:AS" -> "1835:AS";
	"1783:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd7737d8ed0>",
		fillcolor=lightcyan,
		label="1783:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1783:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737df110>",
		fillcolor=cadetblue,
		label="1783:BS
data_out = 8'h0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737df110>]",
		style=filled,
		typ=BlockingSubstitution];
	"1783:CA" -> "1783:BS"	 [cond="[]",
		lineno=None];
	"1865:AL" -> "1866:BL"	 [cond="[]",
		lineno=None];
	"1816:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd7737f7e50>",
		fillcolor=lightcyan,
		label="1816:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1816:CA" -> "1816:BS"	 [cond="[]",
		lineno=None];
	"1811:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737f2f50>",
		fillcolor=cadetblue,
		label="1811:BS
data_out = status;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737f2f50>]",
		style=filled,
		typ=BlockingSubstitution];
	"1811:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"1802:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd7737ed390>",
		fillcolor=lightcyan,
		label="1802:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1802:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737ed590>",
		fillcolor=cadetblue,
		label="1802:BS
data_out = 8'h0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737ed590>]",
		style=filled,
		typ=BlockingSubstitution];
	"1802:CA" -> "1802:BS"	 [cond="[]",
		lineno=None];
	"CLOCK_DIVIDER_REG_7.511:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd752f2c4d0>",
		clk_sens=True,
		fillcolor=gold,
		label="CLOCK_DIVIDER_REG_7.511:AL",
		sens="['clk', 'rst']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst', 'we', 'data_in']"];
	"CLOCK_DIVIDER_REG_7.511:AL" -> "CLOCK_DIVIDER_REG_7.512:BL"	 [cond="[]",
		lineno=None];
	"TX_DATA_REG6.853:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd7526160d0>",
		fillcolor=turquoise,
		label="TX_DATA_REG6.853:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"TX_DATA_REG6.853:BL" -> "TX_DATA_REG6.854:IF"	 [cond="[]",
		lineno=None];
	"1853:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd773790350>",
		clk_sens=True,
		fillcolor=gold,
		label="1853:AL",
		sens="['clk', 'rst']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['read_irq_reg', 'transmit_buffer_status', 'transmit_buffer_status_q', 'reset_mode', 'rst', 'transmit_irq_en']"];
	"1853:AL" -> "1854:BL"	 [cond="[]",
		lineno=None];
	"1792:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"1275:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd75227f510>",
		clk_sens=True,
		fillcolor=gold,
		label="1275:AL",
		sens="['clk', 'rst']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst', 'command', 'tx_state_q', 'tx_state']"];
	"1276:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd75227f550>",
		fillcolor=turquoise,
		label="1276:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1275:AL" -> "1276:BL"	 [cond="[]",
		lineno=None];
	"1902:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd77379f4d0>",
		fillcolor=turquoise,
		label="1902:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1903:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd77379f610>",
		fillcolor=springgreen,
		label="1903:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1902:BL" -> "1903:IF"	 [cond="[]",
		lineno=None];
	"1880:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd773795d10>",
		fillcolor=firebrick,
		label="1880:NS
error_irq <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd773795d10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1880:NS" -> "Leaf_1877:AL"	 [cond="[]",
		lineno=None];
	"1782:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737d8cd0>",
		fillcolor=cadetblue,
		label="1782:BS
data_out = { 4'b0000, mode_ext[3:1], mode[0] };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737d8cd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"1782:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"ACCEPTANCE_CODE_REG1.855:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>",
		fillcolor=firebrick,
		label="ACCEPTANCE_CODE_REG1.855:NS
data_out <= #1 data_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>]",
		style=filled,
		typ=NonblockingSubstitution];
	"ACCEPTANCE_CODE_REG1.854:IF" -> "ACCEPTANCE_CODE_REG1.855:NS"	 [cond="['we']",
		label=we,
		lineno=854];
	"1807:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd7737f2050>",
		fillcolor=lightcyan,
		label="1807:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1807:CA" -> "1807:BS"	 [cond="[]",
		lineno=None];
	"1370:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd752267e10>",
		fillcolor=turquoise,
		label="1370:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1371:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752267f50>",
		fillcolor=springgreen,
		label="1371:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1370:BL" -> "1371:IF"	 [cond="[]",
		lineno=None];
	"TX_DATA_REG0.853:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd7526160d0>",
		fillcolor=turquoise,
		label="TX_DATA_REG0.853:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"TX_DATA_REG0.854:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752624f90>",
		fillcolor=springgreen,
		label="TX_DATA_REG0.854:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"TX_DATA_REG0.853:BL" -> "TX_DATA_REG0.854:IF"	 [cond="[]",
		lineno=None];
	"BUS_TIMING_0_REG.852:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd752616050>",
		clk_sens=True,
		fillcolor=gold,
		label="BUS_TIMING_0_REG.852:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['we', 'data_in']"];
	"BUS_TIMING_0_REG.852:AL" -> "BUS_TIMING_0_REG.853:BL"	 [cond="[]",
		lineno=None];
	"ACCEPTANCE_CODE_REG1.Leaf_852:AL"	 [def_var="['data_out']",
		label="ACCEPTANCE_CODE_REG1.Leaf_852:AL"];
	"ACCEPTANCE_CODE_REG1.Leaf_852:AL" -> "1772:AL";
	"1159:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd7524f5390>",
		def_var="['we_tx_data_12']",
		fillcolor=deepskyblue,
		label="1159:AS
we_tx_data_12 = cs & we & ~reset_mode & (extended_mode & (addr == 8'd28)) & transmit_buffer_status;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cs', 'we', 'reset_mode', 'extended_mode', 'addr', 'transmit_buffer_status']"];
	"TX_DATA_REG12.852:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd752616050>",
		clk_sens=True,
		fillcolor=gold,
		label="TX_DATA_REG12.852:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['we', 'data_in']"];
	"1159:AS" -> "TX_DATA_REG12.852:AL";
	"TX_DATA_REG9.Leaf_852:AL"	 [def_var="['data_out']",
		label="TX_DATA_REG9.Leaf_852:AL"];
	"TX_DATA_REG9.Leaf_852:AL" -> "1772:AL";
	"1170:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd75226b3d0>",
		def_var="['we_acceptance_code_3']",
		fillcolor=deepskyblue,
		label="1170:AS
we_acceptance_code_3 = cs & we & (addr == 8'd19) & reset_mode & extended_mode;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cs', 'we', 'addr', 'reset_mode', 'extended_mode']"];
	"ACCEPTANCE_CODE_REG3.852:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd752616050>",
		clk_sens=True,
		fillcolor=gold,
		label="ACCEPTANCE_CODE_REG3.852:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['we', 'data_in']"];
	"1170:AS" -> "ACCEPTANCE_CODE_REG3.852:AL";
	"1512:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd751d84050>",
		fillcolor=lightcyan,
		label="1512:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1512:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd751d84150>",
		fillcolor=cadetblue,
		label="1512:BS
clkout_div = 3'd0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd751d84150>]",
		style=filled,
		typ=BlockingSubstitution];
	"1512:CA" -> "1512:BS"	 [cond="[]",
		lineno=None];
	"1137:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd7521df990>",
		def_var="['we_clock_divider_hi']",
		fillcolor=deepskyblue,
		label="1137:AS
we_clock_divider_hi = we_clock_divider_low & reset_mode;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['we_clock_divider_low', 'reset_mode']"];
	"1137:AS" -> "CLOCK_DIVIDER_REG_7.511:AL";
	"CLOCK_DIVIDER_REG_3.511:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd752f2c4d0>",
		clk_sens=True,
		fillcolor=gold,
		label="CLOCK_DIVIDER_REG_3.511:AL",
		sens="['clk', 'rst']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst', 'we', 'data_in']"];
	"1137:AS" -> "CLOCK_DIVIDER_REG_3.511:AL";
	"COMMAND_REG.684:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd752245d50>",
		fillcolor=turquoise,
		label="COMMAND_REG.684:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"COMMAND_REG.684:BL" -> "COMMAND_REG.685:IF"	 [cond="[]",
		lineno=None];
	"1152:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd7524fc290>",
		def_var="['we_tx_data_5']",
		fillcolor=deepskyblue,
		label="1152:AS
we_tx_data_5 = cs & we & ~reset_mode & (~extended_mode & (addr == 8'd15) | extended_mode & (addr == 8'd21)) & transmit_buffer_\
status;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cs', 'we', 'reset_mode', 'extended_mode', 'addr', 'extended_mode', 'addr', 'transmit_buffer_status']"];
	"1152:AS" -> "TX_DATA_REG5.852:AL";
	"1797:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd7737e8590>",
		fillcolor=lightcyan,
		label="1797:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1797:CA" -> "1797:BS"	 [cond="[]",
		lineno=None];
	"1818:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd7737fc550>",
		fillcolor=lightcyan,
		label="1818:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1818:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737fc790>",
		fillcolor=cadetblue,
		label="1818:BS
data_out = (reset_mode)? 8'hff : tx_data_1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737fc790>]",
		style=filled,
		typ=BlockingSubstitution];
	"1818:CA" -> "1818:BS"	 [cond="[]",
		lineno=None];
	"1926:AS" -> "1772:AL";
	"1507:BS" -> "Leaf_1502:AL"	 [cond="[]",
		lineno=None];
	"Leaf_1502:AL" -> "1518:AL";
	"Leaf_1502:AL" -> "1530:AL";
	"TX_DATA_REG4.853:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd7526160d0>",
		fillcolor=turquoise,
		label="TX_DATA_REG4.853:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"TX_DATA_REG4.854:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752624f90>",
		fillcolor=springgreen,
		label="TX_DATA_REG4.854:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"TX_DATA_REG4.853:BL" -> "TX_DATA_REG4.854:IF"	 [cond="[]",
		lineno=None];
	"TX_DATA_REG4.854:IF" -> "TX_DATA_REG4.855:NS"	 [cond="['we']",
		label=we,
		lineno=854];
	"1509:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd751d70a10>",
		fillcolor=lightcyan,
		label="1509:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1509:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd751d70b10>",
		fillcolor=cadetblue,
		label="1509:BS
clkout_div = 3'd4;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd751d70b10>]",
		style=filled,
		typ=BlockingSubstitution];
	"1509:CA" -> "1509:BS"	 [cond="[]",
		lineno=None];
	"1819:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd7737fc890>",
		fillcolor=lightcyan,
		label="1819:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1819:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737fcad0>",
		fillcolor=cadetblue,
		label="1819:BS
data_out = (reset_mode)? 8'hff : tx_data_2;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737fcad0>]",
		style=filled,
		typ=BlockingSubstitution];
	"1819:CA" -> "1819:BS"	 [cond="[]",
		lineno=None];
	"TX_DATA_REG0.852:AL" -> "TX_DATA_REG0.853:BL"	 [cond="[]",
		lineno=None];
	"IRQ_EN_REG.855:NS" -> "IRQ_EN_REG.Leaf_852:AL"	 [cond="[]",
		lineno=None];
	"ERROR_WARNING_REG.514:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd7526334d0>",
		fillcolor=firebrick,
		label="ERROR_WARNING_REG.514:NS
data_out <= #1 RESET_VALUE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd7526334d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"ERROR_WARNING_REG.514:NS" -> "ERROR_WARNING_REG.Leaf_511:AL"	 [cond="[]",
		lineno=None];
	"1856:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd773790510>",
		fillcolor=firebrick,
		label="1856:NS
transmit_irq <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd773790510>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1856:NS" -> "Leaf_1853:AL"	 [cond="[]",
		lineno=None];
	"1510:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd751d70c10>",
		fillcolor=lightcyan,
		label="1510:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1510:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd751d70d10>",
		fillcolor=cadetblue,
		label="1510:BS
clkout_div = 3'd5;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd751d70d10>]",
		style=filled,
		typ=BlockingSubstitution];
	"1510:CA" -> "1510:BS"	 [cond="[]",
		lineno=None];
	"1879:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd773795cd0>",
		fillcolor=springgreen,
		label="1879:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1879:IF" -> "1881:IF"	 [cond="['rst']",
		label="!(rst)",
		lineno=1879];
	"1879:IF" -> "1880:NS"	 [cond="['rst']",
		label=rst,
		lineno=1879];
	"1826:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"1362:IF" -> "1364:IF"	 [cond="['tx_request']",
		label="!(tx_request)",
		lineno=1362];
	"1363:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd7522678d0>",
		fillcolor=firebrick,
		label="1363:NS
transmit_buffer_status <= #Tp 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd7522678d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1362:IF" -> "1363:NS"	 [cond="['tx_request']",
		label=tx_request,
		lineno=1362];
	"CLOCK_DIVIDER_REG_LOW.511:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd752f2c4d0>",
		clk_sens=True,
		fillcolor=gold,
		label="CLOCK_DIVIDER_REG_LOW.511:AL",
		sens="['clk', 'rst']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst', 'we', 'data_in']"];
	"CLOCK_DIVIDER_REG_LOW.512:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd75264b890>",
		fillcolor=turquoise,
		label="CLOCK_DIVIDER_REG_LOW.512:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"CLOCK_DIVIDER_REG_LOW.511:AL" -> "CLOCK_DIVIDER_REG_LOW.512:BL"	 [cond="[]",
		lineno=None];
	"MODE_REG_BASIC.513:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752633650>",
		fillcolor=springgreen,
		label="MODE_REG_BASIC.513:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"MODE_REG_BASIC.515:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752633ad0>",
		fillcolor=springgreen,
		label="MODE_REG_BASIC.515:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"MODE_REG_BASIC.513:IF" -> "MODE_REG_BASIC.515:IF"	 [cond="['rst']",
		label="!(rst)",
		lineno=513];
	"MODE_REG_BASIC.514:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd7526334d0>",
		fillcolor=firebrick,
		label="MODE_REG_BASIC.514:NS
data_out <= #1 RESET_VALUE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd7526334d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"MODE_REG_BASIC.513:IF" -> "MODE_REG_BASIC.514:NS"	 [cond="['rst']",
		label=rst,
		lineno=513];
	"ERROR_WARNING_REG.513:IF" -> "ERROR_WARNING_REG.514:NS"	 [cond="['rst']",
		label=rst,
		lineno=513];
	"ERROR_WARNING_REG.515:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752633ad0>",
		fillcolor=springgreen,
		label="ERROR_WARNING_REG.515:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"ERROR_WARNING_REG.513:IF" -> "ERROR_WARNING_REG.515:IF"	 [cond="['rst']",
		label="!(rst)",
		lineno=513];
	"COMMAND_REG.Leaf_683:AL"	 [def_var="['data_out']",
		label="COMMAND_REG.Leaf_683:AL"];
	"COMMAND_REG.690:NS" -> "COMMAND_REG.Leaf_683:AL"	 [cond="[]",
		lineno=None];
	"TX_DATA_REG1.Leaf_852:AL"	 [def_var="['data_out']",
		label="TX_DATA_REG1.Leaf_852:AL"];
	"TX_DATA_REG1.855:NS" -> "TX_DATA_REG1.Leaf_852:AL"	 [cond="[]",
		lineno=None];
	"1350:NS" -> "Leaf_1347:AL"	 [cond="[]",
		lineno=None];
	"TX_DATA_REG9.853:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd7526160d0>",
		fillcolor=turquoise,
		label="TX_DATA_REG9.853:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"TX_DATA_REG9.854:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752624f90>",
		fillcolor=springgreen,
		label="TX_DATA_REG9.854:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"TX_DATA_REG9.853:BL" -> "TX_DATA_REG9.854:IF"	 [cond="[]",
		lineno=None];
	"ACCEPTANCE_CODE_REG0.855:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>",
		fillcolor=firebrick,
		label="ACCEPTANCE_CODE_REG0.855:NS
data_out <= #1 data_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>]",
		style=filled,
		typ=NonblockingSubstitution];
	"ACCEPTANCE_CODE_REG0.854:IF" -> "ACCEPTANCE_CODE_REG0.855:NS"	 [cond="['we']",
		label=we,
		lineno=854];
	"1171:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd75226b890>",
		def_var="['we_acceptance_mask_1']",
		fillcolor=deepskyblue,
		label="1171:AS
we_acceptance_mask_1 = cs & we & (addr == 8'd21) & reset_mode & extended_mode;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cs', 'we', 'addr', 'reset_mode', 'extended_mode']"];
	"ACCEPTANCE_MASK_REG1.852:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd752616050>",
		clk_sens=True,
		fillcolor=gold,
		label="ACCEPTANCE_MASK_REG1.852:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['we', 'data_in']"];
	"1171:AS" -> "ACCEPTANCE_MASK_REG1.852:AL";
	"1790:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd7737e3250>",
		fillcolor=lightcyan,
		label="1790:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1790:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737e34d0>",
		fillcolor=cadetblue,
		label="1790:BS
data_out = error_capture_code;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737e34d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"1790:CA" -> "1790:BS"	 [cond="[]",
		lineno=None];
	"1877:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd773795b90>",
		clk_sens=True,
		fillcolor=gold,
		label="1877:AL",
		sens="['clk', 'rst']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['read_irq_reg', 'error_warning_irq_en', 'error_status', 'rst', 'error_status_q', 'node_bus_off_q', 'node_bus_off']"];
	"1835:AS" -> "1877:AL";
	"1919:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd7737a49d0>",
		fillcolor=firebrick,
		label="1919:NS
error_passive_irq <= #Tp 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd7737a49d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1919:NS" -> "Leaf_1914:AL"	 [cond="[]",
		lineno=None];
	"1790:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"TX_DATA_REG1.853:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd7526160d0>",
		fillcolor=turquoise,
		label="TX_DATA_REG1.853:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"TX_DATA_REG1.853:BL" -> "TX_DATA_REG1.854:IF"	 [cond="[]",
		lineno=None];
	"TX_DATA_REG8.852:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd752616050>",
		clk_sens=True,
		fillcolor=gold,
		label="TX_DATA_REG8.852:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['we', 'data_in']"];
	"TX_DATA_REG8.852:AL" -> "TX_DATA_REG8.853:BL"	 [cond="[]",
		lineno=None];
	"1288:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd752275510>",
		def_var="['tx_request']",
		fillcolor=deepskyblue,
		label="1288:AS
tx_request = command[0] | command[4];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['command', 'command']"];
	"1288:AS" -> "1289:AS";
	"1288:AS" -> "COMMAND_REG1.683:AL";
	"1288:AS" -> "1347:AL";
	"1358:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd7522673d0>",
		clk_sens=True,
		fillcolor=gold,
		label="1358:AL",
		sens="['clk', 'rst']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['tx_request', 'rst', 'reset_mode', 'need_to_tx']"];
	"1288:AS" -> "1358:AL";
	"1292:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd752275a10>",
		clk_sens=True,
		fillcolor=gold,
		label="1292:AL",
		sens="['clk', 'rst']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['sample_point', 'tx_request', 'command', 'tx_state', 'rst', 'tx_state_q']"];
	"1288:AS" -> "1292:AL";
	"ACCEPTANCE_CODE_REG2.Leaf_852:AL"	 [def_var="['data_out']",
		label="ACCEPTANCE_CODE_REG2.Leaf_852:AL"];
	"ACCEPTANCE_CODE_REG2.Leaf_852:AL" -> "1772:AL";
	"1511:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd751d70e10>",
		fillcolor=lightcyan,
		label="1511:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1511:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd751d70f10>",
		fillcolor=cadetblue,
		label="1511:BS
clkout_div = 3'd6;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd751d70f10>]",
		style=filled,
		typ=BlockingSubstitution];
	"1511:CA" -> "1511:BS"	 [cond="[]",
		lineno=None];
	"IRQ_EN_REG.852:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd752616050>",
		clk_sens=True,
		fillcolor=gold,
		label="IRQ_EN_REG.852:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['we', 'data_in']"];
	"IRQ_EN_REG.853:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd7526160d0>",
		fillcolor=turquoise,
		label="IRQ_EN_REG.853:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"IRQ_EN_REG.852:AL" -> "IRQ_EN_REG.853:BL"	 [cond="[]",
		lineno=None];
	"1384:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd751d67e50>",
		fillcolor=springgreen,
		label="1384:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1382:IF" -> "1384:IF"	 [cond="['rst']",
		label="!(rst)",
		lineno=1382];
	"1383:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd751d67a50>",
		fillcolor=firebrick,
		label="1383:NS
receive_buffer_status <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd751d67a50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1382:IF" -> "1383:NS"	 [cond="['rst']",
		label=rst,
		lineno=1382];
	"1281:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd75227fe50>",
		fillcolor=springgreen,
		label="1281:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1282:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd75227ff90>",
		fillcolor=firebrick,
		label="1282:NS
self_rx_request <= #Tp 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd75227ff90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1281:IF" -> "1282:NS"	 [cond="['tx_state', 'tx_state_q']",
		label="(~tx_state & tx_state_q)",
		lineno=1281];
	"1836:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd773805f10>",
		def_var="['transmit_irq_en']",
		fillcolor=deepskyblue,
		label="1836:AS
transmit_irq_en = (extended_mode)? transmit_irq_en_ext : transmit_irq_en_basic;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['extended_mode', 'transmit_irq_en_ext', 'transmit_irq_en_basic']"];
	"1416:AS" -> "1836:AS";
	"1518:AL" -> "1519:BL"	 [cond="[]",
		lineno=None];
	"1172:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd75226bd50>",
		def_var="['we_acceptance_mask_2']",
		fillcolor=deepskyblue,
		label="1172:AS
we_acceptance_mask_2 = cs & we & (addr == 8'd22) & reset_mode & extended_mode;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cs', 'we', 'addr', 'reset_mode', 'extended_mode']"];
	"1172:AS" -> "ACCEPTANCE_MASK_REG2.852:AL";
	"1148:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd752209310>",
		def_var="['we_tx_data_1']",
		fillcolor=deepskyblue,
		label="1148:AS
we_tx_data_1 = cs & we & ~reset_mode & (~extended_mode & (addr == 8'd11) | extended_mode & (addr == 8'd17)) & transmit_buffer_\
status;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cs', 'we', 'reset_mode', 'extended_mode', 'addr', 'extended_mode', 'addr', 'transmit_buffer_status']"];
	"TX_DATA_REG1.852:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd752616050>",
		clk_sens=True,
		fillcolor=gold,
		label="TX_DATA_REG1.852:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['we', 'data_in']"];
	"1148:AS" -> "TX_DATA_REG1.852:AL";
	"ACCEPTANCE_MASK_REG3.Leaf_852:AL"	 [def_var="['data_out']",
		label="ACCEPTANCE_MASK_REG3.Leaf_852:AL"];
	"ACCEPTANCE_MASK_REG3.Leaf_852:AL" -> "1772:AL";
	"1858:NS" -> "Leaf_1853:AL"	 [cond="[]",
		lineno=None];
	"1531:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd751d84c50>",
		fillcolor=turquoise,
		label="1531:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1530:AL" -> "1531:BL"	 [cond="[]",
		lineno=None];
	"TX_DATA_REG11.Leaf_852:AL"	 [def_var="['data_out']",
		label="TX_DATA_REG11.Leaf_852:AL"];
	"1901:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd77379f490>",
		clk_sens=True,
		fillcolor=gold,
		label="1901:AL",
		sens="['clk', 'rst']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst', 'read_irq_reg', 'set_arbitration_lost_irq', 'reset_mode', 'arbitration_lost_irq_en']"];
	"1901:AL" -> "1902:BL"	 [cond="[]",
		lineno=None];
	"1340:AS" -> "1772:AL";
	"1525:NS" -> "Leaf_1518:AL"	 [cond="[]",
		lineno=None];
	"1165:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd7524f5c90>",
		def_var="['we_error_warning_limit']",
		fillcolor=deepskyblue,
		label="1165:AS
we_error_warning_limit = cs & we & (addr == 8'd13) & reset_mode & extended_mode;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cs', 'we', 'addr', 'reset_mode', 'extended_mode']"];
	"ERROR_WARNING_REG.511:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd752f2c4d0>",
		clk_sens=True,
		fillcolor=gold,
		label="ERROR_WARNING_REG.511:AL",
		sens="['clk', 'rst']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst', 'we', 'data_in']"];
	"1165:AS" -> "ERROR_WARNING_REG.511:AL";
	"ACCEPTANCE_MASK_REG1.853:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd7526160d0>",
		fillcolor=turquoise,
		label="ACCEPTANCE_MASK_REG1.853:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"ACCEPTANCE_MASK_REG1.852:AL" -> "ACCEPTANCE_MASK_REG1.853:BL"	 [cond="[]",
		lineno=None];
	"COMMAND_REG4.686:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752245ed0>",
		fillcolor=firebrick,
		label="COMMAND_REG4.686:NS
data_out <= #1 RESET_VALUE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752245ed0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"COMMAND_REG4.686:NS" -> "COMMAND_REG4.Leaf_683:AL"	 [cond="[]",
		lineno=None];
	"1892:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd77379ba50>",
		fillcolor=firebrick,
		label="1892:NS
bus_error_irq <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd77379ba50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1892:NS" -> "Leaf_1889:AL"	 [cond="[]",
		lineno=None];
	"TX_DATA_REG6.852:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd752616050>",
		clk_sens=True,
		fillcolor=gold,
		label="TX_DATA_REG6.852:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['we', 'data_in']"];
	"TX_DATA_REG6.852:AL" -> "TX_DATA_REG6.853:BL"	 [cond="[]",
		lineno=None];
	"1809:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd7737f2650>",
		fillcolor=lightcyan,
		label="1809:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1809:CA" -> "1809:BS"	 [cond="[]",
		lineno=None];
	"1282:NS" -> "Leaf_1275:AL"	 [cond="[]",
		lineno=None];
	"TX_DATA_REG11.853:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd7526160d0>",
		fillcolor=turquoise,
		label="TX_DATA_REG11.853:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"TX_DATA_REG11.854:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752624f90>",
		fillcolor=springgreen,
		label="TX_DATA_REG11.854:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"TX_DATA_REG11.853:BL" -> "TX_DATA_REG11.854:IF"	 [cond="[]",
		lineno=None];
	"ACCEPTANCE_MASK_REG0.Leaf_852:AL"	 [def_var="['data_out']",
		label="ACCEPTANCE_MASK_REG0.Leaf_852:AL"];
	"ACCEPTANCE_MASK_REG0.855:NS" -> "ACCEPTANCE_MASK_REG0.Leaf_852:AL"	 [cond="[]",
		lineno=None];
	"TX_DATA_REG9.855:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>",
		fillcolor=firebrick,
		label="TX_DATA_REG9.855:NS
data_out <= #1 data_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>]",
		style=filled,
		typ=NonblockingSubstitution];
	"TX_DATA_REG9.854:IF" -> "TX_DATA_REG9.855:NS"	 [cond="['we']",
		label=we,
		lineno=854];
	"1338:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd75227acd0>",
		def_var="['status']",
		fillcolor=deepskyblue,
		label="1338:AS
status[5] = transmit_status;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['transmit_status']"];
	"1338:AS" -> "1772:AL";
	"1373:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd751d673d0>",
		fillcolor=springgreen,
		label="1373:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1373:IF" -> "1374:NS"	 [cond="['overrun', 'overrun_q']",
		label="(overrun & ~overrun_q)",
		lineno=1373];
	"1375:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd751d67650>",
		fillcolor=springgreen,
		label="1375:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1373:IF" -> "1375:IF"	 [cond="['overrun', 'overrun_q']",
		label="!((overrun & ~overrun_q))",
		lineno=1373];
	"ACCEPTANCE_MASK_REG0.853:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd7526160d0>",
		fillcolor=turquoise,
		label="ACCEPTANCE_MASK_REG0.853:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"ACCEPTANCE_MASK_REG0.853:BL" -> "ACCEPTANCE_MASK_REG0.854:IF"	 [cond="[]",
		lineno=None];
	"1229:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd75226e990>",
		def_var="['receive_irq_en_basic']",
		fillcolor=deepskyblue,
		label="1229:AS
receive_irq_en_basic = mode_basic[1];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['mode_basic']"];
	"1229:AS" -> "1837:AS";
	"1842:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd77380b710>",
		fillcolor=turquoise,
		label="1842:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1843:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd77380b850>",
		fillcolor=springgreen,
		label="1843:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1842:BL" -> "1843:IF"	 [cond="[]",
		lineno=None];
	"1878:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd773795bd0>",
		fillcolor=turquoise,
		label="1878:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1877:AL" -> "1878:BL"	 [cond="[]",
		lineno=None];
	"1788:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd7737dfb90>",
		fillcolor=lightcyan,
		label="1788:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1788:CA" -> "1788:BS"	 [cond="[]",
		lineno=None];
	"1800:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd7737e8dd0>",
		fillcolor=lightcyan,
		label="1800:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1800:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737ed050>",
		fillcolor=cadetblue,
		label="1800:BS
data_out = acceptance_mask_2;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737ed050>]",
		style=filled,
		typ=BlockingSubstitution];
	"1800:CA" -> "1800:BS"	 [cond="[]",
		lineno=None];
	"ERROR_WARNING_REG.516:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd754a92f50>",
		fillcolor=firebrick,
		label="ERROR_WARNING_REG.516:NS
data_out <= #1 data_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd754a92f50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"ERROR_WARNING_REG.516:NS" -> "ERROR_WARNING_REG.Leaf_511:AL"	 [cond="[]",
		lineno=None];
	"TX_DATA_REG10.854:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752624f90>",
		fillcolor=springgreen,
		label="TX_DATA_REG10.854:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"TX_DATA_REG10.855:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>",
		fillcolor=firebrick,
		label="TX_DATA_REG10.855:NS
data_out <= #1 data_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>]",
		style=filled,
		typ=NonblockingSubstitution];
	"TX_DATA_REG10.854:IF" -> "TX_DATA_REG10.855:NS"	 [cond="['we']",
		label=we,
		lineno=854];
	"1141:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd7522072d0>",
		def_var="['read_arbitration_lost_capture_reg']",
		fillcolor=deepskyblue,
		label="1141:AS
read_arbitration_lost_capture_reg = read & extended_mode & (addr == 8'd11);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['read', 'extended_mode', 'addr']"];
	"1169:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd752506ed0>",
		def_var="['we_acceptance_code_2']",
		fillcolor=deepskyblue,
		label="1169:AS
we_acceptance_code_2 = cs & we & (addr == 8'd18) & reset_mode & extended_mode;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cs', 'we', 'addr', 'reset_mode', 'extended_mode']"];
	"ACCEPTANCE_CODE_REG2.852:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd752616050>",
		clk_sens=True,
		fillcolor=gold,
		label="ACCEPTANCE_CODE_REG2.852:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['we', 'data_in']"];
	"1169:AS" -> "ACCEPTANCE_CODE_REG2.852:AL";
	"TX_DATA_REG10.Leaf_852:AL"	 [def_var="['data_out']",
		label="TX_DATA_REG10.Leaf_852:AL"];
	"1140:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd7521dfed0>",
		def_var="['read_irq_reg']",
		fillcolor=deepskyblue,
		label="1140:AS
read_irq_reg = read & (addr == 8'd3);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['read', 'addr']"];
	"1140:AS" -> "1914:AL";
	"1140:AS" -> "1853:AL";
	"1140:AS" -> "1901:AL";
	"1140:AS" -> "1877:AL";
	"1140:AS" -> "1931:AL";
	"1841:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd77380b6d0>",
		clk_sens=True,
		fillcolor=gold,
		label="1841:AL",
		sens="['clk', 'rst']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['read_irq_reg', 'overrun_q', 'data_overrun_irq_en', 'reset_mode', 'rst', 'overrun']"];
	"1140:AS" -> "1841:AL";
	"1889:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd77379b890>",
		clk_sens=True,
		fillcolor=gold,
		label="1889:AL",
		sens="['clk', 'rst']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst', 'read_irq_reg', 'reset_mode', 'set_bus_error_irq', 'bus_error_irq_en']"];
	"1140:AS" -> "1889:AL";
	"CLOCK_DIVIDER_REG_LOW.514:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd7526334d0>",
		fillcolor=firebrick,
		label="CLOCK_DIVIDER_REG_LOW.514:NS
data_out <= #1 RESET_VALUE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd7526334d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"CLOCK_DIVIDER_REG_LOW.Leaf_511:AL"	 [def_var="['data_out']",
		label="CLOCK_DIVIDER_REG_LOW.Leaf_511:AL"];
	"CLOCK_DIVIDER_REG_LOW.514:NS" -> "CLOCK_DIVIDER_REG_LOW.Leaf_511:AL"	 [cond="[]",
		lineno=None];
	"Leaf_1380:AL"	 [def_var="['receive_buffer_status']",
		label="Leaf_1380:AL"];
	"1343:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd75224d710>",
		def_var="['status']",
		fillcolor=deepskyblue,
		label="1343:AS
status[0] = receive_buffer_status;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['receive_buffer_status']"];
	"Leaf_1380:AL" -> "1343:AS";
	"BUS_TIMING_0_REG.Leaf_852:AL" -> "1431:AS";
	"BUS_TIMING_0_REG.Leaf_852:AL" -> "1430:AS";
	"BUS_TIMING_0_REG.Leaf_852:AL" -> "1772:AL";
	"1277:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd75227f690>",
		fillcolor=springgreen,
		label="1277:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1279:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd75227fbd0>",
		fillcolor=springgreen,
		label="1279:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1277:IF" -> "1279:IF"	 [cond="['rst']",
		label="!(rst)",
		lineno=1277];
	"1278:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd75227f6d0>",
		fillcolor=firebrick,
		label="1278:NS
self_rx_request <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd75227f6d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1277:IF" -> "1278:NS"	 [cond="['rst']",
		label=rst,
		lineno=1277];
	"1363:NS" -> "Leaf_1358:AL"	 [cond="[]",
		lineno=None];
	"Leaf_1178:AL"	 [def_var="['overrun_q', 'tx_successful_q', 'transmit_buffer_status_q', 'node_error_passive_q', 'error_status_q', 'node_bus_off_q']",
		label="Leaf_1178:AL"];
	"Leaf_1178:AL" -> "1914:AL";
	"Leaf_1178:AL" -> "1347:AL";
	"Leaf_1178:AL" -> "1853:AL";
	"Leaf_1178:AL" -> "1877:AL";
	"Leaf_1178:AL" -> "1369:AL";
	"Leaf_1178:AL" -> "1841:AL";
	"1894:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd77379be50>",
		fillcolor=firebrick,
		label="1894:NS
bus_error_irq <= #Tp 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd77379be50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1894:NS" -> "Leaf_1889:AL"	 [cond="[]",
		lineno=None];
	"1793:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737e3c90>",
		fillcolor=cadetblue,
		label="1793:BS
data_out = tx_err_cnt;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737e3c90>]",
		style=filled,
		typ=BlockingSubstitution];
	"1793:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"1828:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd7738055d0>",
		fillcolor=lightcyan,
		label="1828:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1828:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd773805710>",
		fillcolor=cadetblue,
		label="1828:BS
data_out = 8'h0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd773805710>]",
		style=filled,
		typ=BlockingSubstitution];
	"1828:CA" -> "1828:BS"	 [cond="[]",
		lineno=None];
	"MODE_REG_EXT.Leaf_511:AL"	 [def_var="['data_out']",
		label="MODE_REG_EXT.Leaf_511:AL"];
	"MODE_REG_EXT.516:NS" -> "MODE_REG_EXT.Leaf_511:AL"	 [cond="[]",
		lineno=None];
	"COMMAND_REG0.690:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752624510>",
		fillcolor=firebrick,
		label="COMMAND_REG0.690:NS
data_out <= #1 data_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752624510>]",
		style=filled,
		typ=NonblockingSubstitution];
	"COMMAND_REG0.689:IF" -> "COMMAND_REG0.690:NS"	 [cond="['we']",
		label=we,
		lineno=689];
	"1384:IF" -> "1386:IF"	 [cond="['reset_mode', 'release_buffer']",
		label="!((reset_mode || release_buffer))",
		lineno=1384];
	"1385:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd751d67e10>",
		fillcolor=firebrick,
		label="1385:NS
receive_buffer_status <= #Tp 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd751d67e10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1384:IF" -> "1385:NS"	 [cond="['reset_mode', 'release_buffer']",
		label="(reset_mode || release_buffer)",
		lineno=1384];
	"1150:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd7524f02d0>",
		def_var="['we_tx_data_3']",
		fillcolor=deepskyblue,
		label="1150:AS
we_tx_data_3 = cs & we & ~reset_mode & (~extended_mode & (addr == 8'd13) | extended_mode & (addr == 8'd19)) & transmit_buffer_\
status;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cs', 'we', 'reset_mode', 'extended_mode', 'addr', 'extended_mode', 'addr', 'transmit_buffer_status']"];
	"1150:AS" -> "TX_DATA_REG3.852:AL";
	"1825:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd773801e90>",
		fillcolor=cadetblue,
		label="1825:BS
data_out = (reset_mode)? 8'hff : tx_data_8;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd773801e90>]",
		style=filled,
		typ=BlockingSubstitution];
	"1825:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"1139:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd7521dfbd0>",
		def_var="['read']",
		fillcolor=deepskyblue,
		label="1139:AS
read = cs & ~we;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cs', 'we']"];
	"1139:AS" -> "1142:AS";
	"1139:AS" -> "1141:AS";
	"1139:AS" -> "1140:AS";
	"1783:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"TX_DATA_REG5.854:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752624f90>",
		fillcolor=springgreen,
		label="TX_DATA_REG5.854:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"TX_DATA_REG5.853:BL" -> "TX_DATA_REG5.854:IF"	 [cond="[]",
		lineno=None];
	"1279:IF" -> "1280:NS"	 [cond="['command', 'command']",
		label="(command[4] & ~command[0])",
		lineno=1279];
	"1279:IF" -> "1281:IF"	 [cond="['command', 'command']",
		label="!((command[4] & ~command[0]))",
		lineno=1279];
	"TX_DATA_REG7.Leaf_852:AL" -> "1772:AL";
	"1155:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd7524f6a10>",
		def_var="['we_tx_data_8']",
		fillcolor=deepskyblue,
		label="1155:AS
we_tx_data_8 = cs & we & ~reset_mode & (~extended_mode & (addr == 8'd18) | extended_mode & (addr == 8'd24)) & transmit_buffer_\
status;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cs', 'we', 'reset_mode', 'extended_mode', 'addr', 'extended_mode', 'addr', 'transmit_buffer_status']"];
	"1155:AS" -> "TX_DATA_REG8.852:AL";
	"MODE_REG0.688:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752624210>",
		fillcolor=firebrick,
		label="MODE_REG0.688:NS
data_out <= #1 RESET_VALUE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752624210>]",
		style=filled,
		typ=NonblockingSubstitution];
	"MODE_REG0.688:NS" -> "MODE_REG0.Leaf_683:AL"	 [cond="[]",
		lineno=None];
	"1802:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"1920:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd7737a4c90>",
		fillcolor=springgreen,
		label="1920:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1921:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd7737a4dd0>",
		fillcolor=firebrick,
		label="1921:NS
error_passive_irq <= #Tp 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd7737a4dd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1920:IF" -> "1921:NS"	 [cond="['reset_mode', 'read_irq_reg']",
		label="(reset_mode || read_irq_reg)",
		lineno=1920];
	"1843:IF" -> "1845:IF"	 [cond="['rst']",
		label="!(rst)",
		lineno=1843];
	"1844:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd77380b890>",
		fillcolor=firebrick,
		label="1844:NS
data_overrun_irq <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd77380b890>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1843:IF" -> "1844:NS"	 [cond="['rst']",
		label=rst,
		lineno=1843];
	"1478:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd751d81a50>",
		def_var="['clock_divider']",
		fillcolor=deepskyblue,
		label="1478:AS
clock_divider[6:4] = 3'h0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="[]"];
	"1478:AS" -> "1498:AS";
	"1497:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd751d51bd0>",
		def_var="['clock_off']",
		fillcolor=deepskyblue,
		label="1497:AS
clock_off = clock_divider[3];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['clock_divider']"];
	"1478:AS" -> "1497:AS";
	"1478:AS" -> "1772:AL";
	"1496:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd751d519d0>",
		def_var="['extended_mode']",
		fillcolor=deepskyblue,
		label="1496:AS
extended_mode = clock_divider[7];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['clock_divider']"];
	"1478:AS" -> "1496:AS";
	"ACCEPTANCE_CODE_REG1.852:AL" -> "ACCEPTANCE_CODE_REG1.853:BL"	 [cond="[]",
		lineno=None];
	"1134:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd7521e2f10>",
		def_var="['we_bus_timing_0']",
		fillcolor=deepskyblue,
		label="1134:AS
we_bus_timing_0 = cs & we & (addr == 8'd6) & reset_mode;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cs', 'we', 'addr', 'reset_mode']"];
	"1134:AS" -> "BUS_TIMING_0_REG.852:AL";
	"1844:NS" -> "Leaf_1841:AL"	 [cond="[]",
		lineno=None];
	"1299:NS" -> "Leaf_1292:AL"	 [cond="[]",
		lineno=None];
	"CLOCK_DIVIDER_REG_3.512:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd75264b890>",
		fillcolor=turquoise,
		label="CLOCK_DIVIDER_REG_3.512:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"CLOCK_DIVIDER_REG_3.513:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752633650>",
		fillcolor=springgreen,
		label="CLOCK_DIVIDER_REG_3.513:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"CLOCK_DIVIDER_REG_3.512:BL" -> "CLOCK_DIVIDER_REG_3.513:IF"	 [cond="[]",
		lineno=None];
	"COMMAND_REG.686:NS" -> "COMMAND_REG.Leaf_683:AL"	 [cond="[]",
		lineno=None];
	"COMMAND_REG.Leaf_683:AL" -> "1286:AS";
	"COMMAND_REG.Leaf_683:AL" -> "1289:AS";
	"COMMAND_REG.Leaf_683:AL" -> "1287:AS";
	"COMMAND_REG.Leaf_683:AL" -> "1275:AL";
	"COMMAND_REG.Leaf_683:AL" -> "1288:AS";
	"COMMAND_REG.Leaf_683:AL" -> "1292:AL";
	"TX_DATA_REG0.Leaf_852:AL" -> "1772:AL";
	"TX_DATA_REG11.852:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd752616050>",
		clk_sens=True,
		fillcolor=gold,
		label="TX_DATA_REG11.852:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['we', 'data_in']"];
	"TX_DATA_REG11.852:AL" -> "TX_DATA_REG11.853:BL"	 [cond="[]",
		lineno=None];
	"COMMAND_REG4.Leaf_683:AL" -> "1286:AS";
	"COMMAND_REG4.Leaf_683:AL" -> "1289:AS";
	"COMMAND_REG4.Leaf_683:AL" -> "1287:AS";
	"COMMAND_REG4.Leaf_683:AL" -> "1275:AL";
	"COMMAND_REG4.Leaf_683:AL" -> "1288:AS";
	"COMMAND_REG4.Leaf_683:AL" -> "1292:AL";
	"TX_DATA_REG0.854:IF" -> "TX_DATA_REG0.855:NS"	 [cond="['we']",
		label=we,
		lineno=854];
	"1508:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd751d70810>",
		fillcolor=lightcyan,
		label="1508:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1508:CA" -> "1508:BS"	 [cond="[]",
		lineno=None];
	"1808:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd7737f2150>",
		fillcolor=lightcyan,
		label="1808:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1808:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737f25d0>",
		fillcolor=cadetblue,
		label="1808:BS
data_out = clock_divider;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737f25d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"1808:CA" -> "1808:BS"	 [cond="[]",
		lineno=None];
	"1276:BL" -> "1277:IF"	 [cond="[]",
		lineno=None];
	"1836:AS" -> "1853:AL";
	"1906:NS" -> "Leaf_1901:AL"	 [cond="[]",
		lineno=None];
	"1893:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd77379be90>",
		fillcolor=springgreen,
		label="1893:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1893:IF" -> "1895:IF"	 [cond="['set_bus_error_irq', 'bus_error_irq_en']",
		label="!((set_bus_error_irq & bus_error_irq_en))",
		lineno=1893];
	"1893:IF" -> "1894:NS"	 [cond="['set_bus_error_irq', 'bus_error_irq_en']",
		label="(set_bus_error_irq & bus_error_irq_en)",
		lineno=1893];
	"TX_DATA_REG2.853:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd7526160d0>",
		fillcolor=turquoise,
		label="TX_DATA_REG2.853:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"TX_DATA_REG2.854:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752624f90>",
		fillcolor=springgreen,
		label="TX_DATA_REG2.854:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"TX_DATA_REG2.853:BL" -> "TX_DATA_REG2.854:IF"	 [cond="[]",
		lineno=None];
	"1506:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd751d70550>",
		fillcolor=cadetblue,
		label="1506:BS
clkout_div = 3'd1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd751d70550>]",
		style=filled,
		typ=BlockingSubstitution];
	"1506:BS" -> "Leaf_1502:AL"	 [cond="[]",
		lineno=None];
	"CLOCK_DIVIDER_REG_3.511:AL" -> "CLOCK_DIVIDER_REG_3.512:BL"	 [cond="[]",
		lineno=None];
	"1413:AS" -> "1914:AL";
	"MODE_REG_EXT.Leaf_511:AL" -> "1225:AS";
	"MODE_REG_EXT.Leaf_511:AL" -> "1226:AS";
	"MODE_REG_EXT.Leaf_511:AL" -> "1772:AL";
	"1227:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd75226e790>",
		def_var="['acceptance_filter_mode']",
		fillcolor=deepskyblue,
		label="1227:AS
acceptance_filter_mode = extended_mode & mode_ext[3];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['extended_mode', 'mode_ext']"];
	"MODE_REG_EXT.Leaf_511:AL" -> "1227:AS";
	"1358:AL" -> "1359:BL"	 [cond="[]",
		lineno=None];
	"TX_DATA_REG7.854:IF" -> "TX_DATA_REG7.855:NS"	 [cond="['we']",
		label=we,
		lineno=854];
	"1369:AL" -> "1370:BL"	 [cond="[]",
		lineno=None];
	"1510:BS" -> "Leaf_1502:AL"	 [cond="[]",
		lineno=None];
	"1837:AS" -> "1865:AL";
	"COMMAND_REG0.Leaf_683:AL" -> "1286:AS";
	"COMMAND_REG0.Leaf_683:AL" -> "1289:AS";
	"COMMAND_REG0.Leaf_683:AL" -> "1287:AS";
	"COMMAND_REG0.Leaf_683:AL" -> "1275:AL";
	"COMMAND_REG0.Leaf_683:AL" -> "1288:AS";
	"COMMAND_REG0.Leaf_683:AL" -> "1292:AL";
	"ACCEPTANCE_CODE_REG0.Leaf_852:AL"	 [def_var="['data_out']",
		label="ACCEPTANCE_CODE_REG0.Leaf_852:AL"];
	"ACCEPTANCE_CODE_REG0.Leaf_852:AL" -> "1772:AL";
	"1878:BL" -> "1879:IF"	 [cond="[]",
		lineno=None];
	"1531:BL" -> "1532:IF"	 [cond="[]",
		lineno=None];
	"TX_DATA_REG8.Leaf_852:AL"	 [def_var="['data_out']",
		label="TX_DATA_REG8.Leaf_852:AL"];
	"TX_DATA_REG8.855:NS" -> "TX_DATA_REG8.Leaf_852:AL"	 [cond="[]",
		lineno=None];
	"TX_DATA_REG6.Leaf_852:AL"	 [def_var="['data_out']",
		label="TX_DATA_REG6.Leaf_852:AL"];
	"TX_DATA_REG6.Leaf_852:AL" -> "1772:AL";
	"1872:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd7737959d0>",
		fillcolor=firebrick,
		label="1872:NS
receive_irq <= #Tp 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd7737959d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1872:NS" -> "Leaf_1865:AL"	 [cond="[]",
		lineno=None];
	"CLOCK_DIVIDER_REG_3.515:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752633ad0>",
		fillcolor=springgreen,
		label="CLOCK_DIVIDER_REG_3.515:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"CLOCK_DIVIDER_REG_3.515:IF" -> "CLOCK_DIVIDER_REG_3.516:NS"	 [cond="['we']",
		label=we,
		lineno=515];
	"1411:AS" -> "1889:AL";
	"COMMAND_REG4.688:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752624210>",
		fillcolor=firebrick,
		label="COMMAND_REG4.688:NS
data_out <= #1 RESET_VALUE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752624210>]",
		style=filled,
		typ=NonblockingSubstitution];
	"COMMAND_REG4.688:NS" -> "COMMAND_REG4.Leaf_683:AL"	 [cond="[]",
		lineno=None];
	"1351:IF" -> "1352:NS"	 [cond="['tx_successful', 'tx_successful_q', 'abort_tx']",
		label="(tx_successful & ~tx_successful_q | abort_tx)",
		lineno=1351];
	"1353:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752267210>",
		fillcolor=springgreen,
		label="1353:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1351:IF" -> "1353:IF"	 [cond="['tx_successful', 'tx_successful_q', 'abort_tx']",
		label="!((tx_successful & ~tx_successful_q | abort_tx))",
		lineno=1351];
	"CLOCK_DIVIDER_REG_7.516:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd754a92f50>",
		fillcolor=firebrick,
		label="CLOCK_DIVIDER_REG_7.516:NS
data_out <= #1 data_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd754a92f50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"CLOCK_DIVIDER_REG_7.516:NS" -> "CLOCK_DIVIDER_REG_7.Leaf_511:AL"	 [cond="[]",
		lineno=None];
	"1371:IF" -> "1372:NS"	 [cond="['rst']",
		label=rst,
		lineno=1371];
	"1371:IF" -> "1373:IF"	 [cond="['rst']",
		label="!(rst)",
		lineno=1371];
	"1855:IF" -> "1857:IF"	 [cond="['rst']",
		label="!(rst)",
		lineno=1855];
	"1855:IF" -> "1856:NS"	 [cond="['rst']",
		label=rst,
		lineno=1855];
	"1504:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fd751d70ed0>",
		fillcolor=linen,
		label="1504:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"1504:CS" -> "1507:CA"	 [cond="['cd']",
		label=cd,
		lineno=1504];
	"1504:CS" -> "1505:CA"	 [cond="['cd']",
		label=cd,
		lineno=1504];
	"1504:CS" -> "1512:CA"	 [cond="['cd']",
		label=cd,
		lineno=1504];
	"1504:CS" -> "1509:CA"	 [cond="['cd']",
		label=cd,
		lineno=1504];
	"1504:CS" -> "1510:CA"	 [cond="['cd']",
		label=cd,
		lineno=1504];
	"1504:CS" -> "1511:CA"	 [cond="['cd']",
		label=cd,
		lineno=1504];
	"1504:CS" -> "1508:CA"	 [cond="['cd']",
		label=cd,
		lineno=1504];
	"1506:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd751d70450>",
		fillcolor=lightcyan,
		label="1506:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1504:CS" -> "1506:CA"	 [cond="['cd']",
		label=cd,
		lineno=1504];
	"COMMAND_REG.683:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd752245d10>",
		clk_sens=True,
		fillcolor=gold,
		label="COMMAND_REG.683:AL",
		sens="['clk', 'rst']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst', 'we', 'rst_sync', 'data_in']"];
	"COMMAND_REG.683:AL" -> "COMMAND_REG.684:BL"	 [cond="[]",
		lineno=None];
	"1801:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd7737ed0d0>",
		fillcolor=lightcyan,
		label="1801:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1801:CA" -> "1801:BS"	 [cond="[]",
		lineno=None];
	"COMMAND_REG1.Leaf_683:AL" -> "1286:AS";
	"COMMAND_REG1.Leaf_683:AL" -> "1289:AS";
	"COMMAND_REG1.Leaf_683:AL" -> "1287:AS";
	"COMMAND_REG1.Leaf_683:AL" -> "1275:AL";
	"COMMAND_REG1.Leaf_683:AL" -> "1288:AS";
	"COMMAND_REG1.Leaf_683:AL" -> "1292:AL";
	"1497:AS" -> "1539:AS";
	"ACCEPTANCE_MASK_REG1.854:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752624f90>",
		fillcolor=springgreen,
		label="ACCEPTANCE_MASK_REG1.854:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"ACCEPTANCE_MASK_REG1.855:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>",
		fillcolor=firebrick,
		label="ACCEPTANCE_MASK_REG1.855:NS
data_out <= #1 data_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>]",
		style=filled,
		typ=NonblockingSubstitution];
	"ACCEPTANCE_MASK_REG1.854:IF" -> "ACCEPTANCE_MASK_REG1.855:NS"	 [cond="['we']",
		label=we,
		lineno=854];
	"MODE_REG_EXT.513:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752633650>",
		fillcolor=springgreen,
		label="MODE_REG_EXT.513:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"MODE_REG_EXT.513:IF" -> "MODE_REG_EXT.515:IF"	 [cond="['rst']",
		label="!(rst)",
		lineno=513];
	"MODE_REG_EXT.514:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd7526334d0>",
		fillcolor=firebrick,
		label="MODE_REG_EXT.514:NS
data_out <= #1 RESET_VALUE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd7526334d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"MODE_REG_EXT.513:IF" -> "MODE_REG_EXT.514:NS"	 [cond="['rst']",
		label=rst,
		lineno=513];
	"ACCEPTANCE_MASK_REG3.853:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd7526160d0>",
		fillcolor=turquoise,
		label="ACCEPTANCE_MASK_REG3.853:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"ACCEPTANCE_MASK_REG3.853:BL" -> "ACCEPTANCE_MASK_REG3.854:IF"	 [cond="[]",
		lineno=None];
	"1343:AS" -> "1772:AL";
	"1294:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752275b90>",
		fillcolor=springgreen,
		label="1294:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1296:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd75227a110>",
		fillcolor=springgreen,
		label="1296:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1294:IF" -> "1296:IF"	 [cond="['rst']",
		label="!(rst)",
		lineno=1294];
	"1295:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752275bd0>",
		fillcolor=firebrick,
		label="1295:NS
single_shot_transmission <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752275bd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1294:IF" -> "1295:NS"	 [cond="['rst']",
		label=rst,
		lineno=1294];
	"1810:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd7737f2750>",
		fillcolor=lightcyan,
		label="1810:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1810:CA" -> "1810:BS"	 [cond="[]",
		lineno=None];
	"1784:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd7737df0d0>",
		fillcolor=lightcyan,
		label="1784:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1784:CA" -> "1784:BS"	 [cond="[]",
		lineno=None];
	"1823:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd7738015d0>",
		fillcolor=lightcyan,
		label="1823:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1823:CA" -> "1823:BS"	 [cond="[]",
		lineno=None];
	"1365:NS" -> "Leaf_1358:AL"	 [cond="[]",
		lineno=None];
	"1799:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd7737e8b10>",
		fillcolor=lightcyan,
		label="1799:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1799:CA" -> "1799:BS"	 [cond="[]",
		lineno=None];
	"1505:BS" -> "Leaf_1502:AL"	 [cond="[]",
		lineno=None];
	"ACCEPTANCE_CODE_REG3.853:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd7526160d0>",
		fillcolor=turquoise,
		label="ACCEPTANCE_CODE_REG3.853:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"ACCEPTANCE_CODE_REG3.853:BL" -> "ACCEPTANCE_CODE_REG3.854:IF"	 [cond="[]",
		lineno=None];
	"TX_DATA_REG7.852:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd752616050>",
		clk_sens=True,
		fillcolor=gold,
		label="TX_DATA_REG7.852:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['we', 'data_in']"];
	"TX_DATA_REG7.852:AL" -> "TX_DATA_REG7.853:BL"	 [cond="[]",
		lineno=None];
	"1780:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd7737d8790>",
		fillcolor=turquoise,
		label="1780:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1781:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fd773805610>",
		fillcolor=linen,
		label="1781:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"1780:BL" -> "1781:CS"	 [cond="[]",
		lineno=None];
	"CLOCK_DIVIDER_REG_LOW.516:NS" -> "CLOCK_DIVIDER_REG_LOW.Leaf_511:AL"	 [cond="[]",
		lineno=None];
	"COMMAND_REG.687:IF" -> "COMMAND_REG.689:IF"	 [cond="['rst_sync']",
		label="!(rst_sync)",
		lineno=687];
	"COMMAND_REG.688:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752624210>",
		fillcolor=firebrick,
		label="COMMAND_REG.688:NS
data_out <= #1 RESET_VALUE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752624210>]",
		style=filled,
		typ=NonblockingSubstitution];
	"COMMAND_REG.687:IF" -> "COMMAND_REG.688:NS"	 [cond="['rst_sync']",
		label=rst_sync,
		lineno=687];
	"1903:IF" -> "1905:IF"	 [cond="['rst']",
		label="!(rst)",
		lineno=1903];
	"1904:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd77379f650>",
		fillcolor=firebrick,
		label="1904:NS
arbitration_lost_irq <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd77379f650>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1903:IF" -> "1904:NS"	 [cond="['rst']",
		label=rst,
		lineno=1903];
	"1814:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"1341:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd75224d310>",
		def_var="['status']",
		fillcolor=deepskyblue,
		label="1341:AS
status[2] = transmit_buffer_status;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['transmit_buffer_status']"];
	"1341:AS" -> "1772:AL";
	"TX_DATA_REG10.853:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd7526160d0>",
		fillcolor=turquoise,
		label="TX_DATA_REG10.853:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"TX_DATA_REG10.853:BL" -> "TX_DATA_REG10.854:IF"	 [cond="[]",
		lineno=None];
	"1383:NS" -> "Leaf_1380:AL"	 [cond="[]",
		lineno=None];
	"1795:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"COMMAND_REG4.683:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd752245d10>",
		clk_sens=True,
		fillcolor=gold,
		label="COMMAND_REG4.683:AL",
		sens="['clk', 'rst']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst', 'we', 'rst_sync', 'data_in']"];
	"COMMAND_REG4.683:AL" -> "COMMAND_REG4.684:BL"	 [cond="[]",
		lineno=None];
	"ERROR_WARNING_REG.511:AL" -> "ERROR_WARNING_REG.512:BL"	 [cond="[]",
		lineno=None];
	"1932:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd7737a9910>",
		fillcolor=turquoise,
		label="1932:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1932:BL" -> "1933:IF"	 [cond="[]",
		lineno=None];
	"COMMAND_REG1.689:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752624390>",
		fillcolor=springgreen,
		label="COMMAND_REG1.689:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"COMMAND_REG1.689:IF" -> "COMMAND_REG1.690:NS"	 [cond="['we']",
		label=we,
		lineno=689];
	"1167:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd752506490>",
		def_var="['we_tx_err_cnt']",
		fillcolor=deepskyblue,
		label="1167:AS
we_tx_err_cnt = cs & we & (addr == 8'd15) & reset_mode & extended_mode;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cs', 'we', 'addr', 'reset_mode', 'extended_mode']"];
	"TX_DATA_REG10.852:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd752616050>",
		clk_sens=True,
		fillcolor=gold,
		label="TX_DATA_REG10.852:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['we', 'data_in']"];
	"TX_DATA_REG10.852:AL" -> "TX_DATA_REG10.853:BL"	 [cond="[]",
		lineno=None];
	"ACCEPTANCE_CODE_REG3.852:AL" -> "ACCEPTANCE_CODE_REG3.853:BL"	 [cond="[]",
		lineno=None];
	"MODE_REG_EXT.514:NS" -> "MODE_REG_EXT.Leaf_511:AL"	 [cond="[]",
		lineno=None];
	"CLOCK_DIVIDER_REG_7.515:IF" -> "CLOCK_DIVIDER_REG_7.516:NS"	 [cond="['we']",
		label=we,
		lineno=515];
	"BUS_TIMING_1_REG.855:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>",
		fillcolor=firebrick,
		label="BUS_TIMING_1_REG.855:NS
data_out <= #1 data_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>]",
		style=filled,
		typ=NonblockingSubstitution];
	"BUS_TIMING_1_REG.Leaf_852:AL"	 [def_var="['data_out']",
		label="BUS_TIMING_1_REG.Leaf_852:AL"];
	"BUS_TIMING_1_REG.855:NS" -> "BUS_TIMING_1_REG.Leaf_852:AL"	 [cond="[]",
		lineno=None];
	"1153:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd7524fca50>",
		def_var="['we_tx_data_6']",
		fillcolor=deepskyblue,
		label="1153:AS
we_tx_data_6 = cs & we & ~reset_mode & (~extended_mode & (addr == 8'd16) | extended_mode & (addr == 8'd22)) & transmit_buffer_\
status;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cs', 'we', 'reset_mode', 'extended_mode', 'addr', 'extended_mode', 'addr', 'transmit_buffer_status']"];
	"1153:AS" -> "TX_DATA_REG6.852:AL";
	"ACCEPTANCE_CODE_REG0.852:AL" -> "ACCEPTANCE_CODE_REG0.853:BL"	 [cond="[]",
		lineno=None];
	"1782:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd7737d8890>",
		fillcolor=lightcyan,
		label="1782:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1782:CA" -> "1782:BS"	 [cond="[]",
		lineno=None];
	"1796:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd7737e82d0>",
		fillcolor=lightcyan,
		label="1796:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1796:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737e8510>",
		fillcolor=cadetblue,
		label="1796:BS
data_out = acceptance_code_2;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737e8510>]",
		style=filled,
		typ=BlockingSubstitution];
	"1796:CA" -> "1796:BS"	 [cond="[]",
		lineno=None];
	"TX_DATA_REG12.852:AL" -> "TX_DATA_REG12.853:BL"	 [cond="[]",
		lineno=None];
	"1136:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd7521df690>",
		def_var="['we_clock_divider_low']",
		fillcolor=deepskyblue,
		label="1136:AS
we_clock_divider_low = cs & we & (addr == 8'd31);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cs', 'we', 'addr']"];
	"1136:AS" -> "1137:AS";
	"1296:IF" -> "1298:IF"	 [cond="['tx_request', 'command', 'sample_point']",
		label="!((tx_request & command[1] & sample_point))",
		lineno=1296];
	"1297:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd75227a0d0>",
		fillcolor=firebrick,
		label="1297:NS
single_shot_transmission <= #Tp 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd75227a0d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1296:IF" -> "1297:NS"	 [cond="['tx_request', 'command', 'sample_point']",
		label="(tx_request & command[1] & sample_point)",
		lineno=1296];
	"1512:BS" -> "Leaf_1502:AL"	 [cond="[]",
		lineno=None];
	"1179:BL" -> "Leaf_1178:AL"	 [cond="[]",
		lineno=None];
	"1533:NS" -> "Leaf_1530:AL"	 [cond="[]",
		lineno=None];
	"1133:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd7521e2ad0>",
		def_var="['we_command']",
		fillcolor=deepskyblue,
		label="1133:AS
we_command = cs & we & (addr == 8'd1);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cs', 'we', 'addr']"];
	"1133:AS" -> "COMMAND_REG0.683:AL";
	"1133:AS" -> "COMMAND_REG1.683:AL";
	"1133:AS" -> "COMMAND_REG.683:AL";
	"1133:AS" -> "COMMAND_REG4.683:AL";
	"1157:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd7524fd7d0>",
		def_var="['we_tx_data_10']",
		fillcolor=deepskyblue,
		label="1157:AS
we_tx_data_10 = cs & we & ~reset_mode & (extended_mode & (addr == 8'd26)) & transmit_buffer_status;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cs', 'we', 'reset_mode', 'extended_mode', 'addr', 'transmit_buffer_status']"];
	"1157:AS" -> "TX_DATA_REG10.852:AL";
	"TX_DATA_REG6.855:NS" -> "TX_DATA_REG6.Leaf_852:AL"	 [cond="[]",
		lineno=None];
	"1503:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd751d700d0>",
		fillcolor=turquoise,
		label="1503:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1503:BL" -> "1504:CS"	 [cond="[]",
		lineno=None];
	"1793:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd7737e3a90>",
		fillcolor=lightcyan,
		label="1793:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1793:CA" -> "1793:BS"	 [cond="[]",
		lineno=None];
	"1828:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"1502:AL" -> "1503:BL"	 [cond="[]",
		lineno=None];
	"COMMAND_REG.688:NS" -> "COMMAND_REG.Leaf_683:AL"	 [cond="[]",
		lineno=None];
	"1412:AS" -> "1901:AL";
	"1156:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd7524fd210>",
		def_var="['we_tx_data_9']",
		fillcolor=deepskyblue,
		label="1156:AS
we_tx_data_9 = cs & we & ~reset_mode & (~extended_mode & (addr == 8'd19) | extended_mode & (addr == 8'd25)) & transmit_buffer_\
status;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cs', 'we', 'reset_mode', 'extended_mode', 'addr', 'extended_mode', 'addr', 'transmit_buffer_status']"];
	"TX_DATA_REG9.852:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd752616050>",
		clk_sens=True,
		fillcolor=gold,
		label="TX_DATA_REG9.852:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['we', 'data_in']"];
	"1156:AS" -> "TX_DATA_REG9.852:AL";
	"1904:NS" -> "Leaf_1901:AL"	 [cond="[]",
		lineno=None];
	"TX_DATA_REG2.855:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>",
		fillcolor=firebrick,
		label="TX_DATA_REG2.855:NS
data_out <= #1 data_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>]",
		style=filled,
		typ=NonblockingSubstitution];
	"TX_DATA_REG2.854:IF" -> "TX_DATA_REG2.855:NS"	 [cond="['we']",
		label=we,
		lineno=854];
	"ACCEPTANCE_CODE_REG1.855:NS" -> "ACCEPTANCE_CODE_REG1.Leaf_852:AL"	 [cond="[]",
		lineno=None];
	"1376:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd751d67790>",
		fillcolor=firebrick,
		label="1376:NS
overrun_status <= #Tp 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd751d67790>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1375:IF" -> "1376:NS"	 [cond="['reset_mode', 'clear_data_overrun']",
		label="(reset_mode || clear_data_overrun)",
		lineno=1375];
	"TX_DATA_REG8.Leaf_852:AL" -> "1772:AL";
	"TX_DATA_REG9.852:AL" -> "TX_DATA_REG9.853:BL"	 [cond="[]",
		lineno=None];
	"TX_DATA_REG11.855:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>",
		fillcolor=firebrick,
		label="TX_DATA_REG11.855:NS
data_out <= #1 data_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>]",
		style=filled,
		typ=NonblockingSubstitution];
	"TX_DATA_REG11.855:NS" -> "TX_DATA_REG11.Leaf_852:AL"	 [cond="[]",
		lineno=None];
	"TX_DATA_REG10.855:NS" -> "TX_DATA_REG10.Leaf_852:AL"	 [cond="[]",
		lineno=None];
	"1825:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd773801c50>",
		fillcolor=lightcyan,
		label="1825:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1825:CA" -> "1825:BS"	 [cond="[]",
		lineno=None];
	"TX_DATA_REG1.Leaf_852:AL" -> "1772:AL";
	"ACCEPTANCE_CODE_REG2.854:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752624f90>",
		fillcolor=springgreen,
		label="ACCEPTANCE_CODE_REG2.854:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"ACCEPTANCE_CODE_REG2.855:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>",
		fillcolor=firebrick,
		label="ACCEPTANCE_CODE_REG2.855:NS
data_out <= #1 data_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752616250>]",
		style=filled,
		typ=NonblockingSubstitution];
	"ACCEPTANCE_CODE_REG2.854:IF" -> "ACCEPTANCE_CODE_REG2.855:NS"	 [cond="['we']",
		label=we,
		lineno=854];
	"MODE_REG_BASIC.512:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd75264b890>",
		fillcolor=turquoise,
		label="MODE_REG_BASIC.512:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"MODE_REG_BASIC.512:BL" -> "MODE_REG_BASIC.513:IF"	 [cond="[]",
		lineno=None];
	"COMMAND_REG0.684:BL" -> "COMMAND_REG0.685:IF"	 [cond="[]",
		lineno=None];
	"1821:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"BUS_TIMING_1_REG.852:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd752616050>",
		clk_sens=True,
		fillcolor=gold,
		label="BUS_TIMING_1_REG.852:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['we', 'data_in']"];
	"BUS_TIMING_1_REG.852:AL" -> "BUS_TIMING_1_REG.853:BL"	 [cond="[]",
		lineno=None];
	"MODE_REG_EXT.512:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd75264b890>",
		fillcolor=turquoise,
		label="MODE_REG_EXT.512:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"MODE_REG_EXT.511:AL" -> "MODE_REG_EXT.512:BL"	 [cond="[]",
		lineno=None];
	"1822:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd773801290>",
		fillcolor=lightcyan,
		label="1822:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1822:CA" -> "1822:BS"	 [cond="[]",
		lineno=None];
	"MODE_REG0.685:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752245f10>",
		fillcolor=springgreen,
		label="MODE_REG0.685:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"MODE_REG0.685:IF" -> "MODE_REG0.686:NS"	 [cond="['rst']",
		label=rst,
		lineno=685];
	"MODE_REG0.687:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752624250>",
		fillcolor=springgreen,
		label="MODE_REG0.687:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"MODE_REG0.685:IF" -> "MODE_REG0.687:IF"	 [cond="['rst']",
		label="!(rst)",
		lineno=685];
	"1891:IF" -> "1892:NS"	 [cond="['rst']",
		label=rst,
		lineno=1891];
	"1891:IF" -> "1893:IF"	 [cond="['rst']",
		label="!(rst)",
		lineno=1891];
	"BUS_TIMING_0_REG.854:IF" -> "BUS_TIMING_0_REG.855:NS"	 [cond="['we']",
		label=we,
		lineno=854];
	"1859:IF" -> "1860:NS"	 [cond="['transmit_buffer_status', 'transmit_buffer_status_q', 'transmit_irq_en']",
		label="(transmit_buffer_status & ~transmit_buffer_status_q & transmit_irq_en)",
		lineno=1859];
	"1509:BS" -> "Leaf_1502:AL"	 [cond="[]",
		lineno=None];
	"1813:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd7737f7110>",
		fillcolor=lightcyan,
		label="1813:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1813:CA" -> "1813:BS"	 [cond="[]",
		lineno=None];
	"1870:NS" -> "Leaf_1865:AL"	 [cond="[]",
		lineno=None];
	"1385:NS" -> "Leaf_1380:AL"	 [cond="[]",
		lineno=None];
	"1803:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"1781:CS" -> "1803:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"1781:CS" -> "1792:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"1781:CS" -> "1814:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"1781:CS" -> "1795:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"1781:CS" -> "1805:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"1781:CS" -> "1791:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"1781:CS" -> "1826:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"1781:CS" -> "1821:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"1781:CS" -> "1824:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"1781:CS" -> "1815:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"1781:CS" -> "1817:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"1781:CS" -> "1812:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"1781:CS" -> "1786:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"1781:CS" -> "1794:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"1781:CS" -> "1827:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"1781:CS" -> "1798:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"1781:CS" -> "1820:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"1781:CS" -> "1783:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"1781:CS" -> "1816:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"1781:CS" -> "1802:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"1781:CS" -> "1807:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"1781:CS" -> "1797:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"1781:CS" -> "1818:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"1781:CS" -> "1819:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"1781:CS" -> "1790:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"1781:CS" -> "1809:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"1781:CS" -> "1788:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"1781:CS" -> "1800:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"1781:CS" -> "1828:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"1781:CS" -> "1808:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"1781:CS" -> "1801:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"1781:CS" -> "1810:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"1781:CS" -> "1784:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"1781:CS" -> "1823:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"1781:CS" -> "1799:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"1781:CS" -> "1782:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"1781:CS" -> "1796:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"1781:CS" -> "1793:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"1781:CS" -> "1825:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"1781:CS" -> "1822:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"1781:CS" -> "1813:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"1806:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd7737edd90>",
		fillcolor=lightcyan,
		label="1806:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1781:CS" -> "1806:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"1789:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd7737dfe50>",
		fillcolor=lightcyan,
		label="1789:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1781:CS" -> "1789:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"1804:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd7737ed890>",
		fillcolor=lightcyan,
		label="1804:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1781:CS" -> "1804:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"1811:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd7737f2d50>",
		fillcolor=lightcyan,
		label="1811:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1781:CS" -> "1811:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"1785:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd7737df3d0>",
		fillcolor=lightcyan,
		label="1785:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1781:CS" -> "1785:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"1787:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd7737df8d0>",
		fillcolor=lightcyan,
		label="1787:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1781:CS" -> "1787:CA"	 [cond="['extended_mode', 'addr']",
		label="{ extended_mode, addr[4:0] }",
		lineno=1781];
	"CLOCK_DIVIDER_REG_3.513:IF" -> "CLOCK_DIVIDER_REG_3.514:NS"	 [cond="['rst']",
		label=rst,
		lineno=513];
	"CLOCK_DIVIDER_REG_3.513:IF" -> "CLOCK_DIVIDER_REG_3.515:IF"	 [cond="['rst']",
		label="!(rst)",
		lineno=513];
	"MODE_REG_EXT.512:BL" -> "MODE_REG_EXT.513:IF"	 [cond="[]",
		lineno=None];
	"1871:IF" -> "1872:NS"	 [cond="['reset_mode', 'release_buffer']",
		label="(reset_mode || release_buffer)",
		lineno=1871];
	"MODE_REG0.689:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752624390>",
		fillcolor=springgreen,
		label="MODE_REG0.689:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"MODE_REG0.689:IF" -> "MODE_REG0.690:NS"	 [cond="['we']",
		label=we,
		lineno=689];
	"TX_DATA_REG3.854:IF" -> "TX_DATA_REG3.855:NS"	 [cond="['we']",
		label=we,
		lineno=854];
	"1819:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"1808:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"MODE_REG_BASIC.515:IF" -> "MODE_REG_BASIC.516:NS"	 [cond="['we']",
		label=we,
		lineno=515];
	"1339:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd75227aed0>",
		def_var="['status']",
		fillcolor=deepskyblue,
		label="1339:AS
status[4] = receive_status;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['receive_status']"];
	"1339:AS" -> "1772:AL";
	"MODE_REG0.684:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd752245d50>",
		fillcolor=turquoise,
		label="MODE_REG0.684:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"MODE_REG0.683:AL" -> "MODE_REG0.684:BL"	 [cond="[]",
		lineno=None];
	"ERROR_WARNING_REG.515:IF" -> "ERROR_WARNING_REG.516:NS"	 [cond="['we']",
		label=we,
		lineno=515];
	"COMMAND_REG1.688:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752624210>",
		fillcolor=firebrick,
		label="COMMAND_REG1.688:NS
data_out <= #1 RESET_VALUE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd752624210>]",
		style=filled,
		typ=NonblockingSubstitution];
	"COMMAND_REG1.688:NS" -> "COMMAND_REG1.Leaf_683:AL"	 [cond="[]",
		lineno=None];
	"TX_DATA_REG11.854:IF" -> "TX_DATA_REG11.855:NS"	 [cond="['we']",
		label=we,
		lineno=854];
	"TX_DATA_REG2.852:AL" -> "TX_DATA_REG2.853:BL"	 [cond="[]",
		lineno=None];
	"CLOCK_DIVIDER_REG_LOW.513:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752633650>",
		fillcolor=springgreen,
		label="CLOCK_DIVIDER_REG_LOW.513:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"CLOCK_DIVIDER_REG_LOW.513:IF" -> "CLOCK_DIVIDER_REG_LOW.515:IF"	 [cond="['rst']",
		label="!(rst)",
		lineno=513];
	"CLOCK_DIVIDER_REG_LOW.513:IF" -> "CLOCK_DIVIDER_REG_LOW.514:NS"	 [cond="['rst']",
		label=rst,
		lineno=513];
	"ACCEPTANCE_MASK_REG1.Leaf_852:AL"	 [def_var="['data_out']",
		label="ACCEPTANCE_MASK_REG1.Leaf_852:AL"];
	"ACCEPTANCE_MASK_REG1.855:NS" -> "ACCEPTANCE_MASK_REG1.Leaf_852:AL"	 [cond="[]",
		lineno=None];
	"1931:AL" -> "1932:BL"	 [cond="[]",
		lineno=None];
	"1506:CA" -> "1506:BS"	 [cond="[]",
		lineno=None];
	"1806:CA" -> "1806:BS"	 [cond="[]",
		lineno=None];
	"ACCEPTANCE_CODE_REG2.853:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd7526160d0>",
		fillcolor=turquoise,
		label="ACCEPTANCE_CODE_REG2.853:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"ACCEPTANCE_CODE_REG2.853:BL" -> "ACCEPTANCE_CODE_REG2.854:IF"	 [cond="[]",
		lineno=None];
	"1791:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"1387:NS" -> "Leaf_1380:AL"	 [cond="[]",
		lineno=None];
	"CLOCK_DIVIDER_REG_7.514:NS" -> "CLOCK_DIVIDER_REG_7.Leaf_511:AL"	 [cond="[]",
		lineno=None];
	"1511:BS" -> "Leaf_1502:AL"	 [cond="[]",
		lineno=None];
	"1293:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd752275a50>",
		fillcolor=turquoise,
		label="1293:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1292:AL" -> "1293:BL"	 [cond="[]",
		lineno=None];
	"COMMAND_REG1.687:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752624250>",
		fillcolor=springgreen,
		label="COMMAND_REG1.687:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"COMMAND_REG1.687:IF" -> "COMMAND_REG1.689:IF"	 [cond="['rst_sync']",
		label="!(rst_sync)",
		lineno=687];
	"COMMAND_REG1.687:IF" -> "COMMAND_REG1.688:NS"	 [cond="['rst_sync']",
		label=rst_sync,
		lineno=687];
	"1789:CA" -> "1789:BS"	 [cond="[]",
		lineno=None];
	"1818:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"1805:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"1297:NS" -> "Leaf_1292:AL"	 [cond="[]",
		lineno=None];
	"1800:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"COMMAND_REG4.687:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752624250>",
		fillcolor=springgreen,
		label="COMMAND_REG4.687:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"COMMAND_REG4.687:IF" -> "COMMAND_REG4.688:NS"	 [cond="['rst_sync']",
		label=rst_sync,
		lineno=687];
	"COMMAND_REG4.689:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd752624390>",
		fillcolor=springgreen,
		label="COMMAND_REG4.689:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"COMMAND_REG4.687:IF" -> "COMMAND_REG4.689:IF"	 [cond="['rst_sync']",
		label="!(rst_sync)",
		lineno=687];
	"1834:AS" -> "1841:AL";
	"MODE_REG0.687:IF" -> "MODE_REG0.688:NS"	 [cond="['rst_sync']",
		label=rst_sync,
		lineno=687];
	"MODE_REG0.687:IF" -> "MODE_REG0.689:IF"	 [cond="['rst_sync']",
		label="!(rst_sync)",
		lineno=687];
	"1293:BL" -> "1294:IF"	 [cond="[]",
		lineno=None];
	"TX_DATA_REG9.855:NS" -> "TX_DATA_REG9.Leaf_852:AL"	 [cond="[]",
		lineno=None];
	"1158:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd7524fdd90>",
		def_var="['we_tx_data_11']",
		fillcolor=deepskyblue,
		label="1158:AS
we_tx_data_11 = cs & we & ~reset_mode & (extended_mode & (addr == 8'd27)) & transmit_buffer_status;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cs', 'we', 'reset_mode', 'extended_mode', 'addr', 'transmit_buffer_status']"];
	"1158:AS" -> "TX_DATA_REG11.852:AL";
	"ACCEPTANCE_MASK_REG2.854:IF" -> "ACCEPTANCE_MASK_REG2.855:NS"	 [cond="['we']",
		label=we,
		lineno=854];
	"1817:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"COMMAND_REG0.686:NS" -> "COMMAND_REG0.Leaf_683:AL"	 [cond="[]",
		lineno=None];
	"1535:NS" -> "Leaf_1530:AL"	 [cond="[]",
		lineno=None];
	"1785:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737df5d0>",
		fillcolor=cadetblue,
		label="1785:BS
data_out = irq_reg;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd7737df5d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"1785:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"TX_DATA_REG4.852:AL" -> "TX_DATA_REG4.853:BL"	 [cond="[]",
		lineno=None];
	"1804:CA" -> "1804:BS"	 [cond="[]",
		lineno=None];
	"TX_DATA_REG2.855:NS" -> "TX_DATA_REG2.Leaf_852:AL"	 [cond="[]",
		lineno=None];
	"COMMAND_REG0.690:NS" -> "COMMAND_REG0.Leaf_683:AL"	 [cond="[]",
		lineno=None];
	"1811:CA" -> "1811:BS"	 [cond="[]",
		lineno=None];
	"1224:AS" -> "COMMAND_REG0.683:AL";
	"1224:AS" -> "1149:AS";
	"1224:AS" -> "1146:AS";
	"1224:AS" -> "1166:AS";
	"1224:AS" -> "1173:AS";
	"1224:AS" -> "1151:AS";
	"1224:AS" -> "1145:AS";
	"1224:AS" -> "1380:AL";
	"1224:AS" -> "1168:AS";
	"1224:AS" -> "COMMAND_REG1.683:AL";
	"1224:AS" -> "1147:AS";
	"1224:AS" -> "1914:AL";
	"1224:AS" -> "1865:AL";
	"1224:AS" -> "1853:AL";
	"1224:AS" -> "1159:AS";
	"1224:AS" -> "1170:AS";
	"1224:AS" -> "1137:AS";
	"1224:AS" -> "1152:AS";
	"1224:AS" -> "1171:AS";
	"1224:AS" -> "1172:AS";
	"1224:AS" -> "1148:AS";
	"1224:AS" -> "1901:AL";
	"1224:AS" -> "1165:AS";
	"1224:AS" -> "1169:AS";
	"1224:AS" -> "1150:AS";
	"1224:AS" -> "1155:AS";
	"1224:AS" -> "1134:AS";
	"1224:AS" -> "1358:AL";
	"1224:AS" -> "1369:AL";
	"1224:AS" -> "COMMAND_REG.683:AL";
	"1224:AS" -> "COMMAND_REG4.683:AL";
	"1224:AS" -> "1167:AS";
	"1224:AS" -> "1153:AS";
	"1224:AS" -> "1157:AS";
	"1224:AS" -> "1156:AS";
	"1224:AS" -> "MODE_REG_EXT.511:AL";
	"1224:AS" -> "1158:AS";
	"1224:AS" -> "1841:AL";
	"1135:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd7521df350>",
		def_var="['we_bus_timing_1']",
		fillcolor=deepskyblue,
		label="1135:AS
we_bus_timing_1 = cs & we & (addr == 8'd7) & reset_mode;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cs', 'we', 'addr', 'reset_mode']"];
	"1224:AS" -> "1135:AS";
	"1154:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd7524f6250>",
		def_var="['we_tx_data_7']",
		fillcolor=deepskyblue,
		label="1154:AS
we_tx_data_7 = cs & we & ~reset_mode & (~extended_mode & (addr == 8'd17) | extended_mode & (addr == 8'd23)) & transmit_buffer_\
status;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cs', 'we', 'reset_mode', 'extended_mode', 'addr', 'extended_mode', 'addr', 'transmit_buffer_status']"];
	"1224:AS" -> "1154:AS";
	"1224:AS" -> "1772:AL";
	"1224:AS" -> "1889:AL";
	"1785:CA" -> "1785:BS"	 [cond="[]",
		lineno=None];
	"COMMAND_REG4.685:IF" -> "COMMAND_REG4.686:NS"	 [cond="['rst']",
		label=rst,
		lineno=685];
	"COMMAND_REG4.685:IF" -> "COMMAND_REG4.687:IF"	 [cond="['rst']",
		label="!(rst)",
		lineno=685];
	"ACCEPTANCE_MASK_REG3.852:AL" -> "ACCEPTANCE_MASK_REG3.853:BL"	 [cond="[]",
		lineno=None];
	"1841:AL" -> "1842:BL"	 [cond="[]",
		lineno=None];
	"COMMAND_REG4.689:IF" -> "COMMAND_REG4.690:NS"	 [cond="['we']",
		label=we,
		lineno=689];
	"COMMAND_REG1.685:IF" -> "COMMAND_REG1.686:NS"	 [cond="['rst']",
		label=rst,
		lineno=685];
	"COMMAND_REG1.685:IF" -> "COMMAND_REG1.687:IF"	 [cond="['rst']",
		label="!(rst)",
		lineno=685];
	"CLOCK_DIVIDER_REG_LOW.512:BL" -> "CLOCK_DIVIDER_REG_LOW.513:IF"	 [cond="[]",
		lineno=None];
	"TX_DATA_REG1.852:AL" -> "TX_DATA_REG1.853:BL"	 [cond="[]",
		lineno=None];
	"ACCEPTANCE_CODE_REG0.855:NS" -> "ACCEPTANCE_CODE_REG0.Leaf_852:AL"	 [cond="[]",
		lineno=None];
	"BUS_TIMING_1_REG.Leaf_852:AL" -> "1444:AS";
	"BUS_TIMING_1_REG.Leaf_852:AL" -> "1446:AS";
	"BUS_TIMING_1_REG.Leaf_852:AL" -> "1445:AS";
	"BUS_TIMING_1_REG.Leaf_852:AL" -> "1772:AL";
	"Leaf_1914:AL" -> "1928:AS";
	"Leaf_1914:AL" -> "1926:AS";
	"1135:AS" -> "BUS_TIMING_1_REG.852:AL";
	"1154:AS" -> "TX_DATA_REG7.852:AL";
	"1295:NS" -> "Leaf_1292:AL"	 [cond="[]",
		lineno=None];
	"IRQ_EN_REG.853:BL" -> "IRQ_EN_REG.854:IF"	 [cond="[]",
		lineno=None];
	"1772:AL" -> "1780:BL"	 [cond="[]",
		lineno=None];
	"1164:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd7524f57d0>",
		def_var="['we_interrupt_enable']",
		fillcolor=deepskyblue,
		label="1164:AS
we_interrupt_enable = cs & we & (addr == 8'd4) & extended_mode;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cs', 'we', 'addr', 'extended_mode']"];
	"1164:AS" -> "IRQ_EN_REG.852:AL";
	"TX_DATA_REG12.854:IF" -> "TX_DATA_REG12.855:NS"	 [cond="['we']",
		label=we,
		lineno=854];
	"Leaf_1358:AL" -> "1149:AS";
	"Leaf_1358:AL" -> "1151:AS";
	"Leaf_1358:AL" -> "1178:AL";
	"Leaf_1358:AL" -> "1147:AS";
	"Leaf_1358:AL" -> "1853:AL";
	"Leaf_1358:AL" -> "1159:AS";
	"Leaf_1358:AL" -> "1152:AS";
	"Leaf_1358:AL" -> "1148:AS";
	"Leaf_1358:AL" -> "1150:AS";
	"Leaf_1358:AL" -> "1155:AS";
	"Leaf_1358:AL" -> "1341:AS";
	"Leaf_1358:AL" -> "1153:AS";
	"Leaf_1358:AL" -> "1157:AS";
	"Leaf_1358:AL" -> "1156:AS";
	"Leaf_1358:AL" -> "1158:AS";
	"Leaf_1358:AL" -> "1154:AS";
	"1896:NS" -> "Leaf_1889:AL"	 [cond="[]",
		lineno=None];
	"MODE_REG_BASIC.Leaf_511:AL" -> "1231:AS";
	"MODE_REG_BASIC.Leaf_511:AL" -> "1232:AS";
	"MODE_REG_BASIC.Leaf_511:AL" -> "1229:AS";
	"MODE_REG_BASIC.Leaf_511:AL" -> "1772:AL";
	"1230:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fd75226eb90>",
		def_var="['transmit_irq_en_basic']",
		fillcolor=deepskyblue,
		label="1230:AS
transmit_irq_en_basic = mode_basic[2];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['mode_basic']"];
	"MODE_REG_BASIC.Leaf_511:AL" -> "1230:AS";
	"1496:AS" -> "1149:AS";
	"1496:AS" -> "1146:AS";
	"1496:AS" -> "1166:AS";
	"1496:AS" -> "1225:AS";
	"1496:AS" -> "1173:AS";
	"1496:AS" -> "1151:AS";
	"1496:AS" -> "1145:AS";
	"1496:AS" -> "1226:AS";
	"1496:AS" -> "1168:AS";
	"1496:AS" -> "1147:AS";
	"1496:AS" -> "1142:AS";
	"1496:AS" -> "1159:AS";
	"1496:AS" -> "1170:AS";
	"1496:AS" -> "1152:AS";
	"1496:AS" -> "1171:AS";
	"1496:AS" -> "1835:AS";
	"1496:AS" -> "1172:AS";
	"1496:AS" -> "1148:AS";
	"1496:AS" -> "1165:AS";
	"1496:AS" -> "1141:AS";
	"1496:AS" -> "1169:AS";
	"1496:AS" -> "1150:AS";
	"1496:AS" -> "1155:AS";
	"1496:AS" -> "1836:AS";
	"1496:AS" -> "1837:AS";
	"1496:AS" -> "1167:AS";
	"1496:AS" -> "1153:AS";
	"1496:AS" -> "1157:AS";
	"1496:AS" -> "1156:AS";
	"1496:AS" -> "1834:AS";
	"1496:AS" -> "1158:AS";
	"1496:AS" -> "1154:AS";
	"1496:AS" -> "1772:AL";
	"1496:AS" -> "1164:AS";
	"1496:AS" -> "1227:AS";
	"ACCEPTANCE_MASK_REG3.855:NS" -> "ACCEPTANCE_MASK_REG3.Leaf_852:AL"	 [cond="[]",
		lineno=None];
	"ACCEPTANCE_MASK_REG0.Leaf_852:AL" -> "1772:AL";
	"MODE_REG_BASIC.514:NS" -> "MODE_REG_BASIC.Leaf_511:AL"	 [cond="[]",
		lineno=None];
	"1230:AS" -> "1836:AS";
	"TX_DATA_REG5.854:IF" -> "TX_DATA_REG5.855:NS"	 [cond="['we']",
		label=we,
		lineno=854];
	"1520:IF" -> "1521:NS"	 [cond="['rst']",
		label=rst,
		lineno=1520];
	"1520:IF" -> "1522:IF"	 [cond="['rst']",
		label="!(rst)",
		lineno=1520];
	"ACCEPTANCE_MASK_REG1.853:BL" -> "ACCEPTANCE_MASK_REG1.854:IF"	 [cond="[]",
		lineno=None];
	"ACCEPTANCE_MASK_REG1.Leaf_852:AL" -> "1772:AL";
	"ACCEPTANCE_CODE_REG2.852:AL" -> "ACCEPTANCE_CODE_REG2.853:BL"	 [cond="[]",
		lineno=None];
	"1796:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"ACCEPTANCE_MASK_REG0.852:AL" -> "ACCEPTANCE_MASK_REG0.853:BL"	 [cond="[]",
		lineno=None];
	"ACCEPTANCE_CODE_REG2.855:NS" -> "ACCEPTANCE_CODE_REG2.Leaf_852:AL"	 [cond="[]",
		lineno=None];
	"MODE_REG_BASIC.511:AL" -> "MODE_REG_BASIC.512:BL"	 [cond="[]",
		lineno=None];
	"1918:IF" -> "1919:NS"	 [cond="['node_error_passive', 'node_error_passive_q', 'node_error_passive', 'node_error_passive_q', 'node_error_active', 'error_passive_\
irq_en']",
		label="((node_error_passive & ~node_error_passive_q | ~node_error_passive & node_error_passive_q & node_error_active) & error_passive_irq_\
en)",
		lineno=1918];
	"1918:IF" -> "1920:IF"	 [cond="['node_error_passive', 'node_error_passive_q', 'node_error_passive', 'node_error_passive_q', 'node_error_active', 'error_passive_\
irq_en']",
		label="!(((node_error_passive & ~node_error_passive_q | ~node_error_passive & node_error_passive_q & node_error_active) & error_passive_\
irq_en))",
		lineno=1918];
	"1812:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"1921:NS" -> "Leaf_1914:AL"	 [cond="[]",
		lineno=None];
	"1786:BS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"BUS_TIMING_1_REG.854:IF" -> "BUS_TIMING_1_REG.855:NS"	 [cond="['we']",
		label=we,
		lineno=854];
	"1376:NS" -> "Leaf_1369:AL"	 [cond="[]",
		lineno=None];
	"1889:AL" -> "1890:BL"	 [cond="[]",
		lineno=None];
	"MODE_REG0.684:BL" -> "MODE_REG0.685:IF"	 [cond="[]",
		lineno=None];
	"1787:CA" -> "1787:BS"	 [cond="[]",
		lineno=None];
	"ACCEPTANCE_CODE_REG3.Leaf_852:AL" -> "1772:AL";
	"1353:IF" -> "1354:NS"	 [cond="['tx_request']",
		label=tx_request,
		lineno=1353];
	"1278:NS" -> "Leaf_1275:AL"	 [cond="[]",
		lineno=None];
}
