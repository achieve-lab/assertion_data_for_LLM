digraph "()" {
	"MODE_REG_BASIC.we" -> "MODE_REG_BASIC.data_out"	 [weight=1.0];
	"COMMAND_REG1.we" -> "COMMAND_REG1.data_out"	 [weight=1.0];
	"TX_DATA_REG5.we" -> "TX_DATA_REG5.data_out"	 [weight=1.0];
	we_clock_divider_hi -> "CLOCK_DIVIDER_REG_7.we"	 [weight=1.0];
	we_clock_divider_hi -> "CLOCK_DIVIDER_REG_3.we"	 [weight=1.0];
	clkout_cnt -> clkout_cnt	 [weight=3.0];
	clkout_cnt -> clkout_tmp	 [weight=1.0];
	"CLOCK_DIVIDER_REG_7.we" -> "CLOCK_DIVIDER_REG_7.data_out"	 [weight=1.0];
	overload_request;
	"ACCEPTANCE_MASK_REG2.we" -> "ACCEPTANCE_MASK_REG2.data_out"	 [weight=1.0];
	"TX_DATA_REG9.data_in" -> "TX_DATA_REG9.data_out"	 [weight=1.0];
	"ERROR_WARNING_REG.rst" -> "ERROR_WARNING_REG.data_out"	 [weight=2.0];
	"TX_DATA_REG1.data_out" -> tx_data_1	 [weight=1.0];
	"TX_DATA_REG9.we" -> "TX_DATA_REG9.data_out"	 [weight=1.0];
	bus_timing_1 -> triple_sampling	 [weight=1.0];
	bus_timing_1 -> time_segment2	 [weight=1.0];
	bus_timing_1 -> time_segment1	 [weight=1.0];
	bus_timing_1 -> data_out	 [weight=2.0];
	arbitration_lost_irq_en -> arbitration_lost_irq	 [weight=2.0];
	"ACCEPTANCE_CODE_REG3.we" -> "ACCEPTANCE_CODE_REG3.data_out"	 [weight=1.0];
	"COMMAND_REG1.rst" -> "COMMAND_REG1.data_out"	 [weight=3.0];
	"MODE_REG_BASIC.rst" -> "MODE_REG_BASIC.data_out"	 [weight=2.0];
	node_bus_off -> node_bus_off_q	 [weight=1.0];
	node_bus_off -> status	 [weight=1.0];
	node_bus_off -> error_irq	 [weight=2.0];
	error_warning_irq_en -> error_irq	 [weight=2.0];
	rx_err_cnt -> data_out	 [weight=1.0];
	"ACCEPTANCE_MASK_REG0.data_out" -> acceptance_mask_0	 [weight=1.0];
	bus_error_irq -> irq_reg	 [weight=1.0];
	bus_error_irq -> irq	 [weight=1.0];
	error_passive_irq -> irq_reg	 [weight=1.0];
	error_passive_irq -> irq	 [weight=1.0];
	addr -> we_tx_err_cnt	 [weight=1.0];
	addr -> read_irq_reg	 [weight=1.0];
	addr -> we_tx_data_12	 [weight=1.0];
	addr -> we_tx_data_11	 [weight=1.0];
	addr -> we_tx_data_10	 [weight=1.0];
	addr -> we_error_warning_limit	 [weight=1.0];
	addr -> read_error_code_capture_reg	 [weight=1.0];
	addr -> we_bus_timing_0	 [weight=1.0];
	addr -> we_bus_timing_1	 [weight=1.0];
	addr -> we_rx_err_cnt	 [weight=1.0];
	addr -> we_acceptance_code_1	 [weight=1.0];
	addr -> we_tx_data_9	 [weight=1.0];
	addr -> we_tx_data_8	 [weight=1.0];
	addr -> we_tx_data_3	 [weight=1.0];
	addr -> we_tx_data_1	 [weight=1.0];
	addr -> we_tx_data_0	 [weight=1.0];
	addr -> we_tx_data_7	 [weight=1.0];
	addr -> we_tx_data_6	 [weight=1.0];
	addr -> we_tx_data_5	 [weight=1.0];
	addr -> we_tx_data_4	 [weight=1.0];
	addr -> read_arbitration_lost_capture_reg	 [weight=1.0];
	addr -> we_acceptance_code_3	 [weight=1.0];
	addr -> we_acceptance_code_2	 [weight=1.0];
	addr -> we_acceptance_code_0	 [weight=1.0];
	addr -> data_out	 [weight=47.0];
	addr -> we_acceptance_mask_0	 [weight=1.0];
	addr -> we_acceptance_mask_1	 [weight=1.0];
	addr -> we_acceptance_mask_2	 [weight=1.0];
	addr -> we_acceptance_mask_3	 [weight=1.0];
	addr -> we_interrupt_enable	 [weight=1.0];
	addr -> we_command	 [weight=1.0];
	addr -> we_clock_divider_low	 [weight=1.0];
	addr -> we_tx_data_2	 [weight=1.0];
	addr -> we_mode	 [weight=1.0];
	"TX_DATA_REG8.data_out" -> tx_data_8	 [weight=1.0];
	"ACCEPTANCE_CODE_REG2.data_in" -> "ACCEPTANCE_CODE_REG2.data_out"	 [weight=1.0];
	need_to_tx -> transmit_buffer_status	 [weight=1.0];
	tx_err_cnt -> data_out	 [weight=1.0];
	transmit_irq_en -> transmit_irq	 [weight=1.0];
	data_in -> "TX_DATA_REG9.data_in"	 [weight=1.0];
	data_in -> "ACCEPTANCE_CODE_REG2.data_in"	 [weight=1.0];
	data_in -> "ACCEPTANCE_CODE_REG0.data_in"	 [weight=1.0];
	data_in -> "TX_DATA_REG10.data_in"	 [weight=1.0];
	data_in -> "TX_DATA_REG5.data_in"	 [weight=1.0];
	data_in -> "CLOCK_DIVIDER_REG_LOW.data_in"	 [weight=1.0];
	data_in -> "TX_DATA_REG6.data_in"	 [weight=1.0];
	data_in -> "BUS_TIMING_1_REG.data_in"	 [weight=1.0];
	data_in -> "TX_DATA_REG7.data_in"	 [weight=1.0];
	data_in -> "TX_DATA_REG3.data_in"	 [weight=1.0];
	data_in -> "ACCEPTANCE_CODE_REG1.data_in"	 [weight=1.0];
	data_in -> "MODE_REG_EXT.data_in"	 [weight=1.0];
	data_in -> "TX_DATA_REG8.data_in"	 [weight=1.0];
	data_in -> "ERROR_WARNING_REG.data_in"	 [weight=1.0];
	data_in -> "BUS_TIMING_0_REG.data_in"	 [weight=1.0];
	data_in -> "ACCEPTANCE_MASK_REG2.data_in"	 [weight=1.0];
	data_in -> "COMMAND_REG1.data_in"	 [weight=1.0];
	data_in -> "MODE_REG_BASIC.data_in"	 [weight=1.0];
	data_in -> "COMMAND_REG0.data_in"	 [weight=1.0];
	data_in -> "COMMAND_REG4.data_in"	 [weight=1.0];
	data_in -> "TX_DATA_REG2.data_in"	 [weight=1.0];
	data_in -> "TX_DATA_REG0.data_in"	 [weight=1.0];
	data_in -> "CLOCK_DIVIDER_REG_7.data_in"	 [weight=1.0];
	data_in -> "MODE_REG0.data_in"	 [weight=1.0];
	data_in -> "TX_DATA_REG1.data_in"	 [weight=1.0];
	data_in -> "TX_DATA_REG11.data_in"	 [weight=1.0];
	data_in -> "ACCEPTANCE_MASK_REG3.data_in"	 [weight=1.0];
	data_in -> "ACCEPTANCE_MASK_REG1.data_in"	 [weight=1.0];
	data_in -> "TX_DATA_REG4.data_in"	 [weight=1.0];
	data_in -> "CLOCK_DIVIDER_REG_3.data_in"	 [weight=1.0];
	data_in -> "TX_DATA_REG12.data_in"	 [weight=1.0];
	data_in -> "COMMAND_REG.data_in"	 [weight=1.0];
	data_in -> "ACCEPTANCE_MASK_REG0.data_in"	 [weight=1.0];
	data_in -> "IRQ_EN_REG.data_in"	 [weight=1.0];
	data_in -> "ACCEPTANCE_CODE_REG3.data_in"	 [weight=1.0];
	"TX_DATA_REG12.data_out" -> tx_data_12	 [weight=1.0];
	node_error_passive -> error_passive_irq	 [weight=4.0];
	node_error_passive -> node_error_passive_q	 [weight=1.0];
	overrun_status -> status	 [weight=1.0];
	read_irq_reg -> bus_error_irq	 [weight=1.0];
	read_irq_reg -> error_passive_irq	 [weight=1.0];
	read_irq_reg -> irq_n	 [weight=2.0];
	read_irq_reg -> transmit_irq	 [weight=2.0];
	read_irq_reg -> arbitration_lost_irq	 [weight=1.0];
	read_irq_reg -> data_overrun_irq	 [weight=1.0];
	read_irq_reg -> error_irq	 [weight=1.0];
	"COMMAND_REG4.data_out" -> command	 [weight=1.0];
	bus_error_irq_en -> bus_error_irq	 [weight=2.0];
	"MODE_REG0.rst" -> "MODE_REG0.data_out"	 [weight=3.0];
	overrun_q -> overrun_status	 [weight=2.0];
	overrun_q -> data_overrun_irq	 [weight=2.0];
	"CLOCK_DIVIDER_REG_7.data_out" -> clock_divider	 [weight=1.0];
	clock_off -> clkout	 [weight=1.0];
	overrun -> overrun_status	 [weight=2.0];
	overrun -> overrun_q	 [weight=1.0];
	overrun -> data_overrun_irq	 [weight=2.0];
	"ACCEPTANCE_CODE_REG0.data_in" -> "ACCEPTANCE_CODE_REG0.data_out"	 [weight=1.0];
	"MODE_REG_EXT.rst" -> "MODE_REG_EXT.data_out"	 [weight=2.0];
	we_tx_data_12 -> "TX_DATA_REG12.we"	 [weight=1.0];
	we_tx_data_11 -> "TX_DATA_REG11.we"	 [weight=1.0];
	we_tx_data_10 -> "TX_DATA_REG10.we"	 [weight=1.0];
	irq_en_ext -> arbitration_lost_irq_en	 [weight=1.0];
	irq_en_ext -> bus_error_irq_en	 [weight=1.0];
	irq_en_ext -> error_warning_irq_en_ext	 [weight=1.0];
	irq_en_ext -> error_passive_irq_en	 [weight=1.0];
	irq_en_ext -> receive_irq_en_ext	 [weight=1.0];
	irq_en_ext -> data_out	 [weight=1.0];
	irq_en_ext -> transmit_irq_en_ext	 [weight=1.0];
	irq_en_ext -> data_overrun_irq_en_ext	 [weight=1.0];
	"TX_DATA_REG6.we" -> "TX_DATA_REG6.data_out"	 [weight=1.0];
	"TX_DATA_REG10.data_in" -> "TX_DATA_REG10.data_out"	 [weight=1.0];
	error_status_q -> error_irq	 [weight=2.0];
	"TX_DATA_REG5.data_in" -> "TX_DATA_REG5.data_out"	 [weight=1.0];
	"CLOCK_DIVIDER_REG_LOW.data_in" -> "CLOCK_DIVIDER_REG_LOW.data_out"	 [weight=1.0];
	transmit_irq -> irq_reg	 [weight=1.0];
	transmit_irq -> irq	 [weight=1.0];
	"TX_DATA_REG6.data_in" -> "TX_DATA_REG6.data_out"	 [weight=1.0];
	we_error_warning_limit -> "ERROR_WARNING_REG.we"	 [weight=1.0];
	"TX_DATA_REG2.data_out" -> tx_data_2	 [weight=1.0];
	"COMMAND_REG0.data_out" -> command	 [weight=1.0];
	error_warning_limit -> data_out	 [weight=1.0];
	"COMMAND_REG.rst_sync" -> "COMMAND_REG.data_out"	 [weight=2.0];
	we_bus_timing_0 -> "BUS_TIMING_0_REG.we"	 [weight=1.0];
	we_bus_timing_1 -> "BUS_TIMING_1_REG.we"	 [weight=1.0];
	read -> read_irq_reg	 [weight=1.0];
	read -> read_error_code_capture_reg	 [weight=1.0];
	read -> read_arbitration_lost_capture_reg	 [weight=1.0];
	"CLOCK_DIVIDER_REG_3.data_out" -> clock_divider	 [weight=1.0];
	"CLOCK_DIVIDER_REG_3.we" -> "CLOCK_DIVIDER_REG_3.data_out"	 [weight=1.0];
	"ACCEPTANCE_MASK_REG2.data_out" -> acceptance_mask_2	 [weight=1.0];
	error_warning_irq_en_ext -> error_warning_irq_en	 [weight=1.0];
	"BUS_TIMING_1_REG.data_in" -> "BUS_TIMING_1_REG.data_out"	 [weight=1.0];
	abort_tx -> transmission_complete	 [weight=2.0];
	abort_tx -> "COMMAND_REG1.rst_sync"	 [weight=1.0];
	"TX_DATA_REG7.data_in" -> "TX_DATA_REG7.data_out"	 [weight=1.0];
	"ACCEPTANCE_CODE_REG1.we" -> "ACCEPTANCE_CODE_REG1.data_out"	 [weight=1.0];
	we_acceptance_code_1 -> "ACCEPTANCE_CODE_REG1.we"	 [weight=1.0];
	clk -> "BUS_TIMING_1_REG.clk"	 [weight=1.0];
	clk -> "CLOCK_DIVIDER_REG_7.clk"	 [weight=1.0];
	clk -> "TX_DATA_REG11.clk"	 [weight=1.0];
	clk -> "ACCEPTANCE_MASK_REG2.clk"	 [weight=1.0];
	clk -> "TX_DATA_REG1.clk"	 [weight=1.0];
	clk -> "TX_DATA_REG8.clk"	 [weight=1.0];
	clk -> "COMMAND_REG0.clk"	 [weight=1.0];
	clk -> "ACCEPTANCE_CODE_REG0.clk"	 [weight=1.0];
	clk -> "MODE_REG_EXT.clk"	 [weight=1.0];
	clk -> "CLOCK_DIVIDER_REG_LOW.clk"	 [weight=1.0];
	clk -> clkout	 [weight=1.0];
	clk -> "ACCEPTANCE_MASK_REG0.clk"	 [weight=1.0];
	clk -> "TX_DATA_REG3.clk"	 [weight=1.0];
	clk -> "TX_DATA_REG12.clk"	 [weight=1.0];
	clk -> "IRQ_EN_REG.clk"	 [weight=1.0];
	clk -> "COMMAND_REG.clk"	 [weight=1.0];
	clk -> "TX_DATA_REG9.clk"	 [weight=1.0];
	clk -> "TX_DATA_REG2.clk"	 [weight=1.0];
	clk -> "TX_DATA_REG0.clk"	 [weight=1.0];
	clk -> "ERROR_WARNING_REG.clk"	 [weight=1.0];
	clk -> "TX_DATA_REG6.clk"	 [weight=1.0];
	clk -> "TX_DATA_REG4.clk"	 [weight=1.0];
	clk -> "ACCEPTANCE_CODE_REG1.clk"	 [weight=1.0];
	clk -> "ACCEPTANCE_MASK_REG3.clk"	 [weight=1.0];
	clk -> "ACCEPTANCE_MASK_REG1.clk"	 [weight=1.0];
	clk -> "TX_DATA_REG5.clk"	 [weight=1.0];
	clk -> "ACCEPTANCE_CODE_REG2.clk"	 [weight=1.0];
	clk -> "MODE_REG0.clk"	 [weight=1.0];
	clk -> "COMMAND_REG4.clk"	 [weight=1.0];
	clk -> "TX_DATA_REG10.clk"	 [weight=1.0];
	clk -> "CLOCK_DIVIDER_REG_3.clk"	 [weight=1.0];
	clk -> "BUS_TIMING_0_REG.clk"	 [weight=1.0];
	clk -> "ACCEPTANCE_CODE_REG3.clk"	 [weight=1.0];
	clk -> "TX_DATA_REG7.clk"	 [weight=1.0];
	clk -> "MODE_REG_BASIC.clk"	 [weight=1.0];
	clk -> "COMMAND_REG1.clk"	 [weight=1.0];
	reset_mode -> we_clock_divider_hi	 [weight=1.0];
	reset_mode -> bus_error_irq	 [weight=1.0];
	reset_mode -> error_passive_irq	 [weight=1.0];
	reset_mode -> we_tx_err_cnt	 [weight=1.0];
	reset_mode -> overrun_status	 [weight=1.0];
	reset_mode -> we_tx_data_12	 [weight=1.0];
	reset_mode -> we_tx_data_11	 [weight=1.0];
	reset_mode -> we_tx_data_10	 [weight=1.0];
	reset_mode -> transmit_irq	 [weight=2.0];
	reset_mode -> we_error_warning_limit	 [weight=1.0];
	reset_mode -> "COMMAND_REG.rst_sync"	 [weight=1.0];
	reset_mode -> we_bus_timing_0	 [weight=1.0];
	reset_mode -> we_bus_timing_1	 [weight=1.0];
	reset_mode -> we_rx_err_cnt	 [weight=1.0];
	reset_mode -> we_acceptance_code_1	 [weight=1.0];
	reset_mode -> arbitration_lost_irq	 [weight=1.0];
	reset_mode -> we_tx_data_9	 [weight=1.0];
	reset_mode -> we_tx_data_8	 [weight=1.0];
	reset_mode -> we_tx_data_3	 [weight=1.0];
	reset_mode -> we_tx_data_1	 [weight=1.0];
	reset_mode -> we_tx_data_0	 [weight=1.0];
	reset_mode -> we_tx_data_7	 [weight=1.0];
	reset_mode -> we_tx_data_6	 [weight=1.0];
	reset_mode -> we_tx_data_5	 [weight=1.0];
	reset_mode -> we_tx_data_4	 [weight=1.0];
	reset_mode -> we_acceptance_code_3	 [weight=1.0];
	reset_mode -> we_acceptance_code_2	 [weight=1.0];
	reset_mode -> we_acceptance_code_0	 [weight=1.0];
	reset_mode -> data_out	 [weight=14.0];
	reset_mode -> we_acceptance_mask_0	 [weight=1.0];
	reset_mode -> we_acceptance_mask_1	 [weight=1.0];
	reset_mode -> we_acceptance_mask_2	 [weight=1.0];
	reset_mode -> we_acceptance_mask_3	 [weight=1.0];
	reset_mode -> "COMMAND_REG1.rst_sync"	 [weight=1.0];
	reset_mode -> "COMMAND_REG0.rst_sync"	 [weight=1.0];
	reset_mode -> receive_buffer_status	 [weight=2.0];
	reset_mode -> "COMMAND_REG4.rst_sync"	 [weight=1.0];
	reset_mode -> data_overrun_irq	 [weight=1.0];
	reset_mode -> transmit_buffer_status	 [weight=1.0];
	reset_mode -> "MODE_REG_EXT.we"	 [weight=1.0];
	reset_mode -> we_tx_data_2	 [weight=1.0];
	reset_mode -> receive_irq	 [weight=1.0];
	"BUS_TIMING_0_REG.data_out" -> bus_timing_0	 [weight=1.0];
	"TX_DATA_REG5.data_out" -> tx_data_5	 [weight=1.0];
	"TX_DATA_REG3.data_in" -> "TX_DATA_REG3.data_out"	 [weight=1.0];
	"ACCEPTANCE_CODE_REG0.we" -> "ACCEPTANCE_CODE_REG0.data_out"	 [weight=1.0];
	irq_reg -> data_out	 [weight=2.0];
	error_passive_irq_en -> error_passive_irq	 [weight=2.0];
	"ACCEPTANCE_CODE_REG1.data_out" -> acceptance_code_1	 [weight=1.0];
	mode -> reset_mode	 [weight=1.0];
	mode -> data_out	 [weight=2.0];
	tx_state -> self_rx_request	 [weight=1.0];
	tx_state -> single_shot_transmission	 [weight=1.0];
	arbitration_lost_irq -> irq_reg	 [weight=1.0];
	arbitration_lost_irq -> irq	 [weight=1.0];
	bus_timing_0 -> data_out	 [weight=2.0];
	bus_timing_0 -> baud_r_presc	 [weight=1.0];
	bus_timing_0 -> sync_jump_width	 [weight=1.0];
	"TX_DATA_REG4.data_out" -> tx_data_4	 [weight=1.0];
	data_overrun_irq_en -> data_overrun_irq	 [weight=2.0];
	"BUS_TIMING_0_REG.we" -> "BUS_TIMING_0_REG.data_out"	 [weight=1.0];
	we_tx_data_9 -> "TX_DATA_REG9.we"	 [weight=1.0];
	we_tx_data_8 -> "TX_DATA_REG8.we"	 [weight=1.0];
	we_tx_data_3 -> "TX_DATA_REG3.we"	 [weight=1.0];
	"ACCEPTANCE_CODE_REG1.data_in" -> "ACCEPTANCE_CODE_REG1.data_out"	 [weight=1.0];
	we_tx_data_1 -> "TX_DATA_REG1.we"	 [weight=1.0];
	we_tx_data_0 -> "TX_DATA_REG0.we"	 [weight=1.0];
	we_tx_data_7 -> "TX_DATA_REG7.we"	 [weight=1.0];
	we_tx_data_6 -> "TX_DATA_REG6.we"	 [weight=1.0];
	we_tx_data_5 -> "TX_DATA_REG5.we"	 [weight=1.0];
	we_tx_data_4 -> "TX_DATA_REG4.we"	 [weight=1.0];
	receive_irq_en_ext -> receive_irq_en	 [weight=1.0];
	"MODE_REG_EXT.data_in" -> "MODE_REG_EXT.data_out"	 [weight=1.0];
	"ACCEPTANCE_CODE_REG3.data_out" -> acceptance_code_3	 [weight=1.0];
	error_irq_en_basic -> error_warning_irq_en	 [weight=1.0];
	"IRQ_EN_REG.we" -> "IRQ_EN_REG.data_out"	 [weight=1.0];
	transmission_complete -> status	 [weight=1.0];
	"TX_DATA_REG8.data_in" -> "TX_DATA_REG8.data_out"	 [weight=1.0];
	we_acceptance_code_3 -> "ACCEPTANCE_CODE_REG3.we"	 [weight=1.0];
	we_acceptance_code_2 -> "ACCEPTANCE_CODE_REG2.we"	 [weight=1.0];
	set_bus_error_irq -> bus_error_irq	 [weight=2.0];
	we_acceptance_code_0 -> "ACCEPTANCE_CODE_REG0.we"	 [weight=1.0];
	"ERROR_WARNING_REG.data_in" -> "ERROR_WARNING_REG.data_out"	 [weight=1.0];
	release_buffer -> irq_n	 [weight=2.0];
	release_buffer -> receive_buffer_status	 [weight=2.0];
	release_buffer -> receive_irq	 [weight=1.0];
	error_status -> error_status_q	 [weight=1.0];
	error_status -> status	 [weight=1.0];
	error_status -> error_irq	 [weight=2.0];
	we_acceptance_mask_0 -> "ACCEPTANCE_MASK_REG0.we"	 [weight=1.0];
	we_acceptance_mask_1 -> "ACCEPTANCE_MASK_REG1.we"	 [weight=1.0];
	we_acceptance_mask_2 -> "ACCEPTANCE_MASK_REG2.we"	 [weight=1.0];
	we_acceptance_mask_3 -> "ACCEPTANCE_MASK_REG3.we"	 [weight=1.0];
	tx_state_q -> self_rx_request	 [weight=1.0];
	tx_state_q -> single_shot_transmission	 [weight=1.0];
	"BUS_TIMING_0_REG.data_in" -> "BUS_TIMING_0_REG.data_out"	 [weight=1.0];
	rst -> clkout_cnt	 [weight=3.0];
	rst -> "ERROR_WARNING_REG.rst"	 [weight=1.0];
	rst -> "COMMAND_REG1.rst"	 [weight=1.0];
	rst -> "MODE_REG_BASIC.rst"	 [weight=1.0];
	rst -> bus_error_irq	 [weight=3.0];
	rst -> error_passive_irq	 [weight=3.0];
	rst -> irq_n	 [weight=3.0];
	rst -> overrun_status	 [weight=3.0];
	rst -> "MODE_REG0.rst"	 [weight=1.0];
	rst -> self_rx_request	 [weight=3.0];
	rst -> "MODE_REG_EXT.rst"	 [weight=1.0];
	rst -> transmit_irq	 [weight=3.0];
	rst -> arbitration_lost_irq	 [weight=3.0];
	rst -> transmission_complete	 [weight=3.0];
	rst -> "CLOCK_DIVIDER_REG_7.rst"	 [weight=1.0];
	rst -> "COMMAND_REG4.rst"	 [weight=1.0];
	rst -> "CLOCK_DIVIDER_REG_LOW.rst"	 [weight=1.0];
	rst -> receive_buffer_status	 [weight=3.0];
	rst -> clkout_tmp	 [weight=2.0];
	rst -> data_overrun_irq	 [weight=3.0];
	rst -> "COMMAND_REG0.rst"	 [weight=1.0];
	rst -> transmit_buffer_status	 [weight=3.0];
	rst -> error_irq	 [weight=3.0];
	rst -> single_shot_transmission	 [weight=3.0];
	rst -> "COMMAND_REG.rst"	 [weight=1.0];
	rst -> "CLOCK_DIVIDER_REG_3.rst"	 [weight=1.0];
	rst -> receive_irq	 [weight=3.0];
	tx_data_1 -> data_out	 [weight=1.0];
	extended_mode -> error_warning_irq_en	 [weight=1.0];
	extended_mode -> we_tx_err_cnt	 [weight=1.0];
	extended_mode -> transmit_irq_en	 [weight=1.0];
	extended_mode -> we_tx_data_12	 [weight=1.0];
	extended_mode -> we_tx_data_11	 [weight=1.0];
	extended_mode -> we_tx_data_10	 [weight=1.0];
	extended_mode -> we_error_warning_limit	 [weight=1.0];
	extended_mode -> read_error_code_capture_reg	 [weight=1.0];
	extended_mode -> we_rx_err_cnt	 [weight=1.0];
	extended_mode -> we_acceptance_code_1	 [weight=1.0];
	extended_mode -> data_overrun_irq_en	 [weight=1.0];
	extended_mode -> we_tx_data_9	 [weight=1.0];
	extended_mode -> we_tx_data_8	 [weight=1.0];
	extended_mode -> we_tx_data_3	 [weight=1.0];
	extended_mode -> we_tx_data_1	 [weight=1.0];
	extended_mode -> we_tx_data_0	 [weight=1.0];
	extended_mode -> we_tx_data_7	 [weight=1.0];
	extended_mode -> we_tx_data_6	 [weight=1.0];
	extended_mode -> we_tx_data_5	 [weight=1.0];
	extended_mode -> we_tx_data_4	 [weight=1.0];
	extended_mode -> read_arbitration_lost_capture_reg	 [weight=1.0];
	extended_mode -> we_acceptance_code_3	 [weight=1.0];
	extended_mode -> we_acceptance_code_2	 [weight=1.0];
	extended_mode -> we_acceptance_code_0	 [weight=1.0];
	extended_mode -> data_out	 [weight=47.0];
	extended_mode -> self_test_mode	 [weight=1.0];
	extended_mode -> we_acceptance_mask_0	 [weight=1.0];
	extended_mode -> we_acceptance_mask_1	 [weight=1.0];
	extended_mode -> we_acceptance_mask_2	 [weight=1.0];
	extended_mode -> we_acceptance_mask_3	 [weight=1.0];
	extended_mode -> we_interrupt_enable	 [weight=1.0];
	extended_mode -> listen_only_mode	 [weight=1.0];
	extended_mode -> receive_irq_en	 [weight=1.0];
	extended_mode -> acceptance_filter_mode	 [weight=1.0];
	extended_mode -> we_tx_data_2	 [weight=1.0];
	"COMMAND_REG.data_out" -> command	 [weight=1.0];
	"ACCEPTANCE_CODE_REG0.data_out" -> acceptance_code_0	 [weight=1.0];
	we_interrupt_enable -> "IRQ_EN_REG.we"	 [weight=1.0];
	"COMMAND_REG1.rst_sync" -> "COMMAND_REG1.data_out"	 [weight=2.0];
	tx_successful_q -> transmission_complete	 [weight=2.0];
	"COMMAND_REG1.data_out" -> command	 [weight=1.0];
	"MODE_REG_BASIC.data_out" -> mode_basic	 [weight=1.0];
	"ACCEPTANCE_MASK_REG1.data_out" -> acceptance_mask_1	 [weight=1.0];
	"ACCEPTANCE_MASK_REG2.data_in" -> "ACCEPTANCE_MASK_REG2.data_out"	 [weight=1.0];
	"COMMAND_REG0.rst_sync" -> "COMMAND_REG0.data_out"	 [weight=2.0];
	"COMMAND_REG4.we" -> "COMMAND_REG4.data_out"	 [weight=1.0];
	"COMMAND_REG1.data_in" -> "COMMAND_REG1.data_out"	 [weight=1.0];
	"MODE_REG_BASIC.data_in" -> "MODE_REG_BASIC.data_out"	 [weight=1.0];
	clock_divider -> clock_off	 [weight=1.0];
	clock_divider -> data_out	 [weight=2.0];
	clock_divider -> extended_mode	 [weight=1.0];
	clock_divider -> cd	 [weight=1.0];
	"ACCEPTANCE_CODE_REG2.data_out" -> acceptance_code_2	 [weight=1.0];
	set_reset_mode -> "MODE_REG0.rst_sync"	 [weight=1.0];
	"COMMAND_REG.we" -> "COMMAND_REG.data_out"	 [weight=1.0];
	info_empty -> receive_buffer_status	 [weight=1.0];
	info_empty -> receive_irq	 [weight=2.0];
	node_error_active -> error_passive_irq	 [weight=2.0];
	"COMMAND_REG0.data_in" -> "COMMAND_REG0.data_out"	 [weight=1.0];
	"TX_DATA_REG4.we" -> "TX_DATA_REG4.data_out"	 [weight=1.0];
	"CLOCK_DIVIDER_REG_7.rst" -> "CLOCK_DIVIDER_REG_7.data_out"	 [weight=2.0];
	"TX_DATA_REG7.data_out" -> tx_data_7	 [weight=1.0];
	"MODE_REG0.rst_sync" -> "MODE_REG0.data_out"	 [weight=2.0];
	"BUS_TIMING_1_REG.data_out" -> bus_timing_1	 [weight=1.0];
	"TX_DATA_REG10.data_out" -> tx_data_10	 [weight=1.0];
	transmit_irq_en_basic -> transmit_irq_en	 [weight=1.0];
	node_bus_off_q -> error_irq	 [weight=2.0];
	"COMMAND_REG4.data_in" -> "COMMAND_REG4.data_out"	 [weight=1.0];
	irq -> irq_n	 [weight=1.0];
	"TX_DATA_REG2.data_in" -> "TX_DATA_REG2.data_out"	 [weight=1.0];
	"TX_DATA_REG0.data_in" -> "TX_DATA_REG0.data_out"	 [weight=1.0];
	"COMMAND_REG4.rst" -> "COMMAND_REG4.data_out"	 [weight=3.0];
	we -> we_tx_err_cnt	 [weight=1.0];
	we -> we_tx_data_12	 [weight=1.0];
	we -> we_tx_data_11	 [weight=1.0];
	we -> we_tx_data_10	 [weight=1.0];
	we -> we_error_warning_limit	 [weight=1.0];
	we -> we_bus_timing_0	 [weight=1.0];
	we -> we_bus_timing_1	 [weight=1.0];
	we -> read	 [weight=1.0];
	we -> we_rx_err_cnt	 [weight=1.0];
	we -> we_acceptance_code_1	 [weight=1.0];
	we -> we_tx_data_9	 [weight=1.0];
	we -> we_tx_data_8	 [weight=1.0];
	we -> we_tx_data_3	 [weight=1.0];
	we -> we_tx_data_1	 [weight=1.0];
	we -> we_tx_data_0	 [weight=1.0];
	we -> we_tx_data_7	 [weight=1.0];
	we -> we_tx_data_6	 [weight=1.0];
	we -> we_tx_data_5	 [weight=1.0];
	we -> we_tx_data_4	 [weight=1.0];
	we -> we_acceptance_code_3	 [weight=1.0];
	we -> we_acceptance_code_2	 [weight=1.0];
	we -> we_acceptance_code_0	 [weight=1.0];
	we -> we_acceptance_mask_0	 [weight=1.0];
	we -> we_acceptance_mask_1	 [weight=1.0];
	we -> we_acceptance_mask_2	 [weight=1.0];
	we -> we_acceptance_mask_3	 [weight=1.0];
	we -> we_interrupt_enable	 [weight=1.0];
	we -> we_command	 [weight=1.0];
	we -> we_clock_divider_low	 [weight=1.0];
	we -> we_tx_data_2	 [weight=1.0];
	we -> we_mode	 [weight=1.0];
	"TX_DATA_REG0.we" -> "TX_DATA_REG0.data_out"	 [weight=1.0];
	"CLOCK_DIVIDER_REG_LOW.rst" -> "CLOCK_DIVIDER_REG_LOW.data_out"	 [weight=2.0];
	receive_buffer_status -> status	 [weight=1.0];
	transmit_irq_en_ext -> transmit_irq_en	 [weight=1.0];
	"CLOCK_DIVIDER_REG_7.data_in" -> "CLOCK_DIVIDER_REG_7.data_out"	 [weight=1.0];
	"MODE_REG0.data_in" -> "MODE_REG0.data_out"	 [weight=1.0];
	"TX_DATA_REG2.we" -> "TX_DATA_REG2.data_out"	 [weight=1.0];
	"COMMAND_REG4.rst_sync" -> "COMMAND_REG4.data_out"	 [weight=2.0];
	cs -> we_tx_err_cnt	 [weight=1.0];
	cs -> we_tx_data_12	 [weight=1.0];
	cs -> we_tx_data_11	 [weight=1.0];
	cs -> we_tx_data_10	 [weight=1.0];
	cs -> we_error_warning_limit	 [weight=1.0];
	cs -> we_bus_timing_0	 [weight=1.0];
	cs -> we_bus_timing_1	 [weight=1.0];
	cs -> read	 [weight=1.0];
	cs -> we_rx_err_cnt	 [weight=1.0];
	cs -> we_acceptance_code_1	 [weight=1.0];
	cs -> we_tx_data_9	 [weight=1.0];
	cs -> we_tx_data_8	 [weight=1.0];
	cs -> we_tx_data_3	 [weight=1.0];
	cs -> we_tx_data_1	 [weight=1.0];
	cs -> we_tx_data_0	 [weight=1.0];
	cs -> we_tx_data_7	 [weight=1.0];
	cs -> we_tx_data_6	 [weight=1.0];
	cs -> we_tx_data_5	 [weight=1.0];
	cs -> we_tx_data_4	 [weight=1.0];
	cs -> we_acceptance_code_3	 [weight=1.0];
	cs -> we_acceptance_code_2	 [weight=1.0];
	cs -> we_acceptance_code_0	 [weight=1.0];
	cs -> we_acceptance_mask_0	 [weight=1.0];
	cs -> we_acceptance_mask_1	 [weight=1.0];
	cs -> we_acceptance_mask_2	 [weight=1.0];
	cs -> we_acceptance_mask_3	 [weight=1.0];
	cs -> we_interrupt_enable	 [weight=1.0];
	cs -> we_command	 [weight=1.0];
	cs -> we_clock_divider_low	 [weight=1.0];
	cs -> we_tx_data_2	 [weight=1.0];
	cs -> we_mode	 [weight=1.0];
	data_overrun_irq_en_ext -> data_overrun_irq_en	 [weight=1.0];
	sample_point -> "COMMAND_REG1.rst_sync"	 [weight=1.0];
	sample_point -> "COMMAND_REG0.rst_sync"	 [weight=1.0];
	sample_point -> "COMMAND_REG4.rst_sync"	 [weight=1.0];
	sample_point -> single_shot_transmission	 [weight=2.0];
	tx_successful -> transmission_complete	 [weight=2.0];
	tx_successful -> tx_successful_q	 [weight=1.0];
	rx_message_counter -> data_out	 [weight=1.0];
	"MODE_REG_EXT.data_out" -> mode_ext	 [weight=1.0];
	"TX_DATA_REG1.we" -> "TX_DATA_REG1.data_out"	 [weight=1.0];
	set_arbitration_lost_irq -> arbitration_lost_irq	 [weight=2.0];
	clkout_tmp -> clkout	 [weight=1.0];
	clkout_tmp -> clkout_tmp	 [weight=1.0];
	data_overrun_irq -> irq_reg	 [weight=1.0];
	data_overrun_irq -> irq	 [weight=1.0];
	"ACCEPTANCE_MASK_REG1.we" -> "ACCEPTANCE_MASK_REG1.data_out"	 [weight=1.0];
	"TX_DATA_REG1.data_in" -> "TX_DATA_REG1.data_out"	 [weight=1.0];
	"COMMAND_REG0.rst" -> "COMMAND_REG0.data_out"	 [weight=3.0];
	transmit_buffer_status -> we_tx_data_12	 [weight=1.0];
	transmit_buffer_status -> we_tx_data_11	 [weight=1.0];
	transmit_buffer_status -> we_tx_data_10	 [weight=1.0];
	transmit_buffer_status -> transmit_irq	 [weight=1.0];
	transmit_buffer_status -> we_tx_data_9	 [weight=1.0];
	transmit_buffer_status -> we_tx_data_8	 [weight=1.0];
	transmit_buffer_status -> we_tx_data_3	 [weight=1.0];
	transmit_buffer_status -> we_tx_data_1	 [weight=1.0];
	transmit_buffer_status -> we_tx_data_0	 [weight=1.0];
	transmit_buffer_status -> we_tx_data_7	 [weight=1.0];
	transmit_buffer_status -> we_tx_data_6	 [weight=1.0];
	transmit_buffer_status -> we_tx_data_5	 [weight=1.0];
	transmit_buffer_status -> we_tx_data_4	 [weight=1.0];
	transmit_buffer_status -> status	 [weight=1.0];
	transmit_buffer_status -> transmit_buffer_status_q	 [weight=1.0];
	transmit_buffer_status -> we_tx_data_2	 [weight=1.0];
	"IRQ_EN_REG.data_out" -> irq_en_ext	 [weight=1.0];
	"TX_DATA_REG3.data_out" -> tx_data_3	 [weight=1.0];
	we_command -> "COMMAND_REG1.we"	 [weight=1.0];
	we_command -> "COMMAND_REG4.we"	 [weight=1.0];
	we_command -> "COMMAND_REG.we"	 [weight=1.0];
	we_command -> "COMMAND_REG0.we"	 [weight=1.0];
	"ACCEPTANCE_MASK_REG3.we" -> "ACCEPTANCE_MASK_REG3.data_out"	 [weight=1.0];
	error_capture_code -> data_out	 [weight=1.0];
	"TX_DATA_REG11.data_out" -> tx_data_11	 [weight=1.0];
	"ACCEPTANCE_MASK_REG3.data_out" -> acceptance_mask_3	 [weight=1.0];
	"CLOCK_DIVIDER_REG_LOW.we" -> "CLOCK_DIVIDER_REG_LOW.data_out"	 [weight=1.0];
	status -> data_out	 [weight=2.0];
	"ACCEPTANCE_MASK_REG0.we" -> "ACCEPTANCE_MASK_REG0.data_out"	 [weight=1.0];
	"ERROR_WARNING_REG.we" -> "ERROR_WARNING_REG.data_out"	 [weight=1.0];
	command -> self_rx_request	 [weight=4.0];
	command -> "COMMAND_REG.rst_sync"	 [weight=1.0];
	command -> abort_tx	 [weight=1.0];
	command -> release_buffer	 [weight=1.0];
	command -> "COMMAND_REG0.rst_sync"	 [weight=1.0];
	command -> "COMMAND_REG4.rst_sync"	 [weight=1.0];
	command -> tx_request	 [weight=1.0];
	command -> single_shot_transmission	 [weight=2.0];
	command -> clear_data_overrun	 [weight=1.0];
	transmitting -> "COMMAND_REG1.rst_sync"	 [weight=1.0];
	tx_request -> abort_tx	 [weight=1.0];
	tx_request -> transmission_complete	 [weight=1.0];
	tx_request -> "COMMAND_REG1.rst_sync"	 [weight=1.0];
	tx_request -> transmit_buffer_status	 [weight=2.0];
	tx_request -> single_shot_transmission	 [weight=2.0];
	"TX_DATA_REG11.data_in" -> "TX_DATA_REG11.data_out"	 [weight=1.0];
	arbitration_lost_capture -> data_out	 [weight=1.0];
	"ACCEPTANCE_MASK_REG3.data_in" -> "ACCEPTANCE_MASK_REG3.data_out"	 [weight=1.0];
	acceptance_code_3 -> data_out	 [weight=1.0];
	acceptance_code_2 -> data_out	 [weight=1.0];
	acceptance_code_1 -> data_out	 [weight=1.0];
	acceptance_code_0 -> data_out	 [weight=2.0];
	"TX_DATA_REG7.we" -> "TX_DATA_REG7.data_out"	 [weight=1.0];
	"ACCEPTANCE_MASK_REG1.data_in" -> "ACCEPTANCE_MASK_REG1.data_out"	 [weight=1.0];
	acceptance_mask_0 -> data_out	 [weight=2.0];
	acceptance_mask_1 -> data_out	 [weight=1.0];
	acceptance_mask_2 -> data_out	 [weight=1.0];
	acceptance_mask_3 -> data_out	 [weight=1.0];
	"MODE_REG_EXT.we" -> "MODE_REG_EXT.data_out"	 [weight=1.0];
	cd -> clkout	 [weight=1.0];
	cd -> clkout_div	 [weight=8.0];
	"TX_DATA_REG10.we" -> "TX_DATA_REG10.data_out"	 [weight=1.0];
	receive_irq_en_basic -> receive_irq_en	 [weight=1.0];
	"TX_DATA_REG4.data_in" -> "TX_DATA_REG4.data_out"	 [weight=1.0];
	transmit_status -> status	 [weight=1.0];
	transmit_buffer_status_q -> transmit_irq	 [weight=1.0];
	receive_irq_en -> receive_irq	 [weight=2.0];
	"MODE_REG0.data_out" -> mode	 [weight=1.0];
	receive_status -> status	 [weight=1.0];
	"CLOCK_DIVIDER_REG_3.data_in" -> "CLOCK_DIVIDER_REG_3.data_out"	 [weight=1.0];
	"TX_DATA_REG11.we" -> "TX_DATA_REG11.data_out"	 [weight=1.0];
	"MODE_REG0.we" -> "MODE_REG0.data_out"	 [weight=1.0];
	"TX_DATA_REG12.data_in" -> "TX_DATA_REG12.data_out"	 [weight=1.0];
	"CLOCK_DIVIDER_REG_LOW.data_out" -> clock_divider	 [weight=1.0];
	error_irq -> irq_reg	 [weight=1.0];
	error_irq -> irq	 [weight=1.0];
	"COMMAND_REG.data_in" -> "COMMAND_REG.data_out"	 [weight=1.0];
	overrun_irq_en_basic -> data_overrun_irq_en	 [weight=1.0];
	"ACCEPTANCE_MASK_REG0.data_in" -> "ACCEPTANCE_MASK_REG0.data_out"	 [weight=1.0];
	"IRQ_EN_REG.data_in" -> "IRQ_EN_REG.data_out"	 [weight=1.0];
	"TX_DATA_REG12.we" -> "TX_DATA_REG12.data_out"	 [weight=1.0];
	mode_ext -> data_out	 [weight=1.0];
	mode_ext -> self_test_mode	 [weight=1.0];
	mode_ext -> listen_only_mode	 [weight=1.0];
	mode_ext -> acceptance_filter_mode	 [weight=1.0];
	"TX_DATA_REG6.data_out" -> tx_data_6	 [weight=1.0];
	we_clock_divider_low -> we_clock_divider_hi	 [weight=1.0];
	we_clock_divider_low -> "CLOCK_DIVIDER_REG_LOW.we"	 [weight=1.0];
	tx_data_9 -> data_out	 [weight=1.0];
	tx_data_8 -> data_out	 [weight=1.0];
	"TX_DATA_REG0.data_out" -> tx_data_0	 [weight=1.0];
	"ACCEPTANCE_CODE_REG3.data_in" -> "ACCEPTANCE_CODE_REG3.data_out"	 [weight=1.0];
	tx_data_3 -> data_out	 [weight=1.0];
	tx_data_2 -> data_out	 [weight=1.0];
	clkout_div -> clkout_cnt	 [weight=2.0];
	clkout_div -> clkout_tmp	 [weight=1.0];
	tx_data_0 -> data_out	 [weight=1.0];
	tx_data_7 -> data_out	 [weight=1.0];
	tx_data_6 -> data_out	 [weight=1.0];
	tx_data_5 -> data_out	 [weight=1.0];
	tx_data_4 -> data_out	 [weight=1.0];
	"COMMAND_REG.rst" -> "COMMAND_REG.data_out"	 [weight=3.0];
	"TX_DATA_REG9.data_out" -> tx_data_9	 [weight=1.0];
	"CLOCK_DIVIDER_REG_3.rst" -> "CLOCK_DIVIDER_REG_3.data_out"	 [weight=2.0];
	"TX_DATA_REG8.we" -> "TX_DATA_REG8.data_out"	 [weight=1.0];
	"COMMAND_REG0.we" -> "COMMAND_REG0.data_out"	 [weight=1.0];
	we_tx_data_2 -> "TX_DATA_REG2.we"	 [weight=1.0];
	"ACCEPTANCE_CODE_REG2.we" -> "ACCEPTANCE_CODE_REG2.data_out"	 [weight=1.0];
	mode_basic -> error_irq_en_basic	 [weight=1.0];
	mode_basic -> data_out	 [weight=1.0];
	mode_basic -> transmit_irq_en_basic	 [weight=1.0];
	mode_basic -> receive_irq_en_basic	 [weight=1.0];
	mode_basic -> overrun_irq_en_basic	 [weight=1.0];
	"TX_DATA_REG3.we" -> "TX_DATA_REG3.data_out"	 [weight=1.0];
	clear_data_overrun -> overrun_status	 [weight=1.0];
	"BUS_TIMING_1_REG.we" -> "BUS_TIMING_1_REG.data_out"	 [weight=1.0];
	node_error_passive_q -> error_passive_irq	 [weight=4.0];
	we_mode -> "MODE_REG_BASIC.we"	 [weight=1.0];
	we_mode -> "MODE_REG_EXT.we"	 [weight=1.0];
	we_mode -> "MODE_REG0.we"	 [weight=1.0];
	receive_irq -> irq_reg	 [weight=1.0];
	receive_irq -> irq	 [weight=1.0];
	receive_irq -> receive_irq	 [weight=2.0];
	"ERROR_WARNING_REG.data_out" -> error_warning_limit	 [weight=1.0];
}
