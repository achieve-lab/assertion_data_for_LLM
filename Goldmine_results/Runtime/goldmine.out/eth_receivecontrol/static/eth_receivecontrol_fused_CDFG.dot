strict digraph "compose( ,  )" {
	node [label="\N"];
	"245:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b849a4f50>",
		fillcolor=firebrick,
		label="245:NS
TypeLengthOK <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b849a4f50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_242:AL"	 [def_var="['TypeLengthOK']",
		label="Leaf_242:AL"];
	"245:NS" -> "Leaf_242:AL"	 [cond="[]",
		lineno=None];
	"402:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b84890c90>",
		fillcolor=springgreen,
		label="402:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"403:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84890e50>",
		fillcolor=firebrick,
		label="403:NS
PauseTimer[15:0] <= PauseTimer[15:0] - 16'd1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84890e50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"402:IF" -> "403:NS"	 [cond="['DecrementPauseTimer']",
		label=DecrementPauseTimer,
		lineno=402];
	"335:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b84572590>",
		fillcolor=springgreen,
		label="335:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"336:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84572610>",
		fillcolor=firebrick,
		label="336:NS
LatchedTimerValue[15:0] <= 16'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84572610>]",
		style=filled,
		typ=NonblockingSubstitution];
	"335:IF" -> "336:NS"	 [cond="['ReceiveEnd']",
		label=ReceiveEnd,
		lineno=335];
	"287:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b8456ef50>",
		fillcolor=springgreen,
		label="287:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"288:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84571090>",
		fillcolor=firebrick,
		label="288:NS
ReceivedPauseFrmWAddr <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84571090>]",
		style=filled,
		typ=NonblockingSubstitution];
	"287:IF" -> "288:NS"	 [cond="['ByteCntEq16', 'TypeLengthOK', 'OpCodeOK', 'AddressOK']",
		label="(ByteCntEq16 & TypeLengthOK & OpCodeOK & AddressOK)",
		lineno=287];
	"399:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b84890990>",
		fillcolor=springgreen,
		label="399:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"399:IF" -> "402:IF"	 [cond="['SetPauseTimer']",
		label="!(SetPauseTimer)",
		lineno=399];
	"400:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84890950>",
		fillcolor=firebrick,
		label="400:NS
PauseTimer[15:0] <= LatchedTimerValue[15:0];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84890950>]",
		style=filled,
		typ=NonblockingSubstitution];
	"399:IF" -> "400:NS"	 [cond="['SetPauseTimer']",
		label=SetPauseTimer,
		lineno=399];
	"458:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b848823d0>",
		fillcolor=firebrick,
		label="458:NS
SlotTimer[5:0] <= 6'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b848823d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_455:AL"	 [def_var="['SlotTimer']",
		label="Leaf_455:AL"];
	"458:NS" -> "Leaf_455:AL"	 [cond="[]",
		lineno=None];
	"451:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2b8488ee50>",
		def_var="['IncrementSlotTimer']",
		fillcolor=deepskyblue,
		label="451:AS
IncrementSlotTimer = Pause & RxFlow & Divider2;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Pause', 'RxFlow', 'Divider2']"];
	"455:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f2b84882190>",
		clk_sens=True,
		fillcolor=gold,
		label="455:AL",
		sens="['MRxClk', 'RxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['RxReset', 'IncrementSlotTimer', 'SlotTimer', 'ResetSlotTimer']"];
	"451:AS" -> "455:AL";
	"468:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2b84882c50>",
		def_var="['SlotFinished']",
		fillcolor=deepskyblue,
		label="468:AS
SlotFinished = &SlotTimer[5:0] & IncrementSlotTimer;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['SlotTimer', 'IncrementSlotTimer']"];
	"451:AS" -> "468:AS";
	"432:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b8488e0d0>",
		fillcolor=springgreen,
		label="432:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"433:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b8488e350>",
		fillcolor=firebrick,
		label="433:NS
Pause <= RxFlow & ~PauseTimerEq0_sync2;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b8488e350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"432:IF" -> "433:NS"	 [cond="['TxDoneIn', 'TxAbortIn', 'TxUsedDataOutDetected', 'TxStartFrmOut']",
		label="((TxDoneIn | TxAbortIn | ~TxUsedDataOutDetected) & ~TxStartFrmOut)",
		lineno=432];
	"374:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2b8458d410>",
		def_var="['ByteCntEq0']",
		fillcolor=deepskyblue,
		label="374:AS
ByteCntEq0 = RxValid & (ByteCnt[4:0] == 5'h0);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxValid', 'ByteCnt']"];
	"212:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f2b845c72d0>",
		clk_sens=True,
		fillcolor=gold,
		label="212:AL",
		sens="['MRxClk', 'RxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['ReservedMulticast', 'ReceiveEnd', 'RxData', 'MAC', 'RxReset', 'ByteCntEq3', 'ByteCntEq5', 'ByteCntEq4', 'ByteCntEq2', 'ByteCntEq1', '\
ByteCntEq0', 'DetectionWindow', 'AddressOK']"];
	"374:AS" -> "212:AL";
	"456:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2b848821d0>",
		fillcolor=turquoise,
		label="456:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"455:AL" -> "456:BL"	 [cond="[]",
		lineno=None];
	"285:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b8456ebd0>",
		fillcolor=firebrick,
		label="285:NS
ReceivedPauseFrmWAddr <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b8456ebd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_279:AL"	 [def_var="['ReceivedPauseFrmWAddr']",
		label="Leaf_279:AL"];
	"285:NS" -> "Leaf_279:AL"	 [cond="[]",
		lineno=None];
	"439:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2b8488e510>",
		fillcolor=turquoise,
		label="439:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"440:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b8488e690>",
		fillcolor=springgreen,
		label="440:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"439:BL" -> "440:IF"	 [cond="[]",
		lineno=None];
	"Leaf_361:AL"	 [def_var="['ByteCnt']",
		label="Leaf_361:AL"];
	"Leaf_361:AL" -> "374:AS";
	"379:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2b84874350>",
		def_var="['ByteCntEq5']",
		fillcolor=deepskyblue,
		label="379:AS
ByteCntEq5 = RxValid & (ByteCnt[4:0] == 5'h5);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxValid', 'ByteCnt']"];
	"Leaf_361:AL" -> "379:AS";
	"386:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2b84886890>",
		def_var="['ByteCntEq18']",
		fillcolor=deepskyblue,
		label="386:AS
ByteCntEq18 = RxValid & (ByteCnt[4:0] == 5'h12) & DetectionWindow;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxValid', 'ByteCnt', 'DetectionWindow']"];
	"Leaf_361:AL" -> "386:AS";
	"378:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2b84874050>",
		def_var="['ByteCntEq4']",
		fillcolor=deepskyblue,
		label="378:AS
ByteCntEq4 = RxValid & (ByteCnt[4:0] == 5'h4);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxValid', 'ByteCnt']"];
	"Leaf_361:AL" -> "378:AS";
	"385:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2b84886590>",
		def_var="['ByteCntEq17']",
		fillcolor=deepskyblue,
		label="385:AS
ByteCntEq17 = RxValid & (ByteCnt[4:0] == 5'h11);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxValid', 'ByteCnt']"];
	"Leaf_361:AL" -> "385:AS";
	"380:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2b84874650>",
		def_var="['ByteCntEq12']",
		fillcolor=deepskyblue,
		label="380:AS
ByteCntEq12 = RxValid & (ByteCnt[4:0] == 5'h0C);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxValid', 'ByteCnt']"];
	"Leaf_361:AL" -> "380:AS";
	"375:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2b8458d710>",
		def_var="['ByteCntEq1']",
		fillcolor=deepskyblue,
		label="375:AS
ByteCntEq1 = RxValid & (ByteCnt[4:0] == 5'h1);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxValid', 'ByteCnt']"];
	"Leaf_361:AL" -> "375:AS";
	"381:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2b84874950>",
		def_var="['ByteCntEq13']",
		fillcolor=deepskyblue,
		label="381:AS
ByteCntEq13 = RxValid & (ByteCnt[4:0] == 5'h0D);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxValid', 'ByteCnt']"];
	"Leaf_361:AL" -> "381:AS";
	"376:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2b8458da10>",
		def_var="['ByteCntEq2']",
		fillcolor=deepskyblue,
		label="376:AS
ByteCntEq2 = RxValid & (ByteCnt[4:0] == 5'h2);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxValid', 'ByteCnt']"];
	"Leaf_361:AL" -> "376:AS";
	"382:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2b84874c50>",
		def_var="['ByteCntEq14']",
		fillcolor=deepskyblue,
		label="382:AS
ByteCntEq14 = RxValid & (ByteCnt[4:0] == 5'h0E);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxValid', 'ByteCnt']"];
	"Leaf_361:AL" -> "382:AS";
	"384:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2b84886290>",
		def_var="['ByteCntEq16']",
		fillcolor=deepskyblue,
		label="384:AS
ByteCntEq16 = RxValid & (ByteCnt[4:0] == 5'h10);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxValid', 'ByteCnt']"];
	"Leaf_361:AL" -> "384:AS";
	"377:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2b8458dd10>",
		def_var="['ByteCntEq3']",
		fillcolor=deepskyblue,
		label="377:AS
ByteCntEq3 = RxValid & (ByteCnt[4:0] == 5'h3);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxValid', 'ByteCnt']"];
	"Leaf_361:AL" -> "377:AS";
	"383:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2b84874f50>",
		def_var="['ByteCntEq15']",
		fillcolor=deepskyblue,
		label="383:AS
ByteCntEq15 = RxValid & (ByteCnt[4:0] == 5'h0F);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxValid', 'ByteCnt']"];
	"Leaf_361:AL" -> "383:AS";
	"361:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f2b84591810>",
		clk_sens=True,
		fillcolor=gold,
		label="361:AL",
		sens="['MRxClk', 'RxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['RxReset', 'ByteCnt', 'IncrementByteCnt', 'ResetByteCnt']"];
	"Leaf_361:AL" -> "361:AL";
	"347:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b84572b90>",
		fillcolor=springgreen,
		label="347:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"350:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b84572e90>",
		fillcolor=springgreen,
		label="350:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"347:IF" -> "350:IF"	 [cond="['RxValid', 'RxEndFrm']",
		label="!((RxValid & RxEndFrm))",
		lineno=347];
	"348:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84572b50>",
		fillcolor=firebrick,
		label="348:NS
DlyCrcCnt <= 3'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84572b50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"347:IF" -> "348:NS"	 [cond="['RxValid', 'RxEndFrm']",
		label="(RxValid & RxEndFrm)",
		lineno=347];
	"473:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f2b8488c050>",
		clk_sens=True,
		fillcolor=gold,
		label="473:AL",
		sens="['MRxClk', 'RxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['r_PassAll', 'RxStatusWriteLatched_sync2', 'ReceivedPauseFrm', 'OpCodeOK', 'TypeLengthOK', 'RxReset', 'ByteCntEq16']"];
	"Leaf_242:AL" -> "473:AL";
	"242:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f2b849a26d0>",
		clk_sens=True,
		fillcolor=gold,
		label="242:AL",
		sens="['MRxClk', 'RxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['TypeLength', 'ReceiveEnd', 'RxReset', 'TypeLengthOK', 'RxData', 'ByteCntEq13', 'ByteCntEq12', 'DetectionWindow']"];
	"Leaf_242:AL" -> "242:AL";
	"279:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f2b8456e750>",
		clk_sens=True,
		fillcolor=gold,
		label="279:AL",
		sens="['MRxClk', 'RxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['OpCodeOK', 'ReceiveEnd', 'TypeLengthOK', 'RxReset', 'ByteCntEq16', 'AddressOK']"];
	"Leaf_242:AL" -> "279:AL";
	"444:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b8488ea90>",
		fillcolor=firebrick,
		label="444:NS
Divider2 <= ~Divider2;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b8488ea90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_438:AL"	 [def_var="['Divider2']",
		label="Leaf_438:AL"];
	"444:NS" -> "Leaf_438:AL"	 [cond="[]",
		lineno=None];
	"481:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b8488ca10>",
		fillcolor=springgreen,
		label="481:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"482:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b8488cb10>",
		fillcolor=firebrick,
		label="482:NS
ReceivedPauseFrm <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b8488cb10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"481:IF" -> "482:NS"	 [cond="['ByteCntEq16', 'TypeLengthOK', 'OpCodeOK']",
		label="(ByteCntEq16 & TypeLengthOK & OpCodeOK)",
		lineno=481];
	"Leaf_394:AL"	 [def_var="['PauseTimer']",
		label="Leaf_394:AL"];
	"403:NS" -> "Leaf_394:AL"	 [cond="[]",
		lineno=None];
	"213:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2b845c7310>",
		fillcolor=turquoise,
		label="213:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"212:AL" -> "213:BL"	 [cond="[]",
		lineno=None];
	"235:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b849a88d0>",
		fillcolor=springgreen,
		label="235:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"236:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b849a8a10>",
		fillcolor=firebrick,
		label="236:NS
AddressOK <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b849a8a10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"235:IF" -> "236:NS"	 [cond="['ReceiveEnd']",
		label=ReceiveEnd,
		lineno=235];
	"Leaf_212:AL"	 [def_var="['AddressOK']",
		label="Leaf_212:AL"];
	"236:NS" -> "Leaf_212:AL"	 [cond="[]",
		lineno=None];
	"272:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b8456e310>",
		fillcolor=springgreen,
		label="272:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"273:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b8456e610>",
		fillcolor=firebrick,
		label="273:NS
OpCodeOK <= ByteCntEq15 & (RxData[7:0] == 8'h01) & OpCodeOK;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b8456e610>]",
		style=filled,
		typ=NonblockingSubstitution];
	"272:IF" -> "273:NS"	 [cond="['DetectionWindow', 'ByteCntEq15']",
		label="(DetectionWindow & ByteCntEq15)",
		lineno=272];
	"474:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2b84882fd0>",
		fillcolor=turquoise,
		label="474:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"475:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b8488c250>",
		fillcolor=springgreen,
		label="475:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"474:BL" -> "475:IF"	 [cond="[]",
		lineno=None];
	"208:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2b845c7090>",
		def_var="['TypeLength']",
		fillcolor=deepskyblue,
		label="208:AS
TypeLength = 16'h8808;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="[]"];
	"208:AS" -> "242:AL";
	"233:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b849a8790>",
		fillcolor=firebrick,
		label="233:NS
AddressOK <= ((RxData[7:0] == ReservedMulticast[7:0]) | (RxData[7:0] == MAC[7:0])) & AddressOK;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b849a8790>]",
		style=filled,
		typ=NonblockingSubstitution];
	"233:NS" -> "Leaf_212:AL"	 [cond="[]",
		lineno=None];
	"463:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b84882a50>",
		fillcolor=springgreen,
		label="463:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"464:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84882c10>",
		fillcolor=firebrick,
		label="464:NS
SlotTimer[5:0] <= SlotTimer[5:0] + 6'd1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84882c10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"463:IF" -> "464:NS"	 [cond="['IncrementSlotTimer']",
		label=IncrementSlotTimer,
		lineno=463];
	"Leaf_455:AL" -> "455:AL";
	"Leaf_455:AL" -> "468:AS";
	"224:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b849a2d90>",
		fillcolor=firebrick,
		label="224:NS
AddressOK <= ((RxData[7:0] == ReservedMulticast[31:24]) | (RxData[7:0] == MAC[31:24])) & AddressOK;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b849a2d90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"224:NS" -> "Leaf_212:AL"	 [cond="[]",
		lineno=None];
	"248:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b849a8f10>",
		fillcolor=firebrick,
		label="248:NS
TypeLengthOK <= ByteCntEq12 & (RxData[7:0] == TypeLength[15:8]);",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b849a8f10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"248:NS" -> "Leaf_242:AL"	 [cond="[]",
		lineno=None];
	"450:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2b8488ebd0>",
		def_var="['ResetSlotTimer']",
		fillcolor=deepskyblue,
		label="450:AS
ResetSlotTimer = RxReset;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxReset']"];
	"450:AS" -> "455:AL";
	"214:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b845c7490>",
		fillcolor=springgreen,
		label="214:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"215:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b845c7450>",
		fillcolor=firebrick,
		label="215:NS
AddressOK <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b845c7450>]",
		style=filled,
		typ=NonblockingSubstitution];
	"214:IF" -> "215:NS"	 [cond="['RxReset']",
		label=RxReset,
		lineno=214];
	"217:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b845c7c50>",
		fillcolor=springgreen,
		label="217:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"214:IF" -> "217:IF"	 [cond="['RxReset']",
		label="!(RxReset)",
		lineno=214];
	"265:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b84553c90>",
		fillcolor=springgreen,
		label="265:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"266:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84553c50>",
		fillcolor=firebrick,
		label="266:NS
OpCodeOK <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84553c50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"265:IF" -> "266:NS"	 [cond="['ByteCntEq16']",
		label=ByteCntEq16,
		lineno=265];
	"268:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2b84553c10>",
		fillcolor=turquoise,
		label="268:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"265:IF" -> "268:BL"	 [cond="['ByteCntEq16']",
		label="!(ByteCntEq16)",
		lineno=265];
	"232:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b849a8510>",
		fillcolor=springgreen,
		label="232:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"232:IF" -> "235:IF"	 [cond="['DetectionWindow', 'ByteCntEq5']",
		label="!((DetectionWindow & ByteCntEq5))",
		lineno=232];
	"232:IF" -> "233:NS"	 [cond="['DetectionWindow', 'ByteCntEq5']",
		label="(DetectionWindow & ByteCntEq5)",
		lineno=232];
	"379:AS" -> "212:AL";
	"351:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84591090>",
		fillcolor=firebrick,
		label="351:NS
DlyCrcCnt <= DlyCrcCnt + 3'd1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84591090>]",
		style=filled,
		typ=NonblockingSubstitution];
	"350:IF" -> "351:NS"	 [cond="['RxValid', 'RxEndFrm', 'DlyCrcCnt']",
		label="(RxValid & ~RxEndFrm & ~DlyCrcCnt[2])",
		lineno=350];
	"215:NS" -> "Leaf_212:AL"	 [cond="[]",
		lineno=None];
	"366:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b84591e10>",
		fillcolor=springgreen,
		label="366:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"369:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b8458d110>",
		fillcolor=springgreen,
		label="369:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"366:IF" -> "369:IF"	 [cond="['ResetByteCnt']",
		label="!(ResetByteCnt)",
		lineno=366];
	"367:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84591dd0>",
		fillcolor=firebrick,
		label="367:NS
ByteCnt[4:0] <= 5'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84591dd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"366:IF" -> "367:NS"	 [cond="['ResetByteCnt']",
		label=ResetByteCnt,
		lineno=366];
	"Leaf_411:AL"	 [def_var="['PauseTimerEq0_sync1', 'PauseTimerEq0_sync2']",
		label="Leaf_411:AL"];
	"411:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f2b84888210>",
		clk_sens=False,
		fillcolor=gold,
		label="411:AL",
		sens="['MTxClk', 'TxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['PauseTimerEq0', 'PauseTimerEq0_sync1', 'TxReset']"];
	"Leaf_411:AL" -> "411:AL";
	"427:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f2b84888b90>",
		clk_sens=False,
		fillcolor=gold,
		label="427:AL",
		sens="['MTxClk', 'TxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['TxStartFrmOut', 'TxDoneIn', 'TxAbortIn', 'TxUsedDataOutDetected', 'RxFlow', 'TxReset', 'PauseTimerEq0_sync2']"];
	"Leaf_411:AL" -> "427:AL";
	"312:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f2b845661d0>",
		clk_sens=True,
		fillcolor=gold,
		label="312:AL",
		sens="['MRxClk', 'RxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['RxReset', 'ByteCntEq18', 'ReceiveEnd']"];
	"386:AS" -> "312:AL";
	"327:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f2b845669d0>",
		clk_sens=True,
		fillcolor=gold,
		label="327:AL",
		sens="['MRxClk', 'RxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['ReceiveEnd', 'ByteCntEq18', 'AssembledTimerValue', 'RxReset', 'ReceivedPauseFrmWAddr', 'DetectionWindow']"];
	"386:AS" -> "327:AL";
	"356:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2b84591550>",
		def_var="['IncrementByteCnt']",
		fillcolor=deepskyblue,
		label="356:AS
IncrementByteCnt = RxValid & DetectionWindow & ~ByteCntEq18 & (~DlyCrcEn | DlyCrcEn & DlyCrcCnt[2]);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxValid', 'DetectionWindow', 'ByteCntEq18', 'DlyCrcEn', 'DlyCrcEn', 'DlyCrcCnt']"];
	"386:AS" -> "356:AS";
	"263:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b845539d0>",
		fillcolor=firebrick,
		label="263:NS
OpCodeOK <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b845539d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_260:AL"	 [def_var="['OpCodeOK']",
		label="Leaf_260:AL"];
	"263:NS" -> "Leaf_260:AL"	 [cond="[]",
		lineno=None];
	"244:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b849a4f10>",
		fillcolor=springgreen,
		label="244:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"244:IF" -> "245:NS"	 [cond="['RxReset']",
		label=RxReset,
		lineno=244];
	"247:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b849a8dd0>",
		fillcolor=springgreen,
		label="247:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"244:IF" -> "247:IF"	 [cond="['RxReset']",
		label="!(RxReset)",
		lineno=244];
	"300:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84571750>",
		fillcolor=firebrick,
		label="300:NS
AssembledTimerValue[15:0] <= 16'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84571750>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_294:AL"	 [def_var="['AssembledTimerValue']",
		label="Leaf_294:AL"];
	"300:NS" -> "Leaf_294:AL"	 [cond="[]",
		lineno=None];
	"345:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84572850>",
		fillcolor=firebrick,
		label="345:NS
DlyCrcCnt <= 3'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84572850>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_342:AL"	 [def_var="['DlyCrcCnt']",
		label="Leaf_342:AL"];
	"345:NS" -> "Leaf_342:AL"	 [cond="[]",
		lineno=None];
	"397:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84890510>",
		fillcolor=firebrick,
		label="397:NS
PauseTimer[15:0] <= 16'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84890510>]",
		style=filled,
		typ=NonblockingSubstitution];
	"397:NS" -> "Leaf_394:AL"	 [cond="[]",
		lineno=None];
	"313:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2b84566210>",
		fillcolor=turquoise,
		label="313:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"312:AL" -> "313:BL"	 [cond="[]",
		lineno=None];
	"207:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2b845c9f10>",
		def_var="['ReservedMulticast']",
		fillcolor=deepskyblue,
		label="207:AS
ReservedMulticast = 48'h0180C2000001;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="[]"];
	"207:AS" -> "212:AL";
	"328:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2b84566a10>",
		fillcolor=turquoise,
		label="328:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"327:AL" -> "328:BL"	 [cond="[]",
		lineno=None];
	"378:AS" -> "212:AL";
	"476:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b8488c210>",
		fillcolor=firebrick,
		label="476:NS
ReceivedPauseFrm <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b8488c210>]",
		style=filled,
		typ=NonblockingSubstitution];
	"475:IF" -> "476:NS"	 [cond="['RxReset']",
		label=RxReset,
		lineno=475];
	"478:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b8488c750>",
		fillcolor=springgreen,
		label="478:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"475:IF" -> "478:IF"	 [cond="['RxReset']",
		label="!(RxReset)",
		lineno=475];
	"297:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b845713d0>",
		fillcolor=firebrick,
		label="297:NS
AssembledTimerValue[15:0] <= 16'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b845713d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"297:NS" -> "Leaf_294:AL"	 [cond="[]",
		lineno=None];
	"Leaf_327:AL"	 [def_var="['LatchedTimerValue']",
		label="Leaf_327:AL"];
	"336:NS" -> "Leaf_327:AL"	 [cond="[]",
		lineno=None];
	"294:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f2b84571150>",
		clk_sens=True,
		fillcolor=gold,
		label="294:AL",
		sens="['MRxClk', 'RxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['RxStartFrm', 'RxData', 'DetectionWindow', 'RxReset', 'ByteCntEq17', 'ByteCntEq16']"];
	"385:AS" -> "294:AL";
	"280:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2b8456e790>",
		fillcolor=turquoise,
		label="280:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"281:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b8456e950>",
		fillcolor=springgreen,
		label="281:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"280:BL" -> "281:IF"	 [cond="[]",
		lineno=None];
	"370:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b8458d2d0>",
		fillcolor=firebrick,
		label="370:NS
ByteCnt[4:0] <= ByteCnt[4:0] + 5'd1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b8458d2d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"369:IF" -> "370:NS"	 [cond="['IncrementByteCnt']",
		label=IncrementByteCnt,
		lineno=369];
	"Leaf_473:AL"	 [def_var="['ReceivedPauseFrm']",
		label="Leaf_473:AL"];
	"Leaf_473:AL" -> "473:AL";
	"351:NS" -> "Leaf_342:AL"	 [cond="[]",
		lineno=None];
	"Leaf_260:AL" -> "473:AL";
	"260:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f2b84553690>",
		clk_sens=True,
		fillcolor=gold,
		label="260:AL",
		sens="['MRxClk', 'RxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['OpCodeOK', 'RxReset', 'RxData', 'ByteCntEq15', 'ByteCntEq14', 'DetectionWindow', 'ByteCntEq16']"];
	"Leaf_260:AL" -> "260:AL";
	"Leaf_260:AL" -> "279:AL";
	"253:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b84553750>",
		fillcolor=springgreen,
		label="253:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"254:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84553850>",
		fillcolor=firebrick,
		label="254:NS
TypeLengthOK <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84553850>]",
		style=filled,
		typ=NonblockingSubstitution];
	"253:IF" -> "254:NS"	 [cond="['ReceiveEnd']",
		label=ReceiveEnd,
		lineno=253];
	"247:IF" -> "248:NS"	 [cond="['DetectionWindow', 'ByteCntEq12']",
		label="(DetectionWindow & ByteCntEq12)",
		lineno=247];
	"250:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b845535d0>",
		fillcolor=springgreen,
		label="250:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"247:IF" -> "250:IF"	 [cond="['DetectionWindow', 'ByteCntEq12']",
		label="!((DetectionWindow & ByteCntEq12))",
		lineno=247];
	"220:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b849a2290>",
		fillcolor=springgreen,
		label="220:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"223:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b849a2b10>",
		fillcolor=springgreen,
		label="223:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"220:IF" -> "223:IF"	 [cond="['DetectionWindow', 'ByteCntEq1']",
		label="!((DetectionWindow & ByteCntEq1))",
		lineno=220];
	"221:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b849a2510>",
		fillcolor=firebrick,
		label="221:NS
AddressOK <= ((RxData[7:0] == ReservedMulticast[39:32]) | (RxData[7:0] == MAC[39:32])) & AddressOK;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b849a2510>]",
		style=filled,
		typ=NonblockingSubstitution];
	"220:IF" -> "221:NS"	 [cond="['DetectionWindow', 'ByteCntEq1']",
		label="(DetectionWindow & ByteCntEq1)",
		lineno=220];
	"419:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2b84888790>",
		fillcolor=turquoise,
		label="419:BL
PauseTimerEq0_sync1 <= PauseTimerEq0;
PauseTimerEq0_sync2 <= PauseTimerEq0_sync1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b848887d0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f2b84888990>]",
		style=filled,
		typ=Block];
	"419:BL" -> "Leaf_411:AL"	 [cond="[]",
		lineno=None];
	"380:AS" -> "242:AL";
	"303:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b84571b50>",
		fillcolor=springgreen,
		label="303:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"304:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84571c50>",
		fillcolor=firebrick,
		label="304:NS
AssembledTimerValue[15:8] <= RxData[7:0];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84571c50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"303:IF" -> "304:NS"	 [cond="['DetectionWindow', 'ByteCntEq16']",
		label="(DetectionWindow & ByteCntEq16)",
		lineno=303];
	"412:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2b84888250>",
		fillcolor=turquoise,
		label="412:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"411:AL" -> "412:BL"	 [cond="[]",
		lineno=None];
	"441:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b8488e650>",
		fillcolor=firebrick,
		label="441:NS
Divider2 <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b8488e650>]",
		style=filled,
		typ=NonblockingSubstitution];
	"441:NS" -> "Leaf_438:AL"	 [cond="[]",
		lineno=None];
	"343:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2b84572710>",
		fillcolor=turquoise,
		label="343:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"344:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b84572890>",
		fillcolor=springgreen,
		label="344:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"343:BL" -> "344:IF"	 [cond="[]",
		lineno=None];
	"394:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f2b848902d0>",
		clk_sens=True,
		fillcolor=gold,
		label="394:AL",
		sens="['MRxClk', 'RxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['RxReset', 'DecrementPauseTimer', 'LatchedTimerValue', 'PauseTimer', 'SetPauseTimer']"];
	"Leaf_327:AL" -> "394:AL";
	"295:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2b84571190>",
		fillcolor=turquoise,
		label="295:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"294:AL" -> "295:BL"	 [cond="[]",
		lineno=None];
	"333:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84572250>",
		fillcolor=firebrick,
		label="333:NS
LatchedTimerValue[15:0] <= AssembledTimerValue[15:0];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84572250>]",
		style=filled,
		typ=NonblockingSubstitution];
	"333:NS" -> "Leaf_327:AL"	 [cond="[]",
		lineno=None];
	"396:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b84890550>",
		fillcolor=springgreen,
		label="396:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"396:IF" -> "399:IF"	 [cond="['RxReset']",
		label="!(RxReset)",
		lineno=396];
	"396:IF" -> "397:NS"	 [cond="['RxReset']",
		label=RxReset,
		lineno=396];
	"213:BL" -> "214:IF"	 [cond="[]",
		lineno=None];
	"266:NS" -> "Leaf_260:AL"	 [cond="[]",
		lineno=None];
	"375:AS" -> "212:AL";
	"395:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2b84890310>",
		fillcolor=turquoise,
		label="395:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"395:BL" -> "396:IF"	 [cond="[]",
		lineno=None];
	"394:AL" -> "395:BL"	 [cond="[]",
		lineno=None];
	"223:IF" -> "224:NS"	 [cond="['DetectionWindow', 'ByteCntEq2']",
		label="(DetectionWindow & ByteCntEq2)",
		lineno=223];
	"226:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b849a43d0>",
		fillcolor=springgreen,
		label="226:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"223:IF" -> "226:IF"	 [cond="['DetectionWindow', 'ByteCntEq2']",
		label="!((DetectionWindow & ByteCntEq2))",
		lineno=223];
	"282:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b8456e910>",
		fillcolor=firebrick,
		label="282:NS
ReceivedPauseFrmWAddr <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b8456e910>]",
		style=filled,
		typ=NonblockingSubstitution];
	"281:IF" -> "282:NS"	 [cond="['RxReset']",
		label=RxReset,
		lineno=281];
	"284:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b8456ec10>",
		fillcolor=springgreen,
		label="284:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"281:IF" -> "284:IF"	 [cond="['RxReset']",
		label="!(RxReset)",
		lineno=281];
	"381:AS" -> "242:AL";
	"227:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b849a4650>",
		fillcolor=firebrick,
		label="227:NS
AddressOK <= ((RxData[7:0] == ReservedMulticast[23:16]) | (RxData[7:0] == MAC[23:16])) & AddressOK;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b849a4650>]",
		style=filled,
		typ=NonblockingSubstitution];
	"226:IF" -> "227:NS"	 [cond="['DetectionWindow', 'ByteCntEq3']",
		label="(DetectionWindow & ByteCntEq3)",
		lineno=226];
	"229:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b849a4c50>",
		fillcolor=springgreen,
		label="229:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"226:IF" -> "229:IF"	 [cond="['DetectionWindow', 'ByteCntEq3']",
		label="!((DetectionWindow & ByteCntEq3))",
		lineno=226];
	"Leaf_438:AL" -> "451:AS";
	"438:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f2b8488e4d0>",
		clk_sens=True,
		fillcolor=gold,
		label="438:AL",
		sens="['MRxClk', 'RxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['RxReset', 'PauseTimer', 'RxFlow', 'Divider2']"];
	"Leaf_438:AL" -> "438:AL";
	"438:AL" -> "439:BL"	 [cond="[]",
		lineno=None];
	"367:NS" -> "Leaf_361:AL"	 [cond="[]",
		lineno=None];
	"348:NS" -> "Leaf_342:AL"	 [cond="[]",
		lineno=None];
	"473:AL" -> "474:BL"	 [cond="[]",
		lineno=None];
	"262:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b84553a10>",
		fillcolor=springgreen,
		label="262:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"262:IF" -> "265:IF"	 [cond="['RxReset']",
		label="!(RxReset)",
		lineno=262];
	"262:IF" -> "263:NS"	 [cond="['RxReset']",
		label=RxReset,
		lineno=262];
	"440:IF" -> "441:NS"	 [cond="['RxReset']",
		label=RxReset,
		lineno=440];
	"443:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b8488ea50>",
		fillcolor=springgreen,
		label="443:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"440:IF" -> "443:IF"	 [cond="['RxReset']",
		label="!(RxReset)",
		lineno=440];
	"254:NS" -> "Leaf_242:AL"	 [cond="[]",
		lineno=None];
	"376:AS" -> "212:AL";
	"428:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2b84888bd0>",
		fillcolor=turquoise,
		label="428:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"429:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b84888d50>",
		fillcolor=springgreen,
		label="429:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"428:BL" -> "429:IF"	 [cond="[]",
		lineno=None];
	"356:AS" -> "361:AL";
	"382:AS" -> "260:AL";
	"306:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b845660d0>",
		fillcolor=firebrick,
		label="306:NS
AssembledTimerValue[7:0] <= RxData[7:0];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b845660d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"306:NS" -> "Leaf_294:AL"	 [cond="[]",
		lineno=None];
	"429:IF" -> "432:IF"	 [cond="['TxReset']",
		label="!(TxReset)",
		lineno=429];
	"430:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84888d10>",
		fillcolor=firebrick,
		label="430:NS
Pause <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84888d10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"429:IF" -> "430:NS"	 [cond="['TxReset']",
		label=TxReset,
		lineno=429];
	"384:AS" -> "294:AL";
	"384:AS" -> "473:AL";
	"384:AS" -> "260:AL";
	"384:AS" -> "279:AL";
	"363:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b84591a90>",
		fillcolor=springgreen,
		label="363:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"363:IF" -> "366:IF"	 [cond="['RxReset']",
		label="!(RxReset)",
		lineno=363];
	"364:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84591a50>",
		fillcolor=firebrick,
		label="364:NS
ByteCnt[4:0] <= 5'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84591a50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"363:IF" -> "364:NS"	 [cond="['RxReset']",
		label=RxReset,
		lineno=363];
	"377:AS" -> "212:AL";
	"302:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2b84571d10>",
		fillcolor=turquoise,
		label="302:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"302:BL" -> "303:IF"	 [cond="[]",
		lineno=None];
	"305:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b84571f90>",
		fillcolor=springgreen,
		label="305:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"302:BL" -> "305:IF"	 [cond="[]",
		lineno=None];
	"460:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b84882790>",
		fillcolor=springgreen,
		label="460:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"460:IF" -> "463:IF"	 [cond="['ResetSlotTimer']",
		label="!(ResetSlotTimer)",
		lineno=460];
	"461:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84882750>",
		fillcolor=firebrick,
		label="461:NS
SlotTimer[5:0] <= 6'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84882750>]",
		style=filled,
		typ=NonblockingSubstitution];
	"460:IF" -> "461:NS"	 [cond="['ResetSlotTimer']",
		label=ResetSlotTimer,
		lineno=460];
	"Leaf_212:AL" -> "212:AL";
	"Leaf_212:AL" -> "279:AL";
	"330:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84566c50>",
		fillcolor=firebrick,
		label="330:NS
LatchedTimerValue[15:0] <= 16'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84566c50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"330:NS" -> "Leaf_327:AL"	 [cond="[]",
		lineno=None];
	"Leaf_342:AL" -> "356:AS";
	"342:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f2b845726d0>",
		clk_sens=True,
		fillcolor=gold,
		label="342:AL",
		sens="['MRxClk', 'RxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['RxReset', 'RxValid', 'DlyCrcCnt', 'RxEndFrm']"];
	"Leaf_342:AL" -> "342:AL";
	"314:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b845663d0>",
		fillcolor=springgreen,
		label="314:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"313:BL" -> "314:IF"	 [cond="[]",
		lineno=None];
	"457:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b84882410>",
		fillcolor=springgreen,
		label="457:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"456:BL" -> "457:IF"	 [cond="[]",
		lineno=None];
	"457:IF" -> "458:NS"	 [cond="['RxReset']",
		label=RxReset,
		lineno=457];
	"457:IF" -> "460:IF"	 [cond="['RxReset']",
		label="!(RxReset)",
		lineno=457];
	"355:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2b84572d50>",
		def_var="['ResetByteCnt']",
		fillcolor=deepskyblue,
		label="355:AS
ResetByteCnt = RxEndFrm;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxEndFrm']"];
	"355:AS" -> "361:AL";
	"282:NS" -> "Leaf_279:AL"	 [cond="[]",
		lineno=None];
	"270:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b8456e1d0>",
		fillcolor=firebrick,
		label="270:NS
OpCodeOK <= ByteCntEq14 & (RxData[7:0] == 8'h00);",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b8456e1d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"270:NS" -> "Leaf_260:AL"	 [cond="[]",
		lineno=None];
	"288:NS" -> "Leaf_279:AL"	 [cond="[]",
		lineno=None];
	"321:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84566910>",
		fillcolor=firebrick,
		label="321:NS
DetectionWindow <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84566910>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_312:AL"	 [def_var="['DetectionWindow']",
		label="Leaf_312:AL"];
	"321:NS" -> "Leaf_312:AL"	 [cond="[]",
		lineno=None];
	"443:IF" -> "444:NS"	 [cond="['PauseTimer', 'RxFlow']",
		label="(|PauseTimer[15:0] & RxFlow)",
		lineno=443];
	"446:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b8488ec10>",
		fillcolor=firebrick,
		label="446:NS
Divider2 <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b8488ec10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"443:IF" -> "446:NS"	 [cond="['PauseTimer', 'RxFlow']",
		label="!((|PauseTimer[15:0] & RxFlow))",
		lineno=443];
	"414:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2b848883d0>",
		fillcolor=turquoise,
		label="414:BL
PauseTimerEq0_sync1 <= 1'b1;
PauseTimerEq0_sync2 <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84888410>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f2b84888590>]",
		style=filled,
		typ=Block];
	"414:BL" -> "Leaf_411:AL"	 [cond="[]",
		lineno=None];
	"269:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b84553e90>",
		fillcolor=springgreen,
		label="269:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"269:IF" -> "270:NS"	 [cond="['DetectionWindow', 'ByteCntEq14']",
		label="(DetectionWindow & ByteCntEq14)",
		lineno=269];
	"320:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b84566810>",
		fillcolor=springgreen,
		label="320:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"320:IF" -> "321:NS"	 [cond="['ReceiveEnd']",
		label=ReceiveEnd,
		lineno=320];
	"332:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b84572290>",
		fillcolor=springgreen,
		label="332:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"332:IF" -> "335:IF"	 [cond="['DetectionWindow', 'ReceivedPauseFrmWAddr', 'ByteCntEq18']",
		label="!((DetectionWindow & ReceivedPauseFrmWAddr & ByteCntEq18))",
		lineno=332];
	"332:IF" -> "333:NS"	 [cond="['DetectionWindow', 'ReceivedPauseFrmWAddr', 'ByteCntEq18']",
		label="(DetectionWindow & ReceivedPauseFrmWAddr & ByteCntEq18)",
		lineno=332];
	"230:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b849a4ed0>",
		fillcolor=firebrick,
		label="230:NS
AddressOK <= ((RxData[7:0] == ReservedMulticast[15:8]) | (RxData[7:0] == MAC[15:8])) & AddressOK;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b849a4ed0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"230:NS" -> "Leaf_212:AL"	 [cond="[]",
		lineno=None];
	"284:IF" -> "287:IF"	 [cond="['ReceiveEnd']",
		label="!(ReceiveEnd)",
		lineno=284];
	"284:IF" -> "285:NS"	 [cond="['ReceiveEnd']",
		label=ReceiveEnd,
		lineno=284];
	"315:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84566390>",
		fillcolor=firebrick,
		label="315:NS
DetectionWindow <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84566390>]",
		style=filled,
		typ=NonblockingSubstitution];
	"315:NS" -> "Leaf_312:AL"	 [cond="[]",
		lineno=None];
	"482:NS" -> "Leaf_473:AL"	 [cond="[]",
		lineno=None];
	"476:NS" -> "Leaf_473:AL"	 [cond="[]",
		lineno=None];
	"478:IF" -> "481:IF"	 [cond="['RxStatusWriteLatched_sync2', 'r_PassAll', 'ReceivedPauseFrm', 'r_PassAll']",
		label="!((RxStatusWriteLatched_sync2 & r_PassAll | ReceivedPauseFrm & ~r_PassAll))",
		lineno=478];
	"479:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b8488c710>",
		fillcolor=firebrick,
		label="479:NS
ReceivedPauseFrm <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b8488c710>]",
		style=filled,
		typ=NonblockingSubstitution];
	"478:IF" -> "479:NS"	 [cond="['RxStatusWriteLatched_sync2', 'r_PassAll', 'ReceivedPauseFrm', 'r_PassAll']",
		label="(RxStatusWriteLatched_sync2 & r_PassAll | ReceivedPauseFrm & ~r_PassAll)",
		lineno=478];
	"446:NS" -> "Leaf_438:AL"	 [cond="[]",
		lineno=None];
	"Leaf_279:AL" -> "327:AL";
	"389:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2b84886b90>",
		def_var="['SetPauseTimer']",
		fillcolor=deepskyblue,
		label="389:AS
SetPauseTimer = ReceiveEnd & ReceivedPauseFrmWAddr & ReceivedPacketGood & ReceivedLengthOK & RxFlow;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ReceiveEnd', 'ReceivedPauseFrmWAddr', 'ReceivedPacketGood', 'ReceivedLengthOK', 'RxFlow']"];
	"Leaf_279:AL" -> "389:AS";
	"461:NS" -> "Leaf_455:AL"	 [cond="[]",
		lineno=None];
	"Leaf_427:AL"	 [def_var="['Pause']",
		label="Leaf_427:AL"];
	"Leaf_427:AL" -> "451:AS";
	"227:NS" -> "Leaf_212:AL"	 [cond="[]",
		lineno=None];
	"479:NS" -> "Leaf_473:AL"	 [cond="[]",
		lineno=None];
	"433:NS" -> "Leaf_427:AL"	 [cond="[]",
		lineno=None];
	"389:AS" -> "394:AL";
	"390:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2b84890050>",
		def_var="['DecrementPauseTimer']",
		fillcolor=deepskyblue,
		label="390:AS
DecrementPauseTimer = SlotFinished & |PauseTimer;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['SlotFinished', 'PauseTimer']"];
	"390:AS" -> "394:AL";
	"250:IF" -> "253:IF"	 [cond="['DetectionWindow', 'ByteCntEq13']",
		label="!((DetectionWindow & ByteCntEq13))",
		lineno=250];
	"251:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84553550>",
		fillcolor=firebrick,
		label="251:NS
TypeLengthOK <= ByteCntEq13 & (RxData[7:0] == TypeLength[7:0]) & TypeLengthOK;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84553550>]",
		style=filled,
		typ=NonblockingSubstitution];
	"250:IF" -> "251:NS"	 [cond="['DetectionWindow', 'ByteCntEq13']",
		label="(DetectionWindow & ByteCntEq13)",
		lineno=250];
	"362:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2b84591850>",
		fillcolor=turquoise,
		label="362:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"362:BL" -> "363:IF"	 [cond="[]",
		lineno=None];
	"Leaf_294:AL" -> "327:AL";
	"370:NS" -> "Leaf_361:AL"	 [cond="[]",
		lineno=None];
	"251:NS" -> "Leaf_242:AL"	 [cond="[]",
		lineno=None];
	"344:IF" -> "347:IF"	 [cond="['RxReset']",
		label="!(RxReset)",
		lineno=344];
	"344:IF" -> "345:NS"	 [cond="['RxReset']",
		label=RxReset,
		lineno=344];
	"Leaf_394:AL" -> "394:AL";
	"Leaf_394:AL" -> "438:AL";
	"Leaf_394:AL" -> "390:AS";
	"406:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2b84890fd0>",
		def_var="['PauseTimerEq0']",
		fillcolor=deepskyblue,
		label="406:AS
PauseTimerEq0 = ~(|PauseTimer[15:0]);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['PauseTimer']"];
	"Leaf_394:AL" -> "406:AS";
	"413:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b84888550>",
		fillcolor=springgreen,
		label="413:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"413:IF" -> "419:BL"	 [cond="['TxReset']",
		label="!(TxReset)",
		lineno=413];
	"413:IF" -> "414:BL"	 [cond="['TxReset']",
		label=TxReset,
		lineno=413];
	"305:IF" -> "306:NS"	 [cond="['DetectionWindow', 'ByteCntEq17']",
		label="(DetectionWindow & ByteCntEq17)",
		lineno=305];
	"243:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2b849a2e10>",
		fillcolor=turquoise,
		label="243:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"243:BL" -> "244:IF"	 [cond="[]",
		lineno=None];
	"383:AS" -> "260:AL";
	"242:AL" -> "243:BL"	 [cond="[]",
		lineno=None];
	"268:BL" -> "272:IF"	 [cond="[]",
		lineno=None];
	"268:BL" -> "269:IF"	 [cond="[]",
		lineno=None];
	"296:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b84571410>",
		fillcolor=springgreen,
		label="296:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"296:IF" -> "297:NS"	 [cond="['RxReset']",
		label=RxReset,
		lineno=296];
	"299:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b84571790>",
		fillcolor=springgreen,
		label="299:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"296:IF" -> "299:IF"	 [cond="['RxReset']",
		label="!(RxReset)",
		lineno=296];
	"314:IF" -> "315:NS"	 [cond="['RxReset']",
		label=RxReset,
		lineno=314];
	"317:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b84566690>",
		fillcolor=springgreen,
		label="317:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"314:IF" -> "317:IF"	 [cond="['RxReset']",
		label="!(RxReset)",
		lineno=314];
	"342:AL" -> "343:BL"	 [cond="[]",
		lineno=None];
	"261:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2b84553810>",
		fillcolor=turquoise,
		label="261:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"261:BL" -> "262:IF"	 [cond="[]",
		lineno=None];
	"361:AL" -> "362:BL"	 [cond="[]",
		lineno=None];
	"412:BL" -> "413:IF"	 [cond="[]",
		lineno=None];
	"221:NS" -> "Leaf_212:AL"	 [cond="[]",
		lineno=None];
	"Leaf_312:AL" -> "212:AL";
	"Leaf_312:AL" -> "386:AS";
	"Leaf_312:AL" -> "327:AL";
	"Leaf_312:AL" -> "294:AL";
	"Leaf_312:AL" -> "356:AS";
	"Leaf_312:AL" -> "242:AL";
	"Leaf_312:AL" -> "260:AL";
	"229:IF" -> "232:IF"	 [cond="['DetectionWindow', 'ByteCntEq4']",
		label="!((DetectionWindow & ByteCntEq4))",
		lineno=229];
	"229:IF" -> "230:NS"	 [cond="['DetectionWindow', 'ByteCntEq4']",
		label="(DetectionWindow & ByteCntEq4)",
		lineno=229];
	"295:BL" -> "296:IF"	 [cond="[]",
		lineno=None];
	"260:AL" -> "261:BL"	 [cond="[]",
		lineno=None];
	"329:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b84566c90>",
		fillcolor=springgreen,
		label="329:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"328:BL" -> "329:IF"	 [cond="[]",
		lineno=None];
	"406:AS" -> "411:AL";
	"279:AL" -> "280:BL"	 [cond="[]",
		lineno=None];
	"218:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b845c7c10>",
		fillcolor=firebrick,
		label="218:NS
AddressOK <= (RxData[7:0] == ReservedMulticast[47:40]) | (RxData[7:0] == MAC[47:40]);",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b845c7c10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"218:NS" -> "Leaf_212:AL"	 [cond="[]",
		lineno=None];
	"273:NS" -> "Leaf_260:AL"	 [cond="[]",
		lineno=None];
	"400:NS" -> "Leaf_394:AL"	 [cond="[]",
		lineno=None];
	"364:NS" -> "Leaf_361:AL"	 [cond="[]",
		lineno=None];
	"317:IF" -> "320:IF"	 [cond="['ByteCntEq18']",
		label="!(ByteCntEq18)",
		lineno=317];
	"318:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84566650>",
		fillcolor=firebrick,
		label="318:NS
DetectionWindow <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b84566650>]",
		style=filled,
		typ=NonblockingSubstitution];
	"317:IF" -> "318:NS"	 [cond="['ByteCntEq18']",
		label=ByteCntEq18,
		lineno=317];
	"430:NS" -> "Leaf_427:AL"	 [cond="[]",
		lineno=None];
	"299:IF" -> "300:NS"	 [cond="['RxStartFrm']",
		label=RxStartFrm,
		lineno=299];
	"299:IF" -> "302:BL"	 [cond="['RxStartFrm']",
		label="!(RxStartFrm)",
		lineno=299];
	"464:NS" -> "Leaf_455:AL"	 [cond="[]",
		lineno=None];
	"304:NS" -> "Leaf_294:AL"	 [cond="[]",
		lineno=None];
	"318:NS" -> "Leaf_312:AL"	 [cond="[]",
		lineno=None];
	"217:IF" -> "220:IF"	 [cond="['DetectionWindow', 'ByteCntEq0']",
		label="!((DetectionWindow & ByteCntEq0))",
		lineno=217];
	"217:IF" -> "218:NS"	 [cond="['DetectionWindow', 'ByteCntEq0']",
		label="(DetectionWindow & ByteCntEq0)",
		lineno=217];
	"427:AL" -> "428:BL"	 [cond="[]",
		lineno=None];
	"329:IF" -> "330:NS"	 [cond="['RxReset']",
		label=RxReset,
		lineno=329];
	"329:IF" -> "332:IF"	 [cond="['RxReset']",
		label="!(RxReset)",
		lineno=329];
	"468:AS" -> "390:AS";
}
