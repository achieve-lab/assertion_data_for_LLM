strict digraph "compose( ,  )" {
	node [label="\N"];
	"70:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f5d2742e3d0>",
		fillcolor=lightcyan,
		label="70:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"70:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5d2742e4d0>",
		fillcolor=firebrick,
		label="70:NS
z <= i2;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5d2742e4d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"70:CA" -> "70:NS"	 [cond="[]",
		lineno=None];
	"69:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f5d2742e210>",
		fillcolor=lightcyan,
		label="69:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"69:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5d2742e310>",
		fillcolor=firebrick,
		label="69:NS
z <= i1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5d2742e310>]",
		style=filled,
		typ=NonblockingSubstitution];
	"69:CA" -> "69:NS"	 [cond="[]",
		lineno=None];
	"63:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f5d27bb7810>",
		clk_sens=False,
		fillcolor=gold,
		label="63:AL",
		sens="['e', 's', 'i0', 'i1', 'i2', 'i3']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['e', 'i1', 'i0', 'i3', 'i2', 's']"];
	"64:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5d27af6e10>",
		fillcolor=springgreen,
		label="64:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"63:AL" -> "64:IF"	 [cond="[]",
		lineno=None];
	"68:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5d2742e0d0>",
		fillcolor=firebrick,
		label="68:NS
z <= i0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5d2742e0d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_63:AL"	 [def_var="['z']",
		label="Leaf_63:AL"];
	"68:NS" -> "Leaf_63:AL"	 [cond="[]",
		lineno=None];
	"71:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f5d2742e5d0>",
		fillcolor=lightcyan,
		label="71:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"71:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5d2742e6d0>",
		fillcolor=firebrick,
		label="71:NS
z <= i3;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5d2742e6d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"71:CA" -> "71:NS"	 [cond="[]",
		lineno=None];
	"71:NS" -> "Leaf_63:AL"	 [cond="[]",
		lineno=None];
	"65:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5d27af6dd0>",
		fillcolor=firebrick,
		label="65:NS
z <= { WID{ 1'b0 } };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5d27af6dd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"65:NS" -> "Leaf_63:AL"	 [cond="[]",
		lineno=None];
	"70:NS" -> "Leaf_63:AL"	 [cond="[]",
		lineno=None];
	"68:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f5d276c3fd0>",
		fillcolor=lightcyan,
		label="68:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"68:CA" -> "68:NS"	 [cond="[]",
		lineno=None];
	"64:IF" -> "65:NS"	 [cond="['e']",
		label="(!e)",
		lineno=64];
	"66:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f5d27af6d90>",
		fillcolor=turquoise,
		label="66:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"64:IF" -> "66:BL"	 [cond="['e']",
		label="!((!e))",
		lineno=64];
	"67:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f5d2742e490>",
		fillcolor=linen,
		label="67:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"67:CS" -> "70:CA"	 [cond="['s']",
		label=s,
		lineno=67];
	"67:CS" -> "69:CA"	 [cond="['s']",
		label=s,
		lineno=67];
	"67:CS" -> "71:CA"	 [cond="['s']",
		label=s,
		lineno=67];
	"67:CS" -> "68:CA"	 [cond="['s']",
		label=s,
		lineno=67];
	"66:BL" -> "67:CS"	 [cond="[]",
		lineno=None];
	"69:NS" -> "Leaf_63:AL"	 [cond="[]",
		lineno=None];
}
