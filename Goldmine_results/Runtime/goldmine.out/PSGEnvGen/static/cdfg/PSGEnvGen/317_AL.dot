strict digraph "" {
	node [label="\N"];
	"342:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f93071728d0>",
		fillcolor=turquoise,
		label="342:BL
icnt[sel] <= 0;
iv[sel] <= 8'hff - sustain >> 3;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9307172450>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f9307172610>]",
		style=filled,
		typ=Block];
	"345:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f9307172910>",
		fillcolor=springgreen,
		label="345:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"342:BL" -> "345:IF"	 [cond="[]",
		lineno=None];
	"318:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f9307172ed0>",
		fillcolor=turquoise,
		label="318:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"Leaf_317:AL"	 [def_var="['icnt', 'envCtr2', 'envCtr', 'iv']",
		label="Leaf_317:AL"];
	"318:BL" -> "Leaf_317:AL"	 [cond="[]",
		lineno=None];
	"352:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f9307148d90>",
		fillcolor=turquoise,
		label="352:BL
envCtr[sel] <= envCtrx - 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9307148b50>]",
		style=filled,
		typ=Block];
	"354:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f9307148dd0>",
		fillcolor=springgreen,
		label="354:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"352:BL" -> "354:IF"	 [cond="[]",
		lineno=None];
	"329:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f9307149fd0>",
		fillcolor=turquoise,
		label="329:BL
envCtr[sel] <= 0;
envCtr2[sel] <= 0;
icnt[sel] <= 0;
iv[sel] <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f93071498d0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f9307149a90>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9307149c50>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f9307149e10>]",
		style=filled,
		typ=Block];
	"329:BL" -> "Leaf_317:AL"	 [cond="[]",
		lineno=None];
	"328:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f930714a090>",
		fillcolor=lightcyan,
		label="328:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"328:CA" -> "329:BL"	 [cond="[]",
		lineno=None];
	"345:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f93071729d0>",
		fillcolor=turquoise,
		label="345:BL
envCtr2[sel] <= 0;
envCtr[sel] <= envCtrx + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9307172a10>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f9307172bd0>]",
		style=filled,
		typ=Block];
	"345:BL" -> "Leaf_317:AL"	 [cond="[]",
		lineno=None];
	"357:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9307149310>",
		fillcolor=firebrick,
		label="357:NS
icnt[sel] <= icnt[sel] + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9307149310>]",
		style=filled,
		typ=NonblockingSubstitution];
	"357:NS" -> "Leaf_317:AL"	 [cond="[]",
		lineno=None];
	"341:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f930714a0d0>",
		fillcolor=lightcyan,
		label="341:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"341:CA" -> "342:BL"	 [cond="[]",
		lineno=None];
	"356:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f93071492d0>",
		fillcolor=springgreen,
		label="356:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"356:IF" -> "357:NS"	 [cond="['icnt', 'sel']",
		label="(icnt[sel] < 3'd7)",
		lineno=356];
	"360:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9307148e10>",
		fillcolor=firebrick,
		label="360:NS
envCtr2[sel] <= envCtr2[sel] + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9307148e10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"360:NS" -> "Leaf_317:AL"	 [cond="[]",
		lineno=None];
	"327:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f930714a150>",
		fillcolor=linen,
		label="327:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"327:CS" -> "328:CA"	 [cond="['envState', 'sel']",
		label="envState[sel]",
		lineno=327];
	"327:CS" -> "341:CA"	 [cond="['envState', 'sel']",
		label="envState[sel]",
		lineno=327];
	"350:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f930714a8d0>",
		fillcolor=lightcyan,
		label="350:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"327:CS" -> "350:CA"	 [cond="['envState', 'sel']",
		label="envState[sel]",
		lineno=327];
	"335:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f930714a290>",
		fillcolor=lightcyan,
		label="335:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"327:CS" -> "335:CA"	 [cond="['envState', 'sel']",
		label="envState[sel]",
		lineno=327];
	"318:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f930714ab50>",
		fillcolor=springgreen,
		label="318:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"318:IF" -> "318:BL"	 [cond="['rst']",
		label=rst,
		lineno=318];
	"326:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f930714ab10>",
		fillcolor=springgreen,
		label="326:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"318:IF" -> "326:IF"	 [cond="['rst']",
		label="!(rst)",
		lineno=318];
	"354:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f93071490d0>",
		fillcolor=turquoise,
		label="354:BL
envCtr2[sel] <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9307149110>]",
		style=filled,
		typ=Block];
	"354:BL" -> "356:IF"	 [cond="[]",
		lineno=None];
	"352:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f930714a990>",
		fillcolor=springgreen,
		label="352:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"352:IF" -> "352:BL"	 [cond="['envDvnx']",
		label="(envDvnx == 20'h0)",
		lineno=352];
	"317:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f930714ac50>",
		clk_sens=True,
		fillcolor=gold,
		label="317:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['pChannels', 'cnt', 'envCtr2', 'envCtrx', 'icnt', 'envDvnx', 'iv', 'envState', 'sustain', 'rst', 'sel']"];
	"317:AL" -> "318:IF"	 [cond="[]",
		lineno=None];
	"350:CA" -> "352:IF"	 [cond="[]",
		lineno=None];
	"326:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f930714ab90>",
		fillcolor=turquoise,
		label="326:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"326:BL" -> "327:CS"	 [cond="[]",
		lineno=None];
	"354:IF" -> "360:NS"	 [cond="['envCtr2', 'sel', 'iv', 'sel']",
		label="!((envCtr2[sel] == iv[sel]))",
		lineno=354];
	"354:IF" -> "354:BL"	 [cond="['envCtr2', 'sel', 'iv', 'sel']",
		label="(envCtr2[sel] == iv[sel])",
		lineno=354];
	"336:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f930714a310>",
		fillcolor=turquoise,
		label="336:BL
envCtr2[sel] <= 0;
icnt[sel] <= 0;
iv[sel] <= sustain >> 3;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f930714a350>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f930714a510>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f930714a6d0>]",
		style=filled,
		typ=Block];
	"336:BL" -> "Leaf_317:AL"	 [cond="[]",
		lineno=None];
	"345:IF" -> "345:BL"	 [cond="['envDvnx']",
		label="(envDvnx == 20'h0)",
		lineno=345];
	"335:CA" -> "336:BL"	 [cond="[]",
		lineno=None];
	"326:IF" -> "326:BL"	 [cond="['cnt', 'pChannels']",
		label="(cnt < pChannels)",
		lineno=326];
}
