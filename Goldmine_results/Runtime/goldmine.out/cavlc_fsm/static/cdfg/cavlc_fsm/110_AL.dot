strict digraph "" {
	node [label="\N"];
	"164:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f4aed5437d0>",
		fillcolor=lightcyan,
		label="164:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"164:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f4aed543910>",
		fillcolor=turquoise,
		label="164:BL
state <= 8'b10000000;
i <= TotalCoeff - 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f4aed543950>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f4aed543ad0>]",
		style=filled,
		typ=Block];
	"164:CA" -> "164:BL"	 [cond="[]",
		lineno=None];
	"Leaf_110:AL"	 [def_var="['i', 'state', 'valid']",
		label="Leaf_110:AL"];
	"116:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f4aed543f10>",
		fillcolor=springgreen,
		label="116:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"117:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f4aed543fd0>",
		fillcolor=linen,
		label="117:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"116:IF" -> "117:CS"	 [cond="['ena']",
		label=ena,
		lineno=116];
	"146:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f4aed563710>",
		fillcolor=lightcyan,
		label="146:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"146:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f4aed563790>",
		fillcolor=turquoise,
		label="146:BL
state <= 8'b00010000;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f4aed5637d0>]",
		style=filled,
		typ=Block];
	"146:CA" -> "146:BL"	 [cond="[]",
		lineno=None];
	"155:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f4aed563d10>",
		fillcolor=springgreen,
		label="155:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"159:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f4aed563d50>",
		fillcolor=turquoise,
		label="159:BL
state <= 8'b00001000;
i <= i - 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f4aed563d90>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f4aed563f10>]",
		style=filled,
		typ=Block];
	"155:IF" -> "159:BL"	 [cond="['i']",
		label="!((i == 0))",
		lineno=155];
	"155:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f4aed54b110>",
		fillcolor=turquoise,
		label="155:BL
state <= 8'b10000000;
i <= TotalCoeff - 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f4aed54b150>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f4aed54b290>]",
		style=filled,
		typ=Block];
	"155:IF" -> "155:BL"	 [cond="['i']",
		label="(i == 0)",
		lineno=155];
	"152:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f4aed563c90>",
		fillcolor=turquoise,
		label="152:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"153:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f4aed563cd0>",
		fillcolor=springgreen,
		label="153:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"152:BL" -> "153:IF"	 [cond="[]",
		lineno=None];
	"173:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f4aed54b990>",
		fillcolor=turquoise,
		label="173:BL
state <= 8'b10000000;
i <= i - 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f4aed54b9d0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f4aed54bb50>]",
		style=filled,
		typ=Block];
	"173:BL" -> "Leaf_110:AL"	 [cond="[]",
		lineno=None];
	"123:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f4aed5411d0>",
		fillcolor=turquoise,
		label="123:BL
state <= 8'b00000001;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f4aed541210>]",
		style=filled,
		typ=Block];
	"123:BL" -> "Leaf_110:AL"	 [cond="[]",
		lineno=None];
	"169:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f4aed54b950>",
		fillcolor=springgreen,
		label="169:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"169:IF" -> "173:BL"	 [cond="['i', 'ZeroLeft']",
		label="!(((i == 0) || (ZeroLeft == 0)))",
		lineno=169];
	"169:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f4aed54bd10>",
		fillcolor=turquoise,
		label="169:BL
state <= 8'b00000001;
valid <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f4aed54bd50>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f4aed54be90>]",
		style=filled,
		typ=Block];
	"169:IF" -> "169:BL"	 [cond="['i', 'ZeroLeft']",
		label="((i == 0) || (ZeroLeft == 0))",
		lineno=169];
	"130:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f4aed541c90>",
		fillcolor=firebrick,
		label="130:NS
state <= 8'b00000100;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f4aed541c90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"130:NS" -> "Leaf_110:AL"	 [cond="[]",
		lineno=None];
	"140:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f4aed563490>",
		fillcolor=firebrick,
		label="140:NS
state <= 8'b01000000;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f4aed563490>]",
		style=filled,
		typ=NonblockingSubstitution];
	"140:NS" -> "Leaf_110:AL"	 [cond="[]",
		lineno=None];
	"141:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f4aed563150>",
		fillcolor=turquoise,
		label="141:BL
state <= 8'b00001000;
i <= i - TrailingOnes;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f4aed563190>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f4aed563310>]",
		style=filled,
		typ=Block];
	"141:BL" -> "Leaf_110:AL"	 [cond="[]",
		lineno=None];
	"118:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f4aed5410d0>",
		fillcolor=lightcyan,
		label="118:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"118:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f4aed541150>",
		fillcolor=turquoise,
		label="118:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"118:CA" -> "118:BL"	 [cond="[]",
		lineno=None];
	"127:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f4aed541750>",
		fillcolor=turquoise,
		label="127:BL
i <= TotalCoeff_comb - 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f4aed541790>]",
		style=filled,
		typ=Block];
	"129:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f4aed5419d0>",
		fillcolor=springgreen,
		label="129:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"127:BL" -> "129:IF"	 [cond="[]",
		lineno=None];
	"159:BL" -> "Leaf_110:AL"	 [cond="[]",
		lineno=None];
	"127:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f4aed5416d0>",
		fillcolor=lightcyan,
		label="127:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"127:CA" -> "127:BL"	 [cond="[]",
		lineno=None];
	"131:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f4aed541a10>",
		fillcolor=springgreen,
		label="131:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"133:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f4aed543ed0>",
		fillcolor=turquoise,
		label="133:BL
state <= 8'b00000001;
valid <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f4aee174ad0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f4aed543d90>]",
		style=filled,
		typ=Block];
	"131:IF" -> "133:BL"	 [cond="['TotalCoeff_comb']",
		label="!((TotalCoeff_comb > 0))",
		lineno=131];
	"132:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f4aed541a50>",
		fillcolor=firebrick,
		label="132:NS
state <= 8'b00001000;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f4aed541a50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"131:IF" -> "132:NS"	 [cond="['TotalCoeff_comb']",
		label="(TotalCoeff_comb > 0)",
		lineno=131];
	"111:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f4aed568650>",
		fillcolor=turquoise,
		label="111:BL
state <= 8'b00000001;
i <= 0;
valid <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f4aed568290>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f4aed5683d0>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f4aed568510>]",
		style=filled,
		typ=Block];
	"111:BL" -> "Leaf_110:AL"	 [cond="[]",
		lineno=None];
	"138:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f4aed563050>",
		fillcolor=lightcyan,
		label="138:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"138:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f4aed5630d0>",
		fillcolor=turquoise,
		label="138:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"138:CA" -> "138:BL"	 [cond="[]",
		lineno=None];
	"119:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f4aed541190>",
		fillcolor=springgreen,
		label="119:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"119:IF" -> "123:BL"	 [cond="['start']",
		label="!(start)",
		lineno=119];
	"119:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f4aed541390>",
		fillcolor=turquoise,
		label="119:BL
state <= 8'b00000010;
valid <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f4aed5413d0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f4aed541510>]",
		style=filled,
		typ=Block];
	"119:IF" -> "119:BL"	 [cond="['start']",
		label=start,
		lineno=119];
	"168:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f4aed54b890>",
		fillcolor=lightcyan,
		label="168:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"168:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f4aed54b910>",
		fillcolor=turquoise,
		label="168:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"168:CA" -> "168:BL"	 [cond="[]",
		lineno=None];
	"152:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f4aed563c10>",
		fillcolor=lightcyan,
		label="152:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"152:CA" -> "152:BL"	 [cond="[]",
		lineno=None];
	"149:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f4aed563a10>",
		fillcolor=turquoise,
		label="149:BL
state <= 8'b00100000;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f4aed563a50>]",
		style=filled,
		typ=Block];
	"149:BL" -> "Leaf_110:AL"	 [cond="[]",
		lineno=None];
	"164:BL" -> "Leaf_110:AL"	 [cond="[]",
		lineno=None];
	"149:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f4aed563990>",
		fillcolor=lightcyan,
		label="149:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"149:CA" -> "149:BL"	 [cond="[]",
		lineno=None];
	"168:BL" -> "169:IF"	 [cond="[]",
		lineno=None];
	"139:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f4aed563110>",
		fillcolor=springgreen,
		label="139:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"139:IF" -> "140:NS"	 [cond="['TrailingOnes', 'TotalCoeff']",
		label="(TrailingOnes == TotalCoeff)",
		lineno=139];
	"139:IF" -> "141:BL"	 [cond="['TrailingOnes', 'TotalCoeff']",
		label="!((TrailingOnes == TotalCoeff))",
		lineno=139];
	"146:BL" -> "Leaf_110:AL"	 [cond="[]",
		lineno=None];
	"111:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f4aed568690>",
		fillcolor=springgreen,
		label="111:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"111:IF" -> "116:IF"	 [cond="['rst_n']",
		label="!((!rst_n))",
		lineno=111];
	"111:IF" -> "111:BL"	 [cond="['rst_n']",
		label="(!rst_n)",
		lineno=111];
	"117:CS" -> "164:CA"	 [cond="['state']",
		label=state,
		lineno=117];
	"117:CS" -> "146:CA"	 [cond="['state']",
		label=state,
		lineno=117];
	"117:CS" -> "118:CA"	 [cond="['state']",
		label=state,
		lineno=117];
	"117:CS" -> "127:CA"	 [cond="['state']",
		label=state,
		lineno=117];
	"117:CS" -> "138:CA"	 [cond="['state']",
		label=state,
		lineno=117];
	"117:CS" -> "168:CA"	 [cond="['state']",
		label=state,
		lineno=117];
	"117:CS" -> "152:CA"	 [cond="['state']",
		label=state,
		lineno=117];
	"117:CS" -> "149:CA"	 [cond="['state']",
		label=state,
		lineno=117];
	"153:IF" -> "155:IF"	 [cond="['i', 'TotalCoeff', 'max_coeff_num']",
		label="!(((i == 0) && (TotalCoeff < max_coeff_num)))",
		lineno=153];
	"154:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f4aed54b510>",
		fillcolor=firebrick,
		label="154:NS
state <= 8'b01000000;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f4aed54b510>]",
		style=filled,
		typ=NonblockingSubstitution];
	"153:IF" -> "154:NS"	 [cond="['i', 'TotalCoeff', 'max_coeff_num']",
		label="((i == 0) && (TotalCoeff < max_coeff_num))",
		lineno=153];
	"155:BL" -> "Leaf_110:AL"	 [cond="[]",
		lineno=None];
	"133:BL" -> "Leaf_110:AL"	 [cond="[]",
		lineno=None];
	"118:BL" -> "119:IF"	 [cond="[]",
		lineno=None];
	"119:BL" -> "Leaf_110:AL"	 [cond="[]",
		lineno=None];
	"110:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f4aed568790>",
		clk_sens=True,
		fillcolor=gold,
		label="110:AL",
		sens="['clk', 'rst_n']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst_n', 'TotalCoeff_comb', 'ena', 'i', 'start', 'state', 'max_coeff_num', 'TrailingOnes_comb', 'TotalCoeff', 'ZeroLeft', 'TrailingOnes']"];
	"110:AL" -> "111:IF"	 [cond="[]",
		lineno=None];
	"169:BL" -> "Leaf_110:AL"	 [cond="[]",
		lineno=None];
	"138:BL" -> "139:IF"	 [cond="[]",
		lineno=None];
	"154:NS" -> "Leaf_110:AL"	 [cond="[]",
		lineno=None];
	"132:NS" -> "Leaf_110:AL"	 [cond="[]",
		lineno=None];
	"129:IF" -> "130:NS"	 [cond="['TrailingOnes_comb', 'TotalCoeff_comb']",
		label="((TrailingOnes_comb > 0) && (TotalCoeff_comb > 0))",
		lineno=129];
	"129:IF" -> "131:IF"	 [cond="['TrailingOnes_comb', 'TotalCoeff_comb']",
		label="!(((TrailingOnes_comb > 0) && (TotalCoeff_comb > 0)))",
		lineno=129];
}
