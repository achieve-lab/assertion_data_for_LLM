strict digraph "compose( ,  )" {
	node [label="\N"];
	"476:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291cbd50>",
		fillcolor=cadetblue,
		label="476:BS
TxD_tmp = MAC_tx_addr_data;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291cbd50>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_468:AL"	 [def_var="['TxD_tmp']",
		label="Leaf_468:AL"];
	"476:BS" -> "Leaf_468:AL"	 [cond="[]",
		lineno=None];
	"Leaf_423:AL"	 [def_var="['CRC_rd']",
		label="Leaf_423:AL"];
	"Leaf_392:AL"	 [def_var="['Preamble_counter']",
		label="Leaf_392:AL"];
	"265:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f102912a6d0>",
		clk_sens=False,
		fillcolor=gold,
		label="265:AL",
		sens="['Current_state']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['CRS', 'IPLengthCounter', 'Random_time_meet', 'IFGset', 'pause_frame_send_en_dl1', 'RetryCnt', 'Current_state', 'Preamble_counter', '\
xon_gen', 'Collision', 'IFG_counter', 'FullDuplex', 'MaxRetry', 'Fifo_ra', 'JamCounter', 'pause_apply', 'xoff_gen', 'Fifo_eop', '\
Fifo_data_err_empty', 'pause_counter', 'CRC_end']"];
	"Leaf_392:AL" -> "265:AL";
	"392:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f102944b310>",
		clk_sens=True,
		fillcolor=gold,
		label="392:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Current_state', 'Preamble_counter', 'StatePreamble']"];
	"Leaf_392:AL" -> "392:AL";
	"315:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f102914d890>",
		fillcolor=springgreen,
		label="315:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"316:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102914d8d0>",
		fillcolor=cadetblue,
		label="316:BS
Next_state = StateFFEmptyDrop;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102914d8d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"315:IF" -> "316:BS"	 [cond="['Fifo_data_err_empty']",
		label=Fifo_data_err_empty,
		lineno=315];
	"317:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f102914dc50>",
		fillcolor=springgreen,
		label="317:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"315:IF" -> "317:IF"	 [cond="['Fifo_data_err_empty']",
		label="!(Fifo_data_err_empty)",
		lineno=315];
	"337:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f102914ba10>",
		fillcolor=lightcyan,
		label="337:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"338:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f10294340d0>",
		fillcolor=springgreen,
		label="338:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"337:CA" -> "338:IF"	 [cond="[]",
		lineno=None];
	"491:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f10291c2350>",
		fillcolor=lightcyan,
		label="491:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"491:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291c2450>",
		fillcolor=cadetblue,
		label="491:BS
TxD_tmp = 8'h08;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291c2450>]",
		style=filled,
		typ=BlockingSubstitution];
	"491:CA" -> "491:BS"	 [cond="[]",
		lineno=None];
	"590:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1029199f10>",
		fillcolor=firebrick,
		label="590:NS
Tx_pkt_type_rmon <= 3'b100;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1029199f10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_586:AL"	 [def_var="['Tx_pkt_type_rmon']",
		label="Leaf_586:AL"];
	"590:NS" -> "Leaf_586:AL"	 [cond="[]",
		lineno=None];
	"506:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291c3450>",
		fillcolor=cadetblue,
		label="506:BS
TxD_tmp = 8'h01;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291c3450>]",
		style=filled,
		typ=BlockingSubstitution];
	"506:BS" -> "Leaf_468:AL"	 [cond="[]",
		lineno=None];
	"504:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291c3210>",
		fillcolor=cadetblue,
		label="504:BS
TxD_tmp = 8'h00;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291c3210>]",
		style=filled,
		typ=BlockingSubstitution];
	"504:BS" -> "Leaf_468:AL"	 [cond="[]",
		lineno=None];
	"562:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1029197d90>",
		fillcolor=firebrick,
		label="562:NS
Tx_pkt_err_type_rmon <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1029197d90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_560:AL"	 [def_var="['Tx_pkt_err_type_rmon']",
		label="Leaf_560:AL"];
	"562:NS" -> "Leaf_560:AL"	 [cond="[]",
		lineno=None];
	"379:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f102943a590>",
		fillcolor=springgreen,
		label="379:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"381:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f102943a910>",
		fillcolor=springgreen,
		label="381:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"379:IF" -> "381:IF"	 [cond="['Current_state', 'StateSwitchNext']",
		label="!((Current_state == StateSwitchNext))",
		lineno=379];
	"380:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f102943a5d0>",
		fillcolor=firebrick,
		label="380:NS
RetryCnt <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f102943a5d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"379:IF" -> "380:NS"	 [cond="['Current_state', 'StateSwitchNext']",
		label="(Current_state == StateSwitchNext)",
		lineno=379];
	"348:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1029434a50>",
		fillcolor=cadetblue,
		label="348:BS
Next_state = Current_state;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1029434a50>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_265:AL"	 [def_var="['Next_state']",
		label="Leaf_265:AL"];
	"348:BS" -> "Leaf_265:AL"	 [cond="[]",
		lineno=None];
	"548:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f10291a0e50>",
		fillcolor=firebrick,
		label="548:NS
Tx_apply_rmon_tmp_pl1 <= Tx_apply_rmon_tmp;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f10291a0e50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_544:AL"	 [def_var="['Tx_apply_rmon_tmp_pl1']",
		label="Leaf_544:AL"];
	"548:NS" -> "Leaf_544:AL"	 [cond="[]",
		lineno=None];
	"253:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f102912fc50>",
		fillcolor=firebrick,
		label="253:NS
PADCounter <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f102912fc50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_251:AL"	 [def_var="['PADCounter']",
		label="Leaf_251:AL"];
	"253:NS" -> "Leaf_251:AL"	 [cond="[]",
		lineno=None];
	"445:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291a8a10>",
		fillcolor=cadetblue,
		label="445:BS
Fifo_rd = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291a8a10>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_438:AL"	 [def_var="['Fifo_rd']",
		label="Leaf_438:AL"];
	"445:BS" -> "Leaf_438:AL"	 [cond="[]",
		lineno=None];
	"308:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f102914d0d0>",
		fillcolor=springgreen,
		label="308:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"311:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102914d2d0>",
		fillcolor=cadetblue,
		label="311:BS
Next_state = Current_state;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102914d2d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"308:IF" -> "311:BS"	 [cond="['IPLengthCounter']",
		label="!((IPLengthCounter == 17))",
		lineno=308];
	"309:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102914d110>",
		fillcolor=cadetblue,
		label="309:BS
Next_state = StatePAD;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102914d110>]",
		style=filled,
		typ=BlockingSubstitution];
	"308:IF" -> "309:BS"	 [cond="['IPLengthCounter']",
		label="(IPLengthCounter == 17)",
		lineno=308];
	"507:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f10291c34d0>",
		fillcolor=lightcyan,
		label="507:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"508:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291c3650>",
		fillcolor=cadetblue,
		label="508:BS
TxD_tmp = CRC_out;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291c3650>]",
		style=filled,
		typ=BlockingSubstitution];
	"507:CA" -> "508:BS"	 [cond="[]",
		lineno=None];
	"Leaf_417:AL"	 [def_var="['Data_en']",
		label="Leaf_417:AL"];
	"478:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291cbed0>",
		fillcolor=cadetblue,
		label="478:BS
TxD_tmp = Fifo_data;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291cbed0>]",
		style=filled,
		typ=BlockingSubstitution];
	"478:BS" -> "Leaf_468:AL"	 [cond="[]",
		lineno=None];
	"329:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102914b690>",
		fillcolor=cadetblue,
		label="329:BS
Next_state = Current_state;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102914b690>]",
		style=filled,
		typ=BlockingSubstitution];
	"329:BS" -> "Leaf_265:AL"	 [cond="[]",
		lineno=None];
	"293:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f102914ea90>",
		fillcolor=lightcyan,
		label="293:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"294:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f102914edd0>",
		fillcolor=springgreen,
		label="294:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"293:CA" -> "294:IF"	 [cond="[]",
		lineno=None];
	"418:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f102943cf50>",
		fillcolor=springgreen,
		label="418:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"421:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102943f150>",
		fillcolor=cadetblue,
		label="421:BS
Data_en = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102943f150>]",
		style=filled,
		typ=BlockingSubstitution];
	"418:IF" -> "421:BS"	 [cond="['Current_state', 'StateData', 'Current_state', 'StateSendPauseFrame', 'Current_state', 'StatePAD']",
		label="!(((Current_state == StateData) || (Current_state == StateSendPauseFrame) || (Current_state == StatePAD)))",
		lineno=418];
	"419:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102943cf90>",
		fillcolor=cadetblue,
		label="419:BS
Data_en = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102943cf90>]",
		style=filled,
		typ=BlockingSubstitution];
	"418:IF" -> "419:BS"	 [cond="['Current_state', 'StateData', 'Current_state', 'StateSendPauseFrame', 'Current_state', 'StatePAD']",
		label="((Current_state == StateData) || (Current_state == StateSendPauseFrame) || (Current_state == StatePAD))",
		lineno=418];
	"415:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f102943c890>",
		def_var="['Frame_data']",
		fillcolor=deepskyblue,
		label="415:AS
Frame_data = TxD_tmp;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['TxD_tmp']"];
	"566:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1029192650>",
		fillcolor=firebrick,
		label="566:NS
Tx_pkt_err_type_rmon <= 3'b010;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1029192650>]",
		style=filled,
		typ=NonblockingSubstitution];
	"566:NS" -> "Leaf_560:AL"	 [cond="[]",
		lineno=None];
	"221:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f102955ab10>",
		fillcolor=turquoise,
		label="221:BL
pause_frame_send_en_dl1 <= 0;
pause_quanta_set_dl1 <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f102955ab50>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f102955acd0>]",
		style=filled,
		typ=Block];
	"Leaf_219:AL"	 [def_var="['pause_quanta_set_dl1', 'pause_frame_send_en_dl1']",
		label="Leaf_219:AL"];
	"221:BL" -> "Leaf_219:AL"	 [cond="[]",
		lineno=None];
	"239:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1029565990>",
		fillcolor=firebrick,
		label="239:NS
pause_counter <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1029565990>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_235:AL"	 [def_var="['pause_counter']",
		label="Leaf_235:AL"];
	"239:NS" -> "Leaf_235:AL"	 [cond="[]",
		lineno=None];
	"570:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1029192c90>",
		fillcolor=firebrick,
		label="570:NS
Tx_pkt_err_type_rmon <= 3'b100;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1029192c90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"570:NS" -> "Leaf_560:AL"	 [cond="[]",
		lineno=None];
	"301:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f102914a890>",
		fillcolor=springgreen,
		label="301:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"303:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f102914ac90>",
		fillcolor=springgreen,
		label="303:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"301:IF" -> "303:IF"	 [cond="['FullDuplex', 'Collision']",
		label="!((!FullDuplex && Collision))",
		lineno=301];
	"302:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102914a8d0>",
		fillcolor=cadetblue,
		label="302:BS
Next_state = StateJam;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102914a8d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"301:IF" -> "302:BS"	 [cond="['FullDuplex', 'Collision']",
		label="(!FullDuplex && Collision)",
		lineno=301];
	"591:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f10291cf150>",
		fillcolor=springgreen,
		label="591:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"592:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f10291cf410>",
		fillcolor=firebrick,
		label="592:NS
Tx_pkt_type_rmon <= { 1'b0, TxD[7:6] };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f10291cf410>]",
		style=filled,
		typ=NonblockingSubstitution];
	"591:IF" -> "592:NS"	 [cond="['MAC_header_slot']",
		label=MAC_header_slot,
		lineno=591];
	"489:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291c2050>",
		fillcolor=cadetblue,
		label="489:BS
TxD_tmp = 8'h01;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291c2050>]",
		style=filled,
		typ=BlockingSubstitution];
	"489:BS" -> "Leaf_468:AL"	 [cond="[]",
		lineno=None];
	"430:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f102943f8d0>",
		clk_sens=False,
		fillcolor=gold,
		label="430:AL",
		sens="['Current_state', 'Next_state']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['StateJam', 'StateBackOff', 'Current_state', 'Next_state']"];
	"431:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f102943fbd0>",
		fillcolor=springgreen,
		label="431:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"430:AL" -> "431:IF"	 [cond="[]",
		lineno=None];
	"Leaf_580:AL"	 [def_var="['MAC_header_slot']",
		label="Leaf_580:AL"];
	"586:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f10291999d0>",
		clk_sens=True,
		fillcolor=gold,
		label="586:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'TxD', 'Current_state', 'MAC_header_slot', 'StateSendPauseFrame']"];
	"Leaf_580:AL" -> "586:AL";
	"361:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f1029443490>",
		fillcolor=lightcyan,
		label="361:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"362:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1029443610>",
		fillcolor=cadetblue,
		label="362:BS
Next_state = StateDefer;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1029443610>]",
		style=filled,
		typ=BlockingSubstitution];
	"361:CA" -> "362:BS"	 [cond="[]",
		lineno=None];
	"320:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102914df10>",
		fillcolor=cadetblue,
		label="320:BS
Next_state = StatePAD;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102914df10>]",
		style=filled,
		typ=BlockingSubstitution];
	"320:BS" -> "Leaf_265:AL"	 [cond="[]",
		lineno=None];
	"235:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1029565490>",
		clk_sens=True,
		fillcolor=gold,
		label="235:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Current_state', 'StatePause', 'pause_counter']"];
	"Leaf_235:AL" -> "235:AL";
	"Leaf_235:AL" -> "265:AL";
	"617:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f10291b0c90>",
		clk_sens=True,
		fillcolor=gold,
		label="617:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'pause_counter']"];
	"Leaf_235:AL" -> "617:AL";
	"493:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291c2850>",
		fillcolor=cadetblue,
		label="493:BS
TxD_tmp = 8'h01;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291c2850>]",
		style=filled,
		typ=BlockingSubstitution];
	"493:BS" -> "Leaf_468:AL"	 [cond="[]",
		lineno=None];
	"421:BS" -> "Leaf_417:AL"	 [cond="[]",
		lineno=None];
	"459:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f10291bd790>",
		clk_sens=False,
		fillcolor=gold,
		label="459:AL",
		sens="['Current_state']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['StateSFD', 'StateJam', 'StateFCS', 'Current_state', 'StatePreamble', 'StatePAD', 'StateData', 'StateSendPauseFrame']"];
	"460:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f10291cb1d0>",
		fillcolor=springgreen,
		label="460:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"459:AL" -> "460:IF"	 [cond="[]",
		lineno=None];
	"255:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f102912ff90>",
		fillcolor=firebrick,
		label="255:NS
PADCounter <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f102912ff90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"255:NS" -> "Leaf_251:AL"	 [cond="[]",
		lineno=None];
	"Leaf_572:AL"	 [def_var="['MAC_header_slot_tmp']",
		label="Leaf_572:AL"];
	"580:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1029199490>",
		clk_sens=True,
		fillcolor=gold,
		label="580:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'MAC_header_slot_tmp']"];
	"Leaf_572:AL" -> "580:AL";
	"334:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102914bd10>",
		fillcolor=cadetblue,
		label="334:BS
Next_state = StateJamDrop;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102914bd10>]",
		style=filled,
		typ=BlockingSubstitution];
	"334:BS" -> "Leaf_265:AL"	 [cond="[]",
		lineno=None];
	"269:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102912ab90>",
		fillcolor=cadetblue,
		label="269:BS
Next_state = StateIFG;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102912ab90>]",
		style=filled,
		typ=BlockingSubstitution];
	"269:BS" -> "Leaf_265:AL"	 [cond="[]",
		lineno=None];
	"500:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f10291c30d0>",
		fillcolor=lightcyan,
		label="500:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"500:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291c31d0>",
		fillcolor=cadetblue,
		label="500:BS
TxD_tmp = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291c31d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"500:CA" -> "500:BS"	 [cond="[]",
		lineno=None];
	"612:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291b0910>",
		fillcolor=cadetblue,
		label="612:BS
MAC_tx_addr_init = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291b0910>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_610:AL"	 [def_var="['MAC_tx_addr_init']",
		label="Leaf_610:AL"];
	"612:BS" -> "Leaf_610:AL"	 [cond="[]",
		lineno=None];
	"483:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f10291c2fd0>",
		fillcolor=linen,
		label="483:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"483:CS" -> "491:CA"	 [cond="['IPLengthCounter']",
		label=IPLengthCounter,
		lineno=483];
	"483:CS" -> "500:CA"	 [cond="['IPLengthCounter']",
		label=IPLengthCounter,
		lineno=483];
	"486:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f1029196910>",
		fillcolor=lightcyan,
		label="486:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"483:CS" -> "486:CA"	 [cond="['IPLengthCounter']",
		label=IPLengthCounter,
		lineno=483];
	"493:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f10291c2750>",
		fillcolor=lightcyan,
		label="493:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"483:CS" -> "493:CA"	 [cond="['IPLengthCounter']",
		label=IPLengthCounter,
		lineno=483];
	"494:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f10291c2950>",
		fillcolor=lightcyan,
		label="494:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"483:CS" -> "494:CA"	 [cond="['IPLengthCounter']",
		label=IPLengthCounter,
		lineno=483];
	"488:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f1029196d10>",
		fillcolor=lightcyan,
		label="488:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"483:CS" -> "488:CA"	 [cond="['IPLengthCounter']",
		label=IPLengthCounter,
		lineno=483];
	"495:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f10291c2d10>",
		fillcolor=lightcyan,
		label="495:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"483:CS" -> "495:CA"	 [cond="['IPLengthCounter']",
		label=IPLengthCounter,
		lineno=483];
	"484:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f1029196510>",
		fillcolor=lightcyan,
		label="484:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"483:CS" -> "484:CA"	 [cond="['IPLengthCounter']",
		label=IPLengthCounter,
		lineno=483];
	"492:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f10291c2550>",
		fillcolor=lightcyan,
		label="492:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"483:CS" -> "492:CA"	 [cond="['IPLengthCounter']",
		label=IPLengthCounter,
		lineno=483];
	"490:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f10291c2150>",
		fillcolor=lightcyan,
		label="490:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"483:CS" -> "490:CA"	 [cond="['IPLengthCounter']",
		label=IPLengthCounter,
		lineno=483];
	"485:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f1029196750>",
		fillcolor=lightcyan,
		label="485:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"483:CS" -> "485:CA"	 [cond="['IPLengthCounter']",
		label=IPLengthCounter,
		lineno=483];
	"489:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f1029196f10>",
		fillcolor=lightcyan,
		label="489:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"483:CS" -> "489:CA"	 [cond="['IPLengthCounter']",
		label=IPLengthCounter,
		lineno=483];
	"487:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f1029196b10>",
		fillcolor=lightcyan,
		label="487:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"483:CS" -> "487:CA"	 [cond="['IPLengthCounter']",
		label=IPLengthCounter,
		lineno=483];
	"248:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f102912f890>",
		fillcolor=springgreen,
		label="248:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"249:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f102912fa90>",
		fillcolor=firebrick,
		label="249:NS
IPLengthCounter <= IPLengthCounter + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f102912fa90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"248:IF" -> "249:NS"	 [cond="['IPLengthCounter', 'Current_state', 'StateData', 'Current_state', 'StateSendPauseFrame', 'Current_state', 'StatePAD']",
		label="((IPLengthCounter != 8'hff) && ((Current_state == StateData) || (Current_state == StateSendPauseFrame) || (Current_state == StatePAD)))",
		lineno=248];
	"453:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f10291bd1d0>",
		clk_sens=False,
		fillcolor=gold,
		label="453:AL",
		sens="['Current_state']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['StateJam', 'Current_state']"];
	"454:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f10291bd510>",
		fillcolor=springgreen,
		label="454:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"453:AL" -> "454:IF"	 [cond="[]",
		lineno=None];
	"393:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f102944b450>",
		fillcolor=springgreen,
		label="393:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"394:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f102944b490>",
		fillcolor=firebrick,
		label="394:NS
Preamble_counter <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f102944b490>]",
		style=filled,
		typ=NonblockingSubstitution];
	"393:IF" -> "394:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=393];
	"395:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f102944b910>",
		fillcolor=springgreen,
		label="395:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"393:IF" -> "395:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=393];
	"312:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f102914d290>",
		fillcolor=lightcyan,
		label="312:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"313:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f102914d590>",
		fillcolor=springgreen,
		label="313:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"312:CA" -> "313:IF"	 [cond="[]",
		lineno=None];
	"339:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1029434110>",
		fillcolor=cadetblue,
		label="339:BS
Next_state = StateDefer;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1029434110>]",
		style=filled,
		typ=BlockingSubstitution];
	"338:IF" -> "339:BS"	 [cond="['Random_time_meet']",
		label=Random_time_meet,
		lineno=338];
	"341:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10294342d0>",
		fillcolor=cadetblue,
		label="341:BS
Next_state = Current_state;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10294342d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"338:IF" -> "341:BS"	 [cond="['Random_time_meet']",
		label="!(Random_time_meet)",
		lineno=338];
	"322:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102914b0d0>",
		fillcolor=cadetblue,
		label="322:BS
Next_state = StateData;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102914b0d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"322:BS" -> "Leaf_265:AL"	 [cond="[]",
		lineno=None];
	"486:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1029196a10>",
		fillcolor=cadetblue,
		label="486:BS
TxD_tmp = 8'hc2;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1029196a10>]",
		style=filled,
		typ=BlockingSubstitution];
	"486:CA" -> "486:BS"	 [cond="[]",
		lineno=None];
	"237:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1029565610>",
		fillcolor=firebrick,
		label="237:NS
pause_counter <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1029565610>]",
		style=filled,
		typ=NonblockingSubstitution];
	"237:NS" -> "Leaf_235:AL"	 [cond="[]",
		lineno=None];
	"626:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1028caa510>",
		clk_sens=True,
		fillcolor=gold,
		label="626:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'xoff_gen', 'StateDefer', 'Current_state']"];
	"627:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1028caa650>",
		fillcolor=springgreen,
		label="627:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"626:AL" -> "627:IF"	 [cond="[]",
		lineno=None];
	"602:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f10291cfa90>",
		clk_sens=True,
		fillcolor=gold,
		label="602:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Current_state', 'StateSendPauseFrame', 'Tx_pkt_length_rmon', 'MAC_tx_add_en']"];
	"603:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f10291cfbd0>",
		fillcolor=springgreen,
		label="603:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"602:AL" -> "603:IF"	 [cond="[]",
		lineno=None];
	"Leaf_453:AL"	 [def_var="['Fifo_rd_retry']",
		label="Leaf_453:AL"];
	"394:NS" -> "Leaf_392:AL"	 [cond="[]",
		lineno=None];
	"327:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102914b4d0>",
		fillcolor=cadetblue,
		label="327:BS
Next_state = StateFCS;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102914b4d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"327:BS" -> "Leaf_265:AL"	 [cond="[]",
		lineno=None];
	"252:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f102912fc10>",
		fillcolor=springgreen,
		label="252:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"252:IF" -> "253:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=252];
	"254:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f102912ff50>",
		fillcolor=springgreen,
		label="254:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"252:IF" -> "254:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=252];
	"331:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f102914b990>",
		fillcolor=springgreen,
		label="331:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"333:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f102914bcd0>",
		fillcolor=springgreen,
		label="333:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"331:IF" -> "333:IF"	 [cond="['RetryCnt', 'MaxRetry', 'JamCounter']",
		label="!(((RetryCnt <= MaxRetry) && (JamCounter == 16)))",
		lineno=331];
	"332:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102914b9d0>",
		fillcolor=cadetblue,
		label="332:BS
Next_state = StateBackOff;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102914b9d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"331:IF" -> "332:BS"	 [cond="['RetryCnt', 'MaxRetry', 'JamCounter']",
		label="((RetryCnt <= MaxRetry) && (JamCounter == 16))",
		lineno=331];
	"485:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1029196850>",
		fillcolor=cadetblue,
		label="485:BS
TxD_tmp = 8'h80;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1029196850>]",
		style=filled,
		typ=BlockingSubstitution];
	"485:BS" -> "Leaf_468:AL"	 [cond="[]",
		lineno=None];
	"490:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291c2250>",
		fillcolor=cadetblue,
		label="490:BS
TxD_tmp = 8'h88;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291c2250>]",
		style=filled,
		typ=BlockingSubstitution];
	"490:BS" -> "Leaf_468:AL"	 [cond="[]",
		lineno=None];
	"564:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1029192210>",
		fillcolor=firebrick,
		label="564:NS
Tx_pkt_err_type_rmon <= 3'b001;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1029192210>]",
		style=filled,
		typ=NonblockingSubstitution];
	"564:NS" -> "Leaf_560:AL"	 [cond="[]",
		lineno=None];
	"578:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1029199390>",
		fillcolor=firebrick,
		label="578:NS
MAC_header_slot_tmp <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1029199390>]",
		style=filled,
		typ=NonblockingSubstitution];
	"578:NS" -> "Leaf_572:AL"	 [cond="[]",
		lineno=None];
	"311:BS" -> "Leaf_265:AL"	 [cond="[]",
		lineno=None];
	"290:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102914e910>",
		fillcolor=cadetblue,
		label="290:BS
Next_state = StateDefer;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102914e910>]",
		style=filled,
		typ=BlockingSubstitution];
	"290:BS" -> "Leaf_265:AL"	 [cond="[]",
		lineno=None];
	"469:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f10291c36d0>",
		fillcolor=linen,
		label="469:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"469:CS" -> "507:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=469];
	"470:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f10291cb610>",
		fillcolor=lightcyan,
		label="470:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"469:CS" -> "470:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=469];
	"503:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f1029196250>",
		fillcolor=lightcyan,
		label="503:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"469:CS" -> "503:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=469];
	"472:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f10291cb850>",
		fillcolor=lightcyan,
		label="472:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"469:CS" -> "472:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=469];
	"505:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f10291c3310>",
		fillcolor=lightcyan,
		label="505:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"469:CS" -> "505:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=469];
	"479:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f10291cbe90>",
		fillcolor=lightcyan,
		label="479:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"469:CS" -> "479:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=469];
	"474:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f10291cba50>",
		fillcolor=lightcyan,
		label="474:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"469:CS" -> "474:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=469];
	"509:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f10291c3690>",
		fillcolor=lightcyan,
		label="509:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"469:CS" -> "509:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=469];
	"581:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f10291996d0>",
		fillcolor=springgreen,
		label="581:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"584:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1029199810>",
		fillcolor=firebrick,
		label="584:NS
MAC_header_slot <= MAC_header_slot_tmp;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1029199810>]",
		style=filled,
		typ=NonblockingSubstitution];
	"581:IF" -> "584:NS"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=581];
	"582:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1029199610>",
		fillcolor=firebrick,
		label="582:NS
MAC_header_slot <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1029199610>]",
		style=filled,
		typ=NonblockingSubstitution];
	"581:IF" -> "582:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=581];
	"273:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f102912e090>",
		fillcolor=springgreen,
		label="273:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"274:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102912e0d0>",
		fillcolor=cadetblue,
		label="274:BS
Next_state = StateDefer;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102912e0d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"273:IF" -> "274:BS"	 [cond="['FullDuplex', 'CRS']",
		label="(!FullDuplex && CRS)",
		lineno=273];
	"275:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f102912e790>",
		fillcolor=springgreen,
		label="275:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"273:IF" -> "275:IF"	 [cond="['FullDuplex', 'CRS']",
		label="!((!FullDuplex && CRS))",
		lineno=273];
	"447:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f10291a8b90>",
		clk_sens=False,
		fillcolor=gold,
		label="447:AL",
		sens="['Current_state']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['StateSwitchNext', 'Current_state']"];
	"448:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f10291a8f10>",
		fillcolor=springgreen,
		label="448:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"447:AL" -> "448:IF"	 [cond="[]",
		lineno=None];
	"580:AL" -> "581:IF"	 [cond="[]",
		lineno=None];
	"333:IF" -> "334:BS"	 [cond="['RetryCnt', 'MaxRetry']",
		label="(RetryCnt > MaxRetry)",
		lineno=333];
	"336:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102914bed0>",
		fillcolor=cadetblue,
		label="336:BS
Next_state = Current_state;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102914bed0>]",
		style=filled,
		typ=BlockingSubstitution];
	"333:IF" -> "336:BS"	 [cond="['RetryCnt', 'MaxRetry']",
		label="!((RetryCnt > MaxRetry))",
		lineno=333];
	"575:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1029199290>",
		fillcolor=springgreen,
		label="575:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"575:IF" -> "578:NS"	 [cond="['Current_state', 'StateSFD', 'Next_state', 'StateData']",
		label="!(((Current_state == StateSFD) && (Next_state == StateData)))",
		lineno=575];
	"576:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f10291991d0>",
		fillcolor=firebrick,
		label="576:NS
MAC_header_slot_tmp <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f10291991d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"575:IF" -> "576:NS"	 [cond="['Current_state', 'StateSFD', 'Next_state', 'StateData']",
		label="((Current_state == StateSFD) && (Next_state == StateData))",
		lineno=575];
	"618:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f10291b0dd0>",
		fillcolor=springgreen,
		label="618:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"620:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1028caa310>",
		fillcolor=springgreen,
		label="620:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"618:IF" -> "620:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=618];
	"619:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f10291b0e10>",
		fillcolor=firebrick,
		label="619:NS
pause_quanta_sub <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f10291b0e10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"618:IF" -> "619:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=618];
	"274:BS" -> "Leaf_265:AL"	 [cond="[]",
		lineno=None];
	"512:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f10291c3a10>",
		clk_sens=True,
		fillcolor=gold,
		label="512:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'TxEn_tmp', 'TxD_tmp']"];
	"513:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f10291c3c90>",
		fillcolor=springgreen,
		label="513:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"512:AL" -> "513:IF"	 [cond="[]",
		lineno=None];
	"233:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1029565250>",
		def_var="['Collision']",
		fillcolor=deepskyblue,
		label="233:AS
Collision = TxEn & CRS;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['TxEn', 'CRS']"];
	"233:AS" -> "265:AL";
	"296:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f102914a490>",
		fillcolor=springgreen,
		label="296:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"297:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102914a4d0>",
		fillcolor=cadetblue,
		label="297:BS
Next_state = StateSFD;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102914a4d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"296:IF" -> "297:BS"	 [cond="['FullDuplex', 'Preamble_counter', 'FullDuplex', 'Collision', 'Preamble_counter']",
		label="(FullDuplex && (Preamble_counter == 6) || !FullDuplex && !Collision && (Preamble_counter == 6))",
		lineno=296];
	"299:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102914a690>",
		fillcolor=cadetblue,
		label="299:BS
Next_state = Current_state;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102914a690>]",
		style=filled,
		typ=BlockingSubstitution];
	"296:IF" -> "299:BS"	 [cond="['FullDuplex', 'Preamble_counter', 'FullDuplex', 'Collision', 'Preamble_counter']",
		label="!((FullDuplex && (Preamble_counter == 6) || !FullDuplex && !Collision && (Preamble_counter == 6)))",
		lineno=296];
	"604:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f10291cfc10>",
		fillcolor=firebrick,
		label="604:NS
MAC_tx_addr_rd <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f10291cfc10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"603:IF" -> "604:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=603];
	"605:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f10291b0410>",
		fillcolor=springgreen,
		label="605:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"603:IF" -> "605:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=603];
	"473:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291cb990>",
		fillcolor=cadetblue,
		label="473:BS
TxD_tmp = 8'hd5;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291cb990>]",
		style=filled,
		typ=BlockingSubstitution];
	"473:BS" -> "Leaf_468:AL"	 [cond="[]",
		lineno=None];
	"Leaf_400:AL"	 [def_var="['PktDrpEvenPtr']",
		label="Leaf_400:AL"];
	"400:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f102944bbd0>",
		clk_sens=True,
		fillcolor=gold,
		label="400:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'StateFFEmptyDrop', 'StateJamDrop', 'Current_state', 'PktDrpEvenPtr']"];
	"Leaf_400:AL" -> "400:AL";
	"438:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f102943fdd0>",
		clk_sens=False,
		fillcolor=gold,
		label="438:AL",
		sens="[]",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['StateSFD', 'pause_frame_send_en_dl1', 'PktDrpEvenPtr', 'Current_state', 'xon_gen', 'xoff_gen', 'StateFFEmptyDrop', 'StateJamDrop', '\
StateData']"];
	"Leaf_400:AL" -> "438:AL";
	"417:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f102943ca90>",
		clk_sens=False,
		fillcolor=gold,
		label="417:AL",
		sens="['Current_state']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Current_state', 'StatePAD', 'StateData', 'StateSendPauseFrame']"];
	"417:AL" -> "418:IF"	 [cond="[]",
		lineno=None];
	"306:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102914ae50>",
		fillcolor=cadetblue,
		label="306:BS
Next_state = StateData;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102914ae50>]",
		style=filled,
		typ=BlockingSubstitution];
	"303:IF" -> "306:BS"	 [cond="['pause_frame_send_en_dl1', 'xoff_gen', 'xon_gen']",
		label="!((pause_frame_send_en_dl1 && (xoff_gen || xon_gen)))",
		lineno=303];
	"304:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102914acd0>",
		fillcolor=cadetblue,
		label="304:BS
Next_state = StateSendPauseFrame;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102914acd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"303:IF" -> "304:BS"	 [cond="['pause_frame_send_en_dl1', 'xoff_gen', 'xon_gen']",
		label="(pause_frame_send_en_dl1 && (xoff_gen || xon_gen))",
		lineno=303];
	"272:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f102912ad90>",
		fillcolor=lightcyan,
		label="272:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"272:CA" -> "273:IF"	 [cond="[]",
		lineno=None];
	"226:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f102955aed0>",
		fillcolor=turquoise,
		label="226:BL
pause_frame_send_en_dl1 <= pause_frame_send_en;
pause_quanta_set_dl1 <= pause_quanta_set;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f102955af10>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f1029565110>]",
		style=filled,
		typ=Block];
	"226:BL" -> "Leaf_219:AL"	 [cond="[]",
		lineno=None];
	"Leaf_602:AL"	 [def_var="['MAC_tx_addr_rd']",
		label="Leaf_602:AL"];
	"487:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1029196c10>",
		fillcolor=cadetblue,
		label="487:BS
TxD_tmp = 8'h00;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1029196c10>]",
		style=filled,
		typ=BlockingSubstitution];
	"487:BS" -> "Leaf_468:AL"	 [cond="[]",
		lineno=None];
	"271:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102912ad50>",
		fillcolor=cadetblue,
		label="271:BS
Next_state = Current_state;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102912ad50>]",
		style=filled,
		typ=BlockingSubstitution];
	"271:BS" -> "Leaf_265:AL"	 [cond="[]",
		lineno=None];
	"574:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1029192d10>",
		fillcolor=firebrick,
		label="574:NS
MAC_header_slot_tmp <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1029192d10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"574:NS" -> "Leaf_572:AL"	 [cond="[]",
		lineno=None];
	"463:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291cb210>",
		fillcolor=cadetblue,
		label="463:BS
TxEn_tmp = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291cb210>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_459:AL"	 [def_var="['TxEn_tmp']",
		label="Leaf_459:AL"];
	"463:BS" -> "Leaf_459:AL"	 [cond="[]",
		lineno=None];
	"Leaf_265:AL" -> "430:AL";
	"572:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1029192690>",
		clk_sens=True,
		fillcolor=gold,
		label="572:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['StateSFD', 'Reset', 'Current_state', 'StateData', 'Next_state']"];
	"Leaf_265:AL" -> "572:AL";
	"259:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f102912a2d0>",
		clk_sens=True,
		fillcolor=gold,
		label="259:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Next_state']"];
	"Leaf_265:AL" -> "259:AL";
	"376:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f102943a0d0>",
		clk_sens=True,
		fillcolor=gold,
		label="376:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'StateJam', 'StateBackOff', 'RetryCnt', 'Current_state', 'StateSwitchNext', 'Next_state']"];
	"Leaf_265:AL" -> "376:AL";
	"639:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1028c96310>",
		fillcolor=firebrick,
		label="639:NS
xon_gen_complete <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1028c96310>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_635:AL"	 [def_var="['xon_gen_complete']",
		label="Leaf_635:AL"];
	"639:NS" -> "Leaf_635:AL"	 [cond="[]",
		lineno=None];
	"455:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291bd450>",
		fillcolor=cadetblue,
		label="455:BS
Fifo_rd_retry = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291bd450>]",
		style=filled,
		typ=BlockingSubstitution];
	"455:BS" -> "Leaf_453:AL"	 [cond="[]",
		lineno=None];
	"573:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1029192c50>",
		fillcolor=springgreen,
		label="573:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"573:IF" -> "575:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=573];
	"573:IF" -> "574:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=573];
	"572:AL" -> "573:IF"	 [cond="[]",
		lineno=None];
	"495:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291c2e50>",
		fillcolor=cadetblue,
		label="495:BS
TxD_tmp = (xon_gen)? 8'b0 : pause_quanta_set_dl1[7:0];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291c2e50>]",
		style=filled,
		typ=BlockingSubstitution];
	"495:BS" -> "Leaf_468:AL"	 [cond="[]",
		lineno=None];
	"481:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1029196290>",
		fillcolor=cadetblue,
		label="481:BS
TxD_tmp = MAC_tx_addr_data;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1029196290>]",
		style=filled,
		typ=BlockingSubstitution];
	"481:BS" -> "Leaf_468:AL"	 [cond="[]",
		lineno=None];
	"257:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f102912a1d0>",
		fillcolor=firebrick,
		label="257:NS
PADCounter <= PADCounter + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f102912a1d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"257:NS" -> "Leaf_251:AL"	 [cond="[]",
		lineno=None];
	"484:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1029196610>",
		fillcolor=cadetblue,
		label="484:BS
TxD_tmp = 8'h01;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1029196610>]",
		style=filled,
		typ=BlockingSubstitution];
	"484:BS" -> "Leaf_468:AL"	 [cond="[]",
		lineno=None];
	"556:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1029197890>",
		fillcolor=firebrick,
		label="556:NS
Tx_apply_rmon <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1029197890>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_550:AL"	 [def_var="['Tx_apply_rmon']",
		label="Leaf_550:AL"];
	"556:NS" -> "Leaf_550:AL"	 [cond="[]",
		lineno=None];
	"587:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1029199b10>",
		fillcolor=springgreen,
		label="587:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"589:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1029199ed0>",
		fillcolor=springgreen,
		label="589:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"587:IF" -> "589:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=587];
	"588:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1029199b50>",
		fillcolor=firebrick,
		label="588:NS
Tx_pkt_type_rmon <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1029199b50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"587:IF" -> "588:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=587];
	"Leaf_384:AL"	 [def_var="['IFG_counter']",
		label="Leaf_384:AL"];
	"Leaf_384:AL" -> "265:AL";
	"384:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f102943ab50>",
		clk_sens=True,
		fillcolor=gold,
		label="384:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'StateIFG', 'IFG_counter', 'Current_state']"];
	"Leaf_384:AL" -> "384:AL";
	"346:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1029434890>",
		fillcolor=cadetblue,
		label="346:BS
Next_state = StateSwitchNext;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1029434890>]",
		style=filled,
		typ=BlockingSubstitution];
	"346:BS" -> "Leaf_265:AL"	 [cond="[]",
		lineno=None];
	"243:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1029565d10>",
		clk_sens=True,
		fillcolor=gold,
		label="243:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'IPLengthCounter', 'Current_state', 'StateDefer', 'StatePAD', 'StateData', 'StateSendPauseFrame']"];
	"244:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1029565e50>",
		fillcolor=springgreen,
		label="244:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"243:AL" -> "244:IF"	 [cond="[]",
		lineno=None];
	"480:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f10291962d0>",
		fillcolor=springgreen,
		label="480:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"480:IF" -> "483:CS"	 [cond="['Src_MAC_ptr', 'MAC_tx_add_en']",
		label="!((Src_MAC_ptr && MAC_tx_add_en))",
		lineno=480];
	"480:IF" -> "481:BS"	 [cond="['Src_MAC_ptr', 'MAC_tx_add_en']",
		label="(Src_MAC_ptr && MAC_tx_add_en)",
		lineno=480];
	"536:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f10291a0150>",
		fillcolor=firebrick,
		label="536:NS
Tx_apply_rmon_tmp <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f10291a0150>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_534:AL"	 [def_var="['Tx_apply_rmon_tmp']",
		label="Leaf_534:AL"];
	"536:NS" -> "Leaf_534:AL"	 [cond="[]",
		lineno=None];
	"514:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f10291c3b50>",
		fillcolor=turquoise,
		label="514:BL
TxD <= 0;
TxEn <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f10291c3b90>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f10291c3cd0>]",
		style=filled,
		typ=Block];
	"Leaf_512:AL"	 [def_var="['TxEn', 'TxD']",
		label="Leaf_512:AL"];
	"514:BL" -> "Leaf_512:AL"	 [cond="[]",
		lineno=None];
	"387:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f102943af90>",
		fillcolor=springgreen,
		label="387:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"388:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f102943afd0>",
		fillcolor=firebrick,
		label="388:NS
IFG_counter <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f102943afd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"387:IF" -> "388:NS"	 [cond="['Current_state', 'StateIFG']",
		label="(Current_state != StateIFG)",
		lineno=387];
	"390:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f102944b210>",
		fillcolor=firebrick,
		label="390:NS
IFG_counter <= IFG_counter + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f102944b210>]",
		style=filled,
		typ=NonblockingSubstitution];
	"387:IF" -> "390:NS"	 [cond="['Current_state', 'StateIFG']",
		label="!((Current_state != StateIFG))",
		lineno=387];
	"351:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1029434c50>",
		fillcolor=cadetblue,
		label="351:BS
Next_state = StateSwitchNext;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1029434c50>]",
		style=filled,
		typ=BlockingSubstitution];
	"351:BS" -> "Leaf_265:AL"	 [cond="[]",
		lineno=None];
	"526:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f10291ce1d0>",
		clk_sens=True,
		fillcolor=gold,
		label="526:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'StateSFD', 'StateFCS', 'Tx_pkt_length_rmon', 'Current_state', 'StatePAD', 'StateData', 'StateSendPauseFrame']"];
	"527:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f10291ce310>",
		fillcolor=springgreen,
		label="527:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"526:AL" -> "527:IF"	 [cond="[]",
		lineno=None];
	"488:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1029196e10>",
		fillcolor=cadetblue,
		label="488:BS
TxD_tmp = 8'h00;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1029196e10>]",
		style=filled,
		typ=BlockingSubstitution];
	"488:BS" -> "Leaf_468:AL"	 [cond="[]",
		lineno=None];
	"306:BS" -> "Leaf_265:AL"	 [cond="[]",
		lineno=None];
	"475:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f10291cbd10>",
		fillcolor=springgreen,
		label="475:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"475:IF" -> "476:BS"	 [cond="['Src_MAC_ptr', 'MAC_tx_add_en']",
		label="(Src_MAC_ptr && MAC_tx_add_en)",
		lineno=475];
	"475:IF" -> "478:BS"	 [cond="['Src_MAC_ptr', 'MAC_tx_add_en']",
		label="!((Src_MAC_ptr && MAC_tx_add_en))",
		lineno=475];
	"558:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1029197b90>",
		fillcolor=firebrick,
		label="558:NS
Tx_apply_rmon <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1029197b90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"558:NS" -> "Leaf_550:AL"	 [cond="[]",
		lineno=None];
	"339:BS" -> "Leaf_265:AL"	 [cond="[]",
		lineno=None];
	"Leaf_243:AL"	 [def_var="['IPLengthCounter']",
		label="Leaf_243:AL"];
	"Leaf_243:AL" -> "243:AL";
	"Leaf_243:AL" -> "265:AL";
	"468:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f10291cb3d0>",
		clk_sens=False,
		fillcolor=gold,
		label="468:AL",
		sens="['CRC_out', 'Fifo_data', 'MAC_tx_addr_data', 'pause_quanta_set_dl1', 'xon_gen']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['IPLengthCounter', 'MAC_tx_addr_data', 'pause_quanta_set_dl1', 'CRC_out', 'Current_state', 'Src_MAC_ptr', 'xon_gen', 'Fifo_data', '\
MAC_tx_add_en']"];
	"Leaf_243:AL" -> "468:AL";
	"316:BS" -> "Leaf_265:AL"	 [cond="[]",
		lineno=None];
	"528:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f10291ce350>",
		fillcolor=firebrick,
		label="528:NS
Tx_pkt_length_rmon <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f10291ce350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_526:AL"	 [def_var="['Tx_pkt_length_rmon']",
		label="Leaf_526:AL"];
	"528:NS" -> "Leaf_526:AL"	 [cond="[]",
		lineno=None];
	"413:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102943c7d0>",
		fillcolor=cadetblue,
		label="413:BS
CRC_init = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102943c7d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_409:AL"	 [def_var="['CRC_init']",
		label="Leaf_409:AL"];
	"413:BS" -> "Leaf_409:AL"	 [cond="[]",
		lineno=None];
	"382:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f102943aad0>",
		fillcolor=firebrick,
		label="382:NS
RetryCnt <= RetryCnt + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f102943aad0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"381:IF" -> "382:NS"	 [cond="['Current_state', 'StateJam', 'Next_state', 'StateBackOff']",
		label="((Current_state == StateJam) && (Next_state == StateBackOff))",
		lineno=381];
	"344:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10294345d0>",
		fillcolor=cadetblue,
		label="344:BS
Next_state = StateJam;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10294345d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"344:BS" -> "Leaf_265:AL"	 [cond="[]",
		lineno=None];
	"493:CA" -> "493:BS"	 [cond="[]",
		lineno=None];
	"268:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f102912ab50>",
		fillcolor=springgreen,
		label="268:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"268:IF" -> "269:BS"	 [cond="['FullDuplex', 'FullDuplex', 'CRS']",
		label="(FullDuplex || !FullDuplex && !CRS)",
		lineno=268];
	"268:IF" -> "271:BS"	 [cond="['FullDuplex', 'FullDuplex', 'CRS']",
		label="!((FullDuplex || !FullDuplex && !CRS))",
		lineno=268];
	"628:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1028caa690>",
		fillcolor=firebrick,
		label="628:NS
xoff_gen_complete <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1028caa690>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_626:AL"	 [def_var="['xoff_gen_complete']",
		label="Leaf_626:AL"];
	"628:NS" -> "Leaf_626:AL"	 [cond="[]",
		lineno=None];
	"471:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291cb750>",
		fillcolor=cadetblue,
		label="471:BS
TxD_tmp = 8'h55;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291cb750>]",
		style=filled,
		typ=BlockingSubstitution];
	"470:CA" -> "471:BS"	 [cond="[]",
		lineno=None];
	"621:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1028caa250>",
		fillcolor=firebrick,
		label="621:NS
pause_quanta_sub <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1028caa250>]",
		style=filled,
		typ=NonblockingSubstitution];
	"620:IF" -> "621:NS"	 [cond="['pause_counter']",
		label="(pause_counter == 512 / 8)",
		lineno=620];
	"623:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1028caa410>",
		fillcolor=firebrick,
		label="623:NS
pause_quanta_sub <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1028caa410>]",
		style=filled,
		typ=NonblockingSubstitution];
	"620:IF" -> "623:NS"	 [cond="['pause_counter']",
		label="!((pause_counter == 512 / 8))",
		lineno=620];
	"500:BS" -> "Leaf_468:AL"	 [cond="[]",
		lineno=None];
	"304:BS" -> "Leaf_265:AL"	 [cond="[]",
		lineno=None];
	"494:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291c2a90>",
		fillcolor=cadetblue,
		label="494:BS
TxD_tmp = (xon_gen)? 8'b0 : pause_quanta_set_dl1[15:8];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291c2a90>]",
		style=filled,
		typ=BlockingSubstitution];
	"494:CA" -> "494:BS"	 [cond="[]",
		lineno=None];
	"638:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1028c963d0>",
		fillcolor=springgreen,
		label="638:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"638:IF" -> "639:NS"	 [cond="['Current_state', 'StateDefer', 'xon_gen']",
		label="((Current_state == StateDefer) && xon_gen)",
		lineno=638];
	"641:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1028c964d0>",
		fillcolor=firebrick,
		label="641:NS
xon_gen_complete <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1028c964d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"638:IF" -> "641:NS"	 [cond="['Current_state', 'StateDefer', 'xon_gen']",
		label="!(((Current_state == StateDefer) && xon_gen))",
		lineno=638];
	"341:BS" -> "Leaf_265:AL"	 [cond="[]",
		lineno=None];
	"611:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f10291b09d0>",
		fillcolor=springgreen,
		label="611:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"611:IF" -> "612:BS"	 [cond="['Tx_pkt_length_rmon', 'Fifo_rd']",
		label="((Tx_pkt_length_rmon == 3) && Fifo_rd)",
		lineno=611];
	"614:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291b0ad0>",
		fillcolor=cadetblue,
		label="614:BS
MAC_tx_addr_init = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291b0ad0>]",
		style=filled,
		typ=BlockingSubstitution];
	"611:IF" -> "614:BS"	 [cond="['Tx_pkt_length_rmon', 'Fifo_rd']",
		label="!(((Tx_pkt_length_rmon == 3) && Fifo_rd))",
		lineno=611];
	"503:CA" -> "504:BS"	 [cond="[]",
		lineno=None];
	"323:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f102914d710>",
		fillcolor=lightcyan,
		label="323:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"324:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f102914b110>",
		fillcolor=springgreen,
		label="324:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"323:CA" -> "324:IF"	 [cond="[]",
		lineno=None];
	"419:BS" -> "Leaf_417:AL"	 [cond="[]",
		lineno=None];
	"236:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f10295655d0>",
		fillcolor=springgreen,
		label="236:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"235:AL" -> "236:IF"	 [cond="[]",
		lineno=None];
	"266:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f10294434d0>",
		fillcolor=linen,
		label="266:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"265:AL" -> "266:CS"	 [cond="[]",
		lineno=None];
	"292:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102914ead0>",
		fillcolor=cadetblue,
		label="292:BS
Next_state = Current_state;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102914ead0>]",
		style=filled,
		typ=BlockingSubstitution];
	"292:BS" -> "Leaf_265:AL"	 [cond="[]",
		lineno=None];
	"278:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102912e990>",
		fillcolor=cadetblue,
		label="278:BS
Next_state = Current_state;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102912e990>]",
		style=filled,
		typ=BlockingSubstitution];
	"275:IF" -> "278:BS"	 [cond="['FullDuplex', 'IFG_counter', 'IFGset', 'FullDuplex', 'CRS', 'IFG_counter', 'IFGset']",
		label="!((FullDuplex && (IFG_counter == IFGset - 4) || !FullDuplex && !CRS && (IFG_counter == IFGset - 4)))",
		lineno=275];
	"276:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102912e7d0>",
		fillcolor=cadetblue,
		label="276:BS
Next_state = StateIdle;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102912e7d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"275:IF" -> "276:BS"	 [cond="['FullDuplex', 'IFG_counter', 'IFGset', 'FullDuplex', 'CRS', 'IFG_counter', 'IFGset']",
		label="(FullDuplex && (IFG_counter == IFGset - 4) || !FullDuplex && !CRS && (IFG_counter == IFGset - 4))",
		lineno=275];
	"610:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f10291b0650>",
		clk_sens=False,
		fillcolor=gold,
		label="610:AL",
		sens="['Tx_pkt_length_rmon', 'Fifo_rd']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Fifo_rd', 'Tx_pkt_length_rmon']"];
	"610:AL" -> "611:IF"	 [cond="[]",
		lineno=None];
	"294:IF" -> "296:IF"	 [cond="['FullDuplex', 'Collision']",
		label="!((!FullDuplex && Collision))",
		lineno=294];
	"295:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102914ee10>",
		fillcolor=cadetblue,
		label="295:BS
Next_state = StateJam;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102914ee10>]",
		style=filled,
		typ=BlockingSubstitution];
	"294:IF" -> "295:BS"	 [cond="['FullDuplex', 'Collision']",
		label="(!FullDuplex && Collision)",
		lineno=294];
	"354:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f1029434dd0>",
		fillcolor=lightcyan,
		label="354:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"355:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f10294430d0>",
		fillcolor=springgreen,
		label="355:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"354:CA" -> "355:IF"	 [cond="[]",
		lineno=None];
	"403:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f102943c1d0>",
		fillcolor=springgreen,
		label="403:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"404:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f102943c350>",
		fillcolor=firebrick,
		label="404:NS
PktDrpEvenPtr <= ~PktDrpEvenPtr;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f102943c350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"403:IF" -> "404:NS"	 [cond="['Current_state', 'StateJamDrop', 'Current_state', 'StateFFEmptyDrop']",
		label="((Current_state == StateJamDrop) || (Current_state == StateFFEmptyDrop))",
		lineno=403];
	"636:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1028caae90>",
		fillcolor=springgreen,
		label="636:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"636:IF" -> "638:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=636];
	"637:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1028caaed0>",
		fillcolor=firebrick,
		label="637:NS
xon_gen_complete <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1028caaed0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"636:IF" -> "637:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=636];
	"565:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1029192610>",
		fillcolor=springgreen,
		label="565:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"565:IF" -> "566:NS"	 [cond="['Fifo_eop', 'Current_state', 'StateFFEmptyDrop']",
		label="(Fifo_eop && (Current_state == StateFFEmptyDrop))",
		lineno=565];
	"567:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1029192990>",
		fillcolor=springgreen,
		label="567:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"565:IF" -> "567:IF"	 [cond="['Fifo_eop', 'Current_state', 'StateFFEmptyDrop']",
		label="!((Fifo_eop && (Current_state == StateFFEmptyDrop)))",
		lineno=565];
	"236:IF" -> "237:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=236];
	"238:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1029565a50>",
		fillcolor=springgreen,
		label="238:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"236:IF" -> "238:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=236];
	"401:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f102944bd10>",
		fillcolor=springgreen,
		label="401:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"400:AL" -> "401:IF"	 [cond="[]",
		lineno=None];
	"359:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f1029443190>",
		fillcolor=lightcyan,
		label="359:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"360:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1029443450>",
		fillcolor=cadetblue,
		label="360:BS
Next_state = StateDefer;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1029443450>]",
		style=filled,
		typ=BlockingSubstitution];
	"359:CA" -> "360:BS"	 [cond="[]",
		lineno=None];
	"576:NS" -> "Leaf_572:AL"	 [cond="[]",
		lineno=None];
	"545:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f10291a0d10>",
		fillcolor=springgreen,
		label="545:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"545:IF" -> "548:NS"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=545];
	"546:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f10291a0c50>",
		fillcolor=firebrick,
		label="546:NS
Tx_apply_rmon_tmp_pl1 <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f10291a0c50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"545:IF" -> "546:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=545];
	"401:IF" -> "403:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=401];
	"402:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f102944bd50>",
		fillcolor=firebrick,
		label="402:NS
PktDrpEvenPtr <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f102944bd50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"401:IF" -> "402:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=401];
	"427:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102943f690>",
		fillcolor=cadetblue,
		label="427:BS
CRC_rd = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102943f690>]",
		style=filled,
		typ=BlockingSubstitution];
	"427:BS" -> "Leaf_423:AL"	 [cond="[]",
		lineno=None];
	"281:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102912eb90>",
		fillcolor=cadetblue,
		label="281:BS
Next_state = StateDefer;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102912eb90>]",
		style=filled,
		typ=BlockingSubstitution];
	"281:BS" -> "Leaf_265:AL"	 [cond="[]",
		lineno=None];
	"342:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f1029434290>",
		fillcolor=lightcyan,
		label="342:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"343:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1029434590>",
		fillcolor=springgreen,
		label="343:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"342:CA" -> "343:IF"	 [cond="[]",
		lineno=None];
	"283:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102912ee10>",
		fillcolor=cadetblue,
		label="283:BS
Next_state = StatePause;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102912ee10>]",
		style=filled,
		typ=BlockingSubstitution];
	"283:BS" -> "Leaf_265:AL"	 [cond="[]",
		lineno=None];
	"284:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f102914e510>",
		fillcolor=springgreen,
		label="284:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"287:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102914e710>",
		fillcolor=cadetblue,
		label="287:BS
Next_state = Current_state;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102914e710>]",
		style=filled,
		typ=BlockingSubstitution];
	"284:IF" -> "287:BS"	 [cond="['FullDuplex', 'Fifo_ra', 'FullDuplex', 'CRS', 'Fifo_ra', 'pause_frame_send_en_dl1', 'xoff_gen', 'xon_gen']",
		label="!((FullDuplex && Fifo_ra || !FullDuplex && !CRS && Fifo_ra || pause_frame_send_en_dl1 && (xoff_gen || xon_gen)))",
		lineno=284];
	"285:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102914e550>",
		fillcolor=cadetblue,
		label="285:BS
Next_state = StatePreamble;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102914e550>]",
		style=filled,
		typ=BlockingSubstitution];
	"284:IF" -> "285:BS"	 [cond="['FullDuplex', 'Fifo_ra', 'FullDuplex', 'CRS', 'Fifo_ra', 'pause_frame_send_en_dl1', 'xoff_gen', 'xon_gen']",
		label="(FullDuplex && Fifo_ra || !FullDuplex && !CRS && Fifo_ra || pause_frame_send_en_dl1 && (xoff_gen || xon_gen))",
		lineno=284];
	"369:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1029443950>",
		fillcolor=firebrick,
		label="369:NS
JamCounter <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1029443950>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_367:AL"	 [def_var="['JamCounter']",
		label="Leaf_367:AL"];
	"369:NS" -> "Leaf_367:AL"	 [cond="[]",
		lineno=None];
	"552:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f10291971d0>",
		fillcolor=firebrick,
		label="552:NS
Tx_apply_rmon <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f10291971d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"552:NS" -> "Leaf_550:AL"	 [cond="[]",
		lineno=None];
	"614:BS" -> "Leaf_610:AL"	 [cond="[]",
		lineno=None];
	"345:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1029434850>",
		fillcolor=springgreen,
		label="345:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"345:IF" -> "348:BS"	 [cond="['CRC_end']",
		label="!(CRC_end)",
		lineno=345];
	"345:IF" -> "346:BS"	 [cond="['CRC_end']",
		label=CRC_end,
		lineno=345];
	"472:CA" -> "473:BS"	 [cond="[]",
		lineno=None];
	"326:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f102914b490>",
		fillcolor=springgreen,
		label="326:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"326:IF" -> "329:BS"	 [cond="['IPLengthCounter']",
		label="!((IPLengthCounter >= 59))",
		lineno=326];
	"326:IF" -> "327:BS"	 [cond="['IPLengthCounter']",
		label="(IPLengthCounter >= 59)",
		lineno=326];
	"535:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f10291a0110>",
		fillcolor=springgreen,
		label="535:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"535:IF" -> "536:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=535];
	"537:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f10291a08d0>",
		fillcolor=springgreen,
		label="537:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"535:IF" -> "537:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=535];
	"434:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102943fd90>",
		fillcolor=cadetblue,
		label="434:BS
Random_init = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102943fd90>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_430:AL"	 [def_var="['Random_init']",
		label="Leaf_430:AL"];
	"434:BS" -> "Leaf_430:AL"	 [cond="[]",
		lineno=None];
	"532:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f10291cef10>",
		fillcolor=firebrick,
		label="532:NS
Tx_pkt_length_rmon <= Tx_pkt_length_rmon + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f10291cef10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"532:NS" -> "Leaf_526:AL"	 [cond="[]",
		lineno=None];
	"425:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102943f510>",
		fillcolor=cadetblue,
		label="425:BS
CRC_rd = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102943f510>]",
		style=filled,
		typ=BlockingSubstitution];
	"425:BS" -> "Leaf_423:AL"	 [cond="[]",
		lineno=None];
	"289:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f102914e8d0>",
		fillcolor=springgreen,
		label="289:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"289:IF" -> "290:BS"	 [cond="['pause_counter']",
		label="(pause_counter == 512 / 8)",
		lineno=289];
	"289:IF" -> "292:BS"	 [cond="['pause_counter']",
		label="!((pause_counter == 512 / 8))",
		lineno=289];
	"530:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f10291ce6d0>",
		fillcolor=firebrick,
		label="530:NS
Tx_pkt_length_rmon <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f10291ce6d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"530:NS" -> "Leaf_526:AL"	 [cond="[]",
		lineno=None];
	"396:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f102944b850>",
		fillcolor=firebrick,
		label="396:NS
Preamble_counter <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f102944b850>]",
		style=filled,
		typ=NonblockingSubstitution];
	"396:NS" -> "Leaf_392:AL"	 [cond="[]",
		lineno=None];
	"494:BS" -> "Leaf_468:AL"	 [cond="[]",
		lineno=None];
	"Leaf_376:AL"	 [def_var="['RetryCnt']",
		label="Leaf_376:AL"];
	"382:NS" -> "Leaf_376:AL"	 [cond="[]",
		lineno=None];
	"324:IF" -> "326:IF"	 [cond="['FullDuplex', 'Collision']",
		label="!((!FullDuplex && Collision))",
		lineno=324];
	"325:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102914b190>",
		fillcolor=cadetblue,
		label="325:BS
Next_state = StateJam;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102914b190>]",
		style=filled,
		typ=BlockingSubstitution];
	"324:IF" -> "325:BS"	 [cond="['FullDuplex', 'Collision']",
		label="(!FullDuplex && Collision)",
		lineno=324];
	"569:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1029192b90>",
		fillcolor=springgreen,
		label="569:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"569:IF" -> "570:NS"	 [cond="['CRC_end']",
		label=CRC_end,
		lineno=569];
	"336:BS" -> "Leaf_265:AL"	 [cond="[]",
		lineno=None];
	"Leaf_617:AL"	 [def_var="['pause_quanta_sub']",
		label="Leaf_617:AL"];
	"621:NS" -> "Leaf_617:AL"	 [cond="[]",
		lineno=None];
	"544:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f10291a0ad0>",
		clk_sens=True,
		fillcolor=gold,
		label="544:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Tx_apply_rmon_tmp']"];
	"544:AL" -> "545:IF"	 [cond="[]",
		lineno=None];
	"260:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f102912a510>",
		fillcolor=springgreen,
		label="260:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"261:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f102912a450>",
		fillcolor=firebrick,
		label="261:NS
Current_state <= StateDefer;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f102912a450>]",
		style=filled,
		typ=NonblockingSubstitution];
	"260:IF" -> "261:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=260];
	"263:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f102912a610>",
		fillcolor=firebrick,
		label="263:NS
Current_state <= Next_state;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f102912a610>]",
		style=filled,
		typ=NonblockingSubstitution];
	"260:IF" -> "263:NS"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=260];
	"356:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1029443110>",
		fillcolor=cadetblue,
		label="356:BS
Next_state = StateSwitchNext;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1029443110>]",
		style=filled,
		typ=BlockingSubstitution];
	"356:BS" -> "Leaf_265:AL"	 [cond="[]",
		lineno=None];
	"377:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f102943a210>",
		fillcolor=springgreen,
		label="377:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"377:IF" -> "379:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=377];
	"378:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f102943a250>",
		fillcolor=firebrick,
		label="378:NS
RetryCnt <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f102943a250>]",
		style=filled,
		typ=NonblockingSubstitution];
	"377:IF" -> "378:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=377];
	"349:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f1029434610>",
		fillcolor=lightcyan,
		label="349:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"350:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1029434c10>",
		fillcolor=springgreen,
		label="350:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"349:CA" -> "350:IF"	 [cond="[]",
		lineno=None];
	"567:IF" -> "569:IF"	 [cond="['Fifo_eop', 'Fifo_data_err_full']",
		label="!((Fifo_eop && Fifo_data_err_full))",
		lineno=567];
	"568:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f10291929d0>",
		fillcolor=firebrick,
		label="568:NS
Tx_pkt_err_type_rmon <= 3'b011;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f10291929d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"567:IF" -> "568:NS"	 [cond="['Fifo_eop', 'Fifo_data_err_full']",
		label="(Fifo_eop && Fifo_data_err_full)",
		lineno=567];
	"505:CA" -> "506:BS"	 [cond="[]",
		lineno=None];
	"388:NS" -> "Leaf_384:AL"	 [cond="[]",
		lineno=None];
	"584:NS" -> "Leaf_580:AL"	 [cond="[]",
		lineno=None];
	"380:NS" -> "Leaf_376:AL"	 [cond="[]",
		lineno=None];
	"597:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291cf710>",
		fillcolor=cadetblue,
		label="597:BS
Src_MAC_ptr = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291cf710>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_595:AL"	 [def_var="['Src_MAC_ptr']",
		label="Leaf_595:AL"];
	"597:BS" -> "Leaf_595:AL"	 [cond="[]",
		lineno=None];
	"623:NS" -> "Leaf_617:AL"	 [cond="[]",
		lineno=None];
	"508:BS" -> "Leaf_468:AL"	 [cond="[]",
		lineno=None];
	"479:CA" -> "480:IF"	 [cond="[]",
		lineno=None];
	"278:BS" -> "Leaf_265:AL"	 [cond="[]",
		lineno=None];
	"398:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f102944bad0>",
		fillcolor=firebrick,
		label="398:NS
Preamble_counter <= Preamble_counter + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f102944bad0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"398:NS" -> "Leaf_392:AL"	 [cond="[]",
		lineno=None];
	"Leaf_259:AL"	 [def_var="['Current_state']",
		label="Leaf_259:AL"];
	"261:NS" -> "Leaf_259:AL"	 [cond="[]",
		lineno=None];
	"353:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1029434e10>",
		fillcolor=cadetblue,
		label="353:BS
Next_state = Current_state;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1029434e10>]",
		style=filled,
		typ=BlockingSubstitution];
	"353:BS" -> "Leaf_265:AL"	 [cond="[]",
		lineno=None];
	"488:CA" -> "488:BS"	 [cond="[]",
		lineno=None];
	"267:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f102912a710>",
		fillcolor=lightcyan,
		label="267:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"267:CA" -> "268:IF"	 [cond="[]",
		lineno=None];
	"557:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1029197a90>",
		fillcolor=springgreen,
		label="557:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"557:IF" -> "558:NS"	 [cond="['Tx_apply_rmon_tmp_pl1']",
		label=Tx_apply_rmon_tmp_pl1,
		lineno=557];
	"279:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f102912e150>",
		fillcolor=lightcyan,
		label="279:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"280:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f102912eb50>",
		fillcolor=springgreen,
		label="280:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"279:CA" -> "280:IF"	 [cond="[]",
		lineno=None];
	"238:IF" -> "239:NS"	 [cond="['Current_state', 'StatePause']",
		label="(Current_state != StatePause)",
		lineno=238];
	"241:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1029565c10>",
		fillcolor=firebrick,
		label="241:NS
pause_counter <= pause_counter + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1029565c10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"238:IF" -> "241:NS"	 [cond="['Current_state', 'StatePause']",
		label="!((Current_state != StatePause))",
		lineno=238];
	"540:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f10291a0810>",
		fillcolor=firebrick,
		label="540:NS
Tx_apply_rmon_tmp <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f10291a0810>]",
		style=filled,
		typ=NonblockingSubstitution];
	"537:IF" -> "540:NS"	 [cond="['Fifo_eop', 'Current_state', 'StateJamDrop', 'Fifo_eop', 'Current_state', 'StateFFEmptyDrop', 'CRC_end']",
		label="(Fifo_eop && (Current_state == StateJamDrop) || Fifo_eop && (Current_state == StateFFEmptyDrop) || CRC_end)",
		lineno=537];
	"542:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f10291a09d0>",
		fillcolor=firebrick,
		label="542:NS
Tx_apply_rmon_tmp <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f10291a09d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"537:IF" -> "542:NS"	 [cond="['Fifo_eop', 'Current_state', 'StateJamDrop', 'Fifo_eop', 'Current_state', 'StateFFEmptyDrop', 'CRC_end']",
		label="!((Fifo_eop && (Current_state == StateJamDrop) || Fifo_eop && (Current_state == StateFFEmptyDrop) || CRC_end))",
		lineno=537];
	"410:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f102943c610>",
		fillcolor=springgreen,
		label="410:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"410:IF" -> "413:BS"	 [cond="['Current_state', 'StateSFD']",
		label="!((Current_state == StateSFD))",
		lineno=410];
	"411:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102943c650>",
		fillcolor=cadetblue,
		label="411:BS
CRC_init = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102943c650>]",
		style=filled,
		typ=BlockingSubstitution];
	"410:IF" -> "411:BS"	 [cond="['Current_state', 'StateSFD']",
		label="(Current_state == StateSFD)",
		lineno=410];
	"297:BS" -> "Leaf_265:AL"	 [cond="[]",
		lineno=None];
	"350:IF" -> "351:BS"	 [cond="['Fifo_eop']",
		label=Fifo_eop,
		lineno=350];
	"350:IF" -> "353:BS"	 [cond="['Fifo_eop']",
		label="!(Fifo_eop)",
		lineno=350];
	"409:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f102943c3d0>",
		clk_sens=False,
		fillcolor=gold,
		label="409:AL",
		sens="['Current_state']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['StateSFD', 'Current_state']"];
	"409:AL" -> "410:IF"	 [cond="[]",
		lineno=None];
	"589:IF" -> "590:NS"	 [cond="['Current_state', 'StateSendPauseFrame']",
		label="(Current_state == StateSendPauseFrame)",
		lineno=589];
	"589:IF" -> "591:IF"	 [cond="['Current_state', 'StateSendPauseFrame']",
		label="!((Current_state == StateSendPauseFrame))",
		lineno=589];
	"263:NS" -> "Leaf_259:AL"	 [cond="[]",
		lineno=None];
	"245:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1029565e90>",
		fillcolor=firebrick,
		label="245:NS
IPLengthCounter <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1029565e90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"244:IF" -> "245:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=244];
	"246:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f102912f210>",
		fillcolor=springgreen,
		label="246:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"244:IF" -> "246:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=244];
	"313:IF" -> "315:IF"	 [cond="['FullDuplex', 'Collision']",
		label="!((!FullDuplex && Collision))",
		lineno=313];
	"314:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102914d5d0>",
		fillcolor=cadetblue,
		label="314:BS
Next_state = StateJam;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102914d5d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"313:IF" -> "314:BS"	 [cond="['FullDuplex', 'Collision']",
		label="(!FullDuplex && Collision)",
		lineno=313];
	"395:IF" -> "396:NS"	 [cond="['Current_state', 'StatePreamble']",
		label="(Current_state != StatePreamble)",
		lineno=395];
	"395:IF" -> "398:NS"	 [cond="['Current_state', 'StatePreamble']",
		label="!((Current_state != StatePreamble))",
		lineno=395];
	"386:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f102943ac90>",
		fillcolor=firebrick,
		label="386:NS
IFG_counter <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f102943ac90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"386:NS" -> "Leaf_384:AL"	 [cond="[]",
		lineno=None];
	"617:AL" -> "618:IF"	 [cond="[]",
		lineno=None];
	"582:NS" -> "Leaf_580:AL"	 [cond="[]",
		lineno=None];
	"457:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291bd610>",
		fillcolor=cadetblue,
		label="457:BS
Fifo_rd_retry = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291bd610>]",
		style=filled,
		typ=BlockingSubstitution];
	"457:BS" -> "Leaf_453:AL"	 [cond="[]",
		lineno=None];
	"249:NS" -> "Leaf_243:AL"	 [cond="[]",
		lineno=None];
	"629:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1028caab50>",
		fillcolor=springgreen,
		label="629:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"632:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1028caac50>",
		fillcolor=firebrick,
		label="632:NS
xoff_gen_complete <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1028caac50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"629:IF" -> "632:NS"	 [cond="['Current_state', 'StateDefer', 'xoff_gen']",
		label="!(((Current_state == StateDefer) && xoff_gen))",
		lineno=629];
	"630:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1028caaa90>",
		fillcolor=firebrick,
		label="630:NS
xoff_gen_complete <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1028caaa90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"629:IF" -> "630:NS"	 [cond="['Current_state', 'StateDefer', 'xoff_gen']",
		label="((Current_state == StateDefer) && xoff_gen)",
		lineno=629];
	"220:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f102955ac90>",
		fillcolor=springgreen,
		label="220:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"220:IF" -> "221:BL"	 [cond="['Reset']",
		label=Reset,
		lineno=220];
	"220:IF" -> "226:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=220];
	"495:CA" -> "495:BS"	 [cond="[]",
		lineno=None];
	"219:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f102955a990>",
		clk_sens=True,
		fillcolor=gold,
		label="219:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'pause_quanta_set', 'pause_frame_send_en']"];
	"219:AL" -> "220:IF"	 [cond="[]",
		lineno=None];
	"280:IF" -> "281:BS"	 [cond="['FullDuplex', 'CRS']",
		label="(!FullDuplex && CRS)",
		lineno=280];
	"282:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f102912edd0>",
		fillcolor=springgreen,
		label="282:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"280:IF" -> "282:IF"	 [cond="['FullDuplex', 'CRS']",
		label="!((!FullDuplex && CRS))",
		lineno=280];
	"431:IF" -> "434:BS"	 [cond="['Current_state', 'StateJam', 'Next_state', 'StateBackOff']",
		label="!(((Current_state == StateJam) && (Next_state == StateBackOff)))",
		lineno=431];
	"432:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102943fc10>",
		fillcolor=cadetblue,
		label="432:BS
Random_init = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102943fc10>]",
		style=filled,
		typ=BlockingSubstitution];
	"431:IF" -> "432:BS"	 [cond="['Current_state', 'StateJam', 'Next_state', 'StateBackOff']",
		label="((Current_state == StateJam) && (Next_state == StateBackOff))",
		lineno=431];
	"254:IF" -> "255:NS"	 [cond="['Current_state', 'StatePAD']",
		label="(Current_state != StatePAD)",
		lineno=254];
	"254:IF" -> "257:NS"	 [cond="['Current_state', 'StatePAD']",
		label="!((Current_state != StatePAD))",
		lineno=254];
	"Leaf_534:AL" -> "544:AL";
	"606:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f10291b0350>",
		fillcolor=firebrick,
		label="606:NS
MAC_tx_addr_rd <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f10291b0350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"606:NS" -> "Leaf_602:AL"	 [cond="[]",
		lineno=None];
	"534:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f10291cef90>",
		clk_sens=True,
		fillcolor=gold,
		label="534:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'StateFFEmptyDrop', 'Current_state', 'Fifo_eop', 'StateJamDrop', 'CRC_end']"];
	"534:AL" -> "535:IF"	 [cond="[]",
		lineno=None];
	"484:CA" -> "484:BS"	 [cond="[]",
		lineno=None];
	"439:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f10291a8850>",
		fillcolor=springgreen,
		label="439:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"438:AL" -> "439:IF"	 [cond="[]",
		lineno=None];
	"540:NS" -> "Leaf_534:AL"	 [cond="[]",
		lineno=None];
	"259:AL" -> "260:IF"	 [cond="[]",
		lineno=None];
	"314:BS" -> "Leaf_265:AL"	 [cond="[]",
		lineno=None];
	"424:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f102943f4d0>",
		fillcolor=springgreen,
		label="424:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"424:IF" -> "427:BS"	 [cond="['Current_state', 'StateFCS']",
		label="!((Current_state == StateFCS))",
		lineno=424];
	"424:IF" -> "425:BS"	 [cond="['Current_state', 'StateFCS']",
		label="(Current_state == StateFCS)",
		lineno=424];
	"392:AL" -> "393:IF"	 [cond="[]",
		lineno=None];
	"460:IF" -> "463:BS"	 [cond="['Current_state', 'StatePreamble', 'Current_state', 'StateSFD', 'Current_state', 'StateData', 'Current_state', 'StateSendPauseFrame', '\
Current_state', 'StateFCS', 'Current_state', 'StatePAD', 'Current_state', 'StateJam']",
		label="((Current_state == StatePreamble) || (Current_state == StateSFD) || (Current_state == StateData) || (Current_state == StateSendPauseFrame) || (\
Current_state == StateFCS) || (Current_state == StatePAD) || (Current_state == StateJam))",
		lineno=460];
	"465:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291cb390>",
		fillcolor=cadetblue,
		label="465:BS
TxEn_tmp = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291cb390>]",
		style=filled,
		typ=BlockingSubstitution];
	"460:IF" -> "465:BS"	 [cond="['Current_state', 'StatePreamble', 'Current_state', 'StateSFD', 'Current_state', 'StateData', 'Current_state', 'StateSendPauseFrame', '\
Current_state', 'StateFCS', 'Current_state', 'StatePAD', 'Current_state', 'StateJam']",
		label="!(((Current_state == StatePreamble) || (Current_state == StateSFD) || (Current_state == StateData) || (Current_state == StateSendPauseFrame) || (\
Current_state == StateFCS) || (Current_state == StatePAD) || (Current_state == StateJam)))",
		lineno=460];
	"599:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291cf890>",
		fillcolor=cadetblue,
		label="599:BS
Src_MAC_ptr = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291cf890>]",
		style=filled,
		typ=BlockingSubstitution];
	"599:BS" -> "Leaf_595:AL"	 [cond="[]",
		lineno=None];
	"300:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f102914ee50>",
		fillcolor=lightcyan,
		label="300:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"300:CA" -> "301:IF"	 [cond="[]",
		lineno=None];
	"360:BS" -> "Leaf_265:AL"	 [cond="[]",
		lineno=None];
	"604:NS" -> "Leaf_602:AL"	 [cond="[]",
		lineno=None];
	"325:BS" -> "Leaf_265:AL"	 [cond="[]",
		lineno=None];
	"492:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291c2650>",
		fillcolor=cadetblue,
		label="492:BS
TxD_tmp = 8'h00;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291c2650>]",
		style=filled,
		typ=BlockingSubstitution];
	"492:CA" -> "492:BS"	 [cond="[]",
		lineno=None];
	"241:NS" -> "Leaf_235:AL"	 [cond="[]",
		lineno=None];
	"Leaf_595:AL" -> "468:AL";
	"439:IF" -> "445:BS"	 [cond="['Current_state', 'StateData', 'Current_state', 'StateSFD', 'pause_frame_send_en_dl1', 'xoff_gen', 'xon_gen', 'Current_state', '\
StateJamDrop', 'PktDrpEvenPtr', 'Current_state', 'StateFFEmptyDrop', 'PktDrpEvenPtr']",
		label="!(((Current_state == StateData) || (Current_state == StateSFD) && !(pause_frame_send_en_dl1 && (xoff_gen || xon_gen)) || (Current_\
state == StateJamDrop) && PktDrpEvenPtr || (Current_state == StateFFEmptyDrop) && PktDrpEvenPtr))",
		lineno=439];
	"443:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291a8890>",
		fillcolor=cadetblue,
		label="443:BS
Fifo_rd = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291a8890>]",
		style=filled,
		typ=BlockingSubstitution];
	"439:IF" -> "443:BS"	 [cond="['Current_state', 'StateData', 'Current_state', 'StateSFD', 'pause_frame_send_en_dl1', 'xoff_gen', 'xon_gen', 'Current_state', '\
StateJamDrop', 'PktDrpEvenPtr', 'Current_state', 'StateFFEmptyDrop', 'PktDrpEvenPtr']",
		label="((Current_state == StateData) || (Current_state == StateSFD) && !(pause_frame_send_en_dl1 && (xoff_gen || xon_gen)) || (Current_\
state == StateJamDrop) && PktDrpEvenPtr || (Current_state == StateFFEmptyDrop) && PktDrpEvenPtr)",
		lineno=439];
	"282:IF" -> "283:BS"	 [cond="['pause_apply']",
		label=pause_apply,
		lineno=282];
	"282:IF" -> "284:IF"	 [cond="['pause_apply']",
		label="!(pause_apply)",
		lineno=282];
	"Leaf_512:AL" -> "233:AS";
	"Leaf_512:AL" -> "586:AL";
	"474:CA" -> "475:IF"	 [cond="[]",
		lineno=None];
	"Leaf_219:AL" -> "265:AL";
	"Leaf_219:AL" -> "438:AL";
	"Leaf_219:AL" -> "468:AL";
	"307:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f102914a910>",
		fillcolor=lightcyan,
		label="307:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"307:CA" -> "308:IF"	 [cond="[]",
		lineno=None];
	"362:BS" -> "Leaf_265:AL"	 [cond="[]",
		lineno=None];
	"550:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f10291a0fd0>",
		clk_sens=True,
		fillcolor=gold,
		label="550:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'StateFFEmptyDrop', 'Current_state', 'Fifo_eop', 'Tx_apply_rmon_tmp_pl1', 'StateJamDrop', 'CRC_end']"];
	"Leaf_544:AL" -> "550:AL";
	"370:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1029443c50>",
		fillcolor=springgreen,
		label="370:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"372:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1029443e90>",
		fillcolor=springgreen,
		label="372:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"370:IF" -> "372:IF"	 [cond="['Current_state', 'StateJam']",
		label="!((Current_state != StateJam))",
		lineno=370];
	"371:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1029443c90>",
		fillcolor=firebrick,
		label="371:NS
JamCounter <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1029443c90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"370:IF" -> "371:NS"	 [cond="['Current_state', 'StateJam']",
		label="(Current_state != StateJam)",
		lineno=370];
	"527:IF" -> "528:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=527];
	"529:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f10291ce690>",
		fillcolor=springgreen,
		label="529:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"527:IF" -> "529:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=527];
	"247:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f102912f250>",
		fillcolor=firebrick,
		label="247:NS
IPLengthCounter <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f102912f250>]",
		style=filled,
		typ=NonblockingSubstitution];
	"247:NS" -> "Leaf_243:AL"	 [cond="[]",
		lineno=None];
	"595:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f10291cf090>",
		clk_sens=False,
		fillcolor=gold,
		label="595:AL",
		sens="['Tx_pkt_length_rmon']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Tx_pkt_length_rmon']"];
	"596:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f10291cf6d0>",
		fillcolor=springgreen,
		label="596:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"595:AL" -> "596:IF"	 [cond="[]",
		lineno=None];
	"605:IF" -> "606:NS"	 [cond="['Tx_pkt_length_rmon', 'Tx_pkt_length_rmon', 'MAC_tx_add_en', 'Current_state', 'StateSendPauseFrame']",
		label="((Tx_pkt_length_rmon >= 4) && (Tx_pkt_length_rmon <= 9) && (MAC_tx_add_en || (Current_state == StateSendPauseFrame)))",
		lineno=605];
	"608:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f10291b0510>",
		fillcolor=firebrick,
		label="608:NS
MAC_tx_addr_rd <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f10291b0510>]",
		style=filled,
		typ=NonblockingSubstitution];
	"605:IF" -> "608:NS"	 [cond="['Tx_pkt_length_rmon', 'Tx_pkt_length_rmon', 'MAC_tx_add_en', 'Current_state', 'StateSendPauseFrame']",
		label="!(((Tx_pkt_length_rmon >= 4) && (Tx_pkt_length_rmon <= 9) && (MAC_tx_add_en || (Current_state == StateSendPauseFrame))))",
		lineno=605];
	"287:BS" -> "Leaf_265:AL"	 [cond="[]",
		lineno=None];
	"451:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291bd050>",
		fillcolor=cadetblue,
		label="451:BS
Fifo_rd_finish = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291bd050>]",
		style=filled,
		typ=BlockingSubstitution];
	"448:IF" -> "451:BS"	 [cond="['Current_state', 'StateSwitchNext']",
		label="!((Current_state == StateSwitchNext))",
		lineno=448];
	"449:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291a8e50>",
		fillcolor=cadetblue,
		label="449:BS
Fifo_rd_finish = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291a8e50>]",
		style=filled,
		typ=BlockingSubstitution];
	"448:IF" -> "449:BS"	 [cond="['Current_state', 'StateSwitchNext']",
		label="(Current_state == StateSwitchNext)",
		lineno=448];
	"251:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f102912fad0>",
		clk_sens=True,
		fillcolor=gold,
		label="251:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'PADCounter', 'Current_state', 'StatePAD']"];
	"251:AL" -> "252:IF"	 [cond="[]",
		lineno=None];
	"568:NS" -> "Leaf_560:AL"	 [cond="[]",
		lineno=None];
	"Leaf_459:AL" -> "512:AL";
	"542:NS" -> "Leaf_534:AL"	 [cond="[]",
		lineno=None];
	"319:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f102914ded0>",
		fillcolor=springgreen,
		label="319:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"319:IF" -> "320:BS"	 [cond="['Fifo_eop']",
		label=Fifo_eop,
		lineno=319];
	"319:IF" -> "322:BS"	 [cond="['Fifo_eop']",
		label="!(Fifo_eop)",
		lineno=319];
	"443:BS" -> "Leaf_438:AL"	 [cond="[]",
		lineno=None];
	"Leaf_376:AL" -> "265:AL";
	"Leaf_376:AL" -> "376:AL";
	"245:NS" -> "Leaf_243:AL"	 [cond="[]",
		lineno=None];
	"586:AL" -> "587:IF"	 [cond="[]",
		lineno=None];
	"285:BS" -> "Leaf_265:AL"	 [cond="[]",
		lineno=None];
	"471:BS" -> "Leaf_468:AL"	 [cond="[]",
		lineno=None];
	"Leaf_438:AL" -> "610:AL";
	"546:NS" -> "Leaf_544:AL"	 [cond="[]",
		lineno=None];
	"561:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1029197d50>",
		fillcolor=springgreen,
		label="561:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"561:IF" -> "562:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=561];
	"563:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f10291921d0>",
		fillcolor=springgreen,
		label="563:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"561:IF" -> "563:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=561];
	"560:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1029197c10>",
		clk_sens=True,
		fillcolor=gold,
		label="560:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'StateFFEmptyDrop', 'Current_state', 'Fifo_eop', 'Fifo_data_err_full', 'StateJamDrop', 'CRC_end']"];
	"560:AL" -> "561:IF"	 [cond="[]",
		lineno=None];
	"373:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f102943a090>",
		fillcolor=firebrick,
		label="373:NS
JamCounter <= JamCounter + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f102943a090>]",
		style=filled,
		typ=NonblockingSubstitution];
	"372:IF" -> "373:NS"	 [cond="['Current_state', 'StateJam']",
		label="(Current_state == StateJam)",
		lineno=372];
	"378:NS" -> "Leaf_376:AL"	 [cond="[]",
		lineno=None];
	"Leaf_447:AL"	 [def_var="['Fifo_rd_finish']",
		label="Leaf_447:AL"];
	"288:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f102912ec90>",
		fillcolor=lightcyan,
		label="288:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"288:CA" -> "289:IF"	 [cond="[]",
		lineno=None];
	"266:CS" -> "337:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=266];
	"266:CS" -> "293:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=266];
	"266:CS" -> "361:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=266];
	"266:CS" -> "312:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=266];
	"266:CS" -> "272:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=266];
	"266:CS" -> "323:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=266];
	"266:CS" -> "354:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=266];
	"266:CS" -> "359:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=266];
	"266:CS" -> "342:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=266];
	"266:CS" -> "349:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=266];
	"266:CS" -> "267:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=266];
	"266:CS" -> "279:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=266];
	"266:CS" -> "300:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=266];
	"266:CS" -> "307:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=266];
	"266:CS" -> "288:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=266];
	"330:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f102914b1d0>",
		fillcolor=lightcyan,
		label="330:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"266:CS" -> "330:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=266];
	"513:IF" -> "514:BL"	 [cond="['Reset']",
		label=Reset,
		lineno=513];
	"519:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f10291c3e50>",
		fillcolor=turquoise,
		label="519:BL
TxD <= TxD_tmp;
TxEn <= TxEn_tmp;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f10291c3e90>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f10291c3fd0>]",
		style=filled,
		typ=Block];
	"513:IF" -> "519:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=513];
	"491:BS" -> "Leaf_468:AL"	 [cond="[]",
		lineno=None];
	"367:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1029443810>",
		clk_sens=True,
		fillcolor=gold,
		label="367:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'StateJam', 'Current_state', 'JamCounter']"];
	"368:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1029443910>",
		fillcolor=springgreen,
		label="368:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"367:AL" -> "368:IF"	 [cond="[]",
		lineno=None];
	"299:BS" -> "Leaf_265:AL"	 [cond="[]",
		lineno=None];
	"411:BS" -> "Leaf_409:AL"	 [cond="[]",
		lineno=None];
	"Leaf_367:AL" -> "265:AL";
	"Leaf_367:AL" -> "367:AL";
	"318:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102914dc90>",
		fillcolor=cadetblue,
		label="318:BS
Next_state = StateFCS;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f102914dc90>]",
		style=filled,
		typ=BlockingSubstitution];
	"318:BS" -> "Leaf_265:AL"	 [cond="[]",
		lineno=None];
	"Leaf_526:AL" -> "602:AL";
	"Leaf_526:AL" -> "526:AL";
	"Leaf_526:AL" -> "610:AL";
	"Leaf_526:AL" -> "595:AL";
	"Leaf_468:AL" -> "415:AS";
	"Leaf_468:AL" -> "512:AL";
	"332:BS" -> "Leaf_265:AL"	 [cond="[]",
		lineno=None];
	"385:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f102943ac50>",
		fillcolor=springgreen,
		label="385:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"385:IF" -> "387:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=385];
	"385:IF" -> "386:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=385];
	"490:CA" -> "490:BS"	 [cond="[]",
		lineno=None];
	"358:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10294432d0>",
		fillcolor=cadetblue,
		label="358:BS
Next_state = Current_state;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10294432d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"358:BS" -> "Leaf_265:AL"	 [cond="[]",
		lineno=None];
	"608:NS" -> "Leaf_602:AL"	 [cond="[]",
		lineno=None];
	"368:IF" -> "369:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=368];
	"368:IF" -> "370:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=368];
	"485:CA" -> "485:BS"	 [cond="[]",
		lineno=None];
	"596:IF" -> "597:BS"	 [cond="['Tx_pkt_length_rmon', 'Tx_pkt_length_rmon']",
		label="((Tx_pkt_length_rmon >= 6) && (Tx_pkt_length_rmon <= 11))",
		lineno=596];
	"596:IF" -> "599:BS"	 [cond="['Tx_pkt_length_rmon', 'Tx_pkt_length_rmon']",
		label="!(((Tx_pkt_length_rmon >= 6) && (Tx_pkt_length_rmon <= 11)))",
		lineno=596];
	"404:NS" -> "Leaf_400:AL"	 [cond="[]",
		lineno=None];
	"Leaf_259:AL" -> "430:AL";
	"Leaf_259:AL" -> "459:AL";
	"Leaf_259:AL" -> "453:AL";
	"Leaf_259:AL" -> "626:AL";
	"Leaf_259:AL" -> "602:AL";
	"Leaf_259:AL" -> "447:AL";
	"Leaf_259:AL" -> "417:AL";
	"Leaf_259:AL" -> "572:AL";
	"Leaf_259:AL" -> "243:AL";
	"Leaf_259:AL" -> "526:AL";
	"Leaf_259:AL" -> "235:AL";
	"Leaf_259:AL" -> "265:AL";
	"Leaf_259:AL" -> "400:AL";
	"Leaf_259:AL" -> "409:AL";
	"Leaf_259:AL" -> "534:AL";
	"Leaf_259:AL" -> "438:AL";
	"Leaf_259:AL" -> "392:AL";
	"Leaf_259:AL" -> "251:AL";
	"Leaf_259:AL" -> "586:AL";
	"Leaf_259:AL" -> "560:AL";
	"Leaf_259:AL" -> "367:AL";
	"Leaf_259:AL" -> "376:AL";
	"Leaf_259:AL" -> "384:AL";
	"Leaf_259:AL" -> "468:AL";
	"423:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f102943f2d0>",
		clk_sens=False,
		fillcolor=gold,
		label="423:AL",
		sens="['Current_state']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Current_state', 'StateFCS']"];
	"Leaf_259:AL" -> "423:AL";
	"Leaf_259:AL" -> "550:AL";
	"635:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1028caad50>",
		clk_sens=True,
		fillcolor=gold,
		label="635:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'StateDefer', 'Current_state', 'xon_gen']"];
	"Leaf_259:AL" -> "635:AL";
	"519:BL" -> "Leaf_512:AL"	 [cond="[]",
		lineno=None];
	"529:IF" -> "530:NS"	 [cond="['Current_state', 'StateSFD']",
		label="(Current_state == StateSFD)",
		lineno=529];
	"531:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f10291ced50>",
		fillcolor=springgreen,
		label="531:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"529:IF" -> "531:IF"	 [cond="['Current_state', 'StateSFD']",
		label="!((Current_state == StateSFD))",
		lineno=529];
	"330:CA" -> "331:IF"	 [cond="[]",
		lineno=None];
	"451:BS" -> "Leaf_447:AL"	 [cond="[]",
		lineno=None];
	"489:CA" -> "489:BS"	 [cond="[]",
		lineno=None];
	"551:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1029197190>",
		fillcolor=springgreen,
		label="551:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"551:IF" -> "552:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=551];
	"553:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1029197850>",
		fillcolor=springgreen,
		label="553:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"551:IF" -> "553:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=551];
	"449:BS" -> "Leaf_447:AL"	 [cond="[]",
		lineno=None];
	"Leaf_251:AL" -> "251:AL";
	"276:BS" -> "Leaf_265:AL"	 [cond="[]",
		lineno=None];
	"309:BS" -> "Leaf_265:AL"	 [cond="[]",
		lineno=None];
	"487:CA" -> "487:BS"	 [cond="[]",
		lineno=None];
	"376:AL" -> "377:IF"	 [cond="[]",
		lineno=None];
	"627:IF" -> "628:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=627];
	"627:IF" -> "629:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=627];
	"355:IF" -> "356:BS"	 [cond="['Fifo_eop']",
		label=Fifo_eop,
		lineno=355];
	"355:IF" -> "358:BS"	 [cond="['Fifo_eop']",
		label="!(Fifo_eop)",
		lineno=355];
	"553:IF" -> "556:NS"	 [cond="['Fifo_eop', 'Current_state', 'StateJamDrop', 'Fifo_eop', 'Current_state', 'StateFFEmptyDrop', 'CRC_end']",
		label="(Fifo_eop && (Current_state == StateJamDrop) || Fifo_eop && (Current_state == StateFFEmptyDrop) || CRC_end)",
		lineno=553];
	"553:IF" -> "557:IF"	 [cond="['Fifo_eop', 'Current_state', 'StateJamDrop', 'Fifo_eop', 'Current_state', 'StateFFEmptyDrop', 'CRC_end']",
		label="!((Fifo_eop && (Current_state == StateJamDrop) || Fifo_eop && (Current_state == StateFFEmptyDrop) || CRC_end))",
		lineno=553];
	"588:NS" -> "Leaf_586:AL"	 [cond="[]",
		lineno=None];
	"641:NS" -> "Leaf_635:AL"	 [cond="[]",
		lineno=None];
	"373:NS" -> "Leaf_367:AL"	 [cond="[]",
		lineno=None];
	"343:IF" -> "344:BS"	 [cond="['FullDuplex', 'Collision']",
		label="(!FullDuplex && Collision)",
		lineno=343];
	"343:IF" -> "345:IF"	 [cond="['FullDuplex', 'Collision']",
		label="!((!FullDuplex && Collision))",
		lineno=343];
	"302:BS" -> "Leaf_265:AL"	 [cond="[]",
		lineno=None];
	"384:AL" -> "385:IF"	 [cond="[]",
		lineno=None];
	"468:AL" -> "469:CS"	 [cond="[]",
		lineno=None];
	"563:IF" -> "564:NS"	 [cond="['Fifo_eop', 'Current_state', 'StateJamDrop']",
		label="(Fifo_eop && (Current_state == StateJamDrop))",
		lineno=563];
	"563:IF" -> "565:IF"	 [cond="['Fifo_eop', 'Current_state', 'StateJamDrop']",
		label="!((Fifo_eop && (Current_state == StateJamDrop)))",
		lineno=563];
	"486:BS" -> "Leaf_468:AL"	 [cond="[]",
		lineno=None];
	"432:BS" -> "Leaf_430:AL"	 [cond="[]",
		lineno=None];
	"454:IF" -> "455:BS"	 [cond="['Current_state', 'StateJam']",
		label="(Current_state == StateJam)",
		lineno=454];
	"454:IF" -> "457:BS"	 [cond="['Current_state', 'StateJam']",
		label="!((Current_state == StateJam))",
		lineno=454];
	"465:BS" -> "Leaf_459:AL"	 [cond="[]",
		lineno=None];
	"632:NS" -> "Leaf_626:AL"	 [cond="[]",
		lineno=None];
	"492:BS" -> "Leaf_468:AL"	 [cond="[]",
		lineno=None];
	"510:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291c3810>",
		fillcolor=cadetblue,
		label="510:BS
TxD_tmp = 2'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f10291c3810>]",
		style=filled,
		typ=BlockingSubstitution];
	"509:CA" -> "510:BS"	 [cond="[]",
		lineno=None];
	"371:NS" -> "Leaf_367:AL"	 [cond="[]",
		lineno=None];
	"246:IF" -> "248:IF"	 [cond="['Current_state', 'StateDefer']",
		label="!((Current_state == StateDefer))",
		lineno=246];
	"246:IF" -> "247:NS"	 [cond="['Current_state', 'StateDefer']",
		label="(Current_state == StateDefer)",
		lineno=246];
	"390:NS" -> "Leaf_384:AL"	 [cond="[]",
		lineno=None];
	"423:AL" -> "424:IF"	 [cond="[]",
		lineno=None];
	"619:NS" -> "Leaf_617:AL"	 [cond="[]",
		lineno=None];
	"402:NS" -> "Leaf_400:AL"	 [cond="[]",
		lineno=None];
	"295:BS" -> "Leaf_265:AL"	 [cond="[]",
		lineno=None];
	"630:NS" -> "Leaf_626:AL"	 [cond="[]",
		lineno=None];
	"637:NS" -> "Leaf_635:AL"	 [cond="[]",
		lineno=None];
	"550:AL" -> "551:IF"	 [cond="[]",
		lineno=None];
	"635:AL" -> "636:IF"	 [cond="[]",
		lineno=None];
	"317:IF" -> "319:IF"	 [cond="['Fifo_eop', 'IPLengthCounter']",
		label="!((Fifo_eop && (IPLengthCounter >= 59)))",
		lineno=317];
	"317:IF" -> "318:BS"	 [cond="['Fifo_eop', 'IPLengthCounter']",
		label="(Fifo_eop && (IPLengthCounter >= 59))",
		lineno=317];
	"510:BS" -> "Leaf_468:AL"	 [cond="[]",
		lineno=None];
	"531:IF" -> "532:NS"	 [cond="['Current_state', 'StateData', 'Current_state', 'StateSendPauseFrame', 'Current_state', 'StatePAD', 'Current_state', 'StateFCS']",
		label="((Current_state == StateData) || (Current_state == StateSendPauseFrame) || (Current_state == StatePAD) || (Current_state == StateFCS))",
		lineno=531];
	"592:NS" -> "Leaf_586:AL"	 [cond="[]",
		lineno=None];
}
