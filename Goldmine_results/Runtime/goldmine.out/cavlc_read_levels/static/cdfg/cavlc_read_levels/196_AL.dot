strict digraph "" {
	node [label="\N"];
	"206:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f418bac4850>",
		fillcolor=springgreen,
		label="206:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"207:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f418bae20d0>",
		fillcolor=firebrick,
		label="207:NS
suffixLength <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f418bae20d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"206:IF" -> "207:NS"	 [cond="['suffixLength']",
		label="(suffixLength == 0)",
		lineno=206];
	"208:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f418bac4810>",
		fillcolor=springgreen,
		label="208:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"206:IF" -> "208:IF"	 [cond="['suffixLength']",
		label="!((suffixLength == 0))",
		lineno=206];
	"Leaf_196:AL"	 [def_var="['suffixLength']",
		label="Leaf_196:AL"];
	"207:NS" -> "Leaf_196:AL"	 [cond="[]",
		lineno=None];
	"199:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f418bae2390>",
		fillcolor=turquoise,
		label="199:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"200:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f418bae23d0>",
		fillcolor=springgreen,
		label="200:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"199:BL" -> "200:IF"	 [cond="[]",
		lineno=None];
	"209:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f418bac4910>",
		fillcolor=firebrick,
		label="209:NS
suffixLength <= suffixLength + 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f418bac4910>]",
		style=filled,
		typ=NonblockingSubstitution];
	"209:NS" -> "Leaf_196:AL"	 [cond="[]",
		lineno=None];
	"201:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f418bae29d0>",
		fillcolor=firebrick,
		label="201:NS
suffixLength <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f418bae29d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"200:IF" -> "201:NS"	 [cond="['TotalCoeff', 'TrailingOnes', 'first_level']",
		label="((TotalCoeff > 10) && (TrailingOnes < 3) && first_level)",
		lineno=200];
	"202:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f418bae2410>",
		fillcolor=springgreen,
		label="202:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"200:IF" -> "202:IF"	 [cond="['TotalCoeff', 'TrailingOnes', 'first_level']",
		label="!(((TotalCoeff > 10) && (TrailingOnes < 3) && first_level))",
		lineno=200];
	"199:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f418bae2f50>",
		fillcolor=springgreen,
		label="199:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"199:IF" -> "199:BL"	 [cond="['prefix_sel', 'ena']",
		label="(prefix_sel && ena)",
		lineno=199];
	"208:IF" -> "209:NS"	 [cond="['level_abs', 'suffixLength', 'suffixLength']",
		label="((level_abs > (2'd3 << suffixLength - 1'b1)) && (suffixLength < 6))",
		lineno=208];
	"201:NS" -> "Leaf_196:AL"	 [cond="[]",
		lineno=None];
	"204:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f418bae2450>",
		fillcolor=springgreen,
		label="204:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"204:IF" -> "206:IF"	 [cond="['suffixLength', 'level_abs']",
		label="!(((suffixLength == 0) && (level_abs > 2'd3)))",
		lineno=204];
	"205:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f418bae2490>",
		fillcolor=firebrick,
		label="205:NS
suffixLength <= 2;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f418bae2490>]",
		style=filled,
		typ=NonblockingSubstitution];
	"204:IF" -> "205:NS"	 [cond="['suffixLength', 'level_abs']",
		label="((suffixLength == 0) && (level_abs > 2'd3))",
		lineno=204];
	"202:IF" -> "204:IF"	 [cond="['first_level']",
		label="!(first_level)",
		lineno=202];
	"203:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f418bae2810>",
		fillcolor=firebrick,
		label="203:NS
suffixLength <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f418bae2810>]",
		style=filled,
		typ=NonblockingSubstitution];
	"202:IF" -> "203:NS"	 [cond="['first_level']",
		label=first_level,
		lineno=202];
	"198:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f418bae2dd0>",
		fillcolor=firebrick,
		label="198:NS
suffixLength <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f418bae2dd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"198:NS" -> "Leaf_196:AL"	 [cond="[]",
		lineno=None];
	"203:NS" -> "Leaf_196:AL"	 [cond="[]",
		lineno=None];
	"205:NS" -> "Leaf_196:AL"	 [cond="[]",
		lineno=None];
	"197:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f418bae7090>",
		fillcolor=springgreen,
		label="197:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"197:IF" -> "199:IF"	 [cond="['rst_n']",
		label="!((!rst_n))",
		lineno=197];
	"197:IF" -> "198:NS"	 [cond="['rst_n']",
		label="(!rst_n)",
		lineno=197];
	"196:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f418bae7150>",
		clk_sens=True,
		fillcolor=gold,
		label="196:AL",
		sens="['clk', 'rst_n']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst_n', 'prefix_sel', 'level_abs', 'ena', 'suffixLength', 'first_level', 'TotalCoeff', 'TrailingOnes']"];
	"196:AL" -> "197:IF"	 [cond="[]",
		lineno=None];
}
