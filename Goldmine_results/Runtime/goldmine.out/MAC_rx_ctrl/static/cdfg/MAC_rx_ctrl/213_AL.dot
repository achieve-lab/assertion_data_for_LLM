strict digraph "" {
	node [label="\N"];
	"260:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb47408c90>",
		fillcolor=cadetblue,
		label="260:BS
Next_state = State_IFG;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb47408c90>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_213:AL"	 [def_var="['Next_state']",
		label="Leaf_213:AL"];
	"260:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"240:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb47426290>",
		fillcolor=cadetblue,
		label="240:BS
Next_state = State_checkCRC;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb47426290>]",
		style=filled,
		typ=BlockingSubstitution];
	"240:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"246:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb4740f3d0>",
		fillcolor=cadetblue,
		label="246:BS
Next_state = State_drop;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb4740f3d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"246:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"255:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb4740f510>",
		fillcolor=springgreen,
		label="255:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"258:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb4740f590>",
		fillcolor=cadetblue,
		label="258:BS
Next_state = Current_state;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb4740f590>]",
		style=filled,
		typ=BlockingSubstitution];
	"255:IF" -> "258:BS"	 [cond="['Crs_dv']",
		label="!((!Crs_dv))",
		lineno=255];
	"256:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb4740f750>",
		fillcolor=cadetblue,
		label="256:BS
Next_state = State_ErrEnd;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb4740f750>]",
		style=filled,
		typ=BlockingSubstitution];
	"255:IF" -> "256:BS"	 [cond="['Crs_dv']",
		label="(!Crs_dv)",
		lineno=255];
	"250:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb4740f950>",
		fillcolor=springgreen,
		label="250:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"253:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb4740f990>",
		fillcolor=cadetblue,
		label="253:BS
Next_state = State_OkEnd;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb4740f990>]",
		style=filled,
		typ=BlockingSubstitution];
	"250:IF" -> "253:BS"	 [cond="['CRC_err']",
		label="!(CRC_err)",
		lineno=250];
	"251:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb4740fad0>",
		fillcolor=cadetblue,
		label="251:BS
Next_state = State_CRCErrEnd;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb4740fad0>]",
		style=filled,
		typ=BlockingSubstitution];
	"250:IF" -> "251:BS"	 [cond="['CRC_err']",
		label=CRC_err,
		lineno=250];
	"261:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbb4740fc90>",
		fillcolor=lightcyan,
		label="261:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"262:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb4740fd50>",
		fillcolor=cadetblue,
		label="262:BS
Next_state = State_IFG;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb4740fd50>]",
		style=filled,
		typ=BlockingSubstitution];
	"261:CA" -> "262:BS"	 [cond="[]",
		lineno=None];
	"259:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbb4740fe90>",
		fillcolor=lightcyan,
		label="259:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"259:CA" -> "260:BS"	 [cond="[]",
		lineno=None];
	"237:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb4741d450>",
		fillcolor=cadetblue,
		label="237:BS
Next_state = State_data;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb4741d450>]",
		style=filled,
		typ=BlockingSubstitution];
	"237:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"227:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb4740ff10>",
		fillcolor=springgreen,
		label="227:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"228:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb4740f110>",
		fillcolor=cadetblue,
		label="228:BS
Next_state = Current_state;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb4740f110>]",
		style=filled,
		typ=BlockingSubstitution];
	"227:IF" -> "228:BS"	 [cond="['RxD']",
		label="(RxD == 8'h55)",
		lineno=227];
	"230:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb4740f290>",
		fillcolor=cadetblue,
		label="230:BS
Next_state = State_drop;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb4740f290>]",
		style=filled,
		typ=BlockingSubstitution];
	"227:IF" -> "230:BS"	 [cond="['RxD']",
		label="!((RxD == 8'h55))",
		lineno=227];
	"249:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbb47426610>",
		fillcolor=lightcyan,
		label="249:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"249:CA" -> "250:IF"	 [cond="[]",
		lineno=None];
	"267:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb47413190>",
		fillcolor=springgreen,
		label="267:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"270:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb474131d0>",
		fillcolor=cadetblue,
		label="270:BS
Next_state = Current_state;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb474131d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"267:IF" -> "270:BS"	 [cond="['Crs_dv']",
		label="!((!Crs_dv))",
		lineno=267];
	"268:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb47413350>",
		fillcolor=cadetblue,
		label="268:BS
Next_state = State_IFG;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb47413350>]",
		style=filled,
		typ=BlockingSubstitution];
	"267:IF" -> "268:BS"	 [cond="['Crs_dv']",
		label="(!Crs_dv)",
		lineno=267];
	"219:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb47413510>",
		fillcolor=cadetblue,
		label="219:BS
Next_state = Current_state;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb47413510>]",
		style=filled,
		typ=BlockingSubstitution];
	"219:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"272:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb47413690>",
		fillcolor=cadetblue,
		label="272:BS
Next_state = State_FFFullDrop;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb47413690>]",
		style=filled,
		typ=BlockingSubstitution];
	"272:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"213:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbb47413e10>",
		clk_sens=False,
		fillcolor=gold,
		label="213:AL",
		sens="['Current_state']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Fifo_full', 'RX_IFG_SET', 'Current_state', 'RxErr', 'Too_short', 'MAC_rx_add_chk_err', 'CRC_err', 'broadcast_drop', 'IFG_counter', '\
Too_long', 'RxD', 'Crs_dv']"];
	"214:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fbb47413ed0>",
		fillcolor=linen,
		label="214:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"213:AL" -> "214:CS"	 [cond="[]",
		lineno=None];
	"277:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb47426bd0>",
		fillcolor=cadetblue,
		label="277:BS
Next_state = Current_state;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb47426bd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"277:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"262:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"224:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb47413050>",
		fillcolor=cadetblue,
		label="224:BS
Next_state = State_drop;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb47413050>]",
		style=filled,
		typ=BlockingSubstitution];
	"224:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"221:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb47413850>",
		fillcolor=springgreen,
		label="221:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"222:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb47413b50>",
		fillcolor=cadetblue,
		label="222:BS
Next_state = State_ErrEnd;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb47413b50>]",
		style=filled,
		typ=BlockingSubstitution];
	"221:IF" -> "222:BS"	 [cond="['Crs_dv']",
		label="(!Crs_dv)",
		lineno=221];
	"223:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb47413890>",
		fillcolor=springgreen,
		label="223:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"221:IF" -> "223:IF"	 [cond="['Crs_dv']",
		label="!((!Crs_dv))",
		lineno=221];
	"275:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb47426d90>",
		fillcolor=cadetblue,
		label="275:BS
Next_state = State_idle;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb47426d90>]",
		style=filled,
		typ=BlockingSubstitution];
	"275:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"271:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbb47426a10>",
		fillcolor=lightcyan,
		label="271:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"271:CA" -> "272:BS"	 [cond="[]",
		lineno=None];
	"231:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbb4741d350>",
		fillcolor=lightcyan,
		label="231:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"232:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb4741d410>",
		fillcolor=springgreen,
		label="232:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"231:CA" -> "232:IF"	 [cond="[]",
		lineno=None];
	"280:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb4742f090>",
		fillcolor=cadetblue,
		label="280:BS
Next_state = State_idle;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb4742f090>]",
		style=filled,
		typ=BlockingSubstitution];
	"280:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"216:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb4741d090>",
		fillcolor=springgreen,
		label="216:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"216:IF" -> "219:BS"	 [cond="['Crs_dv', 'RxD']",
		label="!((Crs_dv && (RxD == 8'h55)))",
		lineno=216];
	"217:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb4741d050>",
		fillcolor=cadetblue,
		label="217:BS
Next_state = State_preamble;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb4741d050>]",
		style=filled,
		typ=BlockingSubstitution];
	"216:IF" -> "217:BS"	 [cond="['Crs_dv', 'RxD']",
		label="(Crs_dv && (RxD == 8'h55))",
		lineno=216];
	"274:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb47426b90>",
		fillcolor=springgreen,
		label="274:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"274:IF" -> "277:BS"	 [cond="['IFG_counter', 'RX_IFG_SET']",
		label="!((IFG_counter == RX_IFG_SET - 4))",
		lineno=274];
	"274:IF" -> "275:BS"	 [cond="['IFG_counter', 'RX_IFG_SET']",
		label="(IFG_counter == RX_IFG_SET - 4)",
		lineno=274];
	"265:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb47426810>",
		fillcolor=cadetblue,
		label="265:BS
Next_state = State_IFG;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb47426810>]",
		style=filled,
		typ=BlockingSubstitution];
	"265:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"248:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb4741da50>",
		fillcolor=cadetblue,
		label="248:BS
Next_state = State_data;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb4741da50>]",
		style=filled,
		typ=BlockingSubstitution];
	"248:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"264:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbb47426750>",
		fillcolor=lightcyan,
		label="264:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"264:CA" -> "265:BS"	 [cond="[]",
		lineno=None];
	"258:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"217:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"256:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"215:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbb47413f90>",
		fillcolor=lightcyan,
		label="215:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"215:CA" -> "216:IF"	 [cond="[]",
		lineno=None];
	"266:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbb47426950>",
		fillcolor=lightcyan,
		label="266:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"266:CA" -> "267:IF"	 [cond="[]",
		lineno=None];
	"241:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb4741d9d0>",
		fillcolor=springgreen,
		label="241:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"243:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb4741da10>",
		fillcolor=springgreen,
		label="243:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"241:IF" -> "243:IF"	 [cond="['Crs_dv', 'Too_short', 'Too_long']",
		label="!((!Crs_dv && (Too_short || Too_long)))",
		lineno=241];
	"242:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb4741df50>",
		fillcolor=cadetblue,
		label="242:BS
Next_state = State_ErrEnd;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb4741df50>]",
		style=filled,
		typ=BlockingSubstitution];
	"241:IF" -> "242:BS"	 [cond="['Crs_dv', 'Too_short', 'Too_long']",
		label="(!Crs_dv && (Too_short || Too_long))",
		lineno=241];
	"254:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbb474266d0>",
		fillcolor=lightcyan,
		label="254:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"254:CA" -> "255:IF"	 [cond="[]",
		lineno=None];
	"233:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb4741d710>",
		fillcolor=cadetblue,
		label="233:BS
Next_state = State_ErrEnd;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb4741d710>]",
		style=filled,
		typ=BlockingSubstitution];
	"233:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"225:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb474138d0>",
		fillcolor=springgreen,
		label="225:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"225:IF" -> "227:IF"	 [cond="['RxD']",
		label="!((RxD == 8'hd5))",
		lineno=225];
	"226:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb47413910>",
		fillcolor=cadetblue,
		label="226:BS
Next_state = State_SFD;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb47413910>]",
		style=filled,
		typ=BlockingSubstitution];
	"225:IF" -> "226:BS"	 [cond="['RxD']",
		label="(RxD == 8'hd5)",
		lineno=225];
	"226:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"222:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"244:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb4741ddd0>",
		fillcolor=cadetblue,
		label="244:BS
Next_state = State_FFFullErrEnd;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb4741ddd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"243:IF" -> "244:BS"	 [cond="['Fifo_full']",
		label=Fifo_full,
		lineno=243];
	"245:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb4741da90>",
		fillcolor=springgreen,
		label="245:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"243:IF" -> "245:IF"	 [cond="['Fifo_full']",
		label="!(Fifo_full)",
		lineno=243];
	"234:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb4741d3d0>",
		fillcolor=springgreen,
		label="234:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"234:IF" -> "237:BS"	 [cond="['RxErr']",
		label="!(RxErr)",
		lineno=234];
	"235:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb4741d590>",
		fillcolor=cadetblue,
		label="235:BS
Next_state = State_drop;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb4741d590>]",
		style=filled,
		typ=BlockingSubstitution];
	"234:IF" -> "235:BS"	 [cond="['RxErr']",
		label=RxErr,
		lineno=234];
	"279:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbb4742f050>",
		fillcolor=lightcyan,
		label="279:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"279:CA" -> "280:BS"	 [cond="[]",
		lineno=None];
	"253:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"220:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbb47408190>",
		fillcolor=lightcyan,
		label="220:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"220:CA" -> "221:IF"	 [cond="[]",
		lineno=None];
	"242:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"273:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbb47426b10>",
		fillcolor=lightcyan,
		label="273:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"273:CA" -> "274:IF"	 [cond="[]",
		lineno=None];
	"239:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb4741d990>",
		fillcolor=springgreen,
		label="239:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"239:IF" -> "240:BS"	 [cond="['Crs_dv', 'Too_short', 'Too_long']",
		label="(!Crs_dv && !Too_short && !Too_long)",
		lineno=239];
	"239:IF" -> "241:IF"	 [cond="['Crs_dv', 'Too_short', 'Too_long']",
		label="!((!Crs_dv && !Too_short && !Too_long))",
		lineno=239];
	"228:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"251:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"232:IF" -> "233:BS"	 [cond="['Crs_dv']",
		label="(!Crs_dv)",
		lineno=232];
	"232:IF" -> "234:IF"	 [cond="['Crs_dv']",
		label="!((!Crs_dv))",
		lineno=232];
	"244:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"235:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"214:CS" -> "261:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=214];
	"214:CS" -> "259:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=214];
	"214:CS" -> "249:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=214];
	"214:CS" -> "271:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=214];
	"214:CS" -> "231:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=214];
	"214:CS" -> "264:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=214];
	"214:CS" -> "215:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=214];
	"214:CS" -> "266:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=214];
	"214:CS" -> "254:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=214];
	"214:CS" -> "279:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=214];
	"214:CS" -> "220:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=214];
	"214:CS" -> "273:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=214];
	"238:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbb4741d910>",
		fillcolor=lightcyan,
		label="238:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"214:CS" -> "238:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=214];
	"230:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"270:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"268:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"245:IF" -> "246:BS"	 [cond="['RxErr', 'MAC_rx_add_chk_err', 'Too_long', 'broadcast_drop']",
		label="(RxErr || MAC_rx_add_chk_err || Too_long || broadcast_drop)",
		lineno=245];
	"245:IF" -> "248:BS"	 [cond="['RxErr', 'MAC_rx_add_chk_err', 'Too_long', 'broadcast_drop']",
		label="!((RxErr || MAC_rx_add_chk_err || Too_long || broadcast_drop))",
		lineno=245];
	"238:CA" -> "239:IF"	 [cond="[]",
		lineno=None];
	"223:IF" -> "224:BS"	 [cond="['RxErr']",
		label=RxErr,
		lineno=223];
	"223:IF" -> "225:IF"	 [cond="['RxErr']",
		label="!(RxErr)",
		lineno=223];
}
