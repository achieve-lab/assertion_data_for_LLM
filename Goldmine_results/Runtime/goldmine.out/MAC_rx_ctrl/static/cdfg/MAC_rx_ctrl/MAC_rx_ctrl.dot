strict digraph "compose( ,  )" {
	node [label="\N"];
	"246:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f0e810>",
		fillcolor=cadetblue,
		label="246:BS
Next_state = State_drop;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f0e810>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_213:AL"	 [def_var="['Next_state']",
		label="Leaf_213:AL"];
	"246:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"Leaf_207:AL"	 [def_var="['Current_state']",
		label="Leaf_207:AL"];
	"381:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbb2621f950>",
		clk_sens=True,
		fillcolor=gold,
		label="381:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'State_OkEnd', 'Current_state', 'State_ErrEnd', 'State_CRCErrEnd', 'State_FFFullErrEnd']"];
	"Leaf_207:AL" -> "381:AL";
	"357:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbb25f2ba50>",
		clk_sens=True,
		fillcolor=gold,
		label="357:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'State_OkEnd', 'Current_state', 'State_ErrEnd', 'State_CRCErrEnd', 'State_FFFullErrEnd']"];
	"Leaf_207:AL" -> "357:AL";
	"284:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbb25f04610>",
		clk_sens=True,
		fillcolor=gold,
		label="284:AL",
		sens="['Reset', 'Clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'IFG_counter', 'Current_state', 'State_IFG']"];
	"Leaf_207:AL" -> "284:AL";
	"310:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbb25f29e90>",
		clk_sens=False,
		fillcolor=gold,
		label="310:AL",
		sens="['Current_state']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['State_FFFullErrEnd', 'Current_state', 'State_ErrEnd', 'State_CRCErrEnd']"];
	"Leaf_207:AL" -> "310:AL";
	"297:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbb25f04e50>",
		clk_sens=False,
		fillcolor=gold,
		label="297:AL",
		sens="['Current_state']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['State_data', 'Current_state']"];
	"Leaf_207:AL" -> "297:AL";
	"213:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbb2633e0d0>",
		clk_sens=False,
		fillcolor=gold,
		label="213:AL",
		sens="['Current_state']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Fifo_full', 'RX_IFG_SET', 'Current_state', 'RxErr', 'Too_short', 'MAC_rx_add_chk_err', 'CRC_err', 'broadcast_drop', 'IFG_counter', '\
Too_long', 'RxD', 'Crs_dv']"];
	"Leaf_207:AL" -> "213:AL";
	"320:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbb25f2c7d0>",
		clk_sens=False,
		fillcolor=gold,
		label="320:AL",
		sens="['Current_state']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['State_data', 'Current_state']"];
	"Leaf_207:AL" -> "320:AL";
	"507:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbb25fa4e90>",
		clk_sens=True,
		fillcolor=gold,
		label="507:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Pause_syn', 'State_OkEnd', 'Reset', 'Current_state', 'Pause_current']"];
	"Leaf_207:AL" -> "507:AL";
	"372:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbb26213c10>",
		clk_sens=True,
		fillcolor=gold,
		label="372:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Rx_apply_rmon_tmp_pl1', 'State_OkEnd', 'Current_state', 'State_ErrEnd', 'State_CRCErrEnd', 'State_FFFullErrEnd']"];
	"Leaf_207:AL" -> "372:AL";
	"335:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbb25f2a310>",
		clk_sens=True,
		fillcolor=gold,
		label="335:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'State_data', 'Current_state', 'State_SFD', 'Frame_length_counter']"];
	"Leaf_207:AL" -> "335:AL";
	"403:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbb2622e3d0>",
		clk_sens=True,
		fillcolor=gold,
		label="403:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Current_state', 'State_data', 'MRxD', 'State_IFG', 'State_SFD', 'Next_state']"];
	"Leaf_207:AL" -> "403:AL";
	"515:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbb25f787d0>",
		clk_sens=True,
		fillcolor=gold,
		label="515:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'State_OkEnd', 'Pause_syn', 'Current_state', 'pause_quanta_val_tmp', 'Pause_current']"];
	"Leaf_207:AL" -> "515:AL";
	"431:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbb26217c50>",
		clk_sens=False,
		fillcolor=gold,
		label="431:AL",
		sens="['Pause_current']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['RxD_dl1', 'State_IFG', 'Current_state', 'Pause_current', 'Frame_length_counter', 'State_SFD']"];
	"Leaf_207:AL" -> "431:AL";
	"395:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbb262252d0>",
		clk_sens=True,
		fillcolor=gold,
		label="395:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['pause_frame_ptr', 'Reset', 'State_OkEnd', 'Current_state', 'State_data', 'MRxD', 'State_SFD', 'Next_state']"];
	"Leaf_207:AL" -> "395:AL";
	"326:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbb25f2cd10>",
		clk_sens=False,
		fillcolor=gold,
		label="326:AL",
		sens="['Current_state']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Current_state', 'State_SFD']"];
	"Leaf_207:AL" -> "326:AL";
	"303:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbb25f29450>",
		clk_sens=False,
		fillcolor=gold,
		label="303:AL",
		sens="['Current_state']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['State_OkEnd', 'State_FFFullErrEnd', 'Current_state', 'State_ErrEnd', 'State_CRCErrEnd']"];
	"Leaf_207:AL" -> "303:AL";
	"525:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb25f9c350>",
		fillcolor=firebrick,
		label="525:NS
pause_frame_ptr <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb25f9c350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_523:AL"	 [def_var="['pause_frame_ptr']",
		label="Leaf_523:AL"];
	"525:NS" -> "Leaf_523:AL"	 [cond="[]",
		lineno=None];
	"Leaf_349:AL"	 [def_var="['Too_long']",
		label="Leaf_349:AL"];
	"Leaf_349:AL" -> "213:AL";
	"409:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb26217090>",
		fillcolor=firebrick,
		label="409:NS
broadcast_ptr <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb26217090>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_403:AL"	 [def_var="['broadcast_ptr']",
		label="Leaf_403:AL"];
	"409:NS" -> "Leaf_403:AL"	 [cond="[]",
		lineno=None];
	"191:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fbb263474d0>",
		fillcolor=turquoise,
		label="191:BL
Crs_dv <= MCrs_dv;
RxD <= MRxD;
RxErr <= MRxErr;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb263473d0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7fbb26347510>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb26347650>]",
		style=filled,
		typ=Block];
	"Leaf_183:AL"	 [def_var="['RxErr', 'Crs_dv', 'RxD']",
		label="Leaf_183:AL"];
	"191:BL" -> "Leaf_183:AL"	 [cond="[]",
		lineno=None];
	"491:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbb25faca50>",
		fillcolor=lightcyan,
		label="491:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"492:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25face90>",
		fillcolor=cadetblue,
		label="492:BS
Pause_next = Pause_idle;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25face90>]",
		style=filled,
		typ=BlockingSubstitution];
	"491:CA" -> "492:BS"	 [cond="[]",
		lineno=None];
	"464:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb25fa7390>",
		fillcolor=springgreen,
		label="464:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"467:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25fa7550>",
		fillcolor=cadetblue,
		label="467:BS
Pause_next = Pause_idle;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25fa7550>]",
		style=filled,
		typ=BlockingSubstitution];
	"464:IF" -> "467:BS"	 [cond="['RxD_dl1']",
		label="!((RxD_dl1 == 8'h88))",
		lineno=464];
	"465:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25fa73d0>",
		fillcolor=cadetblue,
		label="465:BS
Pause_next = Pause_current;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25fa73d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"464:IF" -> "465:BS"	 [cond="['RxD_dl1']",
		label="(RxD_dl1 == 8'h88)",
		lineno=464];
	"265:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f01610>",
		fillcolor=cadetblue,
		label="265:BS
Next_state = State_IFG;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f01610>]",
		style=filled,
		typ=BlockingSubstitution];
	"265:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"225:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb2633ef90>",
		fillcolor=springgreen,
		label="225:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"226:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb2633efd0>",
		fillcolor=cadetblue,
		label="226:BS
Next_state = State_SFD;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb2633efd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"225:IF" -> "226:BS"	 [cond="['RxD']",
		label="(RxD == 8'hd5)",
		lineno=225];
	"227:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb25f0d310>",
		fillcolor=springgreen,
		label="227:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"225:IF" -> "227:IF"	 [cond="['RxD']",
		label="!((RxD == 8'hd5))",
		lineno=225];
	"386:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb26225250>",
		fillcolor=springgreen,
		label="386:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"388:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb26225610>",
		fillcolor=springgreen,
		label="388:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"386:IF" -> "388:IF"	 [cond="['Current_state', 'State_FFFullErrEnd']",
		label="!((Current_state == State_FFFullErrEnd))",
		lineno=386];
	"387:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb26225290>",
		fillcolor=firebrick,
		label="387:NS
Rx_pkt_err_type_rmon <= 3'b010;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb26225290>]",
		style=filled,
		typ=NonblockingSubstitution];
	"386:IF" -> "387:NS"	 [cond="['Current_state', 'State_FFFullErrEnd']",
		label="(Current_state == State_FFFullErrEnd)",
		lineno=386];
	"526:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb25f9c790>",
		fillcolor=springgreen,
		label="526:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"529:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb25f9c890>",
		fillcolor=firebrick,
		label="529:NS
pause_frame_ptr <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb25f9c890>]",
		style=filled,
		typ=NonblockingSubstitution];
	"526:IF" -> "529:NS"	 [cond="['Pause_current', 'Pause_syn']",
		label="!((Pause_current == Pause_syn))",
		lineno=526];
	"527:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb25f9c6d0>",
		fillcolor=firebrick,
		label="527:NS
pause_frame_ptr <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb25f9c6d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"526:IF" -> "527:NS"	 [cond="['Pause_current', 'Pause_syn']",
		label="(Pause_current == Pause_syn)",
		lineno=526];
	"495:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbb25fa40d0>",
		clk_sens=True,
		fillcolor=gold,
		label="495:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'RxD_dl1', 'Pause_quanta_hi', 'Pause_current']"];
	"496:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb25fa4210>",
		fillcolor=springgreen,
		label="496:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"495:AL" -> "496:IF"	 [cond="[]",
		lineno=None];
	"237:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f0d910>",
		fillcolor=cadetblue,
		label="237:BS
Next_state = State_data;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f0d910>]",
		style=filled,
		typ=BlockingSubstitution];
	"237:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"445:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb26227d10>",
		fillcolor=cadetblue,
		label="445:BS
Pause_next = Pause_current;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb26227d10>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_431:AL"	 [def_var="['Pause_next']",
		label="Leaf_431:AL"];
	"445:BS" -> "Leaf_431:AL"	 [cond="[]",
		lineno=None];
	"377:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb2621f5d0>",
		fillcolor=firebrick,
		label="377:NS
Rx_apply_rmon <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb2621f5d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_372:AL"	 [def_var="['Rx_apply_rmon']",
		label="Leaf_372:AL"];
	"377:NS" -> "Leaf_372:AL"	 [cond="[]",
		lineno=None];
	"401:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb2622e510>",
		fillcolor=firebrick,
		label="401:NS
Rx_pkt_type_rmon <= { 1'b0, MRxD[7:6] };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb2622e510>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_395:AL"	 [def_var="['Rx_pkt_type_rmon']",
		label="Leaf_395:AL"];
	"401:NS" -> "Leaf_395:AL"	 [cond="[]",
		lineno=None];
	"438:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbb26227390>",
		fillcolor=lightcyan,
		label="438:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"439:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fbb25fa7e10>",
		fillcolor=linen,
		label="439:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"438:CA" -> "439:CS"	 [cond="[]",
		lineno=None];
	"498:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb25fa4510>",
		fillcolor=springgreen,
		label="498:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"496:IF" -> "498:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=496];
	"497:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb25fa4250>",
		fillcolor=firebrick,
		label="497:NS
pause_quanta_h <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb25fa4250>]",
		style=filled,
		typ=NonblockingSubstitution];
	"496:IF" -> "497:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=496];
	"259:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbb25f0efd0>",
		fillcolor=lightcyan,
		label="259:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"260:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f01190>",
		fillcolor=cadetblue,
		label="260:BS
Next_state = State_IFG;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f01190>]",
		style=filled,
		typ=BlockingSubstitution];
	"259:CA" -> "260:BS"	 [cond="[]",
		lineno=None];
	"Leaf_366:AL"	 [def_var="['Rx_apply_rmon_tmp_pl1']",
		label="Leaf_366:AL"];
	"Leaf_366:AL" -> "372:AL";
	"416:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbb26217190>",
		clk_sens=False,
		fillcolor=gold,
		label="416:AL",
		sens="['Frame_length_counter', 'Fifo_data_en']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Fifo_data_en', 'Frame_length_counter']"];
	"417:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb262174d0>",
		fillcolor=springgreen,
		label="417:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"416:AL" -> "417:IF"	 [cond="[]",
		lineno=None];
	"440:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbb26227550>",
		fillcolor=lightcyan,
		label="440:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"440:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb26227810>",
		fillcolor=springgreen,
		label="440:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"440:CA" -> "440:IF"	 [cond="[]",
		lineno=None];
	"280:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f04410>",
		fillcolor=cadetblue,
		label="280:BS
Next_state = State_idle;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f04410>]",
		style=filled,
		typ=BlockingSubstitution];
	"280:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"248:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f0e990>",
		fillcolor=cadetblue,
		label="248:BS
Next_state = State_data;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f0e990>]",
		style=filled,
		typ=BlockingSubstitution];
	"248:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"447:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb26227e90>",
		fillcolor=cadetblue,
		label="447:BS
Pause_next = Pause_idle;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb26227e90>]",
		style=filled,
		typ=BlockingSubstitution];
	"447:BS" -> "Leaf_431:AL"	 [cond="[]",
		lineno=None];
	"183:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbb25f67dd0>",
		clk_sens=True,
		fillcolor=gold,
		label="183:AL",
		sens="['Reset', 'Clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'MCrs_dv', 'MRxErr', 'MRxD']"];
	"184:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb263471d0>",
		fillcolor=springgreen,
		label="184:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"183:AL" -> "184:IF"	 [cond="[]",
		lineno=None];
	"509:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb25f78050>",
		fillcolor=firebrick,
		label="509:NS
pause_quanta_val_tmp <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb25f78050>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_507:AL"	 [def_var="['pause_quanta_val_tmp']",
		label="Leaf_507:AL"];
	"509:NS" -> "Leaf_507:AL"	 [cond="[]",
		lineno=None];
	"396:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb26225990>",
		fillcolor=springgreen,
		label="396:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"398:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb26225e50>",
		fillcolor=springgreen,
		label="398:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"396:IF" -> "398:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=396];
	"397:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb26225a50>",
		fillcolor=firebrick,
		label="397:NS
Rx_pkt_type_rmon <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb26225a50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"396:IF" -> "397:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=396];
	"382:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb2621fa90>",
		fillcolor=springgreen,
		label="382:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"381:AL" -> "382:IF"	 [cond="[]",
		lineno=None];
	"391:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb262259d0>",
		fillcolor=firebrick,
		label="391:NS
Rx_pkt_err_type_rmon <= 3'b100;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb262259d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_381:AL"	 [def_var="['Rx_pkt_err_type_rmon']",
		label="Leaf_381:AL"];
	"391:NS" -> "Leaf_381:AL"	 [cond="[]",
		lineno=None];
	"373:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb26213d50>",
		fillcolor=springgreen,
		label="373:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"375:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb2621f590>",
		fillcolor=springgreen,
		label="375:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"373:IF" -> "375:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=373];
	"374:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb26213d90>",
		fillcolor=firebrick,
		label="374:NS
Rx_apply_rmon <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb26213d90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"373:IF" -> "374:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=373];
	"358:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb25f2bb90>",
		fillcolor=springgreen,
		label="358:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"357:AL" -> "358:IF"	 [cond="[]",
		lineno=None];
	"223:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb2633ec90>",
		fillcolor=springgreen,
		label="223:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"223:IF" -> "225:IF"	 [cond="['RxErr']",
		label="!(RxErr)",
		lineno=223];
	"224:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb2633ecd0>",
		fillcolor=cadetblue,
		label="224:BS
Next_state = State_drop;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb2633ecd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"223:IF" -> "224:BS"	 [cond="['RxErr']",
		label=RxErr,
		lineno=223];
	"475:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25fa7e50>",
		fillcolor=cadetblue,
		label="475:BS
Pause_next = Pause_idle;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25fa7e50>]",
		style=filled,
		typ=BlockingSubstitution];
	"475:BS" -> "Leaf_431:AL"	 [cond="[]",
		lineno=None];
	"338:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb25f2a7d0>",
		fillcolor=springgreen,
		label="338:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"340:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb25f2aa90>",
		fillcolor=springgreen,
		label="340:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"338:IF" -> "340:IF"	 [cond="['Current_state', 'State_SFD']",
		label="!((Current_state == State_SFD))",
		lineno=338];
	"339:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb25f2a810>",
		fillcolor=firebrick,
		label="339:NS
Frame_length_counter <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb25f2a810>]",
		style=filled,
		typ=NonblockingSubstitution];
	"338:IF" -> "339:NS"	 [cond="['Current_state', 'State_SFD']",
		label="(Current_state == State_SFD)",
		lineno=338];
	"322:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f2ca10>",
		fillcolor=cadetblue,
		label="322:BS
CRC_en = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f2ca10>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_320:AL"	 [def_var="['CRC_en']",
		label="Leaf_320:AL"];
	"322:BS" -> "Leaf_320:AL"	 [cond="[]",
		lineno=None];
	"427:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb262179d0>",
		fillcolor=firebrick,
		label="427:NS
Pause_current <= Pause_idle;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb262179d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_425:AL"	 [def_var="['Pause_current']",
		label="Leaf_425:AL"];
	"427:NS" -> "Leaf_425:AL"	 [cond="[]",
		lineno=None];
	"486:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbb25fac910>",
		fillcolor=lightcyan,
		label="486:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"487:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb25facb90>",
		fillcolor=springgreen,
		label="487:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"486:CA" -> "487:IF"	 [cond="[]",
		lineno=None];
	"207:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbb26347c90>",
		clk_sens=True,
		fillcolor=gold,
		label="207:AL",
		sens="['Reset', 'Clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Next_state']"];
	"Leaf_213:AL" -> "207:AL";
	"Leaf_213:AL" -> "403:AL";
	"Leaf_213:AL" -> "395:AL";
	"426:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb26217a90>",
		fillcolor=springgreen,
		label="426:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"426:IF" -> "427:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=426];
	"429:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb26217b90>",
		fillcolor=firebrick,
		label="429:NS
Pause_current <= Pause_next;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb26217b90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"426:IF" -> "429:NS"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=426];
	"355:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fbb25f2b7d0>",
		def_var="['Rx_pkt_length_rmon']",
		fillcolor=deepskyblue,
		label="355:AS
Rx_pkt_length_rmon = Frame_length_counter - 1'b1;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Frame_length_counter']"];
	"308:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f29d10>",
		fillcolor=cadetblue,
		label="308:BS
Fifo_data_end = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f29d10>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_303:AL"	 [def_var="['Fifo_data_end']",
		label="Leaf_303:AL"];
	"308:BS" -> "Leaf_303:AL"	 [cond="[]",
		lineno=None];
	"285:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb25f04710>",
		fillcolor=springgreen,
		label="285:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"284:AL" -> "285:IF"	 [cond="[]",
		lineno=None];
	"274:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb25f04110>",
		fillcolor=springgreen,
		label="274:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"275:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f04150>",
		fillcolor=cadetblue,
		label="275:BS
Next_state = State_idle;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f04150>]",
		style=filled,
		typ=BlockingSubstitution];
	"274:IF" -> "275:BS"	 [cond="['IFG_counter', 'RX_IFG_SET']",
		label="(IFG_counter == RX_IFG_SET - 4)",
		lineno=274];
	"277:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f04310>",
		fillcolor=cadetblue,
		label="277:BS
Next_state = Current_state;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f04310>]",
		style=filled,
		typ=BlockingSubstitution];
	"274:IF" -> "277:BS"	 [cond="['IFG_counter', 'RX_IFG_SET']",
		label="!((IFG_counter == RX_IFG_SET - 4))",
		lineno=274];
	"429:NS" -> "Leaf_425:AL"	 [cond="[]",
		lineno=None];
	"485:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25fac810>",
		fillcolor=cadetblue,
		label="485:BS
Pause_next = Pause_syn;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25fac810>]",
		style=filled,
		typ=BlockingSubstitution];
	"485:BS" -> "Leaf_431:AL"	 [cond="[]",
		lineno=None];
	"490:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25facd90>",
		fillcolor=cadetblue,
		label="490:BS
Pause_next = Pause_current;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25facd90>]",
		style=filled,
		typ=BlockingSubstitution];
	"490:BS" -> "Leaf_431:AL"	 [cond="[]",
		lineno=None];
	"456:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbb25fab690>",
		fillcolor=lightcyan,
		label="456:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"456:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb25faba50>",
		fillcolor=springgreen,
		label="456:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"456:CA" -> "456:IF"	 [cond="[]",
		lineno=None];
	"311:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb25f2c550>",
		fillcolor=springgreen,
		label="311:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"310:AL" -> "311:IF"	 [cond="[]",
		lineno=None];
	"345:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f2af90>",
		fillcolor=cadetblue,
		label="345:BS
Too_short = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f2af90>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_343:AL"	 [def_var="['Too_short']",
		label="Leaf_343:AL"];
	"345:BS" -> "Leaf_343:AL"	 [cond="[]",
		lineno=None];
	"209:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb26347e10>",
		fillcolor=firebrick,
		label="209:NS
Current_state <= State_idle;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb26347e10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"209:NS" -> "Leaf_207:AL"	 [cond="[]",
		lineno=None];
	"360:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb262134d0>",
		fillcolor=springgreen,
		label="360:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"364:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb262135d0>",
		fillcolor=firebrick,
		label="364:NS
Rx_apply_rmon_tmp <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb262135d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"360:IF" -> "364:NS"	 [cond="['Current_state', 'State_OkEnd', 'Current_state', 'State_ErrEnd', 'Current_state', 'State_CRCErrEnd', 'Current_state', 'State_FFFullErrEnd']",
		label="!(((Current_state == State_OkEnd) || (Current_state == State_ErrEnd) || (Current_state == State_CRCErrEnd) || (Current_state == \
State_FFFullErrEnd)))",
		lineno=360];
	"362:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb26213410>",
		fillcolor=firebrick,
		label="362:NS
Rx_apply_rmon_tmp <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb26213410>]",
		style=filled,
		typ=NonblockingSubstitution];
	"360:IF" -> "362:NS"	 [cond="['Current_state', 'State_OkEnd', 'Current_state', 'State_ErrEnd', 'Current_state', 'State_CRCErrEnd', 'Current_state', 'State_FFFullErrEnd']",
		label="((Current_state == State_OkEnd) || (Current_state == State_ErrEnd) || (Current_state == State_CRCErrEnd) || (Current_state == State_\
FFFullErrEnd))",
		lineno=360];
	"250:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb25f0e890>",
		fillcolor=springgreen,
		label="250:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"253:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f0eb90>",
		fillcolor=cadetblue,
		label="253:BS
Next_state = State_OkEnd;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f0eb90>]",
		style=filled,
		typ=BlockingSubstitution];
	"250:IF" -> "253:BS"	 [cond="['CRC_err']",
		label="!(CRC_err)",
		lineno=250];
	"251:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f0e950>",
		fillcolor=cadetblue,
		label="251:BS
Next_state = State_CRCErrEnd;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f0e950>]",
		style=filled,
		typ=BlockingSubstitution];
	"250:IF" -> "251:BS"	 [cond="['CRC_err']",
		label=CRC_err,
		lineno=250];
	"449:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25fab190>",
		fillcolor=cadetblue,
		label="449:BS
Pause_next = Pause_current;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25fab190>]",
		style=filled,
		typ=BlockingSubstitution];
	"449:BS" -> "Leaf_431:AL"	 [cond="[]",
		lineno=None];
	"344:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb25f2af50>",
		fillcolor=springgreen,
		label="344:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"344:IF" -> "345:BS"	 [cond="['Frame_length_counter', 'RX_MIN_LENGTH']",
		label="(Frame_length_counter < RX_MIN_LENGTH)",
		lineno=344];
	"347:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f2b150>",
		fillcolor=cadetblue,
		label="347:BS
Too_short = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f2b150>]",
		style=filled,
		typ=BlockingSubstitution];
	"344:IF" -> "347:BS"	 [cond="['Frame_length_counter', 'RX_MIN_LENGTH']",
		label="!((Frame_length_counter < RX_MIN_LENGTH))",
		lineno=344];
	"Leaf_523:AL" -> "395:AL";
	"268:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f01990>",
		fillcolor=cadetblue,
		label="268:BS
Next_state = State_IFG;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f01990>]",
		style=filled,
		typ=BlockingSubstitution];
	"268:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"453:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25fab610>",
		fillcolor=cadetblue,
		label="453:BS
Pause_next = Pause_current;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25fab610>]",
		style=filled,
		typ=BlockingSubstitution];
	"453:BS" -> "Leaf_431:AL"	 [cond="[]",
		lineno=None];
	"298:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb25f291d0>",
		fillcolor=springgreen,
		label="298:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"297:AL" -> "298:IF"	 [cond="[]",
		lineno=None];
	"529:NS" -> "Leaf_523:AL"	 [cond="[]",
		lineno=None];
	"215:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbb2633e110>",
		fillcolor=lightcyan,
		label="215:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"216:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb2633e510>",
		fillcolor=springgreen,
		label="216:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"215:CA" -> "216:IF"	 [cond="[]",
		lineno=None];
	"473:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25fa7cd0>",
		fillcolor=cadetblue,
		label="473:BS
Pause_next = Pause_current;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25fa7cd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"473:BS" -> "Leaf_431:AL"	 [cond="[]",
		lineno=None];
	"226:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"287:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb25f04a50>",
		fillcolor=springgreen,
		label="287:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"285:IF" -> "287:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=285];
	"286:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb25f04750>",
		fillcolor=firebrick,
		label="286:NS
IFG_counter <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb25f04750>]",
		style=filled,
		typ=NonblockingSubstitution];
	"285:IF" -> "286:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=285];
	"199:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb26347950>",
		fillcolor=firebrick,
		label="199:NS
RxD_dl1 <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb26347950>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_197:AL"	 [def_var="['RxD_dl1']",
		label="Leaf_197:AL"];
	"199:NS" -> "Leaf_197:AL"	 [cond="[]",
		lineno=None];
	"249:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbb25f0df90>",
		fillcolor=lightcyan,
		label="249:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"249:CA" -> "250:IF"	 [cond="[]",
		lineno=None];
	"463:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25fa70d0>",
		fillcolor=cadetblue,
		label="463:BS
Pause_next = Pause_idle;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25fa70d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"463:BS" -> "Leaf_431:AL"	 [cond="[]",
		lineno=None];
	"437:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb262272d0>",
		fillcolor=cadetblue,
		label="437:BS
Pause_next = Pause_current;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb262272d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"437:BS" -> "Leaf_431:AL"	 [cond="[]",
		lineno=None];
	"448:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbb26227b50>",
		fillcolor=lightcyan,
		label="448:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"448:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb25fab150>",
		fillcolor=springgreen,
		label="448:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"448:CA" -> "448:IF"	 [cond="[]",
		lineno=None];
	"455:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25fab790>",
		fillcolor=cadetblue,
		label="455:BS
Pause_next = Pause_idle;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25fab790>]",
		style=filled,
		typ=BlockingSubstitution];
	"455:BS" -> "Leaf_431:AL"	 [cond="[]",
		lineno=None];
	"353:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f2b610>",
		fillcolor=cadetblue,
		label="353:BS
Too_long = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f2b610>]",
		style=filled,
		typ=BlockingSubstitution];
	"353:BS" -> "Leaf_349:AL"	 [cond="[]",
		lineno=None];
	"288:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb25f04a90>",
		fillcolor=firebrick,
		label="288:NS
IFG_counter <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb25f04a90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"287:IF" -> "288:NS"	 [cond="['Current_state', 'State_IFG']",
		label="(Current_state != State_IFG)",
		lineno=287];
	"290:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb25f04c90>",
		fillcolor=firebrick,
		label="290:NS
IFG_counter <= IFG_counter + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb25f04c90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"287:IF" -> "290:NS"	 [cond="['Current_state', 'State_IFG']",
		label="!((Current_state != State_IFG))",
		lineno=287];
	"214:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fbb25f01dd0>",
		fillcolor=linen,
		label="214:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"213:AL" -> "214:CS"	 [cond="[]",
		lineno=None];
	"Leaf_335:AL"	 [def_var="['Frame_length_counter']",
		label="Leaf_335:AL"];
	"Leaf_335:AL" -> "416:AL";
	"Leaf_335:AL" -> "355:AS";
	"Leaf_335:AL" -> "335:AL";
	"343:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbb25f2ad50>",
		clk_sens=False,
		fillcolor=gold,
		label="343:AL",
		sens="['Frame_length_counter', 'RX_MIN_LENGTH']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['RX_MIN_LENGTH', 'Frame_length_counter']"];
	"Leaf_335:AL" -> "343:AL";
	"Leaf_335:AL" -> "431:AL";
	"349:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbb25f2b210>",
		clk_sens=False,
		fillcolor=gold,
		label="349:AL",
		sens="[]",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['RX_MAX_LENGTH', 'Frame_length_counter']"];
	"Leaf_335:AL" -> "349:AL";
	"518:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb25f78f90>",
		fillcolor=springgreen,
		label="518:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"519:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb25f78ed0>",
		fillcolor=firebrick,
		label="519:NS
pause_quanta_val <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb25f78ed0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"518:IF" -> "519:NS"	 [cond="['Current_state', 'State_OkEnd', 'Pause_current', 'Pause_syn', 'pause_quanta_val_tmp']",
		label="((Current_state == State_OkEnd) && (Pause_current == Pause_syn) || pause_quanta_val_tmp)",
		lineno=518];
	"521:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb25f9c0d0>",
		fillcolor=firebrick,
		label="521:NS
pause_quanta_val <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb25f9c0d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"518:IF" -> "521:NS"	 [cond="['Current_state', 'State_OkEnd', 'Pause_current', 'Pause_syn', 'pause_quanta_val_tmp']",
		label="!(((Current_state == State_OkEnd) && (Pause_current == Pause_syn) || pause_quanta_val_tmp))",
		lineno=518];
	"222:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb2633ea50>",
		fillcolor=cadetblue,
		label="222:BS
Next_state = State_ErrEnd;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb2633ea50>]",
		style=filled,
		typ=BlockingSubstitution];
	"222:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"505:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb25fa4d50>",
		fillcolor=firebrick,
		label="505:NS
pause_quanta <= { pause_quanta_h, RxD_dl1 };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb25fa4d50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_501:AL"	 [def_var="['pause_quanta']",
		label="Leaf_501:AL"];
	"505:NS" -> "Leaf_501:AL"	 [cond="[]",
		lineno=None];
	"461:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25fabf10>",
		fillcolor=cadetblue,
		label="461:BS
Pause_next = Pause_current;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25fabf10>]",
		style=filled,
		typ=BlockingSubstitution];
	"461:BS" -> "Leaf_431:AL"	 [cond="[]",
		lineno=None];
	"479:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25fac310>",
		fillcolor=cadetblue,
		label="479:BS
Pause_next = Pause_idle;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25fac310>]",
		style=filled,
		typ=BlockingSubstitution];
	"479:BS" -> "Leaf_431:AL"	 [cond="[]",
		lineno=None];
	"243:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb25f0e350>",
		fillcolor=springgreen,
		label="243:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"244:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f0e390>",
		fillcolor=cadetblue,
		label="244:BS
Next_state = State_FFFullErrEnd;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f0e390>]",
		style=filled,
		typ=BlockingSubstitution];
	"243:IF" -> "244:BS"	 [cond="['Fifo_full']",
		label=Fifo_full,
		lineno=243];
	"245:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb25f0e7d0>",
		fillcolor=springgreen,
		label="245:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"243:IF" -> "245:IF"	 [cond="['Fifo_full']",
		label="!(Fifo_full)",
		lineno=243];
	"261:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbb25f01290>",
		fillcolor=lightcyan,
		label="261:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"262:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f013d0>",
		fillcolor=cadetblue,
		label="262:BS
Next_state = State_IFG;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f013d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"261:CA" -> "262:BS"	 [cond="[]",
		lineno=None];
	"220:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbb2633e7d0>",
		fillcolor=lightcyan,
		label="220:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"221:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb2633ea10>",
		fillcolor=springgreen,
		label="221:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"220:CA" -> "221:IF"	 [cond="[]",
		lineno=None];
	"488:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25facbd0>",
		fillcolor=cadetblue,
		label="488:BS
Pause_next = Pause_idle;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25facbd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"488:BS" -> "Leaf_431:AL"	 [cond="[]",
		lineno=None];
	"385:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb2621fe90>",
		fillcolor=firebrick,
		label="385:NS
Rx_pkt_err_type_rmon <= 3'b001;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb2621fe90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"385:NS" -> "Leaf_381:AL"	 [cond="[]",
		lineno=None];
	"306:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f29b50>",
		fillcolor=cadetblue,
		label="306:BS
Fifo_data_end = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f29b50>]",
		style=filled,
		typ=BlockingSubstitution];
	"306:BS" -> "Leaf_303:AL"	 [cond="[]",
		lineno=None];
	"482:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbb25fac410>",
		fillcolor=lightcyan,
		label="482:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"483:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25fac5d0>",
		fillcolor=cadetblue,
		label="483:BS
Pause_next = Pause_quanta_lo;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25fac5d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"482:CA" -> "483:BS"	 [cond="[]",
		lineno=None];
	"256:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f0ee50>",
		fillcolor=cadetblue,
		label="256:BS
Next_state = State_ErrEnd;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f0ee50>]",
		style=filled,
		typ=BlockingSubstitution];
	"256:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"523:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbb25f9c1d0>",
		clk_sens=True,
		fillcolor=gold,
		label="523:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Pause_syn', 'Reset', 'Pause_current']"];
	"524:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb25f9c310>",
		fillcolor=springgreen,
		label="524:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"523:AL" -> "524:IF"	 [cond="[]",
		lineno=None];
	"375:IF" -> "377:NS"	 [cond="['Current_state', 'State_OkEnd', 'Current_state', 'State_ErrEnd', 'Current_state', 'State_CRCErrEnd', 'Current_state', 'State_FFFullErrEnd']",
		label="((Current_state == State_OkEnd) || (Current_state == State_ErrEnd) || (Current_state == State_CRCErrEnd) || (Current_state == State_\
FFFullErrEnd))",
		lineno=375];
	"378:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb2621f7d0>",
		fillcolor=springgreen,
		label="378:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"375:IF" -> "378:IF"	 [cond="['Current_state', 'State_OkEnd', 'Current_state', 'State_ErrEnd', 'Current_state', 'State_CRCErrEnd', 'Current_state', 'State_FFFullErrEnd']",
		label="!(((Current_state == State_OkEnd) || (Current_state == State_ErrEnd) || (Current_state == State_CRCErrEnd) || (Current_state == \
State_FFFullErrEnd)))",
		lineno=375];
	"434:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb262270d0>",
		fillcolor=springgreen,
		label="434:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"434:IF" -> "437:BS"	 [cond="['Current_state', 'State_SFD']",
		label="!((Current_state == State_SFD))",
		lineno=434];
	"435:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb26227110>",
		fillcolor=cadetblue,
		label="435:BS
Pause_next = Pause_pre_syn;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb26227110>]",
		style=filled,
		typ=BlockingSubstitution];
	"434:IF" -> "435:BS"	 [cond="['Current_state', 'State_SFD']",
		label="(Current_state == State_SFD)",
		lineno=434];
	"389:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb26225650>",
		fillcolor=firebrick,
		label="389:NS
Rx_pkt_err_type_rmon <= 3'b011;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb26225650>]",
		style=filled,
		typ=NonblockingSubstitution];
	"389:NS" -> "Leaf_381:AL"	 [cond="[]",
		lineno=None];
	"221:IF" -> "223:IF"	 [cond="['Crs_dv']",
		label="!((!Crs_dv))",
		lineno=221];
	"221:IF" -> "222:BS"	 [cond="['Crs_dv']",
		label="(!Crs_dv)",
		lineno=221];
	"341:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb25f2ac50>",
		fillcolor=firebrick,
		label="341:NS
Frame_length_counter <= Frame_length_counter + 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb25f2ac50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"341:NS" -> "Leaf_335:AL"	 [cond="[]",
		lineno=None];
	"231:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbb2633ea90>",
		fillcolor=lightcyan,
		label="231:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"232:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb25f0d3d0>",
		fillcolor=springgreen,
		label="232:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"231:CA" -> "232:IF"	 [cond="[]",
		lineno=None];
	"483:BS" -> "Leaf_431:AL"	 [cond="[]",
		lineno=None];
	"459:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25fabc10>",
		fillcolor=cadetblue,
		label="459:BS
Pause_next = Pause_idle;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25fabc10>]",
		style=filled,
		typ=BlockingSubstitution];
	"459:BS" -> "Leaf_431:AL"	 [cond="[]",
		lineno=None];
	"Leaf_425:AL" -> "495:AL";
	"Leaf_425:AL" -> "523:AL";
	"501:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbb25fa4750>",
		clk_sens=True,
		fillcolor=gold,
		label="501:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'pause_quanta_h', 'Pause_current', 'Pause_quanta_lo', 'RxD_dl1']"];
	"Leaf_425:AL" -> "501:AL";
	"Leaf_425:AL" -> "507:AL";
	"Leaf_425:AL" -> "515:AL";
	"Leaf_425:AL" -> "431:AL";
	"234:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb25f0d750>",
		fillcolor=springgreen,
		label="234:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"234:IF" -> "237:BS"	 [cond="['RxErr']",
		label="!(RxErr)",
		lineno=234];
	"235:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f0d790>",
		fillcolor=cadetblue,
		label="235:BS
Next_state = State_drop;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f0d790>]",
		style=filled,
		typ=BlockingSubstitution];
	"234:IF" -> "235:BS"	 [cond="['RxErr']",
		label=RxErr,
		lineno=234];
	"516:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb25f78910>",
		fillcolor=springgreen,
		label="516:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"516:IF" -> "518:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=516];
	"517:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb25f78950>",
		fillcolor=firebrick,
		label="517:NS
pause_quanta_val <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb25f78950>]",
		style=filled,
		typ=NonblockingSubstitution];
	"516:IF" -> "517:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=516];
	"238:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbb25f0d510>",
		fillcolor=lightcyan,
		label="238:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"239:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb25f0dc50>",
		fillcolor=springgreen,
		label="239:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"238:CA" -> "239:IF"	 [cond="[]",
		lineno=None];
	"420:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb26217690>",
		fillcolor=firebrick,
		label="420:NS
MAC_add_en <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb26217690>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_416:AL"	 [def_var="['MAC_add_en']",
		label="Leaf_416:AL"];
	"420:NS" -> "Leaf_416:AL"	 [cond="[]",
		lineno=None];
	"253:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"Leaf_297:AL"	 [def_var="['Fifo_data_en']",
		label="Leaf_297:AL"];
	"Leaf_297:AL" -> "416:AL";
	"510:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb25f785d0>",
		fillcolor=springgreen,
		label="510:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"513:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb25f786d0>",
		fillcolor=firebrick,
		label="513:NS
pause_quanta_val_tmp <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb25f786d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"510:IF" -> "513:NS"	 [cond="['Current_state', 'State_OkEnd', 'Pause_current', 'Pause_syn']",
		label="!(((Current_state == State_OkEnd) && (Pause_current == Pause_syn)))",
		lineno=510];
	"511:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb25f78510>",
		fillcolor=firebrick,
		label="511:NS
pause_quanta_val_tmp <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb25f78510>]",
		style=filled,
		typ=NonblockingSubstitution];
	"510:IF" -> "511:NS"	 [cond="['Current_state', 'State_OkEnd', 'Pause_current', 'Pause_syn']",
		label="((Current_state == State_OkEnd) && (Pause_current == Pause_syn))",
		lineno=510];
	"262:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"499:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb25fa4610>",
		fillcolor=firebrick,
		label="499:NS
pause_quanta_h <= RxD_dl1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb25fa4610>]",
		style=filled,
		typ=NonblockingSubstitution];
	"498:IF" -> "499:NS"	 [cond="['Pause_current', 'Pause_quanta_hi']",
		label="(Pause_current == Pause_quanta_hi)",
		lineno=498];
	"469:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25fa7850>",
		fillcolor=cadetblue,
		label="469:BS
Pause_next = Pause_current;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25fa7850>]",
		style=filled,
		typ=BlockingSubstitution];
	"469:BS" -> "Leaf_431:AL"	 [cond="[]",
		lineno=None];
	"503:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb25fa48d0>",
		fillcolor=firebrick,
		label="503:NS
pause_quanta <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb25fa48d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"503:NS" -> "Leaf_501:AL"	 [cond="[]",
		lineno=None];
	"502:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb25fa4890>",
		fillcolor=springgreen,
		label="502:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"501:AL" -> "502:IF"	 [cond="[]",
		lineno=None];
	"233:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f0d490>",
		fillcolor=cadetblue,
		label="233:BS
Next_state = State_ErrEnd;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f0d490>]",
		style=filled,
		typ=BlockingSubstitution];
	"233:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"321:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb25f2c9d0>",
		fillcolor=springgreen,
		label="321:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"320:AL" -> "321:IF"	 [cond="[]",
		lineno=None];
	"383:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb2621fad0>",
		fillcolor=firebrick,
		label="383:NS
Rx_pkt_err_type_rmon <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb2621fad0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"383:NS" -> "Leaf_381:AL"	 [cond="[]",
		lineno=None];
	"472:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbb25fa78d0>",
		fillcolor=lightcyan,
		label="472:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"472:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb25fa7c90>",
		fillcolor=springgreen,
		label="472:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"472:CA" -> "472:IF"	 [cond="[]",
		lineno=None];
	"444:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbb26227990>",
		fillcolor=lightcyan,
		label="444:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"444:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb26227cd0>",
		fillcolor=springgreen,
		label="444:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"444:CA" -> "444:IF"	 [cond="[]",
		lineno=None];
	"324:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f2cb90>",
		fillcolor=cadetblue,
		label="324:BS
CRC_en = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f2cb90>]",
		style=filled,
		typ=BlockingSubstitution];
	"324:BS" -> "Leaf_320:AL"	 [cond="[]",
		lineno=None];
	"198:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb26347910>",
		fillcolor=springgreen,
		label="198:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"198:IF" -> "199:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=198];
	"201:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb26347ad0>",
		fillcolor=firebrick,
		label="201:NS
RxD_dl1 <= RxD;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb26347ad0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"198:IF" -> "201:NS"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=198];
	"388:IF" -> "389:NS"	 [cond="['Current_state', 'State_ErrEnd']",
		label="(Current_state == State_ErrEnd)",
		lineno=388];
	"390:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb262258d0>",
		fillcolor=springgreen,
		label="390:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"388:IF" -> "390:IF"	 [cond="['Current_state', 'State_ErrEnd']",
		label="!((Current_state == State_ErrEnd))",
		lineno=388];
	"272:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f01d10>",
		fillcolor=cadetblue,
		label="272:BS
Next_state = State_FFFullDrop;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f01d10>]",
		style=filled,
		typ=BlockingSubstitution];
	"272:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"271:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbb25f01a10>",
		fillcolor=lightcyan,
		label="271:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"271:CA" -> "272:BS"	 [cond="[]",
		lineno=None];
	"264:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbb25f014d0>",
		fillcolor=lightcyan,
		label="264:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"264:CA" -> "265:BS"	 [cond="[]",
		lineno=None];
	"217:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb2633e550>",
		fillcolor=cadetblue,
		label="217:BS
Next_state = State_preamble;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb2633e550>]",
		style=filled,
		typ=BlockingSubstitution];
	"217:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"464:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbb25fa7150>",
		fillcolor=lightcyan,
		label="464:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"464:CA" -> "464:IF"	 [cond="[]",
		lineno=None];
	"347:BS" -> "Leaf_343:AL"	 [cond="[]",
		lineno=None];
	"358:IF" -> "360:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=358];
	"359:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb25f2bbd0>",
		fillcolor=firebrick,
		label="359:NS
Rx_apply_rmon_tmp <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb25f2bbd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"358:IF" -> "359:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=358];
	"244:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"214:CS" -> "259:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=214];
	"214:CS" -> "215:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=214];
	"214:CS" -> "249:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=214];
	"214:CS" -> "261:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=214];
	"214:CS" -> "220:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=214];
	"214:CS" -> "231:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=214];
	"214:CS" -> "238:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=214];
	"214:CS" -> "271:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=214];
	"214:CS" -> "264:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=214];
	"279:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbb25f01f90>",
		fillcolor=lightcyan,
		label="279:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"214:CS" -> "279:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=214];
	"266:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbb25f01750>",
		fillcolor=lightcyan,
		label="266:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"214:CS" -> "266:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=214];
	"254:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbb25f0eb50>",
		fillcolor=lightcyan,
		label="254:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"214:CS" -> "254:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=214];
	"273:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbb25f01e10>",
		fillcolor=lightcyan,
		label="273:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"214:CS" -> "273:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=214];
	"230:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f0d4d0>",
		fillcolor=cadetblue,
		label="230:BS
Next_state = State_drop;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f0d4d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"230:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"368:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb26213850>",
		fillcolor=firebrick,
		label="368:NS
Rx_apply_rmon_tmp_pl1 <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb26213850>]",
		style=filled,
		typ=NonblockingSubstitution];
	"368:NS" -> "Leaf_366:AL"	 [cond="[]",
		lineno=None];
	"508:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb25fa4fd0>",
		fillcolor=springgreen,
		label="508:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"507:AL" -> "508:IF"	 [cond="[]",
		lineno=None];
	"Leaf_495:AL"	 [def_var="['pause_quanta_h']",
		label="Leaf_495:AL"];
	"Leaf_495:AL" -> "501:AL";
	"Leaf_357:AL"	 [def_var="['Rx_apply_rmon_tmp']",
		label="Leaf_357:AL"];
	"366:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbb262136d0>",
		clk_sens=True,
		fillcolor=gold,
		label="366:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Rx_apply_rmon_tmp']"];
	"Leaf_357:AL" -> "366:AL";
	"387:NS" -> "Leaf_381:AL"	 [cond="[]",
		lineno=None];
	"330:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f2a110>",
		fillcolor=cadetblue,
		label="330:BS
CRC_init = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f2a110>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_326:AL"	 [def_var="['CRC_init']",
		label="Leaf_326:AL"];
	"330:BS" -> "Leaf_326:AL"	 [cond="[]",
		lineno=None];
	"504:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb25fa4b90>",
		fillcolor=springgreen,
		label="504:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"504:IF" -> "505:NS"	 [cond="['Pause_current', 'Pause_quanta_lo']",
		label="(Pause_current == Pause_quanta_lo)",
		lineno=504];
	"372:AL" -> "373:IF"	 [cond="[]",
		lineno=None];
	"508:IF" -> "509:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=508];
	"508:IF" -> "510:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=508];
	"Leaf_515:AL"	 [def_var="['pause_quanta_val']",
		label="Leaf_515:AL"];
	"242:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f0e0d0>",
		fillcolor=cadetblue,
		label="242:BS
Next_state = State_ErrEnd;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f0e0d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"242:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"279:CA" -> "280:BS"	 [cond="[]",
		lineno=None];
	"400:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb2622e250>",
		fillcolor=springgreen,
		label="400:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"398:IF" -> "400:IF"	 [cond="['Current_state', 'State_OkEnd', 'pause_frame_ptr']",
		label="!(((Current_state == State_OkEnd) && pause_frame_ptr))",
		lineno=398];
	"399:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb26225e90>",
		fillcolor=firebrick,
		label="399:NS
Rx_pkt_type_rmon <= 3'b100;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb26225e90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"398:IF" -> "399:NS"	 [cond="['Current_state', 'State_OkEnd', 'pause_frame_ptr']",
		label="((Current_state == State_OkEnd) && pause_frame_ptr)",
		lineno=398];
	"367:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb26213910>",
		fillcolor=springgreen,
		label="367:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"367:IF" -> "368:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=367];
	"370:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb26213a50>",
		fillcolor=firebrick,
		label="370:NS
Rx_apply_rmon_tmp_pl1 <= Rx_apply_rmon_tmp;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb26213a50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"367:IF" -> "370:NS"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=367];
	"366:AL" -> "367:IF"	 [cond="[]",
		lineno=None];
	"350:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb25f2b450>",
		fillcolor=springgreen,
		label="350:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"350:IF" -> "353:BS"	 [cond="['Frame_length_counter', 'RX_MAX_LENGTH']",
		label="!((Frame_length_counter > RX_MAX_LENGTH))",
		lineno=350];
	"351:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f2b490>",
		fillcolor=cadetblue,
		label="351:BS
Too_long = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f2b490>]",
		style=filled,
		typ=BlockingSubstitution];
	"350:IF" -> "351:BS"	 [cond="['Frame_length_counter', 'RX_MAX_LENGTH']",
		label="(Frame_length_counter > RX_MAX_LENGTH)",
		lineno=350];
	"270:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f01b50>",
		fillcolor=cadetblue,
		label="270:BS
Next_state = Current_state;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f01b50>]",
		style=filled,
		typ=BlockingSubstitution];
	"270:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"468:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbb25fa7450>",
		fillcolor=lightcyan,
		label="468:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"468:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb25fa7810>",
		fillcolor=springgreen,
		label="468:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"468:CA" -> "468:IF"	 [cond="[]",
		lineno=None];
	"Leaf_310:AL"	 [def_var="['Fifo_data_err']",
		label="Leaf_310:AL"];
	"336:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb25f2a450>",
		fillcolor=springgreen,
		label="336:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"335:AL" -> "336:IF"	 [cond="[]",
		lineno=None];
	"327:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb25f2cf10>",
		fillcolor=springgreen,
		label="327:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"327:IF" -> "330:BS"	 [cond="['Current_state', 'State_SFD']",
		label="!((Current_state == State_SFD))",
		lineno=327];
	"328:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f2cf50>",
		fillcolor=cadetblue,
		label="328:BS
CRC_init = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f2cf50>]",
		style=filled,
		typ=BlockingSubstitution];
	"327:IF" -> "328:BS"	 [cond="['Current_state', 'State_SFD']",
		label="(Current_state == State_SFD)",
		lineno=327];
	"Leaf_284:AL"	 [def_var="['IFG_counter']",
		label="Leaf_284:AL"];
	"288:NS" -> "Leaf_284:AL"	 [cond="[]",
		lineno=None];
	"397:NS" -> "Leaf_395:AL"	 [cond="[]",
		lineno=None];
	"336:IF" -> "338:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=336];
	"337:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb25f2a490>",
		fillcolor=firebrick,
		label="337:NS
Frame_length_counter <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb25f2a490>]",
		style=filled,
		typ=NonblockingSubstitution];
	"336:IF" -> "337:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=336];
	"235:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"208:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb26347ed0>",
		fillcolor=springgreen,
		label="208:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"207:AL" -> "208:IF"	 [cond="[]",
		lineno=None];
	"432:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fbb25face10>",
		fillcolor=linen,
		label="432:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"432:CS" -> "491:CA"	 [cond="['Pause_current']",
		label=Pause_current,
		lineno=432];
	"432:CS" -> "438:CA"	 [cond="['Pause_current']",
		label=Pause_current,
		lineno=432];
	"432:CS" -> "486:CA"	 [cond="['Pause_current']",
		label=Pause_current,
		lineno=432];
	"432:CS" -> "482:CA"	 [cond="['Pause_current']",
		label=Pause_current,
		lineno=432];
	"484:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbb25fac6d0>",
		fillcolor=lightcyan,
		label="484:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"432:CS" -> "484:CA"	 [cond="['Pause_current']",
		label=Pause_current,
		lineno=432];
	"433:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbb26217dd0>",
		fillcolor=lightcyan,
		label="433:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"432:CS" -> "433:CA"	 [cond="['Pause_current']",
		label=Pause_current,
		lineno=432];
	"487:IF" -> "490:BS"	 [cond="['Current_state', 'State_IFG']",
		label="!((Current_state == State_IFG))",
		lineno=487];
	"487:IF" -> "488:BS"	 [cond="['Current_state', 'State_IFG']",
		label="(Current_state == State_IFG)",
		lineno=487];
	"457:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25faba90>",
		fillcolor=cadetblue,
		label="457:BS
Pause_next = Pause_current;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25faba90>]",
		style=filled,
		typ=BlockingSubstitution];
	"457:BS" -> "Leaf_431:AL"	 [cond="[]",
		lineno=None];
	"404:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb2622e650>",
		fillcolor=springgreen,
		label="404:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"403:AL" -> "404:IF"	 [cond="[]",
		lineno=None];
	"513:NS" -> "Leaf_507:AL"	 [cond="[]",
		lineno=None];
	"379:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb2621f8d0>",
		fillcolor=firebrick,
		label="379:NS
Rx_apply_rmon <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb2621f8d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"378:IF" -> "379:NS"	 [cond="['Rx_apply_rmon_tmp_pl1']",
		label=Rx_apply_rmon_tmp_pl1,
		lineno=378];
	"224:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"425:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbb26217850>",
		clk_sens=True,
		fillcolor=gold,
		label="425:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Pause_next']"];
	"425:AL" -> "426:IF"	 [cond="[]",
		lineno=None];
	"452:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb25fab5d0>",
		fillcolor=springgreen,
		label="452:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"452:IF" -> "453:BS"	 [cond="['RxD_dl1']",
		label="(RxD_dl1 == 8'h00)",
		lineno=452];
	"452:IF" -> "455:BS"	 [cond="['RxD_dl1']",
		label="!((RxD_dl1 == 8'h00))",
		lineno=452];
	"472:IF" -> "475:BS"	 [cond="['RxD_dl1']",
		label="!((RxD_dl1 == 8'h00))",
		lineno=472];
	"472:IF" -> "473:BS"	 [cond="['RxD_dl1']",
		label="(RxD_dl1 == 8'h00)",
		lineno=472];
	"417:IF" -> "420:NS"	 [cond="['Frame_length_counter', 'Frame_length_counter']",
		label="!(((Frame_length_counter >= 1) && (Frame_length_counter <= 6)))",
		lineno=417];
	"418:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb26217510>",
		fillcolor=firebrick,
		label="418:NS
MAC_add_en <= Fifo_data_en;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb26217510>]",
		style=filled,
		typ=NonblockingSubstitution];
	"417:IF" -> "418:NS"	 [cond="['Frame_length_counter', 'Frame_length_counter']",
		label="((Frame_length_counter >= 1) && (Frame_length_counter <= 6))",
		lineno=417];
	"452:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbb25fab210>",
		fillcolor=lightcyan,
		label="452:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"452:CA" -> "452:IF"	 [cond="[]",
		lineno=None];
	"448:IF" -> "449:BS"	 [cond="['RxD_dl1']",
		label="(RxD_dl1 == 8'hc2)",
		lineno=448];
	"451:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25fab310>",
		fillcolor=cadetblue,
		label="451:BS
Pause_next = Pause_idle;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25fab310>]",
		style=filled,
		typ=BlockingSubstitution];
	"448:IF" -> "451:BS"	 [cond="['RxD_dl1']",
		label="!((RxD_dl1 == 8'hc2))",
		lineno=448];
	"484:CA" -> "485:BS"	 [cond="[]",
		lineno=None];
	"340:IF" -> "341:NS"	 [cond="['Current_state', 'State_data']",
		label="(Current_state == State_data)",
		lineno=340];
	"477:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25fac190>",
		fillcolor=cadetblue,
		label="477:BS
Pause_next = Pause_quanta_hi;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25fac190>]",
		style=filled,
		typ=BlockingSubstitution];
	"477:BS" -> "Leaf_431:AL"	 [cond="[]",
		lineno=None];
	"480:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25fac450>",
		fillcolor=cadetblue,
		label="480:BS
Pause_next = Pause_current;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25fac450>]",
		style=filled,
		typ=BlockingSubstitution];
	"480:BS" -> "Leaf_431:AL"	 [cond="[]",
		lineno=None];
	"211:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb26347fd0>",
		fillcolor=firebrick,
		label="211:NS
Current_state <= Next_state;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb26347fd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"211:NS" -> "Leaf_207:AL"	 [cond="[]",
		lineno=None];
	"343:AL" -> "344:IF"	 [cond="[]",
		lineno=None];
	"511:NS" -> "Leaf_507:AL"	 [cond="[]",
		lineno=None];
	"384:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb2621fe50>",
		fillcolor=springgreen,
		label="384:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"384:IF" -> "386:IF"	 [cond="['Current_state', 'State_CRCErrEnd']",
		label="!((Current_state == State_CRCErrEnd))",
		lineno=384];
	"384:IF" -> "385:NS"	 [cond="['Current_state', 'State_CRCErrEnd']",
		label="(Current_state == State_CRCErrEnd)",
		lineno=384];
	"314:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f2c650>",
		fillcolor=cadetblue,
		label="314:BS
Fifo_data_err = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f2c650>]",
		style=filled,
		typ=BlockingSubstitution];
	"314:BS" -> "Leaf_310:AL"	 [cond="[]",
		lineno=None];
	"258:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f01050>",
		fillcolor=cadetblue,
		label="258:BS
Next_state = Current_state;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f01050>]",
		style=filled,
		typ=BlockingSubstitution];
	"258:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"301:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f292d0>",
		fillcolor=cadetblue,
		label="301:BS
Fifo_data_en = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f292d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"301:BS" -> "Leaf_297:AL"	 [cond="[]",
		lineno=None];
	"519:NS" -> "Leaf_515:AL"	 [cond="[]",
		lineno=None];
	"460:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb25fabed0>",
		fillcolor=springgreen,
		label="460:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"460:IF" -> "463:BS"	 [cond="['RxD_dl1']",
		label="!((RxD_dl1 == 8'h01))",
		lineno=460];
	"460:IF" -> "461:BS"	 [cond="['RxD_dl1']",
		label="(RxD_dl1 == 8'h01)",
		lineno=460];
	"216:IF" -> "217:BS"	 [cond="['Crs_dv', 'RxD']",
		label="(Crs_dv && (RxD == 8'h55))",
		lineno=216];
	"219:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb2633e710>",
		fillcolor=cadetblue,
		label="219:BS
Next_state = Current_state;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb2633e710>]",
		style=filled,
		typ=BlockingSubstitution];
	"216:IF" -> "219:BS"	 [cond="['Crs_dv', 'RxD']",
		label="!((Crs_dv && (RxD == 8'h55)))",
		lineno=216];
	"400:IF" -> "401:NS"	 [cond="['Current_state', 'State_SFD', 'Next_state', 'State_data']",
		label="((Current_state == State_SFD) && (Next_state == State_data))",
		lineno=400];
	"441:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb26227850>",
		fillcolor=cadetblue,
		label="441:BS
Pause_next = Pause_current;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb26227850>]",
		style=filled,
		typ=BlockingSubstitution];
	"441:BS" -> "Leaf_431:AL"	 [cond="[]",
		lineno=None];
	"311:IF" -> "314:BS"	 [cond="['Current_state', 'State_ErrEnd', 'Current_state', 'State_CRCErrEnd', 'Current_state', 'State_FFFullErrEnd']",
		label="!(((Current_state == State_ErrEnd) || (Current_state == State_CRCErrEnd) || (Current_state == State_FFFullErrEnd)))",
		lineno=311];
	"312:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f2c490>",
		fillcolor=cadetblue,
		label="312:BS
Fifo_data_err = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f2c490>]",
		style=filled,
		typ=BlockingSubstitution];
	"311:IF" -> "312:BS"	 [cond="['Current_state', 'State_ErrEnd', 'Current_state', 'State_CRCErrEnd', 'Current_state', 'State_FFFullErrEnd']",
		label="((Current_state == State_ErrEnd) || (Current_state == State_CRCErrEnd) || (Current_state == State_FFFullErrEnd))",
		lineno=311];
	"399:NS" -> "Leaf_395:AL"	 [cond="[]",
		lineno=None];
	"435:BS" -> "Leaf_431:AL"	 [cond="[]",
		lineno=None];
	"228:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f0d350>",
		fillcolor=cadetblue,
		label="228:BS
Next_state = Current_state;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f0d350>]",
		style=filled,
		typ=BlockingSubstitution];
	"228:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"Leaf_183:AL" -> "213:AL";
	"197:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbb26347810>",
		clk_sens=True,
		fillcolor=gold,
		label="197:AL",
		sens="['Reset', 'Clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'RxD']"];
	"Leaf_183:AL" -> "197:AL";
	"240:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f0dc90>",
		fillcolor=cadetblue,
		label="240:BS
Next_state = State_checkCRC;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f0dc90>]",
		style=filled,
		typ=BlockingSubstitution];
	"240:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"382:IF" -> "383:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=382];
	"382:IF" -> "384:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=382];
	"337:NS" -> "Leaf_335:AL"	 [cond="[]",
		lineno=None];
	"267:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb25f01950>",
		fillcolor=springgreen,
		label="267:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"267:IF" -> "268:BS"	 [cond="['Crs_dv']",
		label="(!Crs_dv)",
		lineno=267];
	"267:IF" -> "270:BS"	 [cond="['Crs_dv']",
		label="!((!Crs_dv))",
		lineno=267];
	"219:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"304:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb25f29c10>",
		fillcolor=springgreen,
		label="304:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"304:IF" -> "308:BS"	 [cond="['Current_state', 'State_ErrEnd', 'Current_state', 'State_OkEnd', 'Current_state', 'State_CRCErrEnd', 'Current_state', 'State_FFFullErrEnd']",
		label="!(((Current_state == State_ErrEnd) || (Current_state == State_OkEnd) || (Current_state == State_CRCErrEnd) || (Current_state == \
State_FFFullErrEnd)))",
		lineno=304];
	"304:IF" -> "306:BS"	 [cond="['Current_state', 'State_ErrEnd', 'Current_state', 'State_OkEnd', 'Current_state', 'State_CRCErrEnd', 'Current_state', 'State_FFFullErrEnd']",
		label="((Current_state == State_ErrEnd) || (Current_state == State_OkEnd) || (Current_state == State_CRCErrEnd) || (Current_state == State_\
FFFullErrEnd))",
		lineno=304];
	"468:IF" -> "469:BS"	 [cond="['RxD_dl1']",
		label="(RxD_dl1 == 8'h08)",
		lineno=468];
	"471:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25fa79d0>",
		fillcolor=cadetblue,
		label="471:BS
Pause_next = Pause_idle;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25fa79d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"468:IF" -> "471:BS"	 [cond="['RxD_dl1']",
		label="!((RxD_dl1 == 8'h08))",
		lineno=468];
	"364:NS" -> "Leaf_357:AL"	 [cond="[]",
		lineno=None];
	"239:IF" -> "240:BS"	 [cond="['Crs_dv', 'Too_short', 'Too_long']",
		label="(!Crs_dv && !Too_short && !Too_long)",
		lineno=239];
	"241:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb25f0e090>",
		fillcolor=springgreen,
		label="241:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"239:IF" -> "241:IF"	 [cond="['Crs_dv', 'Too_short', 'Too_long']",
		label="!((!Crs_dv && !Too_short && !Too_long))",
		lineno=239];
	"443:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb262279d0>",
		fillcolor=cadetblue,
		label="443:BS
Pause_next = Pause_idle;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb262279d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"443:BS" -> "Leaf_431:AL"	 [cond="[]",
		lineno=None];
	"351:BS" -> "Leaf_349:AL"	 [cond="[]",
		lineno=None];
	"517:NS" -> "Leaf_515:AL"	 [cond="[]",
		lineno=None];
	"298:IF" -> "301:BS"	 [cond="['Current_state', 'State_data']",
		label="!((Current_state == State_data))",
		lineno=298];
	"299:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f29110>",
		fillcolor=cadetblue,
		label="299:BS
Fifo_data_en = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbb25f29110>]",
		style=filled,
		typ=BlockingSubstitution];
	"298:IF" -> "299:BS"	 [cond="['Current_state', 'State_data']",
		label="(Current_state == State_data)",
		lineno=298];
	"255:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb25f0ee10>",
		fillcolor=springgreen,
		label="255:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"255:IF" -> "256:BS"	 [cond="['Crs_dv']",
		label="(!Crs_dv)",
		lineno=255];
	"255:IF" -> "258:BS"	 [cond="['Crs_dv']",
		label="!((!Crs_dv))",
		lineno=255];
	"433:CA" -> "434:IF"	 [cond="[]",
		lineno=None];
	"471:BS" -> "Leaf_431:AL"	 [cond="[]",
		lineno=None];
	"405:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb2622e690>",
		fillcolor=firebrick,
		label="405:NS
broadcast_ptr <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb2622e690>]",
		style=filled,
		typ=NonblockingSubstitution];
	"404:IF" -> "405:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=404];
	"406:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb2622e9d0>",
		fillcolor=springgreen,
		label="406:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"404:IF" -> "406:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=404];
	"499:NS" -> "Leaf_495:AL"	 [cond="[]",
		lineno=None];
	"295:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fbb25f04b10>",
		def_var="['Fifo_data']",
		fillcolor=deepskyblue,
		label="295:AS
Fifo_data = RxD_dl1;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxD_dl1']"];
	"184:IF" -> "191:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=184];
	"185:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fbb26347090>",
		fillcolor=turquoise,
		label="185:BL
Crs_dv <= 0;
RxD <= 0;
RxErr <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb25f67f50>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7fbb263470d0>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb26347210>]",
		style=filled,
		typ=Block];
	"184:IF" -> "185:BL"	 [cond="['Reset']",
		label=Reset,
		lineno=184];
	"527:NS" -> "Leaf_523:AL"	 [cond="[]",
		lineno=None];
	"266:CA" -> "267:IF"	 [cond="[]",
		lineno=None];
	"254:CA" -> "255:IF"	 [cond="[]",
		lineno=None];
	"476:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbb25fa7d50>",
		fillcolor=lightcyan,
		label="476:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"476:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb25fac150>",
		fillcolor=springgreen,
		label="476:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"476:CA" -> "476:IF"	 [cond="[]",
		lineno=None];
	"232:IF" -> "234:IF"	 [cond="['Crs_dv']",
		label="!((!Crs_dv))",
		lineno=232];
	"232:IF" -> "233:BS"	 [cond="['Crs_dv']",
		label="(!Crs_dv)",
		lineno=232];
	"515:AL" -> "516:IF"	 [cond="[]",
		lineno=None];
	"286:NS" -> "Leaf_284:AL"	 [cond="[]",
		lineno=None];
	"260:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"362:NS" -> "Leaf_357:AL"	 [cond="[]",
		lineno=None];
	"299:BS" -> "Leaf_297:AL"	 [cond="[]",
		lineno=None];
	"431:AL" -> "432:CS"	 [cond="[]",
		lineno=None];
	"290:NS" -> "Leaf_284:AL"	 [cond="[]",
		lineno=None];
	"497:NS" -> "Leaf_495:AL"	 [cond="[]",
		lineno=None];
	"395:AL" -> "396:IF"	 [cond="[]",
		lineno=None];
	"321:IF" -> "322:BS"	 [cond="['Current_state', 'State_data']",
		label="(Current_state == State_data)",
		lineno=321];
	"321:IF" -> "324:BS"	 [cond="['Current_state', 'State_data']",
		label="!((Current_state == State_data))",
		lineno=321];
	"275:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"326:AL" -> "327:IF"	 [cond="[]",
		lineno=None];
	"467:BS" -> "Leaf_431:AL"	 [cond="[]",
		lineno=None];
	"245:IF" -> "246:BS"	 [cond="['RxErr', 'MAC_rx_add_chk_err', 'Too_long', 'broadcast_drop']",
		label="(RxErr || MAC_rx_add_chk_err || Too_long || broadcast_drop)",
		lineno=245];
	"245:IF" -> "248:BS"	 [cond="['RxErr', 'MAC_rx_add_chk_err', 'Too_long', 'broadcast_drop']",
		label="!((RxErr || MAC_rx_add_chk_err || Too_long || broadcast_drop))",
		lineno=245];
	"418:NS" -> "Leaf_416:AL"	 [cond="[]",
		lineno=None];
	"439:CS" -> "440:CA"	 [cond="['Frame_length_counter']",
		label=Frame_length_counter,
		lineno=439];
	"439:CS" -> "456:CA"	 [cond="['Frame_length_counter']",
		label=Frame_length_counter,
		lineno=439];
	"439:CS" -> "448:CA"	 [cond="['Frame_length_counter']",
		label=Frame_length_counter,
		lineno=439];
	"439:CS" -> "472:CA"	 [cond="['Frame_length_counter']",
		label=Frame_length_counter,
		lineno=439];
	"439:CS" -> "444:CA"	 [cond="['Frame_length_counter']",
		label=Frame_length_counter,
		lineno=439];
	"439:CS" -> "464:CA"	 [cond="['Frame_length_counter']",
		label=Frame_length_counter,
		lineno=439];
	"439:CS" -> "468:CA"	 [cond="['Frame_length_counter']",
		label=Frame_length_counter,
		lineno=439];
	"439:CS" -> "452:CA"	 [cond="['Frame_length_counter']",
		label=Frame_length_counter,
		lineno=439];
	"439:CS" -> "476:CA"	 [cond="['Frame_length_counter']",
		label=Frame_length_counter,
		lineno=439];
	"460:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbb25fabb10>",
		fillcolor=lightcyan,
		label="460:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"439:CS" -> "460:CA"	 [cond="['Frame_length_counter']",
		label=Frame_length_counter,
		lineno=439];
	"480:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbb25fac210>",
		fillcolor=lightcyan,
		label="480:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"439:CS" -> "480:CA"	 [cond="['Frame_length_counter']",
		label=Frame_length_counter,
		lineno=439];
	"502:IF" -> "503:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=502];
	"502:IF" -> "504:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=502];
	"Leaf_284:AL" -> "284:AL";
	"Leaf_284:AL" -> "213:AL";
	"451:BS" -> "Leaf_431:AL"	 [cond="[]",
		lineno=None];
	"444:IF" -> "445:BS"	 [cond="['RxD_dl1']",
		label="(RxD_dl1 == 8'h80)",
		lineno=444];
	"444:IF" -> "447:BS"	 [cond="['RxD_dl1']",
		label="!((RxD_dl1 == 8'h80))",
		lineno=444];
	"251:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"359:NS" -> "Leaf_357:AL"	 [cond="[]",
		lineno=None];
	"Leaf_431:AL" -> "425:AL";
	"405:NS" -> "Leaf_403:AL"	 [cond="[]",
		lineno=None];
	"273:CA" -> "274:IF"	 [cond="[]",
		lineno=None];
	"227:IF" -> "230:BS"	 [cond="['RxD']",
		label="!((RxD == 8'h55))",
		lineno=227];
	"227:IF" -> "228:BS"	 [cond="['RxD']",
		label="(RxD == 8'h55)",
		lineno=227];
	"492:BS" -> "Leaf_431:AL"	 [cond="[]",
		lineno=None];
	"241:IF" -> "243:IF"	 [cond="['Crs_dv', 'Too_short', 'Too_long']",
		label="!((!Crs_dv && (Too_short || Too_long)))",
		lineno=241];
	"241:IF" -> "242:BS"	 [cond="['Crs_dv', 'Too_short', 'Too_long']",
		label="(!Crs_dv && (Too_short || Too_long))",
		lineno=241];
	"524:IF" -> "525:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=524];
	"524:IF" -> "526:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=524];
	"197:AL" -> "198:IF"	 [cond="[]",
		lineno=None];
	"476:IF" -> "479:BS"	 [cond="['RxD_dl1']",
		label="!((RxD_dl1 == 8'h01))",
		lineno=476];
	"476:IF" -> "477:BS"	 [cond="['RxD_dl1']",
		label="(RxD_dl1 == 8'h01)",
		lineno=476];
	"303:AL" -> "304:IF"	 [cond="[]",
		lineno=None];
	"370:NS" -> "Leaf_366:AL"	 [cond="[]",
		lineno=None];
	"521:NS" -> "Leaf_515:AL"	 [cond="[]",
		lineno=None];
	"349:AL" -> "350:IF"	 [cond="[]",
		lineno=None];
	"Leaf_197:AL" -> "495:AL";
	"Leaf_197:AL" -> "501:AL";
	"Leaf_197:AL" -> "295:AS";
	"Leaf_197:AL" -> "431:AL";
	"201:NS" -> "Leaf_197:AL"	 [cond="[]",
		lineno=None];
	"339:NS" -> "Leaf_335:AL"	 [cond="[]",
		lineno=None];
	"312:BS" -> "Leaf_310:AL"	 [cond="[]",
		lineno=None];
	"465:BS" -> "Leaf_431:AL"	 [cond="[]",
		lineno=None];
	"390:IF" -> "391:NS"	 [cond="['Current_state', 'State_OkEnd']",
		label="(Current_state == State_OkEnd)",
		lineno=390];
	"456:IF" -> "459:BS"	 [cond="['RxD_dl1']",
		label="!((RxD_dl1 == 8'h00))",
		lineno=456];
	"456:IF" -> "457:BS"	 [cond="['RxD_dl1']",
		label="(RxD_dl1 == 8'h00)",
		lineno=456];
	"460:CA" -> "460:IF"	 [cond="[]",
		lineno=None];
	"379:NS" -> "Leaf_372:AL"	 [cond="[]",
		lineno=None];
	"277:BS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"408:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbb2622ef50>",
		fillcolor=springgreen,
		label="408:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"408:IF" -> "409:NS"	 [cond="['Current_state', 'State_SFD', 'Next_state', 'State_data', 'MRxD']",
		label="((Current_state == State_SFD) && (Next_state == State_data) && (MRxD[7:6] == 2'b11))",
		lineno=408];
	"208:IF" -> "209:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=208];
	"208:IF" -> "211:NS"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=208];
	"328:BS" -> "Leaf_326:AL"	 [cond="[]",
		lineno=None];
	"440:IF" -> "441:BS"	 [cond="['RxD_dl1']",
		label="(RxD_dl1 == 8'h01)",
		lineno=440];
	"440:IF" -> "443:BS"	 [cond="['RxD_dl1']",
		label="!((RxD_dl1 == 8'h01))",
		lineno=440];
	"185:BL" -> "Leaf_183:AL"	 [cond="[]",
		lineno=None];
	"480:CA" -> "480:BS"	 [cond="[]",
		lineno=None];
	"407:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb2622ea10>",
		fillcolor=firebrick,
		label="407:NS
broadcast_ptr <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbb2622ea10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"407:NS" -> "Leaf_403:AL"	 [cond="[]",
		lineno=None];
	"Leaf_343:AL" -> "213:AL";
	"406:IF" -> "408:IF"	 [cond="['Current_state', 'State_IFG']",
		label="!((Current_state == State_IFG))",
		lineno=406];
	"406:IF" -> "407:NS"	 [cond="['Current_state', 'State_IFG']",
		label="(Current_state == State_IFG)",
		lineno=406];
	"Leaf_507:AL" -> "515:AL";
	"374:NS" -> "Leaf_372:AL"	 [cond="[]",
		lineno=None];
}
