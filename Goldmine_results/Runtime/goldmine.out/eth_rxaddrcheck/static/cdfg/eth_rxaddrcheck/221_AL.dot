strict digraph "" {
	node [label="\N"];
	"245:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2c21be9350>",
		fillcolor=firebrick,
		label="245:NS
UnicastOK <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2c21be9350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_221:AL"	 [def_var="['UnicastOK']",
		label="Leaf_221:AL"];
	"245:NS" -> "Leaf_221:AL"	 [cond="[]",
		lineno=None];
	"242:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2c21be92d0>",
		fillcolor=firebrick,
		label="242:NS
UnicastOK <= (RxData[7:0] == MAC[7:0]) & UnicastOK;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2c21be92d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"242:NS" -> "Leaf_221:AL"	 [cond="[]",
		lineno=None];
	"236:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2c21bbf450>",
		fillcolor=firebrick,
		label="236:NS
UnicastOK <= (RxData[7:0] == MAC[23:16]) & UnicastOK;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2c21bbf450>]",
		style=filled,
		typ=NonblockingSubstitution];
	"236:NS" -> "Leaf_221:AL"	 [cond="[]",
		lineno=None];
	"230:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2c21bbf790>",
		fillcolor=firebrick,
		label="230:NS
UnicastOK <= (RxData[7:0] == MAC[39:32]) & UnicastOK;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2c21bbf790>]",
		style=filled,
		typ=NonblockingSubstitution];
	"230:NS" -> "Leaf_221:AL"	 [cond="[]",
		lineno=None];
	"239:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2c21bbfb50>",
		fillcolor=firebrick,
		label="239:NS
UnicastOK <= (RxData[7:0] == MAC[15:8]) & UnicastOK;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2c21bbfb50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"239:NS" -> "Leaf_221:AL"	 [cond="[]",
		lineno=None];
	"238:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2c4363d250>",
		fillcolor=springgreen,
		label="238:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"238:IF" -> "239:NS"	 [cond="['RxCheckEn', 'ByteCntEq6']",
		label="(RxCheckEn & ByteCntEq6)",
		lineno=238];
	"241:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2c21bbff10>",
		fillcolor=springgreen,
		label="241:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"238:IF" -> "241:IF"	 [cond="['RxCheckEn', 'ByteCntEq6']",
		label="!((RxCheckEn & ByteCntEq6))",
		lineno=238];
	"232:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2c4363d1d0>",
		fillcolor=springgreen,
		label="232:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"233:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2c4363d410>",
		fillcolor=firebrick,
		label="233:NS
UnicastOK <= (RxData[7:0] == MAC[31:24]) & UnicastOK;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2c4363d410>]",
		style=filled,
		typ=NonblockingSubstitution];
	"232:IF" -> "233:NS"	 [cond="['RxCheckEn', 'ByteCntEq4']",
		label="(RxCheckEn & ByteCntEq4)",
		lineno=232];
	"235:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2c4363d210>",
		fillcolor=springgreen,
		label="235:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"232:IF" -> "235:IF"	 [cond="['RxCheckEn', 'ByteCntEq4']",
		label="!((RxCheckEn & ByteCntEq4))",
		lineno=232];
	"244:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2c21bbff90>",
		fillcolor=springgreen,
		label="244:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"244:IF" -> "245:NS"	 [cond="['RxEndFrm', 'RxAbort']",
		label="(RxEndFrm | RxAbort)",
		lineno=244];
	"222:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2c4363d890>",
		fillcolor=turquoise,
		label="222:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"223:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2c4363d8d0>",
		fillcolor=springgreen,
		label="223:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"222:BL" -> "223:IF"	 [cond="[]",
		lineno=None];
	"221:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f2c4363dfd0>",
		clk_sens=True,
		fillcolor=gold,
		label="221:AL",
		sens="['MRxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'RxCheckEn', 'RxData', 'MAC', 'RxAbort', 'RxEndFrm', 'ByteCntEq5', 'ByteCntEq4', 'ByteCntEq7', 'ByteCntEq6', 'UnicastOK', '\
ByteCntEq3', 'ByteCntEq2']"];
	"221:AL" -> "222:BL"	 [cond="[]",
		lineno=None];
	"229:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2c4363d950>",
		fillcolor=springgreen,
		label="229:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"229:IF" -> "230:NS"	 [cond="['RxCheckEn', 'ByteCntEq3']",
		label="(RxCheckEn & ByteCntEq3)",
		lineno=229];
	"229:IF" -> "232:IF"	 [cond="['RxCheckEn', 'ByteCntEq3']",
		label="!((RxCheckEn & ByteCntEq3))",
		lineno=229];
	"226:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2c4363d910>",
		fillcolor=springgreen,
		label="226:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"223:IF" -> "226:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=223];
	"224:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2c4363de50>",
		fillcolor=firebrick,
		label="224:NS
UnicastOK <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2c4363de50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"223:IF" -> "224:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=223];
	"227:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2c4363da50>",
		fillcolor=firebrick,
		label="227:NS
UnicastOK <= RxData[7:0] == MAC[47:40];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2c4363da50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"227:NS" -> "Leaf_221:AL"	 [cond="[]",
		lineno=None];
	"233:NS" -> "Leaf_221:AL"	 [cond="[]",
		lineno=None];
	"226:IF" -> "229:IF"	 [cond="['RxCheckEn', 'ByteCntEq2']",
		label="!((RxCheckEn & ByteCntEq2))",
		lineno=226];
	"226:IF" -> "227:NS"	 [cond="['RxCheckEn', 'ByteCntEq2']",
		label="(RxCheckEn & ByteCntEq2)",
		lineno=226];
	"241:IF" -> "242:NS"	 [cond="['RxCheckEn', 'ByteCntEq7']",
		label="(RxCheckEn & ByteCntEq7)",
		lineno=241];
	"241:IF" -> "244:IF"	 [cond="['RxCheckEn', 'ByteCntEq7']",
		label="!((RxCheckEn & ByteCntEq7))",
		lineno=241];
	"224:NS" -> "Leaf_221:AL"	 [cond="[]",
		lineno=None];
	"235:IF" -> "236:NS"	 [cond="['RxCheckEn', 'ByteCntEq5']",
		label="(RxCheckEn & ByteCntEq5)",
		lineno=235];
	"235:IF" -> "238:IF"	 [cond="['RxCheckEn', 'ByteCntEq5']",
		label="!((RxCheckEn & ByteCntEq5))",
		lineno=235];
}
