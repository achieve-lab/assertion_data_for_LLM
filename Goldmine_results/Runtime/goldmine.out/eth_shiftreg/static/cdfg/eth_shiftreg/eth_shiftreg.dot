strict digraph "compose( ,  )" {
	node [label="\N"];
	"171:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb89f922550>",
		fillcolor=firebrick,
		label="171:NS
ShiftReg[7:0] <= { Fiad[0], Rgad[4:0], 2'b10 };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb89f922550>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_154:AL"	 [def_var="['ShiftReg', 'LinkFail', 'Prsd']",
		label="Leaf_154:AL"];
	"171:NS" -> "Leaf_154:AL"	 [cond="[]",
		lineno=None];
	"163:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fb89f518710>",
		fillcolor=turquoise,
		label="163:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"164:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fb89f518850>",
		fillcolor=springgreen,
		label="164:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"163:BL" -> "164:IF"	 [cond="[]",
		lineno=None];
	"188:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fb89f927b90>",
		fillcolor=springgreen,
		label="188:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"189:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb89f927d10>",
		fillcolor=firebrick,
		label="189:NS
Prsd[15:8] <= { ShiftReg[6:0], Mdi };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb89f927d10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"188:IF" -> "189:NS"	 [cond="['LatchByte']",
		label="LatchByte[1]",
		lineno=188];
	"165:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fb89f518890>",
		fillcolor=turquoise,
		label="165:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"164:IF" -> "165:BL"	 [cond="['MdcEn_n']",
		label=MdcEn_n,
		lineno=164];
	"170:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fb89f518d90>",
		fillcolor=lightcyan,
		label="170:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"170:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb89f518f90>",
		fillcolor=firebrick,
		label="170:NS
ShiftReg[7:0] <= { 2'b01, ~WriteOp, WriteOp, Fiad[4:1] };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb89f518f90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"170:CA" -> "170:NS"	 [cond="[]",
		lineno=None];
	"157:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fb89f518510>",
		fillcolor=turquoise,
		label="157:BL
ShiftReg[7:0] <= 8'h0;
Prsd[15:0] <= 16'h0;
LinkFail <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb89f518350>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7fb89f518550>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb89f518690>]",
		style=filled,
		typ=Block];
	"157:BL" -> "Leaf_154:AL"	 [cond="[]",
		lineno=None];
	"172:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb89f922850>",
		fillcolor=firebrick,
		label="172:NS
ShiftReg[7:0] <= CtrlData[15:8];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb89f922850>]",
		style=filled,
		typ=NonblockingSubstitution];
	"172:NS" -> "Leaf_154:AL"	 [cond="[]",
		lineno=None];
	"154:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fb89f5180d0>",
		clk_sens=True,
		fillcolor=gold,
		label="154:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Mdi', 'WriteOp', 'MdcEn_n', 'Fiad', 'Rgad', 'LatchByte', 'ShiftReg', 'CtrlData', 'ByteSelect']"];
	"155:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fb89f518090>",
		fillcolor=turquoise,
		label="155:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"154:AL" -> "155:BL"	 [cond="[]",
		lineno=None];
	"173:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fb89f922a90>",
		fillcolor=lightcyan,
		label="173:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"173:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb89f922b90>",
		fillcolor=firebrick,
		label="173:NS
ShiftReg[7:0] <= CtrlData[7:0];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb89f922b90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"173:CA" -> "173:NS"	 [cond="[]",
		lineno=None];
	"172:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fb89f922750>",
		fillcolor=lightcyan,
		label="172:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"172:CA" -> "172:NS"	 [cond="[]",
		lineno=None];
	"197:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fb89f927050>",
		def_var="['ShiftedBit']",
		fillcolor=deepskyblue,
		label="197:AS
ShiftedBit = ShiftReg[7];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ShiftReg']"];
	"167:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fb89f518990>",
		fillcolor=turquoise,
		label="167:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"169:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fb89f9228d0>",
		fillcolor=linen,
		label="169:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"167:BL" -> "169:CS"	 [cond="[]",
		lineno=None];
	"178:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fb89f922fd0>",
		fillcolor=turquoise,
		label="178:BL
ShiftReg[7:0] <= { ShiftReg[6:0], Mdi };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb89f922f90>]",
		style=filled,
		typ=Block];
	"180:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fb89f927550>",
		fillcolor=springgreen,
		label="180:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"178:BL" -> "180:IF"	 [cond="[]",
		lineno=None];
	"189:NS" -> "Leaf_154:AL"	 [cond="[]",
		lineno=None];
	"156:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fb89f518650>",
		fillcolor=springgreen,
		label="156:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"156:IF" -> "163:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=156];
	"156:IF" -> "157:BL"	 [cond="['Reset']",
		label=Reset,
		lineno=156];
	"Leaf_154:AL" -> "154:AL";
	"Leaf_154:AL" -> "197:AS";
	"171:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fb89f922290>",
		fillcolor=lightcyan,
		label="171:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"171:CA" -> "171:NS"	 [cond="[]",
		lineno=None];
	"166:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fb89f922c90>",
		fillcolor=springgreen,
		label="166:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"166:IF" -> "167:BL"	 [cond="['ByteSelect']",
		label="(|ByteSelect)",
		lineno=166];
	"166:IF" -> "178:BL"	 [cond="['ByteSelect']",
		label="!((|ByteSelect))",
		lineno=166];
	"165:BL" -> "166:IF"	 [cond="[]",
		lineno=None];
	"187:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fb89f927810>",
		fillcolor=turquoise,
		label="187:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"187:BL" -> "188:IF"	 [cond="[]",
		lineno=None];
	"180:IF" -> "187:BL"	 [cond="['LatchByte']",
		label="!(LatchByte[0])",
		lineno=180];
	"181:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fb89f927590>",
		fillcolor=turquoise,
		label="181:BL
Prsd[7:0] <= { ShiftReg[6:0], Mdi };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb89f927510>]",
		style=filled,
		typ=Block];
	"180:IF" -> "181:BL"	 [cond="['LatchByte']",
		label="LatchByte[0]",
		lineno=180];
	"170:NS" -> "Leaf_154:AL"	 [cond="[]",
		lineno=None];
	"173:NS" -> "Leaf_154:AL"	 [cond="[]",
		lineno=None];
	"183:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fb89f927690>",
		fillcolor=springgreen,
		label="183:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"184:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb89f927890>",
		fillcolor=firebrick,
		label="184:NS
LinkFail <= ~ShiftReg[1];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb89f927890>]",
		style=filled,
		typ=NonblockingSubstitution];
	"183:IF" -> "184:NS"	 [cond="['Rgad']",
		label="(Rgad == 5'h01)",
		lineno=183];
	"155:BL" -> "156:IF"	 [cond="[]",
		lineno=None];
	"184:NS" -> "Leaf_154:AL"	 [cond="[]",
		lineno=None];
	"169:CS" -> "170:CA"	 [cond="['ByteSelect']",
		label="ByteSelect[3:0]",
		lineno=169];
	"169:CS" -> "173:CA"	 [cond="['ByteSelect']",
		label="ByteSelect[3:0]",
		lineno=169];
	"169:CS" -> "172:CA"	 [cond="['ByteSelect']",
		label="ByteSelect[3:0]",
		lineno=169];
	"169:CS" -> "171:CA"	 [cond="['ByteSelect']",
		label="ByteSelect[3:0]",
		lineno=169];
	"181:BL" -> "183:IF"	 [cond="[]",
		lineno=None];
}
