strict digraph "" {
	node [label="\N"];
	"117:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f699c3cce10>",
		fillcolor=turquoise,
		label="117:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"118:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f699c3ccf10>",
		fillcolor=springgreen,
		label="118:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"117:BL" -> "118:IF"	 [cond="[]",
		lineno=None];
	"130:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f699c3db350>",
		fillcolor=linen,
		label="130:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"133:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f699c3dbf10>",
		fillcolor=lightcyan,
		label="133:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"130:CS" -> "133:CA"	 [cond="['ByteSelect']",
		label="ByteSelect[3:0]",
		lineno=130];
	"135:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f699c3ef750>",
		fillcolor=lightcyan,
		label="135:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"130:CS" -> "135:CA"	 [cond="['ByteSelect']",
		label="ByteSelect[3:0]",
		lineno=130];
	"132:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f699c3db9d0>",
		fillcolor=lightcyan,
		label="132:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"130:CS" -> "132:CA"	 [cond="['ByteSelect']",
		label="ByteSelect[3:0]",
		lineno=130];
	"131:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f699c3db4d0>",
		fillcolor=lightcyan,
		label="131:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"130:CS" -> "131:CA"	 [cond="['ByteSelect']",
		label="ByteSelect[3:0]",
		lineno=130];
	"134:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f699c3ef350>",
		fillcolor=lightcyan,
		label="134:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"130:CS" -> "134:CA"	 [cond="['ByteSelect']",
		label="ByteSelect[3:0]",
		lineno=130];
	"141:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f699c3c6590>",
		fillcolor=springgreen,
		label="141:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"142:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f699cfe8ad0>",
		fillcolor=turquoise,
		label="142:BL
Prsd[7:0] <= #Tp { ShiftReg[6:0], Mdi };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f699c3c6ad0>]",
		style=filled,
		typ=Block];
	"141:IF" -> "142:BL"	 [cond="['LatchByte']",
		label="LatchByte[0]",
		lineno=141];
	"148:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f699c3c65d0>",
		fillcolor=turquoise,
		label="148:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"141:IF" -> "148:BL"	 [cond="['LatchByte']",
		label="!(LatchByte[0])",
		lineno=141];
	"116:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f699c3b6310>",
		clk_sens=True,
		fillcolor=gold,
		label="116:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Mdi', 'WriteOp', 'MdcEn_n', 'Fiad', 'Rgad', 'LatchByte', 'ShiftReg', 'CtrlData', 'ByteSelect']"];
	"116:AL" -> "117:BL"	 [cond="[]",
		lineno=None];
	"128:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f699c3c60d0>",
		fillcolor=springgreen,
		label="128:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"139:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f699c3c6110>",
		fillcolor=turquoise,
		label="139:BL
ShiftReg[7:0] <= #Tp { ShiftReg[6:0], Mdi };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f699c3c6150>]",
		style=filled,
		typ=Block];
	"128:IF" -> "139:BL"	 [cond="['ByteSelect']",
		label="!((|ByteSelect))",
		lineno=128];
	"129:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f699c3db310>",
		fillcolor=turquoise,
		label="129:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"128:IF" -> "129:BL"	 [cond="['ByteSelect']",
		label="(|ByteSelect)",
		lineno=128];
	"133:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f699c3dbf90>",
		fillcolor=firebrick,
		label="133:NS
ShiftReg[7:0] <= #Tp CtrlData[15:8];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f699c3dbf90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"133:CA" -> "133:NS"	 [cond="[]",
		lineno=None];
	"134:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f699c3ef3d0>",
		fillcolor=firebrick,
		label="134:NS
ShiftReg[7:0] <= #Tp CtrlData[7:0];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f699c3ef3d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_116:AL"	 [def_var="['ShiftReg', 'LinkFail', 'Prsd']",
		label="Leaf_116:AL"];
	"134:NS" -> "Leaf_116:AL"	 [cond="[]",
		lineno=None];
	"135:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f699c3ef790>",
		fillcolor=firebrick,
		label="135:NS
ShiftReg[7:0] <= #Tp 8'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f699c3ef790>]",
		style=filled,
		typ=NonblockingSubstitution];
	"135:CA" -> "135:NS"	 [cond="[]",
		lineno=None];
	"144:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f699c3c6e90>",
		fillcolor=springgreen,
		label="144:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"145:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f699c3c6ed0>",
		fillcolor=firebrick,
		label="145:NS
LinkFail <= #Tp ~ShiftReg[1];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f699c3c6ed0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"144:IF" -> "145:NS"	 [cond="['Rgad']",
		label="(Rgad == 5'h01)",
		lineno=144];
	"142:BL" -> "144:IF"	 [cond="[]",
		lineno=None];
	"132:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f699c3dba50>",
		fillcolor=firebrick,
		label="132:NS
ShiftReg[7:0] <= #Tp { Fiad[0], Rgad[4:0], 2'b10 };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f699c3dba50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"132:CA" -> "132:NS"	 [cond="[]",
		lineno=None];
	"145:NS" -> "Leaf_116:AL"	 [cond="[]",
		lineno=None];
	"139:BL" -> "141:IF"	 [cond="[]",
		lineno=None];
	"125:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f699c3ccf90>",
		fillcolor=turquoise,
		label="125:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"118:IF" -> "125:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=118];
	"119:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f699c3efb90>",
		fillcolor=turquoise,
		label="119:BL
ShiftReg[7:0] <= #Tp 8'h0;
Prsd[15:0] <= #Tp 16'h0;
LinkFail <= #Tp 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f699c3efbd0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f699c3efe50>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f699c3b6110>]",
		style=filled,
		typ=Block];
	"118:IF" -> "119:BL"	 [cond="['Reset']",
		label=Reset,
		lineno=118];
	"133:NS" -> "Leaf_116:AL"	 [cond="[]",
		lineno=None];
	"126:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f699c3ccfd0>",
		fillcolor=springgreen,
		label="126:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"125:BL" -> "126:IF"	 [cond="[]",
		lineno=None];
	"131:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f699c3db550>",
		fillcolor=firebrick,
		label="131:NS
ShiftReg[7:0] <= #Tp { 2'b01, ~WriteOp, WriteOp, Fiad[4:1] };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f699c3db550>]",
		style=filled,
		typ=NonblockingSubstitution];
	"131:CA" -> "131:NS"	 [cond="[]",
		lineno=None];
	"129:BL" -> "130:CS"	 [cond="[]",
		lineno=None];
	"127:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f699c3c6090>",
		fillcolor=turquoise,
		label="127:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"126:IF" -> "127:BL"	 [cond="['MdcEn_n']",
		label=MdcEn_n,
		lineno=126];
	"135:NS" -> "Leaf_116:AL"	 [cond="[]",
		lineno=None];
	"150:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f699c3c6650>",
		fillcolor=firebrick,
		label="150:NS
Prsd[15:8] <= #Tp { ShiftReg[6:0], Mdi };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f699c3c6650>]",
		style=filled,
		typ=NonblockingSubstitution];
	"150:NS" -> "Leaf_116:AL"	 [cond="[]",
		lineno=None];
	"131:NS" -> "Leaf_116:AL"	 [cond="[]",
		lineno=None];
	"132:NS" -> "Leaf_116:AL"	 [cond="[]",
		lineno=None];
	"119:BL" -> "Leaf_116:AL"	 [cond="[]",
		lineno=None];
	"134:CA" -> "134:NS"	 [cond="[]",
		lineno=None];
	"149:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f699c3c6610>",
		fillcolor=springgreen,
		label="149:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"148:BL" -> "149:IF"	 [cond="[]",
		lineno=None];
	"149:IF" -> "150:NS"	 [cond="['LatchByte']",
		label="LatchByte[1]",
		lineno=149];
	"127:BL" -> "128:IF"	 [cond="[]",
		lineno=None];
}
