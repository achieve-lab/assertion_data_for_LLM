strict digraph "compose( ,  )" {
	node [label="\N"];
	"14:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f89f5c77c50>",
		fillcolor=lightcyan,
		label="14:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"14:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f89f5c800d0>",
		fillcolor=firebrick,
		label="14:NS
q <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f89f5c800d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"14:CA" -> "14:NS"	 [cond="[]",
		lineno=None];
	"16:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f89f5c7b850>",
		fillcolor=firebrick,
		label="16:NS
q <= 1'bx;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f89f5c7b850>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_9:AL"	 [def_var="['q']",
		label="Leaf_9:AL"];
	"16:NS" -> "Leaf_9:AL"	 [cond="[]",
		lineno=None];
	"11:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f89f5c853d0>",
		fillcolor=turquoise,
		label="11:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"12:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f89f5c919d0>",
		fillcolor=linen,
		label="12:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"11:BL" -> "12:CS"	 [cond="[]",
		lineno=None];
	"20:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f89f5c7bd90>",
		def_var="['q_bar']",
		fillcolor=deepskyblue,
		label="20:AS
q_bar = ~q;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['q']"];
	"Leaf_9:AL" -> "20:AS";
	"9:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f89f5c71650>",
		clk_sens=False,
		fillcolor=gold,
		label="9:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['q', 'rst_n', 's', 'r']"];
	"Leaf_9:AL" -> "9:AL";
	"12:CS" -> "14:CA"	 [cond="['s', 'r']",
		label="{ s, r }",
		lineno=12];
	"15:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f89f5c91450>",
		fillcolor=lightcyan,
		label="15:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"12:CS" -> "15:CA"	 [cond="['s', 'r']",
		label="{ s, r }",
		lineno=12];
	"13:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f89f5c77dd0>",
		fillcolor=lightcyan,
		label="13:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"12:CS" -> "13:CA"	 [cond="['s', 'r']",
		label="{ s, r }",
		lineno=12];
	"16:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f89f5c7bfd0>",
		fillcolor=lightcyan,
		label="16:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"12:CS" -> "16:CA"	 [cond="['s', 'r']",
		label="{ s, r }",
		lineno=12];
	"10:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f89f5c85110>",
		fillcolor=springgreen,
		label="10:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"10:IF" -> "11:BL"	 [cond="['rst_n']",
		label="!((!rst_n))",
		lineno=10];
	"10:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f89f5c857d0>",
		fillcolor=firebrick,
		label="10:NS
q <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f89f5c857d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"10:IF" -> "10:NS"	 [cond="['rst_n']",
		label="(!rst_n)",
		lineno=10];
	"15:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f89f5c91a90>",
		fillcolor=firebrick,
		label="15:NS
q <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f89f5c91a90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"15:NS" -> "Leaf_9:AL"	 [cond="[]",
		lineno=None];
	"15:CA" -> "15:NS"	 [cond="[]",
		lineno=None];
	"13:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f89f5c77390>",
		fillcolor=firebrick,
		label="13:NS
q <= q;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f89f5c77390>]",
		style=filled,
		typ=NonblockingSubstitution];
	"13:NS" -> "Leaf_9:AL"	 [cond="[]",
		lineno=None];
	"9:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f89f5c2d8d0>",
		fillcolor=turquoise,
		label="9:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"9:BL" -> "10:IF"	 [cond="[]",
		lineno=None];
	"9:AL" -> "9:BL"	 [cond="[]",
		lineno=None];
	"13:CA" -> "13:NS"	 [cond="[]",
		lineno=None];
	"16:CA" -> "16:NS"	 [cond="[]",
		lineno=None];
	"10:NS" -> "Leaf_9:AL"	 [cond="[]",
		lineno=None];
	"14:NS" -> "Leaf_9:AL"	 [cond="[]",
		lineno=None];
}
