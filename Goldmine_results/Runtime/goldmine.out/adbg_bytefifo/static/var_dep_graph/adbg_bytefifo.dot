digraph "" {
	PUSH_POPn -> reg6	 [weight=1.0];
	PUSH_POPn -> reg7	 [weight=1.0];
	PUSH_POPn -> reg4	 [weight=1.0];
	PUSH_POPn -> reg5	 [weight=1.0];
	PUSH_POPn -> reg2	 [weight=1.0];
	PUSH_POPn -> reg3	 [weight=1.0];
	PUSH_POPn -> reg0	 [weight=1.0];
	PUSH_POPn -> reg1	 [weight=1.0];
	PUSH_POPn -> counter	 [weight=3.0];
	push_ok -> reg6	 [weight=1.0];
	push_ok -> reg7	 [weight=1.0];
	push_ok -> reg4	 [weight=1.0];
	push_ok -> reg5	 [weight=1.0];
	push_ok -> reg2	 [weight=1.0];
	push_ok -> reg3	 [weight=1.0];
	push_ok -> reg0	 [weight=1.0];
	push_ok -> reg1	 [weight=1.0];
	push_ok -> counter	 [weight=2.0];
	reg6 -> reg7	 [weight=1.0];
	reg6 -> DATA_OUT	 [weight=1.0];
	reg7 -> DATA_OUT	 [weight=1.0];
	reg4 -> reg5	 [weight=1.0];
	reg4 -> DATA_OUT	 [weight=1.0];
	reg5 -> reg6	 [weight=1.0];
	reg5 -> DATA_OUT	 [weight=1.0];
	reg2 -> reg3	 [weight=1.0];
	reg2 -> DATA_OUT	 [weight=1.0];
	reg3 -> reg4	 [weight=1.0];
	reg3 -> DATA_OUT	 [weight=1.0];
	reg0 -> reg1	 [weight=1.0];
	reg0 -> DATA_OUT	 [weight=1.0];
	DATA_IN -> reg0	 [weight=1.0];
	RST -> reg6	 [weight=2.0];
	RST -> reg7	 [weight=2.0];
	RST -> reg4	 [weight=2.0];
	RST -> reg5	 [weight=2.0];
	RST -> reg2	 [weight=2.0];
	RST -> reg3	 [weight=2.0];
	RST -> reg0	 [weight=2.0];
	RST -> reg1	 [weight=2.0];
	RST -> counter	 [weight=3.0];
	EN -> reg6	 [weight=1.0];
	EN -> reg7	 [weight=1.0];
	EN -> reg4	 [weight=1.0];
	EN -> reg5	 [weight=1.0];
	EN -> reg2	 [weight=1.0];
	EN -> reg3	 [weight=1.0];
	EN -> reg0	 [weight=1.0];
	EN -> reg1	 [weight=1.0];
	EN -> counter	 [weight=3.0];
	pop_ok -> counter	 [weight=1.0];
	BYTES_AVAIL -> BYTES_FREE	 [weight=1.0];
	reg1 -> reg2	 [weight=1.0];
	reg1 -> DATA_OUT	 [weight=1.0];
	counter -> push_ok	 [weight=1.0];
	counter -> pop_ok	 [weight=1.0];
	counter -> BYTES_AVAIL	 [weight=1.0];
	counter -> DATA_OUT	 [weight=9.0];
	counter -> counter	 [weight=2.0];
}
