strict digraph "" {
	node [label="\N"];
	"224:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbceaa48ad0>",
		clk_sens=False,
		fillcolor=gold,
		label="224:AL",
		sens="['counter', 'reg0', 'reg1', 'reg2', 'reg3', 'reg4', 'reg5', 'reg6', 'reg7']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reg5', 'reg6', 'reg7', 'reg4', 'counter', 'reg2', 'reg3', 'reg0', 'reg1']"];
	"226:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fbceaa48fd0>",
		fillcolor=turquoise,
		label="226:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"224:AL" -> "226:BL"	 [cond="[]",
		lineno=None];
	"227:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fbceaa4f050>",
		fillcolor=linen,
		label="227:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"233:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbceaa4f990>",
		fillcolor=lightcyan,
		label="233:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"227:CS" -> "233:CA"	 [cond="['counter']",
		label=counter,
		lineno=227];
	"230:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbceaa4f4d0>",
		fillcolor=lightcyan,
		label="230:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"227:CS" -> "230:CA"	 [cond="['counter']",
		label=counter,
		lineno=227];
	"231:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbceaa4f690>",
		fillcolor=lightcyan,
		label="231:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"227:CS" -> "231:CA"	 [cond="['counter']",
		label=counter,
		lineno=227];
	"228:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbceaa4f110>",
		fillcolor=lightcyan,
		label="228:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"227:CS" -> "228:CA"	 [cond="['counter']",
		label=counter,
		lineno=227];
	"234:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbceaa4fb50>",
		fillcolor=lightcyan,
		label="234:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"227:CS" -> "234:CA"	 [cond="['counter']",
		label=counter,
		lineno=227];
	"232:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbceaa4f850>",
		fillcolor=lightcyan,
		label="232:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"227:CS" -> "232:CA"	 [cond="['counter']",
		label=counter,
		lineno=227];
	"235:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbceaa4fd10>",
		fillcolor=lightcyan,
		label="235:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"227:CS" -> "235:CA"	 [cond="['counter']",
		label=counter,
		lineno=227];
	"229:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbceaa4f310>",
		fillcolor=lightcyan,
		label="229:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"227:CS" -> "229:CA"	 [cond="['counter']",
		label=counter,
		lineno=227];
	"236:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbceaa4fed0>",
		fillcolor=lightcyan,
		label="236:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"227:CS" -> "236:CA"	 [cond="['counter']",
		label=counter,
		lineno=227];
	"232:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbceaa3f4d0>",
		fillcolor=cadetblue,
		label="232:BS
DATA_OUT = reg4;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbceaa3f4d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_224:AL"	 [def_var="['DATA_OUT']",
		label="Leaf_224:AL"];
	"232:BS" -> "Leaf_224:AL"	 [cond="[]",
		lineno=None];
	"233:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbceaa4fa10>",
		fillcolor=cadetblue,
		label="233:BS
DATA_OUT = reg5;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbceaa4fa10>]",
		style=filled,
		typ=BlockingSubstitution];
	"233:CA" -> "233:BS"	 [cond="[]",
		lineno=None];
	"230:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbceaa4f550>",
		fillcolor=cadetblue,
		label="230:BS
DATA_OUT = reg2;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbceaa4f550>]",
		style=filled,
		typ=BlockingSubstitution];
	"230:CA" -> "230:BS"	 [cond="[]",
		lineno=None];
	"236:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbceaa4ff10>",
		fillcolor=cadetblue,
		label="236:BS
DATA_OUT = 8'h00;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbceaa4ff10>]",
		style=filled,
		typ=BlockingSubstitution];
	"236:BS" -> "Leaf_224:AL"	 [cond="[]",
		lineno=None];
	"234:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbceaa4fbd0>",
		fillcolor=cadetblue,
		label="234:BS
DATA_OUT = reg6;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbceaa4fbd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"234:BS" -> "Leaf_224:AL"	 [cond="[]",
		lineno=None];
	"231:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbceaa4f710>",
		fillcolor=cadetblue,
		label="231:BS
DATA_OUT = reg3;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbceaa4f710>]",
		style=filled,
		typ=BlockingSubstitution];
	"231:CA" -> "231:BS"	 [cond="[]",
		lineno=None];
	"229:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbceaa4f390>",
		fillcolor=cadetblue,
		label="229:BS
DATA_OUT = reg1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbceaa4f390>]",
		style=filled,
		typ=BlockingSubstitution];
	"229:BS" -> "Leaf_224:AL"	 [cond="[]",
		lineno=None];
	"228:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbceaa4f190>",
		fillcolor=cadetblue,
		label="228:BS
DATA_OUT = reg0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbceaa4f190>]",
		style=filled,
		typ=BlockingSubstitution];
	"228:CA" -> "228:BS"	 [cond="[]",
		lineno=None];
	"234:CA" -> "234:BS"	 [cond="[]",
		lineno=None];
	"232:CA" -> "232:BS"	 [cond="[]",
		lineno=None];
	"233:BS" -> "Leaf_224:AL"	 [cond="[]",
		lineno=None];
	"226:BL" -> "227:CS"	 [cond="[]",
		lineno=None];
	"235:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbceaa4fd90>",
		fillcolor=cadetblue,
		label="235:BS
DATA_OUT = reg7;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbceaa4fd90>]",
		style=filled,
		typ=BlockingSubstitution];
	"235:CA" -> "235:BS"	 [cond="[]",
		lineno=None];
	"235:BS" -> "Leaf_224:AL"	 [cond="[]",
		lineno=None];
	"229:CA" -> "229:BS"	 [cond="[]",
		lineno=None];
	"228:BS" -> "Leaf_224:AL"	 [cond="[]",
		lineno=None];
	"230:BS" -> "Leaf_224:AL"	 [cond="[]",
		lineno=None];
	"231:BS" -> "Leaf_224:AL"	 [cond="[]",
		lineno=None];
	"236:CA" -> "236:BS"	 [cond="[]",
		lineno=None];
}
