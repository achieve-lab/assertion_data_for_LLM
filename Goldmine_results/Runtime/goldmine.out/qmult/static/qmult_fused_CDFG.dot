strict digraph "compose( ,  )" {
	node [label="\N"];
	"comp_r.60:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f2a7ba01c90>",
		clk_sens=False,
		fillcolor=gold,
		label="comp_r.60:AL",
		sens="['a']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['a']"];
	"comp_r.61:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2a7ba01f90>",
		fillcolor=turquoise,
		label="comp_r.61:BL
data <= a;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2a7ba01ed0>]",
		style=filled,
		typ=Block];
	"comp_r.60:AL" -> "comp_r.61:BL"	 [cond="[]",
		lineno=None];
	"comp_r.66:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2a7b9fc2d0>",
		fillcolor=turquoise,
		label="comp_r.66:BL
flip <= ~a;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2a7b9fc3d0>]",
		style=filled,
		typ=Block];
	"comp_r.Leaf_65:AL"	 [def_var="['flip']",
		label="comp_r.Leaf_65:AL"];
	"comp_r.66:BL" -> "comp_r.Leaf_65:AL"	 [cond="[]",
		lineno=None];
	"105:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2a7b9d5e90>",
		fillcolor=turquoise,
		label="105:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"111:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2a7b9e7650>",
		fillcolor=springgreen,
		label="111:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"105:BL" -> "111:IF"	 [cond="[]",
		lineno=None];
	"106:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2a7b9e71d0>",
		fillcolor=springgreen,
		label="106:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"105:BL" -> "106:IF"	 [cond="[]",
		lineno=None];
	"104:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f2a7b9d5ed0>",
		clk_sens=False,
		fillcolor=gold,
		label="104:AL",
		sens="['a_ext', 'b_ext']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['a', 'a_ext', 'b', 'b_ext']"];
	"104:AL" -> "105:BL"	 [cond="[]",
		lineno=None];
	"Leaf_122:AL"	 [def_var="['retVal']",
		label="Leaf_122:AL"];
	"102:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2a7b9d5c90>",
		def_var="['c']",
		fillcolor=deepskyblue,
		label="102:AS
c = retVal;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['retVal']"];
	"Leaf_122:AL" -> "102:AS";
	"comp_b.Leaf_70:AL"	 [def_var="['out']",
		label="comp_b.Leaf_70:AL"];
	"comp_b.58:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2a7b9f8050>",
		def_var="['b']",
		fillcolor=deepskyblue,
		label="comp_b.58:AS
b = out;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['out']"];
	"comp_b.Leaf_70:AL" -> "comp_b.58:AS";
	"comp_b.66:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2a7b9fc2d0>",
		fillcolor=turquoise,
		label="comp_b.66:BL
flip <= ~a;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2a7b9fc3d0>]",
		style=filled,
		typ=Block];
	"comp_b.Leaf_65:AL"	 [def_var="['flip']",
		label="comp_b.Leaf_65:AL"];
	"comp_b.66:BL" -> "comp_b.Leaf_65:AL"	 [cond="[]",
		lineno=None];
	"125:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2a7b5b5c50>",
		fillcolor=springgreen,
		label="125:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"129:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2a7b5b4050>",
		fillcolor=turquoise,
		label="129:BL
retVal[32 - 1] <= 0;
retVal[32-2:0] <= result[32-2+15:15];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2a7b5b5e90>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f2a7b5b42d0>]",
		style=filled,
		typ=Block];
	"125:IF" -> "129:BL"	 [cond="['a', 'b', 'a', 'b']",
		label="!(((a[32 - 1] == 1) && (b[32 - 1] == 0) || (a[32 - 1] == 0) && (b[32 - 1] == 1)))",
		lineno=125];
	"125:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2a7b5b5990>",
		fillcolor=turquoise,
		label="125:BL
retVal[32 - 1] <= 1;
retVal[32-2:0] <= r_ext[32-2:0];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2a7b5b5810>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f2a7b5b5b50>]",
		style=filled,
		typ=Block];
	"125:IF" -> "125:BL"	 [cond="['a', 'b', 'a', 'b']",
		label="((a[32 - 1] == 1) && (b[32 - 1] == 0) || (a[32 - 1] == 0) && (b[32 - 1] == 1))",
		lineno=125];
	"comp_r.Leaf_70:AL"	 [def_var="['out']",
		label="comp_r.Leaf_70:AL"];
	"comp_r.58:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2a7b9f8050>",
		def_var="['b']",
		fillcolor=deepskyblue,
		label="comp_r.58:AS
b = out;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['out']"];
	"comp_r.Leaf_70:AL" -> "comp_r.58:AS";
	"112:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2a7b9e7690>",
		fillcolor=firebrick,
		label="112:NS
b_mult <= b_ext;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2a7b9e7690>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_104:AL"	 [def_var="['a_mult', 'b_mult']",
		label="Leaf_104:AL"];
	"112:NS" -> "Leaf_104:AL"	 [cond="[]",
		lineno=None];
	"117:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f2a7b9e79d0>",
		clk_sens=False,
		fillcolor=gold,
		label="117:AL",
		sens="['a_mult', 'b_mult']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['a_mult', 'b_mult']"];
	"118:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2a7b9e74d0>",
		fillcolor=turquoise,
		label="118:BL
result <= a_mult * b_mult;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2a7b9e7ad0>]",
		style=filled,
		typ=Block];
	"117:AL" -> "118:BL"	 [cond="[]",
		lineno=None];
	"comp_a.61:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2a7ba01f90>",
		fillcolor=turquoise,
		label="comp_a.61:BL
data <= a;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2a7ba01ed0>]",
		style=filled,
		typ=Block];
	"comp_a.Leaf_60:AL"	 [def_var="['data']",
		label="comp_a.Leaf_60:AL"];
	"comp_a.61:BL" -> "comp_a.Leaf_60:AL"	 [cond="[]",
		lineno=None];
	"111:IF" -> "112:NS"	 [cond="['b']",
		label="(b[32 - 1] == 1)",
		lineno=111];
	"114:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2a7b9e7810>",
		fillcolor=firebrick,
		label="114:NS
b_mult <= b;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2a7b9e7810>]",
		style=filled,
		typ=NonblockingSubstitution];
	"111:IF" -> "114:NS"	 [cond="['b']",
		label="!((b[32 - 1] == 1))",
		lineno=111];
	"107:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2a7b9e7210>",
		fillcolor=firebrick,
		label="107:NS
a_mult <= a_ext;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2a7b9e7210>]",
		style=filled,
		typ=NonblockingSubstitution];
	"107:NS" -> "Leaf_104:AL"	 [cond="[]",
		lineno=None];
	"comp_r.70:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f2a7ba262d0>",
		clk_sens=False,
		fillcolor=gold,
		label="comp_r.70:AL",
		sens="['flip']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['flip']"];
	"comp_r.Leaf_65:AL" -> "comp_r.70:AL";
	"109:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2a7b9e7390>",
		fillcolor=firebrick,
		label="109:NS
a_mult <= a;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2a7b9e7390>]",
		style=filled,
		typ=NonblockingSubstitution];
	"109:NS" -> "Leaf_104:AL"	 [cond="[]",
		lineno=None];
	"comp_a.Leaf_65:AL"	 [def_var="['flip']",
		label="comp_a.Leaf_65:AL"];
	"comp_a.70:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f2a7ba262d0>",
		clk_sens=False,
		fillcolor=gold,
		label="comp_a.70:AL",
		sens="['flip']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['flip']"];
	"comp_a.Leaf_65:AL" -> "comp_a.70:AL";
	"comp_a.Leaf_70:AL"	 [def_var="['out']",
		label="comp_a.Leaf_70:AL"];
	"comp_a.58:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2a7b9f8050>",
		def_var="['b']",
		fillcolor=deepskyblue,
		label="comp_a.58:AS
b = out;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['out']"];
	"comp_a.Leaf_70:AL" -> "comp_a.58:AS";
	"106:IF" -> "107:NS"	 [cond="['a']",
		label="(a[32 - 1] == 1)",
		lineno=106];
	"106:IF" -> "109:NS"	 [cond="['a']",
		label="!((a[32 - 1] == 1))",
		lineno=106];
	"comp_b.Leaf_60:AL"	 [def_var="['data']",
		label="comp_b.Leaf_60:AL"];
	"122:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f2a7b9e7d90>",
		clk_sens=False,
		fillcolor=gold,
		label="122:AL",
		sens="['result', 'r_ext']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['a', 'b', 'result', 'r_ext']"];
	"123:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2a7b9e7d50>",
		fillcolor=turquoise,
		label="123:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"122:AL" -> "123:BL"	 [cond="[]",
		lineno=None];
	"Leaf_117:AL"	 [def_var="['result']",
		label="Leaf_117:AL"];
	"Leaf_117:AL" -> "122:AL";
	"123:BL" -> "125:IF"	 [cond="[]",
		lineno=None];
	"comp_b.60:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f2a7ba01c90>",
		clk_sens=False,
		fillcolor=gold,
		label="comp_b.60:AL",
		sens="['a']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['a']"];
	"comp_b.61:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2a7ba01f90>",
		fillcolor=turquoise,
		label="comp_b.61:BL
data <= a;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2a7ba01ed0>]",
		style=filled,
		typ=Block];
	"comp_b.60:AL" -> "comp_b.61:BL"	 [cond="[]",
		lineno=None];
	"comp_a.71:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2a7de4ff10>",
		fillcolor=turquoise,
		label="comp_a.71:BL
out <= flip + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2a7bd49a90>]",
		style=filled,
		typ=Block];
	"comp_a.71:BL" -> "comp_a.Leaf_70:AL"	 [cond="[]",
		lineno=None];
	"comp_a.70:AL" -> "comp_a.71:BL"	 [cond="[]",
		lineno=None];
	"114:NS" -> "Leaf_104:AL"	 [cond="[]",
		lineno=None];
	"comp_a.58:AS" -> "104:AL";
	"comp_a.66:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2a7b9fc2d0>",
		fillcolor=turquoise,
		label="comp_a.66:BL
flip <= ~a;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2a7b9fc3d0>]",
		style=filled,
		typ=Block];
	"comp_a.66:BL" -> "comp_a.Leaf_65:AL"	 [cond="[]",
		lineno=None];
	"comp_r.Leaf_60:AL"	 [def_var="['data']",
		label="comp_r.Leaf_60:AL"];
	"comp_r.61:BL" -> "comp_r.Leaf_60:AL"	 [cond="[]",
		lineno=None];
	"comp_r.71:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2a7de4ff10>",
		fillcolor=turquoise,
		label="comp_r.71:BL
out <= flip + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2a7bd49a90>]",
		style=filled,
		typ=Block];
	"comp_r.70:AL" -> "comp_r.71:BL"	 [cond="[]",
		lineno=None];
	"129:BL" -> "Leaf_122:AL"	 [cond="[]",
		lineno=None];
	"comp_b.61:BL" -> "comp_b.Leaf_60:AL"	 [cond="[]",
		lineno=None];
	"Leaf_104:AL" -> "117:AL";
	"comp_a.65:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f2a7b9fc1d0>",
		clk_sens=False,
		fillcolor=gold,
		label="comp_a.65:AL",
		sens="['data']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['a']"];
	"comp_a.65:AL" -> "comp_a.66:BL"	 [cond="[]",
		lineno=None];
	"comp_b.70:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f2a7ba262d0>",
		clk_sens=False,
		fillcolor=gold,
		label="comp_b.70:AL",
		sens="['flip']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['flip']"];
	"comp_b.Leaf_65:AL" -> "comp_b.70:AL";
	"comp_b.71:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2a7de4ff10>",
		fillcolor=turquoise,
		label="comp_b.71:BL
out <= flip + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2a7bd49a90>]",
		style=filled,
		typ=Block];
	"comp_b.70:AL" -> "comp_b.71:BL"	 [cond="[]",
		lineno=None];
	"comp_b.71:BL" -> "comp_b.Leaf_70:AL"	 [cond="[]",
		lineno=None];
	"comp_r.71:BL" -> "comp_r.Leaf_70:AL"	 [cond="[]",
		lineno=None];
	"comp_b.65:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f2a7b9fc1d0>",
		clk_sens=False,
		fillcolor=gold,
		label="comp_b.65:AL",
		sens="['data']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['a']"];
	"comp_b.65:AL" -> "comp_b.66:BL"	 [cond="[]",
		lineno=None];
	"comp_b.58:AS" -> "104:AL";
	"118:BL" -> "Leaf_117:AL"	 [cond="[]",
		lineno=None];
	"comp_a.60:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f2a7ba01c90>",
		clk_sens=False,
		fillcolor=gold,
		label="comp_a.60:AL",
		sens="['a']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['a']"];
	"comp_a.60:AL" -> "comp_a.61:BL"	 [cond="[]",
		lineno=None];
	"125:BL" -> "Leaf_122:AL"	 [cond="[]",
		lineno=None];
	"comp_r.65:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f2a7b9fc1d0>",
		clk_sens=False,
		fillcolor=gold,
		label="comp_r.65:AL",
		sens="['data']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['a']"];
	"comp_r.65:AL" -> "comp_r.66:BL"	 [cond="[]",
		lineno=None];
	"comp_r.58:AS" -> "122:AL";
}
