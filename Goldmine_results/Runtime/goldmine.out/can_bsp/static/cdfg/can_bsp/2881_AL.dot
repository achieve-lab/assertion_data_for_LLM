strict digraph "" {
	node [label="\N"];
	"2883:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f44f6933e50>",
		fillcolor=springgreen,
		label="2883:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2885:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f44f6933e90>",
		fillcolor=springgreen,
		label="2885:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2883:IF" -> "2885:IF"	 [cond="['rst']",
		label="!(rst)",
		lineno=2883];
	"2884:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f44f6927410>",
		fillcolor=firebrick,
		label="2884:NS
data_len <= 4'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f44f6927410>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2883:IF" -> "2884:NS"	 [cond="['rst']",
		label=rst,
		lineno=2883];
	"Leaf_2881:AL"	 [def_var="['data_len']",
		label="Leaf_2881:AL"];
	"2882:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f44f6927610>",
		fillcolor=turquoise,
		label="2882:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"2882:BL" -> "2883:IF"	 [cond="[]",
		lineno=None];
	"2881:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f44f69275d0>",
		clk_sens=True,
		fillcolor=gold,
		label="2881:AL",
		sens="['clk', 'rst']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['sample_point', 'sampled_bit', 'rx_dlc', 'bit_de_stuff', 'rst', 'data_len']"];
	"2881:AL" -> "2882:BL"	 [cond="[]",
		lineno=None];
	"2886:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f44f6933ed0>",
		fillcolor=firebrick,
		label="2886:NS
data_len <= #Tp { data_len[2:0], sampled_bit };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f44f6933ed0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2885:IF" -> "2886:NS"	 [cond="['sample_point', 'rx_dlc', 'bit_de_stuff']",
		label="(sample_point & rx_dlc & ~bit_de_stuff)",
		lineno=2885];
	"2886:NS" -> "Leaf_2881:AL"	 [cond="[]",
		lineno=None];
	"2884:NS" -> "Leaf_2881:AL"	 [cond="[]",
		lineno=None];
}
