strict digraph "" {
	node [label="\N"];
	"2948:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f44f6921610>",
		fillcolor=springgreen,
		label="2948:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2949:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f44f6921650>",
		fillcolor=firebrick,
		label="2949:NS
bit_cnt <= #Tp bit_cnt + 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f44f6921650>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2948:IF" -> "2949:NS"	 [cond="['sample_point', 'bit_de_stuff']",
		label="(sample_point & ~bit_de_stuff)",
		lineno=2948];
	"2944:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f44f6921a10>",
		fillcolor=firebrick,
		label="2944:NS
bit_cnt <= 6'd0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f44f6921a10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_2941:AL"	 [def_var="['bit_cnt']",
		label="Leaf_2941:AL"];
	"2944:NS" -> "Leaf_2941:AL"	 [cond="[]",
		lineno=None];
	"2943:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f44f6921dd0>",
		fillcolor=springgreen,
		label="2943:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2943:IF" -> "2944:NS"	 [cond="['rst']",
		label=rst,
		lineno=2943];
	"2945:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f44f6921e10>",
		fillcolor=springgreen,
		label="2945:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2943:IF" -> "2945:IF"	 [cond="['rst']",
		label="!(rst)",
		lineno=2943];
	"2949:NS" -> "Leaf_2941:AL"	 [cond="[]",
		lineno=None];
	"2942:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f44f6921d90>",
		fillcolor=turquoise,
		label="2942:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"2942:BL" -> "2943:IF"	 [cond="[]",
		lineno=None];
	"2947:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f44f6921e50>",
		fillcolor=firebrick,
		label="2947:NS
bit_cnt <= #Tp 6'd0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f44f6921e50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2947:NS" -> "Leaf_2941:AL"	 [cond="[]",
		lineno=None];
	"2945:IF" -> "2948:IF"	 [cond="['go_rx_id1', 'go_rx_id2', 'go_rx_dlc', 'go_rx_data', 'go_rx_crc', 'go_rx_ack', 'go_rx_eof', 'go_rx_inter', 'go_error_frame', 'go_\
overload_frame']",
		label="!((go_rx_id1 | go_rx_id2 | go_rx_dlc | go_rx_data | go_rx_crc | go_rx_ack | go_rx_eof | go_rx_inter | go_error_frame | go_overload_\
frame))",
		lineno=2945];
	"2945:IF" -> "2947:NS"	 [cond="['go_rx_id1', 'go_rx_id2', 'go_rx_dlc', 'go_rx_data', 'go_rx_crc', 'go_rx_ack', 'go_rx_eof', 'go_rx_inter', 'go_error_frame', 'go_\
overload_frame']",
		label="(go_rx_id1 | go_rx_id2 | go_rx_dlc | go_rx_data | go_rx_crc | go_rx_ack | go_rx_eof | go_rx_inter | go_error_frame | go_overload_\
frame)",
		lineno=2945];
	"2941:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f44f6921c10>",
		clk_sens=True,
		fillcolor=gold,
		label="2941:AL",
		sens="['clk', 'rst']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['go_rx_ack', 'sample_point', 'bit_cnt', 'go_rx_inter', 'go_overload_frame', 'go_error_frame', 'go_rx_crc', 'bit_de_stuff', 'go_\
rx_data', 'go_rx_eof', 'rst', 'go_rx_dlc', 'go_rx_id2', 'go_rx_id1']"];
	"2941:AL" -> "2942:BL"	 [cond="[]",
		lineno=None];
}
