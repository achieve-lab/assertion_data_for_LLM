strict digraph "" {
	node [label="\N"];
	"Leaf_3360:AL"	 [def_var="['enable_error_cnt2']",
		label="Leaf_3360:AL"];
	"3361:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f44f6b19390>",
		fillcolor=turquoise,
		label="3361:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"3362:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f44f6b193d0>",
		fillcolor=springgreen,
		label="3362:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3361:BL" -> "3362:IF"	 [cond="[]",
		lineno=None];
	"3363:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f44f6b19c10>",
		fillcolor=firebrick,
		label="3363:NS
enable_error_cnt2 <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f44f6b19c10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"3363:NS" -> "Leaf_3360:AL"	 [cond="[]",
		lineno=None];
	"3366:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f44f6b19450>",
		fillcolor=springgreen,
		label="3366:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3367:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f44f6b19490>",
		fillcolor=firebrick,
		label="3367:NS
enable_error_cnt2 <= #Tp 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f44f6b19490>]",
		style=filled,
		typ=NonblockingSubstitution];
	"3366:IF" -> "3367:NS"	 [cond="['error_frame', 'error_flag_over', 'sampled_bit']",
		label="(error_frame & (error_flag_over & sampled_bit))",
		lineno=3366];
	"3362:IF" -> "3363:NS"	 [cond="['rst']",
		label=rst,
		lineno=3362];
	"3364:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f44f6b19410>",
		fillcolor=springgreen,
		label="3364:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3362:IF" -> "3364:IF"	 [cond="['rst']",
		label="!(rst)",
		lineno=3362];
	"3367:NS" -> "Leaf_3360:AL"	 [cond="[]",
		lineno=None];
	"3364:IF" -> "3366:IF"	 [cond="['error_frame_ended', 'go_error_frame', 'go_overload_frame']",
		label="!((error_frame_ended | go_error_frame | go_overload_frame))",
		lineno=3364];
	"3365:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f44f6b19810>",
		fillcolor=firebrick,
		label="3365:NS
enable_error_cnt2 <= #Tp 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f44f6b19810>]",
		style=filled,
		typ=NonblockingSubstitution];
	"3364:IF" -> "3365:NS"	 [cond="['error_frame_ended', 'go_error_frame', 'go_overload_frame']",
		label="(error_frame_ended | go_error_frame | go_overload_frame)",
		lineno=3364];
	"3360:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f44f6b19d90>",
		clk_sens=True,
		fillcolor=gold,
		label="3360:AL",
		sens="['clk', 'rst']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['go_overload_frame', 'go_error_frame', 'sampled_bit', 'error_frame_ended', 'error_flag_over', 'rst', 'error_frame']"];
	"3360:AL" -> "3361:BL"	 [cond="[]",
		lineno=None];
	"3365:NS" -> "Leaf_3360:AL"	 [cond="[]",
		lineno=None];
}
