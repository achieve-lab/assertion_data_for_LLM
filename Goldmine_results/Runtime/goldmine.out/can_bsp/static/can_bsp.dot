digraph "()" {
	rx_eof -> go_rx_inter	 [weight=1.0];
	rx_eof -> form_err	 [weight=1.0];
	rx_eof -> eof_cnt	 [weight=1.0];
	rx_eof -> error_capture_code_segment	 [weight=3.0];
	rx_eof -> bit_err_exc6	 [weight=1.0];
	rx_eof -> go_overload_frame	 [weight=1.0];
	self_rx_request -> wr_fifo	 [weight=1.0];
	rx_crc -> go_rx_crc_lim	 [weight=1.0];
	rx_crc -> tx_bit	 [weight=7.0];
	rx_crc -> error_capture_code_segment	 [weight=1.0];
	rx_crc -> crc_in	 [weight=1.0];
	overload_frame_blocked -> go_overload_frame	 [weight=1.0];
	bit_stuff_cnt_en -> stuff_err	 [weight=1.0];
	bit_stuff_cnt_en -> bit_stuff_cnt	 [weight=3.0];
	bit_stuff_cnt_en -> bit_stuff_cnt_tx	 [weight=3.0];
	tx -> tx_err_cnt	 [weight=1.0];
	tx -> bit_err	 [weight=1.0];
	tx -> arbitration_lost	 [weight=1.0];
	tx -> bit_err_exc2	 [weight=1.0];
	tx -> bit_err_exc1	 [weight=1.0];
	tx -> tx_q	 [weight=1.0];
	tx -> bit_stuff_cnt_tx	 [weight=2.0];
	go_tx -> go_crc_enable	 [weight=1.0];
	go_tx -> transmitter	 [weight=2.0];
	go_tx -> tx_next	 [weight=3.0];
	go_tx -> transmitting	 [weight=2.0];
	go_tx -> tx_state	 [weight=1.0];
	go_tx -> tx_pointer	 [weight=1.0];
	stuff_err -> error_capture_code_type	 [weight=2.0];
	stuff_err -> tx_err_cnt	 [weight=1.0];
	stuff_err -> err	 [weight=1.0];
	stuff_err -> stuff_err_latched	 [weight=1.0];
	stuff_err -> go_error_frame	 [weight=1.0];
	overload_request -> overload_frame_blocked	 [weight=1.0];
	overload_request -> go_rx_inter	 [weight=1.0];
	overload_request -> overload_request_cnt	 [weight=1.0];
	overload_request -> go_overload_frame	 [weight=1.0];
	go_rx_eof -> rx_eof	 [weight=1.0];
	go_rx_eof -> bit_cnt	 [weight=2.0];
	go_rx_eof -> rx_ack_lim	 [weight=2.0];
	go_rx_eof -> go_error_frame	 [weight=1.0];
	"i_can_fifo.length_fifo" -> "i_can_fifo.length_info"	 [weight=1.0];
	"i_can_acf.match_df_ext" -> "i_can_acf.id_ok"	 [weight=1.0];
	arbitration_blocked -> set_arbitration_lost_irq	 [weight=1.0];
	tx_data_12 -> "i_ibo_tx_data_12.di"	 [weight=1.0];
	tx_data_11 -> "i_ibo_tx_data_11.di"	 [weight=1.0];
	tx_data_10 -> "i_ibo_tx_data_10.di"	 [weight=1.0];
	hard_sync -> go_crc_enable	 [weight=1.0];
	"i_can_fifo.len_cnt" -> "i_can_fifo.length_fifo"	 [weight=1.0];
	"i_can_fifo.len_cnt" -> "i_can_fifo.len_cnt"	 [weight=1.0];
	node_bus_off -> node_error_passive	 [weight=1.0];
	node_bus_off -> node_bus_off_q	 [weight=1.0];
	node_bus_off -> bus_off_on	 [weight=1.0];
	node_bus_off -> waiting_for_bus_free	 [weight=2.0];
	node_bus_off -> bus_free_cnt_en	 [weight=1.0];
	node_bus_off -> rx_err_cnt	 [weight=6.0];
	node_bus_off -> set_reset_mode	 [weight=1.0];
	node_bus_off -> node_error_active	 [weight=1.0];
	node_bus_off -> tx_next	 [weight=9.0];
	node_bus_off -> go_rx_idle	 [weight=1.0];
	rx_id1 -> arbitration_field	 [weight=1.0];
	rx_id1 -> error_capture_code_segment	 [weight=2.0];
	rx_id1 -> id	 [weight=1.0];
	rx_id1 -> go_rx_rtr1	 [weight=1.0];
	rx_id2 -> arbitration_field	 [weight=1.0];
	rx_id2 -> error_capture_code_segment	 [weight=4.0];
	rx_id2 -> id	 [weight=1.0];
	rx_id2 -> go_rx_rtr2	 [weight=1.0];
	"i_calculated_crc1.di" -> "i_calculated_crc1.do"	 [weight=8.0];
	"i_calculated_crc1.do" -> r_calculated_crc	 [weight=1.0];
	wr_fifo -> header_cnt	 [weight=1.0];
	wr_fifo -> "i_can_fifo.wr"	 [weight=1.0];
	wr_fifo -> data_cnt	 [weight=1.0];
	go_rx_dlc -> rx_r0	 [weight=2.0];
	go_rx_dlc -> rx_dlc	 [weight=1.0];
	go_rx_dlc -> bit_cnt	 [weight=2.0];
	"i_can_acf.match_df_std" -> "i_can_acf.id_ok"	 [weight=1.0];
	error_capture_code_type -> error_capture_code	 [weight=1.0];
	"i_can_acf.id" -> "i_can_acf.match_df_ext"	 [weight=1.0];
	"i_can_acf.id" -> "i_can_acf.match_df_std"	 [weight=1.0];
	"i_can_acf.id" -> "i_can_acf.match"	 [weight=1.0];
	"i_can_acf.id" -> "i_can_acf.match_sf_ext"	 [weight=1.0];
	"i_can_acf.id" -> "i_can_acf.match_sf_std"	 [weight=1.0];
	finish_msg -> tx_bit	 [weight=5.0];
	"i_can_fifo.extended_mode" -> "i_can_fifo.read_address"	 [weight=2.0];
	rx_data -> rst_tx_pointer	 [weight=1.0];
	rx_data -> tmp_data	 [weight=1.0];
	rx_data -> tx_bit	 [weight=10.0];
	rx_data -> go_rx_crc	 [weight=1.0];
	rx_data -> error_capture_code_segment	 [weight=2.0];
	rx_data -> write_data_to_tmp_fifo	 [weight=2.0];
	send_ack -> tx_next	 [weight=2.0];
	send_ack -> transmitting	 [weight=2.0];
	rx_ide -> arbitration_field	 [weight=1.0];
	rx_ide -> go_rx_id2	 [weight=1.0];
	rx_ide -> error_capture_code_segment	 [weight=2.0];
	rx_ide -> ide	 [weight=1.0];
	rx_ide -> go_rx_r0	 [weight=1.0];
	we_tx_err_cnt -> node_bus_off	 [weight=3.0];
	we_tx_err_cnt -> tx_err_cnt	 [weight=4.0];
	"i_can_acf.extended_mode" -> "i_can_acf.id_ok"	 [weight=5.0];
	"i_can_fifo.wr_pointer" -> "i_can_fifo.wr_pointer"	 [weight=1.0];
	need_to_tx -> go_tx	 [weight=1.0];
	need_to_tx -> go_early_tx	 [weight=1.0];
	rst_tx_pointer -> tx_pointer	 [weight=2.0];
	tx_err_cnt -> node_bus_off	 [weight=3.0];
	tx_err_cnt -> tx_err_cnt	 [weight=4.0];
	tx_err_cnt -> node_error_passive	 [weight=3.0];
	tx_err_cnt -> error_status	 [weight=1.0];
	data_in -> node_bus_off	 [weight=3.0];
	data_in -> tx_err_cnt	 [weight=1.0];
	data_in -> rx_err_cnt	 [weight=1.0];
	"i_can_crc_rx.crc_tmp" -> "i_can_crc_rx.crc"	 [weight=2.0];
	node_error_passive -> tx_err_cnt	 [weight=1.0];
	node_error_passive -> rule3_exc1_1	 [weight=1.0];
	node_error_passive -> suspend	 [weight=1.0];
	node_error_passive -> node_error_active	 [weight=1.0];
	node_error_passive -> tx_next	 [weight=2.0];
	node_error_passive -> error_capture_code_segment	 [weight=2.0];
	node_error_passive -> bit_err_exc3	 [weight=1.0];
	node_error_passive -> rule5	 [weight=1.0];
	node_error_passive -> error_flag_over	 [weight=1.0];
	arbitration_lost_q -> set_arbitration_lost_irq	 [weight=1.0];
	go_crc_enable -> crc_enable	 [weight=1.0];
	go_crc_enable -> "i_can_crc_rx.initialize"	 [weight=1.0];
	bus_free -> tx_err_cnt	 [weight=2.0];
	bus_free -> waiting_for_bus_free	 [weight=2.0];
	bus_free -> go_rx_idle	 [weight=1.0];
	header_cnt -> header_cnt	 [weight=1.0];
	header_cnt -> data_for_fifo	 [weight=11.0];
	header_cnt -> storing_header	 [weight=1.0];
	rtr1 -> remote_rq	 [weight=1.0];
	rtr1 -> data_for_fifo	 [weight=3.0];
	rtr1 -> no_byte1	 [weight=1.0];
	rtr1 -> "i_can_acf.rtr1"	 [weight=1.0];
	rtr1 -> no_byte0	 [weight=1.0];
	rtr2 -> remote_rq	 [weight=1.0];
	rtr2 -> data_for_fifo	 [weight=1.0];
	rtr2 -> "i_can_acf.rtr2"	 [weight=1.0];
	go_rx_inter -> rx_eof	 [weight=2.0];
	go_rx_inter -> wr_fifo	 [weight=1.0];
	go_rx_inter -> rx_inter	 [weight=1.0];
	go_rx_inter -> bit_cnt	 [weight=2.0];
	go_rx_inter -> eof_cnt	 [weight=2.0];
	go_rx_inter -> tx_successful	 [weight=1.0];
	go_rx_inter -> tx_state	 [weight=2.0];
	go_rx_inter -> "i_can_acf.go_rx_inter"	 [weight=1.0];
	"i_can_fifo.info_full" -> "i_can_fifo.length_fifo"	 [weight=1.0];
	"i_can_fifo.info_full" -> "i_can_fifo.info_cnt"	 [weight=1.0];
	"i_can_fifo.info_full" -> "i_can_fifo.rd_info_pointer"	 [weight=1.0];
	"i_can_fifo.info_full" -> "i_can_fifo.wr_info_pointer"	 [weight=2.0];
	"i_can_fifo.info_full" -> "i_can_fifo.overrun_info"	 [weight=1.0];
	enable_error_cnt2 -> passive_cnt	 [weight=2.0];
	enable_error_cnt2 -> delayed_dominant_cnt	 [weight=2.0];
	enable_error_cnt2 -> bit_err_exc4	 [weight=1.0];
	enable_error_cnt2 -> error_cnt2	 [weight=1.0];
	enable_error_cnt2 -> error_flag_over	 [weight=1.0];
	"i_can_acf.rst" -> "i_can_acf.id_ok"	 [weight=7.0];
	"i_ibo_tx_data_11.do" -> r_tx_data_11	 [weight=1.0];
	"i_can_crc_rx.crc" -> "i_can_crc_rx.crc_tmp"	 [weight=1.0];
	"i_can_crc_rx.crc" -> calculated_crc	 [weight=1.0];
	"i_can_crc_rx.crc" -> "i_can_crc_rx.crc_next"	 [weight=1.0];
	"i_can_acf.acceptance_code_2" -> "i_can_acf.match_df_ext"	 [weight=1.0];
	"i_can_acf.acceptance_code_2" -> "i_can_acf.match_df_std"	 [weight=1.0];
	"i_can_acf.acceptance_code_2" -> "i_can_acf.match_sf_ext"	 [weight=1.0];
	"i_can_acf.acceptance_code_2" -> "i_can_acf.match_sf_std"	 [weight=1.0];
	"i_can_acf.acceptance_code_3" -> "i_can_acf.match_df_ext"	 [weight=1.0];
	"i_can_acf.acceptance_code_3" -> "i_can_acf.match_df_std"	 [weight=1.0];
	"i_can_acf.acceptance_code_3" -> "i_can_acf.match_sf_ext"	 [weight=1.0];
	"i_can_acf.acceptance_code_3" -> "i_can_acf.match_sf_std"	 [weight=1.0];
	"i_can_acf.acceptance_code_0" -> "i_can_acf.match_df_ext"	 [weight=1.0];
	"i_can_acf.acceptance_code_0" -> "i_can_acf.match_df_std"	 [weight=1.0];
	"i_can_acf.acceptance_code_0" -> "i_can_acf.match"	 [weight=1.0];
	"i_can_acf.acceptance_code_0" -> "i_can_acf.match_sf_ext"	 [weight=1.0];
	"i_can_acf.acceptance_code_0" -> "i_can_acf.match_sf_std"	 [weight=1.0];
	"i_can_acf.acceptance_code_1" -> "i_can_acf.match_df_ext"	 [weight=1.0];
	"i_can_acf.acceptance_code_1" -> "i_can_acf.match_df_std"	 [weight=1.0];
	"i_can_acf.acceptance_code_1" -> "i_can_acf.match_sf_ext"	 [weight=1.0];
	"i_can_acf.acceptance_code_1" -> "i_can_acf.match_sf_std"	 [weight=1.0];
	"i_can_acf.data0" -> "i_can_acf.match_df_std"	 [weight=1.0];
	"i_can_acf.data0" -> "i_can_acf.match_sf_std"	 [weight=1.0];
	"i_can_acf.data1" -> "i_can_acf.match_sf_std"	 [weight=1.0];
	bit_err_latched -> err	 [weight=1.0];
	"i_can_acf.go_rx_crc_lim" -> "i_can_acf.id_ok"	 [weight=6.0];
	ack_err_latched -> err	 [weight=1.0];
	tx_point_q -> bit_stuff_cnt_tx	 [weight=3.0];
	err -> send_ack	 [weight=1.0];
	"i_can_fifo.info_cnt" -> "i_can_fifo.info_full"	 [weight=1.0];
	"i_can_fifo.info_cnt" -> "i_can_fifo.info_cnt"	 [weight=2.0];
	"i_can_fifo.info_cnt" -> "i_can_fifo.info_empty"	 [weight=1.0];
	"i_can_fifo.info_cnt" -> rx_message_counter	 [weight=1.0];
	"i_can_fifo.fifo" -> "i_can_fifo.data_out"	 [weight=1.0];
	crc_enable -> "i_can_crc_rx.enable"	 [weight=1.0];
	data_len -> data_len	 [weight=1.0];
	data_len -> data_for_fifo	 [weight=3.0];
	data_len -> no_byte1	 [weight=1.0];
	data_len -> go_rx_data	 [weight=1.0];
	data_len -> limited_data_len	 [weight=1.0];
	data_len -> go_rx_crc	 [weight=1.0];
	data_len -> no_byte0	 [weight=1.0];
	data_len -> limited_data_len_minus1	 [weight=1.0];
	"i_ibo_tx_data_10.do" -> r_tx_data_10	 [weight=1.0];
	rule3_exc1_2 -> tx_err_cnt	 [weight=1.0];
	rule3_exc1_2 -> rule3_exc1_2	 [weight=2.0];
	rule3_exc1_2 -> rule3_exc1_1	 [weight=2.0];
	"i_ibo_tx_data_10.di" -> "i_ibo_tx_data_10.do"	 [weight=8.0];
	rule3_exc1_1 -> rule3_exc1_2	 [weight=1.0];
	"i_ibo_tx_data_12.di" -> "i_ibo_tx_data_12.do"	 [weight=8.0];
	reset_mode_q -> node_error_passive	 [weight=1.0];
	reset_mode_q -> bus_free_cnt_en	 [weight=2.0];
	"i_ibo_tx_data_12.do" -> r_tx_data_12	 [weight=1.0];
	rx_r0 -> go_rx_dlc	 [weight=1.0];
	rx_r0 -> error_capture_code_segment	 [weight=2.0];
	rx_r1 -> error_capture_code_segment	 [weight=3.0];
	rx_r1 -> go_rx_r0	 [weight=1.0];
	rx_rtr2 -> rtr2	 [weight=1.0];
	rx_rtr2 -> arbitration_field	 [weight=1.0];
	rx_rtr2 -> error_capture_code_segment	 [weight=2.0];
	rx_rtr2 -> go_rx_r1	 [weight=1.0];
	rx_rtr1 -> rtr1	 [weight=1.0];
	rx_rtr1 -> arbitration_field	 [weight=1.0];
	rx_rtr1 -> go_rx_ide	 [weight=1.0];
	rx_rtr1 -> error_capture_code_segment	 [weight=1.0];
	"i_can_fifo.rst" -> "i_can_fifo.len_cnt"	 [weight=3.0];
	"i_can_fifo.rst" -> "i_can_fifo.wr_pointer"	 [weight=3.0];
	"i_can_fifo.rst" -> "i_can_fifo.info_cnt"	 [weight=4.0];
	"i_can_fifo.rst" -> "i_can_fifo.rd_info_pointer"	 [weight=2.0];
	"i_can_fifo.rst" -> "i_can_fifo.latch_overrun"	 [weight=3.0];
	"i_can_fifo.rst" -> "i_can_fifo.initialize_memories"	 [weight=2.0];
	"i_can_fifo.rst" -> "i_can_fifo.wr_q"	 [weight=3.0];
	"i_can_fifo.rst" -> "i_can_fifo.wr_info_pointer"	 [weight=3.0];
	"i_can_fifo.rst" -> "i_can_fifo.fifo_cnt"	 [weight=5.0];
	"i_can_fifo.rst" -> "i_can_fifo.rd_pointer"	 [weight=2.0];
	"i_can_fifo.overrun" -> overrun	 [weight=1.0];
	error_frame -> finish_msg	 [weight=2.0];
	error_frame -> rst_tx_pointer	 [weight=1.0];
	error_frame -> tx_err_cnt	 [weight=1.0];
	error_frame -> enable_error_cnt2	 [weight=1.0];
	error_frame -> bit_err	 [weight=1.0];
	error_frame -> passive_cnt	 [weight=2.0];
	error_frame -> tx_next	 [weight=8.0];
	error_frame -> error_capture_code_segment	 [weight=4.0];
	error_frame -> bit_err_exc3	 [weight=1.0];
	error_frame -> bit_err_exc4	 [weight=1.0];
	error_frame -> bit_err_exc5	 [weight=1.0];
	error_frame -> rule5	 [weight=1.0];
	error_frame -> tx_state	 [weight=2.0];
	error_frame -> error_cnt1	 [weight=1.0];
	"i_can_acf.id_ok" -> id_ok	 [weight=1.0];
	bit_err -> error_capture_code_type	 [weight=4.0];
	bit_err -> bit_err_latched	 [weight=1.0];
	bit_err -> err	 [weight=1.0];
	bit_err -> rule5	 [weight=1.0];
	bit_err -> go_error_frame	 [weight=1.0];
	remote_rq -> go_rx_data	 [weight=1.0];
	remote_rq -> go_rx_crc	 [weight=1.0];
	remote_rq -> limited_data_len_minus1	 [weight=1.0];
	go_rx_crc_lim -> rx_crc	 [weight=2.0];
	go_rx_crc_lim -> finish_msg	 [weight=1.0];
	go_rx_crc_lim -> "i_can_acf.go_rx_crc_lim"	 [weight=1.0];
	go_rx_crc_lim -> byte_cnt	 [weight=1.0];
	go_rx_crc_lim -> rx_crc_lim	 [weight=1.0];
	"i_calculated_crc0.di" -> "i_calculated_crc0.do"	 [weight=8.0];
	"i_can_crc_rx.enable" -> "i_can_crc_rx.crc"	 [weight=2.0];
	"i_calculated_crc0.do" -> r_calculated_crc	 [weight=1.0];
	rx_ack -> send_ack	 [weight=1.0];
	rx_ack -> bit_err	 [weight=1.0];
	rx_ack -> ack_err	 [weight=1.0];
	rx_ack -> go_rx_ack_lim	 [weight=1.0];
	rx_ack -> error_capture_code_segment	 [weight=3.0];
	rx_ack -> bit_err_exc2	 [weight=1.0];
	data_for_fifo -> "i_can_fifo.data_in"	 [weight=1.0];
	"i_can_fifo.wr" -> "i_can_fifo.len_cnt"	 [weight=1.0];
	"i_can_fifo.wr" -> "i_can_fifo.wr_pointer"	 [weight=1.0];
	"i_can_fifo.wr" -> "i_can_fifo.fifo"	 [weight=1.0];
	"i_can_fifo.wr" -> "i_can_fifo.latch_overrun"	 [weight=1.0];
	"i_can_fifo.wr" -> "i_can_fifo.wr_q"	 [weight=1.0];
	"i_can_fifo.wr" -> "i_can_fifo.write_length_info"	 [weight=1.0];
	"i_can_fifo.wr" -> "i_can_fifo.overrun_info"	 [weight=1.0];
	"i_can_fifo.wr" -> "i_can_fifo.fifo_cnt"	 [weight=6.0];
	error_warning_limit -> error_status	 [weight=1.0];
	read_error_code_capture_reg -> error_capture_code	 [weight=2.0];
	read_error_code_capture_reg -> error_capture_code_blocked	 [weight=2.0];
	"i_can_fifo.reset_mode" -> "i_can_fifo.len_cnt"	 [weight=2.0];
	"i_can_fifo.reset_mode" -> "i_can_fifo.wr_pointer"	 [weight=2.0];
	"i_can_fifo.reset_mode" -> "i_can_fifo.info_cnt"	 [weight=3.0];
	"i_can_fifo.reset_mode" -> "i_can_fifo.latch_overrun"	 [weight=2.0];
	"i_can_fifo.reset_mode" -> "i_can_fifo.wr_q"	 [weight=2.0];
	"i_can_fifo.reset_mode" -> "i_can_fifo.wr_info_pointer"	 [weight=1.0];
	"i_can_fifo.reset_mode" -> "i_can_fifo.fifo_cnt"	 [weight=4.0];
	extended_mode -> "i_can_fifo.extended_mode"	 [weight=1.0];
	extended_mode -> "i_can_acf.extended_mode"	 [weight=1.0];
	extended_mode -> rst_tx_pointer	 [weight=1.0];
	extended_mode -> data_for_fifo	 [weight=11.0];
	extended_mode -> error_status	 [weight=1.0];
	extended_mode -> tx_bit	 [weight=10.0];
	extended_mode -> header_len	 [weight=1.0];
	extended_mode -> transmit_status	 [weight=1.0];
	extended_mode -> receive_status	 [weight=1.0];
	"i_can_fifo.length_info" -> "i_can_fifo.fifo_cnt"	 [weight=2.0];
	"i_can_fifo.length_info" -> "i_can_fifo.rd_pointer"	 [weight=1.0];
	error_flag_over_latched -> rx_err_cnt	 [weight=1.0];
	"i_ibo_tx_data_4.di" -> "i_ibo_tx_data_4.do"	 [weight=8.0];
	"i_ibo_tx_data_4.do" -> r_tx_data_4	 [weight=1.0];
	basic_chain -> tx_bit	 [weight=1.0];
	arbitration_lost -> tx_err_cnt	 [weight=1.0];
	arbitration_lost -> arbitration_lost_q	 [weight=1.0];
	arbitration_lost -> rx_err_cnt	 [weight=4.0];
	arbitration_lost -> tx_successful	 [weight=1.0];
	arbitration_lost -> set_arbitration_lost_irq	 [weight=1.0];
	arbitration_lost -> transmitting	 [weight=1.0];
	arbitration_lost -> tx_state	 [weight=2.0];
	abort_tx -> need_to_tx	 [weight=2.0];
	node_bus_off_q -> waiting_for_bus_free	 [weight=1.0];
	node_bus_off_q -> bus_free_cnt_en	 [weight=2.0];
	node_bus_off_q -> set_reset_mode	 [weight=1.0];
	we_rx_err_cnt -> rx_err_cnt	 [weight=6.0];
	clk -> "i_can_fifo.clk"	 [weight=1.0];
	clk -> "i_can_acf.clk"	 [weight=1.0];
	clk -> "i_can_crc_rx.clk"	 [weight=1.0];
	reset_mode -> tx	 [weight=2.0];
	reset_mode -> node_bus_off	 [weight=2.0];
	reset_mode -> finish_msg	 [weight=2.0];
	reset_mode -> need_to_tx	 [weight=2.0];
	reset_mode -> rst_tx_pointer	 [weight=1.0];
	reset_mode -> node_error_passive	 [weight=1.0];
	reset_mode -> bit_err_latched	 [weight=2.0];
	reset_mode -> ack_err_latched	 [weight=2.0];
	reset_mode -> tx_point_q	 [weight=2.0];
	reset_mode -> reset_mode_q	 [weight=1.0];
	reset_mode -> bit_err	 [weight=1.0];
	reset_mode -> "i_can_fifo.reset_mode"	 [weight=1.0];
	reset_mode -> transmitter	 [weight=1.0];
	reset_mode -> waiting_for_bus_free	 [weight=1.0];
	reset_mode -> bus_free_cnt_en	 [weight=4.0];
	reset_mode -> suspend	 [weight=2.0];
	reset_mode -> crc_err	 [weight=2.0];
	reset_mode -> tx_state_q	 [weight=2.0];
	reset_mode -> go_early_tx_latched	 [weight=2.0];
	reset_mode -> stuff_err_latched	 [weight=2.0];
	reset_mode -> "i_can_acf.reset_mode"	 [weight=1.0];
	reset_mode -> reset_wr_fifo	 [weight=1.0];
	reset_mode -> susp_cnt_en	 [weight=2.0];
	reset_mode -> tx_next	 [weight=9.0];
	reset_mode -> transmitting	 [weight=1.0];
	reset_mode -> tx_q	 [weight=2.0];
	reset_mode -> susp_cnt	 [weight=2.0];
	reset_mode -> bit_stuff_cnt_tx	 [weight=4.0];
	reset_mode -> tx_state	 [weight=2.0];
	reset_mode -> form_err_latched	 [weight=2.0];
	arbitration_cnt -> arbitration_cnt	 [weight=1.0];
	arbitration_cnt -> arbitration_lost_capture	 [weight=1.0];
	limited_tx_cnt_std -> rst_tx_pointer	 [weight=1.0];
	"i_ibo_tx_data_1.di" -> "i_ibo_tx_data_1.do"	 [weight=8.0];
	"i_ibo_tx_data_1.do" -> r_tx_data_1	 [weight=1.0];
	"i_can_fifo.rd_info_pointer" -> "i_can_fifo.overrun"	 [weight=1.0];
	"i_can_fifo.rd_info_pointer" -> "i_can_fifo.length_info"	 [weight=1.0];
	"i_can_fifo.rd_info_pointer" -> "i_can_fifo.rd_info_pointer"	 [weight=1.0];
	"i_can_fifo.rd_info_pointer" -> "i_can_fifo.wr_info_pointer"	 [weight=1.0];
	transmitter -> tx_err_cnt	 [weight=3.0];
	transmitter -> rule3_exc1_1	 [weight=1.0];
	transmitter -> arbitration_lost	 [weight=1.0];
	transmitter -> form_err	 [weight=1.0];
	transmitter -> suspend	 [weight=1.0];
	transmitter -> rx_err_cnt	 [weight=4.0];
	transmitter -> tx_successful	 [weight=1.0];
	transmitter -> bit_err_exc6	 [weight=1.0];
	transmitter -> go_overload_frame	 [weight=1.0];
	"i_ibo_tx_data_3.do" -> r_tx_data_3	 [weight=1.0];
	"i_ibo_tx_data_3.di" -> "i_ibo_tx_data_3.do"	 [weight=8.0];
	tmp_data -> tmp_data	 [weight=1.0];
	tmp_data -> tmp_fifo	 [weight=1.0];
	r_tx_data_8 -> basic_chain_data	 [weight=1.0];
	r_tx_data_8 -> extended_chain_data_ext	 [weight=1.0];
	r_tx_data_8 -> extended_chain_data_std	 [weight=1.0];
	r_tx_data_9 -> basic_chain_data	 [weight=1.0];
	r_tx_data_9 -> extended_chain_data_ext	 [weight=1.0];
	r_tx_data_9 -> extended_chain_data_std	 [weight=1.0];
	r_tx_data_6 -> basic_chain_data	 [weight=1.0];
	r_tx_data_6 -> extended_chain_data_ext	 [weight=1.0];
	r_tx_data_6 -> extended_chain_data_std	 [weight=1.0];
	r_tx_data_7 -> basic_chain_data	 [weight=1.0];
	r_tx_data_7 -> extended_chain_data_ext	 [weight=1.0];
	r_tx_data_7 -> extended_chain_data_std	 [weight=1.0];
	r_tx_data_4 -> basic_chain_data	 [weight=1.0];
	r_tx_data_4 -> extended_chain_data_std	 [weight=1.0];
	r_tx_data_4 -> extended_chain_ext	 [weight=1.0];
	r_tx_data_5 -> basic_chain_data	 [weight=1.0];
	r_tx_data_5 -> extended_chain_data_ext	 [weight=1.0];
	r_tx_data_5 -> extended_chain_data_std	 [weight=1.0];
	r_tx_data_2 -> basic_chain_data	 [weight=1.0];
	r_tx_data_2 -> extended_chain_std	 [weight=1.0];
	r_tx_data_2 -> extended_chain_ext	 [weight=1.0];
	r_tx_data_3 -> basic_chain_data	 [weight=1.0];
	r_tx_data_3 -> extended_chain_data_std	 [weight=1.0];
	r_tx_data_3 -> extended_chain_ext	 [weight=1.0];
	r_tx_data_0 -> rst_tx_pointer	 [weight=1.0];
	r_tx_data_0 -> basic_chain	 [weight=1.0];
	r_tx_data_0 -> tx_bit	 [weight=4.0];
	r_tx_data_0 -> extended_chain_std	 [weight=1.0];
	r_tx_data_0 -> extended_chain_ext	 [weight=1.0];
	r_tx_data_1 -> basic_chain	 [weight=1.0];
	r_tx_data_1 -> extended_chain_std	 [weight=1.0];
	r_tx_data_1 -> extended_chain_ext	 [weight=1.0];
	byte_cnt -> byte_cnt	 [weight=1.0];
	first_compare_bit -> passive_cnt	 [weight=3.0];
	"i_ibo_tx_data_0.do" -> r_tx_data_0	 [weight=1.0];
	"i_ibo_tx_data_0.di" -> "i_ibo_tx_data_0.do"	 [weight=8.0];
	"i_ibo_tx_data_2.do" -> r_tx_data_2	 [weight=1.0];
	"i_ibo_tx_data_2.di" -> "i_ibo_tx_data_2.do"	 [weight=8.0];
	"i_can_fifo.fifo_empty" -> "i_can_fifo.fifo_cnt"	 [weight=3.0];
	"i_can_fifo.fifo_empty" -> "i_can_fifo.rd_pointer"	 [weight=1.0];
	error_capture_code_direction -> error_capture_code	 [weight=1.0];
	limited_tx_cnt_ext -> rst_tx_pointer	 [weight=1.0];
	"i_can_fifo.release_buffer" -> "i_can_fifo.info_cnt"	 [weight=4.0];
	"i_can_fifo.release_buffer" -> "i_can_fifo.rd_info_pointer"	 [weight=1.0];
	"i_can_fifo.release_buffer" -> "i_can_fifo.fifo_cnt"	 [weight=6.0];
	"i_can_fifo.release_buffer" -> "i_can_fifo.rd_pointer"	 [weight=1.0];
	form_err -> error_capture_code_type	 [weight=3.0];
	form_err -> err	 [weight=1.0];
	form_err -> go_error_frame	 [weight=1.0];
	form_err -> form_err_latched	 [weight=1.0];
	"i_can_fifo.info_empty" -> "i_can_fifo.info_cnt"	 [weight=2.0];
	"i_can_fifo.info_empty" -> info_empty	 [weight=1.0];
	"i_ibo_tx_data_6.di" -> "i_ibo_tx_data_6.do"	 [weight=8.0];
	"i_ibo_tx_data_6.do" -> r_tx_data_6	 [weight=1.0];
	read_arbitration_lost_capture_reg -> arbitration_blocked	 [weight=2.0];
	no_byte1 -> "i_can_acf.no_byte1"	 [weight=1.0];
	waiting_for_bus_free -> bus_free	 [weight=2.0];
	waiting_for_bus_free -> transmit_status	 [weight=1.0];
	waiting_for_bus_free -> receive_status	 [weight=1.0];
	bus_free_cnt_en -> bus_free_cnt	 [weight=2.0];
	basic_chain_data -> tx_bit	 [weight=1.0];
	suspend -> go_tx	 [weight=1.0];
	suspend -> transmitter	 [weight=1.0];
	suspend -> go_early_tx	 [weight=1.0];
	suspend -> susp_cnt_en	 [weight=1.0];
	set_bus_error_irq -> error_capture_code	 [weight=1.0];
	set_bus_error_irq -> error_capture_code_blocked	 [weight=1.0];
	release_buffer -> "i_can_fifo.release_buffer"	 [weight=1.0];
	crc_err -> err	 [weight=1.0];
	crc_err -> rx_err_cnt	 [weight=4.0];
	crc_err -> go_error_frame	 [weight=1.0];
	not_first_bit_of_inter -> suspend	 [weight=1.0];
	"i_can_fifo.fifo_full" -> "i_can_fifo.len_cnt"	 [weight=1.0];
	"i_can_fifo.fifo_full" -> "i_can_fifo.wr_pointer"	 [weight=1.0];
	"i_can_fifo.fifo_full" -> "i_can_fifo.fifo"	 [weight=1.0];
	"i_can_fifo.fifo_full" -> "i_can_fifo.latch_overrun"	 [weight=1.0];
	"i_can_fifo.fifo_full" -> "i_can_fifo.overrun_info"	 [weight=1.0];
	"i_can_fifo.fifo_full" -> "i_can_fifo.fifo_cnt"	 [weight=4.0];
	"i_can_acf.acceptance_mask_1" -> "i_can_acf.match_df_ext"	 [weight=1.0];
	"i_can_acf.acceptance_mask_1" -> "i_can_acf.match_df_std"	 [weight=1.0];
	"i_can_acf.acceptance_mask_1" -> "i_can_acf.match_sf_ext"	 [weight=1.0];
	"i_can_acf.acceptance_mask_1" -> "i_can_acf.match_sf_std"	 [weight=1.0];
	"i_can_acf.acceptance_mask_0" -> "i_can_acf.match_df_ext"	 [weight=1.0];
	"i_can_acf.acceptance_mask_0" -> "i_can_acf.match_df_std"	 [weight=1.0];
	"i_can_acf.acceptance_mask_0" -> "i_can_acf.match"	 [weight=1.0];
	"i_can_acf.acceptance_mask_0" -> "i_can_acf.match_sf_ext"	 [weight=1.0];
	"i_can_acf.acceptance_mask_0" -> "i_can_acf.match_sf_std"	 [weight=1.0];
	"i_can_acf.acceptance_mask_3" -> "i_can_acf.match_df_ext"	 [weight=1.0];
	"i_can_acf.acceptance_mask_3" -> "i_can_acf.match_df_std"	 [weight=1.0];
	"i_can_acf.acceptance_mask_3" -> "i_can_acf.match_sf_ext"	 [weight=1.0];
	"i_can_acf.acceptance_mask_3" -> "i_can_acf.match_sf_std"	 [weight=1.0];
	"i_can_acf.acceptance_mask_2" -> "i_can_acf.match_df_ext"	 [weight=1.0];
	"i_can_acf.acceptance_mask_2" -> "i_can_acf.match_df_std"	 [weight=1.0];
	"i_can_acf.acceptance_mask_2" -> "i_can_acf.match_sf_ext"	 [weight=1.0];
	"i_can_acf.acceptance_mask_2" -> "i_can_acf.match_sf_std"	 [weight=1.0];
	self_test_mode -> ack_err	 [weight=1.0];
	tx_bit -> tx_next	 [weight=1.0];
	"i_can_fifo.data_in" -> "i_can_fifo.fifo"	 [weight=1.0];
	tx_state_q -> need_to_tx	 [weight=2.0];
	rst -> rx_eof	 [weight=3.0];
	rst -> rx_crc	 [weight=3.0];
	rst -> overload_frame_blocked	 [weight=3.0];
	rst -> bit_stuff_cnt_en	 [weight=3.0];
	rst -> tx	 [weight=3.0];
	rst -> arbitration_blocked	 [weight=3.0];
	rst -> node_bus_off	 [weight=3.0];
	rst -> rx_id1	 [weight=3.0];
	rst -> rx_id2	 [weight=3.0];
	rst -> wr_fifo	 [weight=3.0];
	rst -> finish_msg	 [weight=3.0];
	rst -> rx_data	 [weight=3.0];
	rst -> rx_ide	 [weight=3.0];
	rst -> need_to_tx	 [weight=3.0];
	rst -> tx_err_cnt	 [weight=5.0];
	rst -> node_error_passive	 [weight=3.0];
	rst -> arbitration_lost_q	 [weight=2.0];
	rst -> bus_free	 [weight=3.0];
	rst -> header_cnt	 [weight=3.0];
	rst -> rtr1	 [weight=2.0];
	rst -> rtr2	 [weight=2.0];
	rst -> enable_error_cnt2	 [weight=3.0];
	rst -> "i_can_acf.rst"	 [weight=1.0];
	rst -> bit_err_latched	 [weight=3.0];
	rst -> ack_err_latched	 [weight=3.0];
	rst -> tx_point_q	 [weight=3.0];
	rst -> crc_enable	 [weight=3.0];
	rst -> data_len	 [weight=2.0];
	rst -> rule3_exc1_2	 [weight=3.0];
	rst -> rule3_exc1_1	 [weight=3.0];
	rst -> reset_mode_q	 [weight=2.0];
	rst -> rx_r0	 [weight=3.0];
	rst -> rx_r1	 [weight=3.0];
	rst -> rx_rtr2	 [weight=3.0];
	rst -> rx_rtr1	 [weight=3.0];
	rst -> "i_can_fifo.rst"	 [weight=1.0];
	rst -> error_frame	 [weight=3.0];
	rst -> rx_ack	 [weight=3.0];
	rst -> error_flag_over_latched	 [weight=3.0];
	rst -> arbitration_lost	 [weight=3.0];
	rst -> node_bus_off_q	 [weight=2.0];
	rst -> arbitration_cnt	 [weight=3.0];
	rst -> transmitter	 [weight=3.0];
	rst -> tmp_data	 [weight=2.0];
	rst -> byte_cnt	 [weight=3.0];
	rst -> first_compare_bit	 [weight=3.0];
	rst -> waiting_for_bus_free	 [weight=3.0];
	rst -> bus_free_cnt_en	 [weight=3.0];
	rst -> suspend	 [weight=3.0];
	rst -> crc_err	 [weight=3.0];
	rst -> tx_state_q	 [weight=3.0];
	rst -> go_early_tx_latched	 [weight=3.0];
	rst -> stuff_err_latched	 [weight=3.0];
	rst -> rx_err_cnt	 [weight=7.0];
	rst -> overload_cnt2	 [weight=3.0];
	rst -> overload_cnt1	 [weight=3.0];
	rst -> passive_cnt	 [weight=4.0];
	rst -> rx_inter	 [weight=3.0];
	rst -> rx_dlc	 [weight=3.0];
	rst -> enable_overload_cnt2	 [weight=3.0];
	rst -> bit_cnt	 [weight=3.0];
	rst -> bit_stuff_cnt	 [weight=5.0];
	rst -> eof_cnt	 [weight=3.0];
	rst -> susp_cnt_en	 [weight=3.0];
	rst -> overload_request_cnt	 [weight=3.0];
	rst -> delayed_dominant_cnt	 [weight=3.0];
	rst -> overload_frame	 [weight=3.0];
	rst -> error_capture_code	 [weight=3.0];
	rst -> id	 [weight=2.0];
	rst -> transmitting	 [weight=3.0];
	rst -> rx_crc_lim	 [weight=3.0];
	rst -> arbitration_lost_capture	 [weight=2.0];
	rst -> tx_q	 [weight=3.0];
	rst -> susp_cnt	 [weight=3.0];
	rst -> rx_idle	 [weight=3.0];
	rst -> data_cnt	 [weight=3.0];
	rst -> bit_stuff_cnt_tx	 [weight=5.0];
	rst -> tx_state	 [weight=3.0];
	rst -> error_cnt1	 [weight=3.0];
	rst -> error_cnt2	 [weight=3.0];
	rst -> ide	 [weight=2.0];
	rst -> crc_in	 [weight=2.0];
	rst -> rx_ack_lim	 [weight=3.0];
	rst -> form_err_latched	 [weight=3.0];
	rst -> write_data_to_tmp_fifo	 [weight=3.0];
	rst -> tx_pointer	 [weight=3.0];
	rst -> arbitration_field_d	 [weight=2.0];
	rst -> bus_free_cnt	 [weight=3.0];
	rst -> error_capture_code_blocked	 [weight=3.0];
	"i_can_fifo.data_out" -> data_out	 [weight=1.0];
	go_early_tx_latched -> tx_q	 [weight=1.0];
	tx_data_7 -> "i_ibo_tx_data_7.di"	 [weight=1.0];
	"i_can_acf.match" -> "i_can_acf.id_ok"	 [weight=1.0];
	stuff_err_latched -> err	 [weight=1.0];
	rx_err_cnt -> node_bus_off	 [weight=2.0];
	rx_err_cnt -> node_error_passive	 [weight=3.0];
	rx_err_cnt -> error_status	 [weight=1.0];
	rx_err_cnt -> rx_err_cnt	 [weight=11.0];
	"i_ibo_tx_data_9.di" -> "i_ibo_tx_data_9.do"	 [weight=8.0];
	"i_ibo_tx_data_9.do" -> r_tx_data_9	 [weight=1.0];
	last_bit_of_inter -> go_early_tx	 [weight=1.0];
	last_bit_of_inter -> susp_cnt_en	 [weight=1.0];
	last_bit_of_inter -> go_rx_id1	 [weight=1.0];
	last_bit_of_inter -> go_rx_idle	 [weight=1.0];
	go_rx_data -> rx_data	 [weight=1.0];
	go_rx_data -> rx_dlc	 [weight=2.0];
	go_rx_data -> bit_cnt	 [weight=2.0];
	r_calculated_crc -> tx_bit	 [weight=2.0];
	rst_crc_enable -> crc_enable	 [weight=2.0];
	addr -> "i_can_fifo.addr"	 [weight=1.0];
	"i_can_crc_rx.initialize" -> "i_can_crc_rx.crc"	 [weight=3.0];
	set_reset_mode -> tx_err_cnt	 [weight=3.0];
	set_reset_mode -> error_frame	 [weight=2.0];
	set_reset_mode -> rx_err_cnt	 [weight=5.0];
	overload_cnt2 -> overload_cnt2	 [weight=1.0];
	overload_cnt2 -> overload_frame_ended	 [weight=1.0];
	overload_cnt2 -> bit_err_exc5	 [weight=1.0];
	overload_cnt2 -> go_overload_frame	 [weight=1.0];
	overload_cnt1 -> overload_cnt1	 [weight=2.0];
	overload_cnt1 -> tx_next	 [weight=2.0];
	overload_cnt1 -> overload_flag_over	 [weight=1.0];
	overload_cnt1 -> delayed_dominant_cnt	 [weight=1.0];
	overload_cnt1 -> bit_err_exc4	 [weight=1.0];
	overload_cnt1 -> rule5	 [weight=1.0];
	"i_can_acf.reset_mode" -> "i_can_acf.id_ok"	 [weight=1.0];
	tx_point -> tx	 [weight=1.0];
	tx_point -> rst_tx_pointer	 [weight=1.0];
	tx_point -> tx_point_q	 [weight=1.0];
	tx_point -> go_early_tx_latched	 [weight=2.0];
	tx_point -> overload_cnt2	 [weight=1.0];
	tx_point -> overload_cnt1	 [weight=1.0];
	tx_point -> error_frame_ended	 [weight=1.0];
	tx_point -> overload_frame_ended	 [weight=1.0];
	tx_point -> tx_q	 [weight=1.0];
	tx_point -> error_cnt1	 [weight=1.0];
	tx_point -> error_cnt2	 [weight=1.0];
	tx_point -> tx_pointer	 [weight=1.0];
	node_error_active -> error_capture_code_segment	 [weight=1.0];
	"i_can_fifo.latch_overrun" -> "i_can_fifo.overrun_info"	 [weight=1.0];
	bit_de_stuff_reset -> bit_stuff_cnt_en	 [weight=1.0];
	bit_de_stuff_reset -> bit_stuff_cnt	 [weight=4.0];
	bit_de_stuff_reset -> bit_stuff_cnt_tx	 [weight=4.0];
	error_frame_ended -> wr_fifo	 [weight=1.0];
	error_frame_ended -> node_error_passive	 [weight=1.0];
	error_frame_ended -> go_rx_inter	 [weight=1.0];
	error_frame_ended -> enable_error_cnt2	 [weight=2.0];
	error_frame_ended -> bit_err_latched	 [weight=2.0];
	error_frame_ended -> ack_err_latched	 [weight=2.0];
	error_frame_ended -> error_frame	 [weight=2.0];
	error_frame_ended -> error_flag_over_latched	 [weight=2.0];
	error_frame_ended -> arbitration_lost	 [weight=2.0];
	error_frame_ended -> crc_err	 [weight=2.0];
	error_frame_ended -> stuff_err_latched	 [weight=2.0];
	error_frame_ended -> passive_cnt	 [weight=3.0];
	error_frame_ended -> tx_successful	 [weight=1.0];
	error_frame_ended -> error_cnt1	 [weight=2.0];
	error_frame_ended -> error_cnt2	 [weight=2.0];
	error_frame_ended -> form_err_latched	 [weight=2.0];
	error_frame_ended -> go_overload_frame	 [weight=1.0];
	extended_chain_std -> tx_bit	 [weight=1.0];
	"i_can_acf.rtr2" -> "i_can_acf.match_sf_ext"	 [weight=1.0];
	"i_can_acf.rtr1" -> "i_can_acf.match_df_std"	 [weight=1.0];
	"i_can_acf.rtr1" -> "i_can_acf.match_sf_std"	 [weight=1.0];
	r_tx_data_10 -> extended_chain_data_ext	 [weight=1.0];
	r_tx_data_10 -> extended_chain_data_std	 [weight=1.0];
	r_tx_data_11 -> extended_chain_data_ext	 [weight=1.0];
	r_tx_data_12 -> extended_chain_data_ext	 [weight=1.0];
	passive_cnt -> passive_cnt	 [weight=3.0];
	passive_cnt -> error_flag_over	 [weight=1.0];
	rx_inter -> not_first_bit_of_inter	 [weight=1.0];
	rx_inter -> last_bit_of_inter	 [weight=1.0];
	rx_inter -> error_capture_code_segment	 [weight=2.0];
	rx_inter -> go_overload_frame	 [weight=1.0];
	limited_data_len -> go_rx_crc	 [weight=1.0];
	overload_frame_ended -> go_rx_inter	 [weight=1.0];
	overload_frame_ended -> overload_cnt2	 [weight=2.0];
	overload_frame_ended -> overload_cnt1	 [weight=2.0];
	overload_frame_ended -> enable_overload_cnt2	 [weight=2.0];
	overload_frame_ended -> tx_successful	 [weight=1.0];
	overload_frame_ended -> overload_frame	 [weight=2.0];
	overload_frame_ended -> go_overload_frame	 [weight=1.0];
	go_early_tx -> go_tx	 [weight=1.0];
	go_early_tx -> go_early_tx_latched	 [weight=1.0];
	go_early_tx -> tx_pointer	 [weight=1.0];
	"i_can_fifo.initialize_memories" -> "i_can_fifo.length_fifo"	 [weight=2.0];
	"i_can_fifo.initialize_memories" -> "i_can_fifo.wr_info_pointer"	 [weight=2.0];
	"i_can_fifo.initialize_memories" -> "i_can_fifo.overrun_info"	 [weight=2.0];
	"i_can_fifo.addr" -> "i_can_fifo.read_address"	 [weight=2.0];
	"i_can_fifo.wr_q" -> "i_can_fifo.write_length_info"	 [weight=1.0];
	rx_dlc -> data_len	 [weight=1.0];
	rx_dlc -> go_rx_data	 [weight=1.0];
	rx_dlc -> go_rx_crc	 [weight=1.0];
	rx_dlc -> error_capture_code_segment	 [weight=3.0];
	"i_can_acf.acceptance_filter_mode" -> "i_can_acf.id_ok"	 [weight=4.0];
	arbitration_field -> tx_err_cnt	 [weight=1.0];
	arbitration_field -> arbitration_lost	 [weight=1.0];
	arbitration_field -> bit_err_exc1	 [weight=1.0];
	arbitration_field -> arbitration_field_d	 [weight=1.0];
	enable_overload_cnt2 -> overload_cnt2	 [weight=1.0];
	enable_overload_cnt2 -> overload_flag_over	 [weight=1.0];
	enable_overload_cnt2 -> delayed_dominant_cnt	 [weight=2.0];
	enable_overload_cnt2 -> bit_err_exc4	 [weight=1.0];
	bit_cnt -> go_rx_crc_lim	 [weight=1.0];
	bit_cnt -> not_first_bit_of_inter	 [weight=1.0];
	bit_cnt -> last_bit_of_inter	 [weight=1.0];
	bit_cnt -> go_rx_data	 [weight=1.0];
	bit_cnt -> bit_cnt	 [weight=1.0];
	bit_cnt -> go_rx_crc	 [weight=1.0];
	bit_cnt -> error_capture_code_segment	 [weight=3.0];
	bit_cnt -> go_rx_rtr1	 [weight=1.0];
	bit_cnt -> go_rx_rtr2	 [weight=1.0];
	bit_cnt -> write_data_to_tmp_fifo	 [weight=2.0];
	bit_cnt -> go_overload_frame	 [weight=1.0];
	bit_stuff_cnt -> bit_stuff_cnt	 [weight=4.0];
	bit_stuff_cnt -> bit_de_stuff	 [weight=1.0];
	sampled_bit -> stuff_err	 [weight=1.0];
	sampled_bit -> tx_err_cnt	 [weight=2.0];
	sampled_bit -> bus_free	 [weight=2.0];
	sampled_bit -> rtr1	 [weight=1.0];
	sampled_bit -> rtr2	 [weight=1.0];
	sampled_bit -> enable_error_cnt2	 [weight=1.0];
	sampled_bit -> data_len	 [weight=1.0];
	sampled_bit -> rule3_exc1_2	 [weight=1.0];
	sampled_bit -> bit_err	 [weight=1.0];
	sampled_bit -> arbitration_lost	 [weight=1.0];
	sampled_bit -> tmp_data	 [weight=1.0];
	sampled_bit -> form_err	 [weight=1.0];
	sampled_bit -> bus_free_cnt_en	 [weight=1.0];
	sampled_bit -> rx_err_cnt	 [weight=2.0];
	sampled_bit -> go_rx_data	 [weight=1.0];
	sampled_bit -> passive_cnt	 [weight=2.0];
	sampled_bit -> go_early_tx	 [weight=1.0];
	sampled_bit -> enable_overload_cnt2	 [weight=1.0];
	sampled_bit -> bit_stuff_cnt	 [weight=2.0];
	sampled_bit -> go_rx_crc	 [weight=1.0];
	sampled_bit -> ack_err	 [weight=1.0];
	sampled_bit -> delayed_dominant_cnt	 [weight=1.0];
	sampled_bit -> go_rx_id2	 [weight=1.0];
	sampled_bit -> go_rx_id1	 [weight=1.0];
	sampled_bit -> id	 [weight=1.0];
	sampled_bit -> ide	 [weight=1.0];
	sampled_bit -> crc_in	 [weight=1.0];
	sampled_bit -> "i_can_crc_rx.data"	 [weight=1.0];
	sampled_bit -> go_overload_frame	 [weight=1.0];
	sampled_bit -> go_rx_idle	 [weight=1.0];
	sampled_bit -> bus_free_cnt	 [weight=2.0];
	sampled_bit -> go_rx_r0	 [weight=1.0];
	go_rx_crc -> rx_crc	 [weight=1.0];
	go_rx_crc -> rx_data	 [weight=2.0];
	go_rx_crc -> rst_crc_enable	 [weight=1.0];
	go_rx_crc -> rx_dlc	 [weight=2.0];
	go_rx_crc -> bit_cnt	 [weight=2.0];
	eof_cnt -> go_rx_inter	 [weight=1.0];
	eof_cnt -> form_err	 [weight=1.0];
	eof_cnt -> eof_cnt	 [weight=1.0];
	eof_cnt -> bit_err_exc6	 [weight=1.0];
	eof_cnt -> go_overload_frame	 [weight=1.0];
	"i_can_fifo.write_length_info" -> "i_can_fifo.length_fifo"	 [weight=1.0];
	"i_can_fifo.write_length_info" -> "i_can_fifo.len_cnt"	 [weight=2.0];
	"i_can_fifo.write_length_info" -> "i_can_fifo.info_cnt"	 [weight=3.0];
	"i_can_fifo.write_length_info" -> "i_can_fifo.latch_overrun"	 [weight=2.0];
	"i_can_fifo.write_length_info" -> "i_can_fifo.wr_info_pointer"	 [weight=2.0];
	"i_can_fifo.write_length_info" -> "i_can_fifo.overrun_info"	 [weight=1.0];
	fifo_selected -> "i_can_fifo.fifo_selected"	 [weight=1.0];
	reset_wr_fifo -> wr_fifo	 [weight=2.0];
	reset_wr_fifo -> header_cnt	 [weight=2.0];
	reset_wr_fifo -> data_cnt	 [weight=2.0];
	"i_ibo_tx_data_8.do" -> r_tx_data_8	 [weight=1.0];
	"i_ibo_tx_data_8.di" -> "i_ibo_tx_data_8.do"	 [weight=8.0];
	ack_err -> tx_err_cnt	 [weight=1.0];
	ack_err -> ack_err_latched	 [weight=1.0];
	ack_err -> err	 [weight=1.0];
	ack_err -> rule3_exc1_1	 [weight=1.0];
	ack_err -> go_error_frame	 [weight=1.0];
	"i_can_fifo.wr_info_pointer" -> "i_can_fifo.initialize_memories"	 [weight=1.0];
	"i_can_fifo.wr_info_pointer" -> "i_can_fifo.wr_info_pointer"	 [weight=1.0];
	susp_cnt_en -> susp_cnt	 [weight=1.0];
	go_rx_ide -> rx_ide	 [weight=1.0];
	go_rx_ide -> rx_rtr1	 [weight=2.0];
	listen_only_mode -> go_tx	 [weight=1.0];
	listen_only_mode -> send_ack	 [weight=1.0];
	listen_only_mode -> rx_err_cnt	 [weight=4.0];
	listen_only_mode -> go_early_tx	 [weight=1.0];
	go_rx_ack_lim -> rx_ack	 [weight=2.0];
	go_rx_ack_lim -> rx_err_cnt	 [weight=4.0];
	go_rx_ack_lim -> rx_ack_lim	 [weight=1.0];
	tx_next -> tx	 [weight=1.0];
	sample_point -> go_tx	 [weight=1.0];
	sample_point -> stuff_err	 [weight=1.0];
	sample_point -> go_rx_eof	 [weight=1.0];
	sample_point -> go_rx_dlc	 [weight=1.0];
	sample_point -> need_to_tx	 [weight=1.0];
	sample_point -> tx_err_cnt	 [weight=2.0];
	sample_point -> bus_free	 [weight=2.0];
	sample_point -> rtr1	 [weight=1.0];
	sample_point -> rtr2	 [weight=1.0];
	sample_point -> go_rx_inter	 [weight=1.0];
	sample_point -> data_len	 [weight=1.0];
	sample_point -> rule3_exc1_2	 [weight=1.0];
	sample_point -> bit_err	 [weight=1.0];
	sample_point -> go_rx_crc_lim	 [weight=1.0];
	sample_point -> "i_can_crc_rx.enable"	 [weight=1.0];
	sample_point -> arbitration_lost	 [weight=1.0];
	sample_point -> arbitration_cnt	 [weight=2.0];
	sample_point -> tmp_data	 [weight=1.0];
	sample_point -> byte_cnt	 [weight=1.0];
	sample_point -> first_compare_bit	 [weight=1.0];
	sample_point -> form_err	 [weight=1.0];
	sample_point -> bus_free_cnt_en	 [weight=1.0];
	sample_point -> suspend	 [weight=2.0];
	sample_point -> rx_err_cnt	 [weight=2.0];
	sample_point -> go_rx_data	 [weight=1.0];
	sample_point -> passive_cnt	 [weight=2.0];
	sample_point -> go_early_tx	 [weight=1.0];
	sample_point -> bit_cnt	 [weight=1.0];
	sample_point -> bit_stuff_cnt	 [weight=3.0];
	sample_point -> go_rx_crc	 [weight=1.0];
	sample_point -> eof_cnt	 [weight=2.0];
	sample_point -> ack_err	 [weight=1.0];
	sample_point -> susp_cnt_en	 [weight=3.0];
	sample_point -> go_rx_ide	 [weight=1.0];
	sample_point -> go_rx_ack_lim	 [weight=1.0];
	sample_point -> overload_flag_over	 [weight=1.0];
	sample_point -> go_rx_ack	 [weight=1.0];
	sample_point -> delayed_dominant_cnt	 [weight=1.0];
	sample_point -> go_rx_id2	 [weight=1.0];
	sample_point -> go_rx_id1	 [weight=1.0];
	sample_point -> id	 [weight=1.0];
	sample_point -> go_rx_rtr1	 [weight=1.0];
	sample_point -> susp_cnt	 [weight=3.0];
	sample_point -> go_rx_rtr2	 [weight=1.0];
	sample_point -> ide	 [weight=1.0];
	sample_point -> crc_in	 [weight=1.0];
	sample_point -> error_flag_over	 [weight=1.0];
	sample_point -> write_data_to_tmp_fifo	 [weight=2.0];
	sample_point -> go_overload_frame	 [weight=1.0];
	sample_point -> arbitration_field_d	 [weight=1.0];
	sample_point -> go_rx_idle	 [weight=1.0];
	sample_point -> bus_free_cnt	 [weight=2.0];
	sample_point -> go_rx_r0	 [weight=1.0];
	sample_point -> go_rx_r1	 [weight=1.0];
	tx_successful -> need_to_tx	 [weight=2.0];
	tx_successful -> tx_err_cnt	 [weight=2.0];
	"i_ibo_tx_data_5.do" -> r_tx_data_5	 [weight=1.0];
	overload_request_cnt -> overload_frame_blocked	 [weight=1.0];
	overload_request_cnt -> overload_request_cnt	 [weight=1.0];
	"i_ibo_tx_data_5.di" -> "i_ibo_tx_data_5.do"	 [weight=8.0];
	overload_flag_over -> enable_overload_cnt2	 [weight=1.0];
	go_rx_ack -> rx_ack	 [weight=1.0];
	go_rx_ack -> crc_err	 [weight=1.0];
	go_rx_ack -> bit_de_stuff_reset	 [weight=1.0];
	go_rx_ack -> bit_cnt	 [weight=2.0];
	go_rx_ack -> rx_crc_lim	 [weight=2.0];
	set_arbitration_lost_irq -> arbitration_blocked	 [weight=1.0];
	set_arbitration_lost_irq -> arbitration_lost_capture	 [weight=1.0];
	delayed_dominant_cnt -> tx_err_cnt	 [weight=1.0];
	delayed_dominant_cnt -> rx_err_cnt	 [weight=1.0];
	delayed_dominant_cnt -> delayed_dominant_cnt	 [weight=1.0];
	go_rx_id2 -> rx_id2	 [weight=1.0];
	go_rx_id2 -> rx_ide	 [weight=2.0];
	go_rx_id2 -> bit_cnt	 [weight=2.0];
	go_rx_id1 -> overload_frame_blocked	 [weight=2.0];
	go_rx_id1 -> rx_id1	 [weight=1.0];
	go_rx_id1 -> finish_msg	 [weight=2.0];
	go_rx_id1 -> transmitter	 [weight=1.0];
	go_rx_id1 -> rx_inter	 [weight=2.0];
	go_rx_id1 -> bit_cnt	 [weight=2.0];
	go_rx_id1 -> overload_request_cnt	 [weight=2.0];
	go_rx_id1 -> transmitting	 [weight=1.0];
	go_rx_id1 -> rx_idle	 [weight=2.0];
	go_rx_id1 -> bit_de_stuff_set	 [weight=1.0];
	overload_frame -> overload_frame_blocked	 [weight=1.0];
	overload_frame -> rst_tx_pointer	 [weight=1.0];
	overload_frame -> bit_err	 [weight=1.0];
	overload_frame -> overload_cnt1	 [weight=1.0];
	overload_frame -> enable_overload_cnt2	 [weight=1.0];
	overload_frame -> tx_next	 [weight=5.0];
	overload_frame -> overload_request_cnt	 [weight=1.0];
	overload_frame -> error_capture_code_segment	 [weight=3.0];
	overload_frame -> bit_err_exc4	 [weight=1.0];
	overload_frame -> bit_err_exc5	 [weight=1.0];
	overload_frame -> rule5	 [weight=1.0];
	"i_can_fifo.overrun_info" -> "i_can_fifo.overrun"	 [weight=1.0];
	error_capture_code_segment -> error_capture_code	 [weight=1.0];
	"i_can_acf.match_sf_ext" -> "i_can_acf.id_ok"	 [weight=1.0];
	header_len -> data_for_fifo	 [weight=1.0];
	header_len -> reset_wr_fifo	 [weight=1.0];
	header_len -> storing_header	 [weight=1.0];
	id -> "i_can_acf.id"	 [weight=1.0];
	id -> data_for_fifo	 [weight=8.0];
	id -> id	 [weight=1.0];
	"i_can_fifo.read_address" -> "i_can_fifo.data_out"	 [weight=1.0];
	go_rx_rtr1 -> rx_id1	 [weight=2.0];
	go_rx_rtr1 -> rx_rtr1	 [weight=1.0];
	"i_can_acf.no_byte1" -> "i_can_acf.match_sf_std"	 [weight=1.0];
	"i_can_acf.no_byte0" -> "i_can_acf.match_df_std"	 [weight=1.0];
	"i_can_acf.no_byte0" -> "i_can_acf.match_sf_std"	 [weight=1.0];
	bit_err_exc2 -> bit_err	 [weight=1.0];
	bit_err_exc3 -> bit_err	 [weight=1.0];
	no_byte0 -> "i_can_acf.no_byte0"	 [weight=1.0];
	bit_err_exc1 -> bit_err	 [weight=1.0];
	bit_err_exc6 -> bit_err	 [weight=1.0];
	bit_err_exc4 -> bit_err	 [weight=1.0];
	bit_err_exc5 -> bit_err	 [weight=1.0];
	"i_can_acf.match_sf_std" -> "i_can_acf.id_ok"	 [weight=1.0];
	calculated_crc -> "i_calculated_crc1.di"	 [weight=1.0];
	calculated_crc -> "i_calculated_crc0.di"	 [weight=1.0];
	calculated_crc -> crc_err	 [weight=1.0];
	transmitting -> need_to_tx	 [weight=2.0];
	transmitting -> error_capture_code_direction	 [weight=1.0];
	transmitting -> transmit_status	 [weight=1.0];
	transmitting -> receive_status	 [weight=1.0];
	rule5 -> tx_err_cnt	 [weight=1.0];
	rule5 -> rx_err_cnt	 [weight=3.0];
	tx_request -> need_to_tx	 [weight=1.0];
	rx_crc_lim -> rst_tx_pointer	 [weight=1.0];
	rx_crc_lim -> form_err	 [weight=1.0];
	rx_crc_lim -> go_rx_ack	 [weight=1.0];
	rx_crc_lim -> error_capture_code_segment	 [weight=2.0];
	"i_can_fifo.fifo_cnt" -> "i_can_fifo.fifo_empty"	 [weight=1.0];
	"i_can_fifo.fifo_cnt" -> "i_can_fifo.fifo_full"	 [weight=1.0];
	"i_can_fifo.fifo_cnt" -> "i_can_fifo.fifo_cnt"	 [weight=3.0];
	tx_q -> tx_next	 [weight=1.0];
	tx_q -> bit_stuff_cnt_tx	 [weight=2.0];
	extended_chain_data_ext -> tx_bit	 [weight=1.0];
	acceptance_code_3 -> "i_can_acf.acceptance_code_3"	 [weight=1.0];
	acceptance_code_2 -> "i_can_acf.acceptance_code_2"	 [weight=1.0];
	acceptance_code_1 -> "i_can_acf.acceptance_code_1"	 [weight=1.0];
	acceptance_code_0 -> "i_can_acf.acceptance_code_0"	 [weight=1.0];
	susp_cnt -> go_tx	 [weight=1.0];
	susp_cnt -> suspend	 [weight=2.0];
	susp_cnt -> go_early_tx	 [weight=1.0];
	susp_cnt -> susp_cnt_en	 [weight=2.0];
	susp_cnt -> susp_cnt	 [weight=3.0];
	go_rx_rtr2 -> rx_id2	 [weight=2.0];
	go_rx_rtr2 -> rx_rtr2	 [weight=1.0];
	acceptance_mask_0 -> "i_can_acf.acceptance_mask_0"	 [weight=1.0];
	acceptance_mask_1 -> "i_can_acf.acceptance_mask_1"	 [weight=1.0];
	acceptance_mask_2 -> "i_can_acf.acceptance_mask_2"	 [weight=1.0];
	acceptance_mask_3 -> "i_can_acf.acceptance_mask_3"	 [weight=1.0];
	id_ok -> wr_fifo	 [weight=1.0];
	bit_de_stuff -> stuff_err	 [weight=1.0];
	bit_de_stuff -> go_rx_dlc	 [weight=1.0];
	bit_de_stuff -> rtr1	 [weight=1.0];
	bit_de_stuff -> rtr2	 [weight=1.0];
	bit_de_stuff -> data_len	 [weight=1.0];
	bit_de_stuff -> go_rx_crc_lim	 [weight=1.0];
	bit_de_stuff -> "i_can_crc_rx.enable"	 [weight=1.0];
	bit_de_stuff -> arbitration_cnt	 [weight=2.0];
	bit_de_stuff -> tmp_data	 [weight=1.0];
	bit_de_stuff -> form_err	 [weight=1.0];
	bit_de_stuff -> go_rx_data	 [weight=1.0];
	bit_de_stuff -> bit_cnt	 [weight=1.0];
	bit_de_stuff -> go_rx_crc	 [weight=1.0];
	bit_de_stuff -> go_rx_ide	 [weight=1.0];
	bit_de_stuff -> go_rx_ack	 [weight=1.0];
	bit_de_stuff -> go_rx_id2	 [weight=1.0];
	bit_de_stuff -> id	 [weight=1.0];
	bit_de_stuff -> go_rx_rtr1	 [weight=1.0];
	bit_de_stuff -> go_rx_rtr2	 [weight=1.0];
	bit_de_stuff -> ide	 [weight=1.0];
	bit_de_stuff -> crc_in	 [weight=1.0];
	bit_de_stuff -> write_data_to_tmp_fifo	 [weight=2.0];
	bit_de_stuff -> go_rx_r0	 [weight=1.0];
	bit_de_stuff -> go_rx_r1	 [weight=1.0];
	rx_idle -> go_tx	 [weight=1.0];
	rx_idle -> go_early_tx	 [weight=1.0];
	rx_idle -> go_rx_id1	 [weight=1.0];
	rx_idle -> error_capture_code_segment	 [weight=2.0];
	rx_idle -> receive_status	 [weight=1.0];
	"i_ibo_tx_data_7.di" -> "i_ibo_tx_data_7.do"	 [weight=8.0];
	"i_can_fifo.rd_pointer" -> "i_can_fifo.wr_pointer"	 [weight=1.0];
	"i_can_fifo.rd_pointer" -> "i_can_fifo.read_address"	 [weight=2.0];
	"i_can_fifo.rd_pointer" -> "i_can_fifo.rd_pointer"	 [weight=1.0];
	"i_ibo_tx_data_7.do" -> r_tx_data_7	 [weight=1.0];
	"i_can_acf.go_error_frame" -> "i_can_acf.id_ok"	 [weight=1.0];
	data_cnt -> data_for_fifo	 [weight=1.0];
	data_cnt -> reset_wr_fifo	 [weight=1.0];
	data_cnt -> data_cnt	 [weight=1.0];
	bit_stuff_cnt_tx -> bit_stuff_cnt_tx	 [weight=4.0];
	bit_stuff_cnt_tx -> bit_de_stuff_tx	 [weight=1.0];
	sampled_bit_q -> stuff_err	 [weight=1.0];
	sampled_bit_q -> passive_cnt	 [weight=2.0];
	sampled_bit_q -> bit_stuff_cnt	 [weight=2.0];
	tx_state -> go_tx	 [weight=1.0];
	tx_state -> wr_fifo	 [weight=1.0];
	tx_state -> send_ack	 [weight=1.0];
	tx_state -> need_to_tx	 [weight=2.0];
	tx_state -> bit_err	 [weight=1.0];
	tx_state -> tx_state_q	 [weight=1.0];
	tx_state -> go_early_tx	 [weight=1.0];
	tx_state -> ack_err	 [weight=1.0];
	tx_state -> tx_next	 [weight=3.0];
	tx_state -> bit_err_exc1	 [weight=1.0];
	tx_state -> transmitting	 [weight=2.0];
	tx_state -> tx_pointer	 [weight=1.0];
	limited_data_len_minus1 -> reset_wr_fifo	 [weight=1.0];
	error_cnt1 -> rule3_exc1_2	 [weight=1.0];
	error_cnt1 -> rx_err_cnt	 [weight=1.0];
	error_cnt1 -> tx_next	 [weight=3.0];
	error_cnt1 -> delayed_dominant_cnt	 [weight=1.0];
	error_cnt1 -> bit_err_exc3	 [weight=1.0];
	error_cnt1 -> bit_err_exc4	 [weight=1.0];
	error_cnt1 -> rule5	 [weight=1.0];
	error_cnt1 -> error_cnt1	 [weight=2.0];
	error_cnt1 -> error_flag_over	 [weight=1.0];
	error_cnt2 -> error_frame_ended	 [weight=1.0];
	error_cnt2 -> bit_err_exc5	 [weight=1.0];
	error_cnt2 -> error_cnt2	 [weight=1.0];
	error_cnt2 -> go_overload_frame	 [weight=1.0];
	"i_can_crc_rx.crc_next" -> "i_can_crc_rx.crc"	 [weight=2.0];
	single_shot_transmission -> need_to_tx	 [weight=2.0];
	bit_de_stuff_set -> bit_stuff_cnt_en	 [weight=2.0];
	ide -> remote_rq	 [weight=1.0];
	ide -> data_for_fifo	 [weight=11.0];
	ide -> header_len	 [weight=1.0];
	ide -> "i_can_acf.ide"	 [weight=1.0];
	crc_in -> crc_err	 [weight=1.0];
	crc_in -> crc_in	 [weight=1.0];
	rx_ack_lim -> go_rx_eof	 [weight=1.0];
	rx_ack_lim -> form_err	 [weight=1.0];
	rx_ack_lim -> error_capture_code_segment	 [weight=4.0];
	"i_can_crc_rx.data" -> "i_can_crc_rx.crc_next"	 [weight=1.0];
	error_flag_over -> enable_error_cnt2	 [weight=1.0];
	error_flag_over -> rule3_exc1_1	 [weight=2.0];
	error_flag_over -> error_flag_over_latched	 [weight=1.0];
	error_flag_over -> rx_err_cnt	 [weight=1.0];
	"i_can_acf.ide" -> "i_can_acf.id_ok"	 [weight=4.0];
	go_error_frame -> rx_eof	 [weight=2.0];
	go_error_frame -> rx_crc	 [weight=2.0];
	go_error_frame -> overload_frame_blocked	 [weight=2.0];
	go_error_frame -> rx_id1	 [weight=2.0];
	go_error_frame -> rx_id2	 [weight=2.0];
	go_error_frame -> rx_data	 [weight=2.0];
	go_error_frame -> rx_ide	 [weight=2.0];
	go_error_frame -> tx_err_cnt	 [weight=2.0];
	go_error_frame -> node_error_passive	 [weight=1.0];
	go_error_frame -> enable_error_cnt2	 [weight=2.0];
	go_error_frame -> rule3_exc1_2	 [weight=2.0];
	go_error_frame -> rx_r0	 [weight=2.0];
	go_error_frame -> rx_r1	 [weight=2.0];
	go_error_frame -> rx_rtr2	 [weight=2.0];
	go_error_frame -> rx_rtr1	 [weight=2.0];
	go_error_frame -> error_frame	 [weight=1.0];
	go_error_frame -> rx_ack	 [weight=2.0];
	go_error_frame -> error_flag_over_latched	 [weight=2.0];
	go_error_frame -> first_compare_bit	 [weight=2.0];
	go_error_frame -> set_bus_error_irq	 [weight=1.0];
	go_error_frame -> rx_err_cnt	 [weight=7.0];
	go_error_frame -> overload_cnt2	 [weight=2.0];
	go_error_frame -> overload_cnt1	 [weight=2.0];
	go_error_frame -> bit_de_stuff_reset	 [weight=1.0];
	go_error_frame -> passive_cnt	 [weight=3.0];
	go_error_frame -> rx_inter	 [weight=2.0];
	go_error_frame -> rx_dlc	 [weight=2.0];
	go_error_frame -> enable_overload_cnt2	 [weight=2.0];
	go_error_frame -> bit_cnt	 [weight=2.0];
	go_error_frame -> eof_cnt	 [weight=2.0];
	go_error_frame -> tx_next	 [weight=8.0];
	go_error_frame -> tx_successful	 [weight=1.0];
	go_error_frame -> overload_request_cnt	 [weight=2.0];
	go_error_frame -> delayed_dominant_cnt	 [weight=2.0];
	go_error_frame -> overload_frame	 [weight=2.0];
	go_error_frame -> transmitting	 [weight=2.0];
	go_error_frame -> rx_crc_lim	 [weight=2.0];
	go_error_frame -> rx_idle	 [weight=2.0];
	go_error_frame -> "i_can_acf.go_error_frame"	 [weight=1.0];
	go_error_frame -> error_cnt1	 [weight=2.0];
	go_error_frame -> error_cnt2	 [weight=2.0];
	go_error_frame -> bit_de_stuff_set	 [weight=1.0];
	go_error_frame -> rx_ack_lim	 [weight=2.0];
	tx_data_9 -> "i_ibo_tx_data_9.di"	 [weight=1.0];
	tx_data_8 -> "i_ibo_tx_data_8.di"	 [weight=1.0];
	tx_data_3 -> "i_ibo_tx_data_3.di"	 [weight=1.0];
	tx_data_2 -> "i_ibo_tx_data_2.di"	 [weight=1.0];
	tx_data_1 -> limited_tx_cnt_std	 [weight=1.0];
	tx_data_1 -> "i_ibo_tx_data_1.di"	 [weight=1.0];
	tx_data_0 -> "i_ibo_tx_data_0.di"	 [weight=1.0];
	tx_data_0 -> limited_tx_cnt_ext	 [weight=1.0];
	tmp_fifo -> "i_can_acf.data0"	 [weight=1.0];
	tmp_fifo -> "i_can_acf.data1"	 [weight=1.0];
	tmp_fifo -> data_for_fifo	 [weight=1.0];
	tx_data_6 -> "i_ibo_tx_data_6.di"	 [weight=1.0];
	tx_data_5 -> "i_ibo_tx_data_5.di"	 [weight=1.0];
	tx_data_4 -> "i_ibo_tx_data_4.di"	 [weight=1.0];
	form_err_latched -> err	 [weight=1.0];
	write_data_to_tmp_fifo -> byte_cnt	 [weight=2.0];
	write_data_to_tmp_fifo -> tmp_fifo	 [weight=1.0];
	storing_header -> header_cnt	 [weight=1.0];
	storing_header -> data_for_fifo	 [weight=11.0];
	tx_pointer -> rst_tx_pointer	 [weight=1.0];
	tx_pointer -> tx_bit	 [weight=8.0];
	tx_pointer -> tx_pointer	 [weight=1.0];
	acceptance_filter_mode -> "i_can_acf.acceptance_filter_mode"	 [weight=1.0];
	go_overload_frame -> rx_eof	 [weight=2.0];
	go_overload_frame -> enable_error_cnt2	 [weight=2.0];
	go_overload_frame -> bit_err_latched	 [weight=2.0];
	go_overload_frame -> ack_err_latched	 [weight=2.0];
	go_overload_frame -> error_frame	 [weight=2.0];
	go_overload_frame -> error_flag_over_latched	 [weight=2.0];
	go_overload_frame -> stuff_err_latched	 [weight=2.0];
	go_overload_frame -> overload_cnt2	 [weight=2.0];
	go_overload_frame -> overload_cnt1	 [weight=2.0];
	go_overload_frame -> bit_de_stuff_reset	 [weight=1.0];
	go_overload_frame -> passive_cnt	 [weight=3.0];
	go_overload_frame -> rx_inter	 [weight=2.0];
	go_overload_frame -> enable_overload_cnt2	 [weight=2.0];
	go_overload_frame -> bit_cnt	 [weight=2.0];
	go_overload_frame -> eof_cnt	 [weight=2.0];
	go_overload_frame -> tx_next	 [weight=5.0];
	go_overload_frame -> delayed_dominant_cnt	 [weight=2.0];
	go_overload_frame -> overload_frame	 [weight=1.0];
	go_overload_frame -> transmitting	 [weight=2.0];
	go_overload_frame -> error_cnt1	 [weight=2.0];
	go_overload_frame -> error_cnt2	 [weight=2.0];
	go_overload_frame -> form_err_latched	 [weight=2.0];
	arbitration_field_d -> arbitration_cnt	 [weight=2.0];
	"i_ibo_tx_data_11.di" -> "i_ibo_tx_data_11.do"	 [weight=8.0];
	go_rx_idle -> finish_msg	 [weight=2.0];
	go_rx_idle -> rst_tx_pointer	 [weight=1.0];
	go_rx_idle -> arbitration_lost	 [weight=2.0];
	go_rx_idle -> transmitter	 [weight=1.0];
	go_rx_idle -> rx_inter	 [weight=2.0];
	go_rx_idle -> transmitting	 [weight=1.0];
	go_rx_idle -> rx_idle	 [weight=1.0];
	bus_free_cnt -> bus_free	 [weight=2.0];
	bus_free_cnt -> bus_free_cnt_en	 [weight=1.0];
	bus_free_cnt -> bus_free_cnt	 [weight=3.0];
	extended_chain_data_std -> tx_bit	 [weight=1.0];
	extended_chain_ext -> tx_bit	 [weight=1.0];
	go_rx_r0 -> rx_ide	 [weight=2.0];
	go_rx_r0 -> rx_r0	 [weight=1.0];
	go_rx_r0 -> rx_r1	 [weight=2.0];
	go_rx_r1 -> rx_r1	 [weight=1.0];
	go_rx_r1 -> rx_rtr2	 [weight=2.0];
	"i_can_acf.go_rx_inter" -> "i_can_acf.id_ok"	 [weight=1.0];
	bit_de_stuff_tx -> rst_tx_pointer	 [weight=1.0];
	bit_de_stuff_tx -> tx_next	 [weight=1.0];
	bit_de_stuff_tx -> tx_pointer	 [weight=1.0];
	error_capture_code_blocked -> set_bus_error_irq	 [weight=1.0];
}
