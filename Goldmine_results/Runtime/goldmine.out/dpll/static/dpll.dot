digraph "()" {
	"inst_freqdiv.FrequencyOut" -> "inst_freqdiv.FrequencyOut"	 [weight=1.0];
	"inst_freqdiv.FrequencyOut" -> SignalOut	 [weight=1.0];
	"inst_zrwf.inst_M_Filter.FilterMaxValue" -> "inst_zrwf.inst_M_Filter.FilterCounter"	 [weight=3.0];
	Positive -> "inst_freqdiv.Positive"	 [weight=1.0];
	"inst_zrwf.inst_M_Filter.Positive" -> "inst_zrwf.Up"	 [weight=1.0];
	"inst_zrwf.Negative" -> Negative	 [weight=1.0];
	"inst_ph_cmp.InputSignalEdge" -> "inst_ph_cmp.Lag"	 [weight=1.0];
	"inst_ph_cmp.InputSignalEdge" -> "inst_ph_cmp.Lead"	 [weight=1.0];
	"inst_zrwf.ResetterValue" -> "inst_zrwf.N_FilterCounter"	 [weight=1.0];
	MainClock -> "inst_zrwf.MainClock"	 [weight=1.0];
	MainClock -> "inst_freqdiv.MainClock"	 [weight=1.0];
	MainClock -> "inst_ph_cmp.MainClock"	 [weight=1.0];
	"inst_freqdiv.DividerCounter" -> "inst_freqdiv.FrequencyOut"	 [weight=1.0];
	"inst_freqdiv.DividerCounter" -> "inst_freqdiv.DividerCounter"	 [weight=7.0];
	"inst_zrwf.inst_M_Filter.Negative" -> "inst_zrwf.Down"	 [weight=1.0];
	SignalIn -> "inst_ph_cmp.InputSignal"	 [weight=1.0];
	"inst_zrwf.Lag" -> "inst_zrwf.inst_M_Filter.Lag"	 [weight=1.0];
	"inst_zrwf.Lag" -> "inst_zrwf.N_FilterCounter"	 [weight=1.0];
	"inst_zrwf.inst_M_Filter.Lead" -> "inst_zrwf.inst_M_Filter.FilterCounter"	 [weight=1.0];
	"inst_zrwf.ResetterCounterMinValue" -> "inst_zrwf.ResetterCounter"	 [weight=3.0];
	Lag -> "inst_zrwf.Lag"	 [weight=1.0];
	"inst_freqdiv.Negative" -> "inst_freqdiv.DividerCounter"	 [weight=3.0];
	"inst_zrwf.inst_M_Filter.FilterMinValue" -> "inst_zrwf.inst_M_Filter.FilterCounter"	 [weight=3.0];
	"inst_ph_cmp.InputSignalEdgeDet" -> "inst_ph_cmp.InputSignalEdge"	 [weight=1.0];
	"inst_ph_cmp.InputSignalEdgeDet" -> "inst_ph_cmp.InputSignalEdgeDet"	 [weight=1.0];
	"inst_zrwf.inst_M_Filter.Lag" -> "inst_zrwf.inst_M_Filter.FilterCounter"	 [weight=1.0];
	"inst_zrwf.inst_M_Filter.FilterCounter" -> "inst_zrwf.inst_M_Filter.Positive"	 [weight=1.0];
	"inst_zrwf.inst_M_Filter.FilterCounter" -> "inst_zrwf.inst_M_Filter.Negative"	 [weight=1.0];
	"inst_zrwf.inst_M_Filter.FilterCounter" -> "inst_zrwf.inst_M_Filter.FilterCounter"	 [weight=8.0];
	"inst_ph_cmp.OutputSignal" -> "inst_ph_cmp.Lag"	 [weight=1.0];
	"inst_ph_cmp.OutputSignal" -> "inst_ph_cmp.Lead"	 [weight=1.0];
	"inst_zrwf.ResetterCounterMaxValue" -> "inst_zrwf.ResetterCounter"	 [weight=3.0];
	"inst_zrwf.N_FilterCounter" -> "inst_zrwf.Negative"	 [weight=1.0];
	"inst_zrwf.N_FilterCounter" -> "inst_zrwf.N_FilterCounter"	 [weight=8.0];
	"inst_zrwf.N_FilterCounter" -> "inst_zrwf.Positive"	 [weight=1.0];
	"inst_zrwf.N_FilterMinValue" -> "inst_zrwf.N_FilterCounter"	 [weight=3.0];
	"inst_zrwf.ResetterCounter" -> "inst_zrwf.ResetterValue"	 [weight=8.0];
	"inst_zrwf.ResetterCounter" -> "inst_zrwf.ResetterCounter"	 [weight=8.0];
	Negative -> "inst_freqdiv.Negative"	 [weight=1.0];
	"inst_ph_cmp.Lag" -> Lag	 [weight=1.0];
	"inst_ph_cmp.Lead" -> Lead	 [weight=1.0];
	"inst_zrwf.Positive" -> Positive	 [weight=1.0];
	"inst_zrwf.MainClock" -> "inst_zrwf.inst_M_Filter.MainClock"	 [weight=1.0];
	"inst_freqdiv.Positive" -> "inst_freqdiv.DividerCounter"	 [weight=2.0];
	SignalOut -> "inst_ph_cmp.OutputSignal"	 [weight=1.0];
	"inst_freqdiv.DividerMaxValue" -> "inst_freqdiv.DividerCounter"	 [weight=4.0];
	"inst_zrwf.Up" -> "inst_zrwf.ResetterCounter"	 [weight=2.0];
	"inst_ph_cmp.InputSignal" -> "inst_ph_cmp.InputSignalEdgeDet"	 [weight=1.0];
	"inst_zrwf.Lead" -> "inst_zrwf.inst_M_Filter.Lead"	 [weight=1.0];
	"inst_zrwf.Lead" -> "inst_zrwf.N_FilterCounter"	 [weight=1.0];
	"inst_zrwf.Down" -> "inst_zrwf.ResetterCounter"	 [weight=1.0];
	"inst_zrwf.N_FilterMaxValue" -> "inst_zrwf.N_FilterCounter"	 [weight=3.0];
	Lead -> "inst_zrwf.Lead"	 [weight=1.0];
}
