strict digraph "compose( ,  )" {
	node [label="\N"];
	"inst_freqdiv.188:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f12a5ec8a90>",
		fillcolor=firebrick,
		label="inst_freqdiv.188:NS
DividerCounter <= DividerCounter + 2;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f12a5ec8a90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"inst_freqdiv.Leaf_184:AL"	 [def_var="['FrequencyOut', 'DividerCounter']",
		label="inst_freqdiv.Leaf_184:AL"];
	"inst_freqdiv.188:NS" -> "inst_freqdiv.Leaf_184:AL"	 [cond="[]",
		lineno=None];
	"inst_zrwf.129:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f12a5ea9150>",
		fillcolor=cadetblue,
		label="inst_zrwf.129:BS
ResetterValue = 7;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f12a5ea9150>]",
		style=filled,
		typ=BlockingSubstitution];
	"inst_zrwf.Leaf_120:AL"	 [def_var="['ResetterValue']",
		label="inst_zrwf.Leaf_120:AL"];
	"inst_zrwf.129:BS" -> "inst_zrwf.Leaf_120:AL"	 [cond="[]",
		lineno=None];
	"inst_zrwf.127:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f12a5e9fc90>",
		fillcolor=cadetblue,
		label="inst_zrwf.127:BS
ResetterValue = 4;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f12a5e9fc90>]",
		style=filled,
		typ=BlockingSubstitution];
	"inst_zrwf.127:BS" -> "inst_zrwf.Leaf_120:AL"	 [cond="[]",
		lineno=None];
	"inst_zrwf.114:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f12a5e9c890>",
		fillcolor=springgreen,
		label="inst_zrwf.114:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"inst_zrwf.115:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f12a5e9c9d0>",
		fillcolor=firebrick,
		label="inst_zrwf.115:NS
ResetterCounter <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f12a5e9c9d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"inst_zrwf.114:IF" -> "inst_zrwf.115:NS"	 [cond="['ResetterCounter', 'ResetterCounterMaxValue', 'ResetterCounter', 'ResetterCounterMinValue']",
		label="((ResetterCounter > ResetterCounterMaxValue) && (ResetterCounter < ResetterCounterMinValue))",
		lineno=114];
	"inst_zrwf.inst_M_Filter.62:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f12a5eff910>",
		clk_sens=True,
		fillcolor=gold,
		label="inst_zrwf.inst_M_Filter.62:AL",
		sens="['MainClock']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['FilterCounter']"];
	"inst_zrwf.inst_M_Filter.63:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f12a5effb50>",
		fillcolor=turquoise,
		label="inst_zrwf.inst_M_Filter.63:BL
Positive <= FilterCounter == FilterMaxValue;
Negative <= FilterCounter == FilterMinValue;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f12a5effad0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f12a5effd10>]",
		style=filled,
		typ=Block];
	"inst_zrwf.inst_M_Filter.62:AL" -> "inst_zrwf.inst_M_Filter.63:BL"	 [cond="[]",
		lineno=None];
	"inst_zrwf.130:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f12a5ea9350>",
		fillcolor=cadetblue,
		label="inst_zrwf.130:BS
ResetterValue = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f12a5ea9350>]",
		style=filled,
		typ=BlockingSubstitution];
	"inst_zrwf.130:BS" -> "inst_zrwf.Leaf_120:AL"	 [cond="[]",
		lineno=None];
	"inst_zrwf.inst_M_Filter.54:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f12a5eff2d0>",
		fillcolor=springgreen,
		label="inst_zrwf.inst_M_Filter.54:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"inst_zrwf.inst_M_Filter.54:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f12a5eff490>",
		fillcolor=firebrick,
		label="inst_zrwf.inst_M_Filter.54:NS
FilterCounter <= FilterCounter + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f12a5eff490>]",
		style=filled,
		typ=NonblockingSubstitution];
	"inst_zrwf.inst_M_Filter.54:IF" -> "inst_zrwf.inst_M_Filter.54:NS"	 [cond="['Lead']",
		label=Lead,
		lineno=54];
	"inst_freqdiv.187:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f12a5ec8710>",
		fillcolor=firebrick,
		label="inst_freqdiv.187:NS
DividerCounter <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f12a5ec8710>]",
		style=filled,
		typ=NonblockingSubstitution];
	"inst_freqdiv.187:NS" -> "inst_freqdiv.Leaf_184:AL"	 [cond="[]",
		lineno=None];
	"inst_zrwf.142:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f12a5ea9d50>",
		fillcolor=firebrick,
		label="inst_zrwf.142:NS
N_FilterCounter <= N_FilterCounter + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f12a5ea9d50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"inst_zrwf.Leaf_136:AL"	 [def_var="['N_FilterCounter']",
		label="inst_zrwf.Leaf_136:AL"];
	"inst_zrwf.142:NS" -> "inst_zrwf.Leaf_136:AL"	 [cond="[]",
		lineno=None];
	"inst_ph_cmp.26:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f12a62ede50>",
		fillcolor=turquoise,
		label="inst_ph_cmp.26:BL
Lag <= (InputSignalEdge == 1'b1) && (OutputSignal == 1'b0);
Lead <= (InputSignalEdge == 1'b1) && (OutputSignal == \
1'b1);",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f12a62ed1d0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f12a6641890>]",
		style=filled,
		typ=Block];
	"inst_ph_cmp.Leaf_25:AL"	 [def_var="['Lag', 'Lead']",
		label="inst_ph_cmp.Leaf_25:AL"];
	"inst_ph_cmp.26:BL" -> "inst_ph_cmp.Leaf_25:AL"	 [cond="[]",
		lineno=None];
	"inst_zrwf.112:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f12a5e9c610>",
		fillcolor=firebrick,
		label="inst_zrwf.112:NS
ResetterCounter <= ResetterCounter - 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f12a5e9c610>]",
		style=filled,
		typ=NonblockingSubstitution];
	"inst_zrwf.Leaf_102:AL"	 [def_var="['ResetterCounter']",
		label="inst_zrwf.Leaf_102:AL"];
	"inst_zrwf.112:NS" -> "inst_zrwf.Leaf_102:AL"	 [cond="[]",
		lineno=None];
	"inst_zrwf.105:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f12a5efd850>",
		fillcolor=turquoise,
		label="inst_zrwf.105:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"inst_zrwf.106:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f12a5efdd10>",
		fillcolor=springgreen,
		label="inst_zrwf.106:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"inst_zrwf.105:BL" -> "inst_zrwf.106:IF"	 [cond="[]",
		lineno=None];
	"inst_freqdiv.184:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f12a5ec8390>",
		clk_sens=True,
		fillcolor=gold,
		label="inst_freqdiv.184:AL",
		sens="['MainClock']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['DividerMaxValue', 'FrequencyOut', 'DividerCounter', 'Negative', 'Positive']"];
	"inst_freqdiv.Leaf_184:AL" -> "inst_freqdiv.184:AL";
	"inst_ph_cmp.25:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f12a6309650>",
		clk_sens=True,
		fillcolor=gold,
		label="inst_ph_cmp.25:AL",
		sens="['MainClock']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['InputSignalEdge', 'OutputSignal']"];
	"inst_freqdiv.Leaf_184:AL" -> "inst_ph_cmp.25:AL";
	"inst_freqdiv.190:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f12a5ec4050>",
		fillcolor=firebrick,
		label="inst_freqdiv.190:NS
DividerCounter <= DividerCounter + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f12a5ec4050>]",
		style=filled,
		typ=NonblockingSubstitution];
	"inst_freqdiv.190:NS" -> "inst_freqdiv.Leaf_184:AL"	 [cond="[]",
		lineno=None];
	"inst_zrwf.inst_M_Filter.51:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f12a5eff0d0>",
		fillcolor=firebrick,
		label="inst_zrwf.inst_M_Filter.51:NS
FilterCounter <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f12a5eff0d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"inst_zrwf.inst_M_Filter.Leaf_48:AL"	 [def_var="['FilterCounter']",
		label="inst_zrwf.inst_M_Filter.Leaf_48:AL"];
	"inst_zrwf.inst_M_Filter.51:NS" -> "inst_zrwf.inst_M_Filter.Leaf_48:AL"	 [cond="[]",
		lineno=None];
	"inst_zrwf.inst_M_Filter.Leaf_62:AL"	 [def_var="['Positive', 'Negative']",
		label="inst_zrwf.inst_M_Filter.Leaf_62:AL"];
	"inst_zrwf.102:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f12a5efd890>",
		clk_sens=True,
		fillcolor=gold,
		label="inst_zrwf.102:AL",
		sens="['MainClock']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['ResetterCounterMaxValue', 'ResetterCounter', 'ResetterCounterMinValue', 'Down', 'Up']"];
	"inst_zrwf.inst_M_Filter.Leaf_62:AL" -> "inst_zrwf.102:AL";
	"inst_zrwf.107:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f12a5efdf10>",
		fillcolor=firebrick,
		label="inst_zrwf.107:NS
ResetterCounter <= ResetterCounter + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f12a5efdf10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"inst_zrwf.107:NS" -> "inst_zrwf.Leaf_102:AL"	 [cond="[]",
		lineno=None];
	"inst_zrwf.125:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f12a5e9f810>",
		fillcolor=cadetblue,
		label="inst_zrwf.125:BS
ResetterValue = 256 - 4;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f12a5e9f810>]",
		style=filled,
		typ=BlockingSubstitution];
	"inst_zrwf.125:BS" -> "inst_zrwf.Leaf_120:AL"	 [cond="[]",
		lineno=None];
	"inst_zrwf.136:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f12a5ea94d0>",
		clk_sens=True,
		fillcolor=gold,
		label="inst_zrwf.136:AL",
		sens="['MainClock']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Lead', 'N_FilterMaxValue', 'Lag', 'ResetterValue', 'N_FilterMinValue', 'N_FilterCounter']"];
	"inst_zrwf.137:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f12a5ea9550>",
		fillcolor=turquoise,
		label="inst_zrwf.137:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"inst_zrwf.136:AL" -> "inst_zrwf.137:BL"	 [cond="[]",
		lineno=None];
	"inst_zrwf.103:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f12a5efd990>",
		fillcolor=turquoise,
		label="inst_zrwf.103:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"inst_zrwf.103:BL" -> "inst_zrwf.114:IF"	 [cond="[]",
		lineno=None];
	"inst_zrwf.104:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f12a5efdf90>",
		fillcolor=springgreen,
		label="inst_zrwf.104:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"inst_zrwf.103:BL" -> "inst_zrwf.104:IF"	 [cond="[]",
		lineno=None];
	"inst_zrwf.123:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f12a5e9cfd0>",
		fillcolor=lightcyan,
		label="inst_zrwf.123:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"inst_zrwf.123:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f12a5e9f190>",
		fillcolor=cadetblue,
		label="inst_zrwf.123:BS
ResetterValue = 256 - 7;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f12a5e9f190>]",
		style=filled,
		typ=BlockingSubstitution];
	"inst_zrwf.123:CA" -> "inst_zrwf.123:BS"	 [cond="[]",
		lineno=None];
	"inst_zrwf.inst_M_Filter.48:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f12a5ecac10>",
		clk_sens=True,
		fillcolor=gold,
		label="inst_zrwf.inst_M_Filter.48:AL",
		sens="['MainClock']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Lag', 'FilterMaxValue', 'FilterCounter', 'FilterMinValue', 'Lead']"];
	"inst_zrwf.inst_M_Filter.49:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f12a5ecac90>",
		fillcolor=turquoise,
		label="inst_zrwf.inst_M_Filter.49:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"inst_zrwf.inst_M_Filter.48:AL" -> "inst_zrwf.inst_M_Filter.49:BL"	 [cond="[]",
		lineno=None];
	"inst_freqdiv.185:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f12a5ec83d0>",
		fillcolor=turquoise,
		label="inst_freqdiv.185:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"inst_freqdiv.186:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f12a5ec86d0>",
		fillcolor=springgreen,
		label="inst_freqdiv.186:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"inst_freqdiv.185:BL" -> "inst_freqdiv.186:IF"	 [cond="[]",
		lineno=None];
	"inst_freqdiv.191:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f12a5ec8e10>",
		fillcolor=springgreen,
		label="inst_freqdiv.191:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"inst_freqdiv.185:BL" -> "inst_freqdiv.191:IF"	 [cond="[]",
		lineno=None];
	"inst_freqdiv.191:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f12a5ec41d0>",
		fillcolor=firebrick,
		label="inst_freqdiv.191:NS
FrequencyOut <= ~FrequencyOut;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f12a5ec41d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"inst_freqdiv.191:NS" -> "inst_freqdiv.Leaf_184:AL"	 [cond="[]",
		lineno=None];
	"inst_zrwf.143:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f12a5ea9e90>",
		fillcolor=springgreen,
		label="inst_zrwf.143:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"inst_zrwf.143:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f12a5ea8090>",
		fillcolor=firebrick,
		label="inst_zrwf.143:NS
N_FilterCounter <= N_FilterCounter - 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f12a5ea8090>]",
		style=filled,
		typ=NonblockingSubstitution];
	"inst_zrwf.143:IF" -> "inst_zrwf.143:NS"	 [cond="['Lag']",
		label=Lag,
		lineno=143];
	"inst_zrwf.115:NS" -> "inst_zrwf.Leaf_102:AL"	 [cond="[]",
		lineno=None];
	"inst_zrwf.128:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f12a5e9fed0>",
		fillcolor=cadetblue,
		label="inst_zrwf.128:BS
ResetterValue = 6;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f12a5e9fed0>]",
		style=filled,
		typ=BlockingSubstitution];
	"inst_zrwf.128:BS" -> "inst_zrwf.Leaf_120:AL"	 [cond="[]",
		lineno=None];
	"inst_zrwf.120:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f12a5e9cd90>",
		clk_sens=False,
		fillcolor=gold,
		label="inst_zrwf.120:AL",
		sens="[]",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['ResetterCounter']"];
	"inst_zrwf.121:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f12a5e9ce10>",
		fillcolor=turquoise,
		label="inst_zrwf.121:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"inst_zrwf.120:AL" -> "inst_zrwf.121:BL"	 [cond="[]",
		lineno=None];
	"inst_zrwf.inst_M_Filter.63:BL" -> "inst_zrwf.inst_M_Filter.Leaf_62:AL"	 [cond="[]",
		lineno=None];
	"inst_zrwf.127:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f12a5e9fb90>",
		fillcolor=lightcyan,
		label="inst_zrwf.127:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"inst_zrwf.127:CA" -> "inst_zrwf.127:BS"	 [cond="[]",
		lineno=None];
	"inst_zrwf.123:BS" -> "inst_zrwf.Leaf_120:AL"	 [cond="[]",
		lineno=None];
	"inst_ph_cmp.Leaf_10:AL"	 [def_var="['InputSignalEdgeDet']",
		label="inst_ph_cmp.Leaf_10:AL"];
	"inst_ph_cmp.21:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f12a6295dd0>",
		def_var="['InputSignalEdge']",
		fillcolor=deepskyblue,
		label="inst_ph_cmp.21:AS
InputSignalEdge = InputSignalEdgeDet == 2'b01;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['InputSignalEdgeDet']"];
	"inst_ph_cmp.Leaf_10:AL" -> "inst_ph_cmp.21:AS";
	"inst_ph_cmp.10:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f12a65dc390>",
		clk_sens=True,
		fillcolor=gold,
		label="inst_ph_cmp.10:AL",
		sens="['MainClock']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['InputSignal', 'InputSignalEdgeDet']"];
	"inst_ph_cmp.Leaf_10:AL" -> "inst_ph_cmp.10:AL";
	"inst_zrwf.106:IF" -> "inst_zrwf.107:NS"	 [cond="['ResetterCounter', 'ResetterCounterMaxValue', 'ResetterCounter', 'ResetterCounterMinValue']",
		label="((ResetterCounter < ResetterCounterMaxValue) || (ResetterCounter >= ResetterCounterMinValue))",
		lineno=106];
	"inst_zrwf.129:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f12a5ea9050>",
		fillcolor=lightcyan,
		label="inst_zrwf.129:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"inst_zrwf.129:CA" -> "inst_zrwf.129:BS"	 [cond="[]",
		lineno=None];
	"inst_zrwf.110:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f12a5e9c090>",
		fillcolor=turquoise,
		label="inst_zrwf.110:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"inst_zrwf.111:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f12a5e9c410>",
		fillcolor=springgreen,
		label="inst_zrwf.111:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"inst_zrwf.110:BL" -> "inst_zrwf.111:IF"	 [cond="[]",
		lineno=None];
	"inst_zrwf.130:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f12a5ea9250>",
		fillcolor=lightcyan,
		label="inst_zrwf.130:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"inst_zrwf.130:CA" -> "inst_zrwf.130:BS"	 [cond="[]",
		lineno=None];
	"inst_zrwf.138:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f12a5ea99d0>",
		fillcolor=springgreen,
		label="inst_zrwf.138:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"inst_zrwf.137:BL" -> "inst_zrwf.138:IF"	 [cond="[]",
		lineno=None];
	"inst_zrwf.128:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f12a5e9fdd0>",
		fillcolor=lightcyan,
		label="inst_zrwf.128:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"inst_zrwf.128:CA" -> "inst_zrwf.128:BS"	 [cond="[]",
		lineno=None];
	"inst_zrwf.122:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f12a5ea91d0>",
		fillcolor=linen,
		label="inst_zrwf.122:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"inst_zrwf.122:CS" -> "inst_zrwf.123:CA"	 [cond="['ResetterCounter']",
		label=ResetterCounter,
		lineno=122];
	"inst_zrwf.122:CS" -> "inst_zrwf.127:CA"	 [cond="['ResetterCounter']",
		label=ResetterCounter,
		lineno=122];
	"inst_zrwf.122:CS" -> "inst_zrwf.129:CA"	 [cond="['ResetterCounter']",
		label=ResetterCounter,
		lineno=122];
	"inst_zrwf.122:CS" -> "inst_zrwf.130:CA"	 [cond="['ResetterCounter']",
		label=ResetterCounter,
		lineno=122];
	"inst_zrwf.122:CS" -> "inst_zrwf.128:CA"	 [cond="['ResetterCounter']",
		label=ResetterCounter,
		lineno=122];
	"inst_zrwf.125:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f12a5e9f690>",
		fillcolor=lightcyan,
		label="inst_zrwf.125:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"inst_zrwf.122:CS" -> "inst_zrwf.125:CA"	 [cond="['ResetterCounter']",
		label=ResetterCounter,
		lineno=122];
	"inst_zrwf.124:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f12a5e9f390>",
		fillcolor=lightcyan,
		label="inst_zrwf.124:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"inst_zrwf.122:CS" -> "inst_zrwf.124:CA"	 [cond="['ResetterCounter']",
		label=ResetterCounter,
		lineno=122];
	"inst_zrwf.126:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f12a5e9f950>",
		fillcolor=lightcyan,
		label="inst_zrwf.126:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"inst_zrwf.122:CS" -> "inst_zrwf.126:CA"	 [cond="['ResetterCounter']",
		label=ResetterCounter,
		lineno=122];
	"inst_zrwf.109:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f12a5e9c050>",
		fillcolor=springgreen,
		label="inst_zrwf.109:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"inst_zrwf.109:IF" -> "inst_zrwf.110:BL"	 [cond="['Down']",
		label=Down,
		lineno=109];
	"inst_ph_cmp.21:AS" -> "inst_ph_cmp.25:AL";
	"inst_zrwf.143:NS" -> "inst_zrwf.Leaf_136:AL"	 [cond="[]",
		lineno=None];
	"inst_zrwf.inst_M_Filter.55:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f12a5eff590>",
		fillcolor=springgreen,
		label="inst_zrwf.inst_M_Filter.55:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"inst_zrwf.inst_M_Filter.55:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f12a5eff750>",
		fillcolor=firebrick,
		label="inst_zrwf.inst_M_Filter.55:NS
FilterCounter <= FilterCounter - 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f12a5eff750>]",
		style=filled,
		typ=NonblockingSubstitution];
	"inst_zrwf.inst_M_Filter.55:IF" -> "inst_zrwf.inst_M_Filter.55:NS"	 [cond="['Lag']",
		label=Lag,
		lineno=55];
	"inst_zrwf.142:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f12a5ea9b90>",
		fillcolor=springgreen,
		label="inst_zrwf.142:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"inst_zrwf.142:IF" -> "inst_zrwf.142:NS"	 [cond="['Lead']",
		label=Lead,
		lineno=142];
	"inst_freqdiv.186:IF" -> "inst_freqdiv.187:NS"	 [cond="['DividerCounter', 'DividerMaxValue']",
		label="(DividerCounter >= DividerMaxValue - 1)",
		lineno=186];
	"inst_freqdiv.188:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f12a5ec8a50>",
		fillcolor=springgreen,
		label="inst_freqdiv.188:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"inst_freqdiv.186:IF" -> "inst_freqdiv.188:IF"	 [cond="['DividerCounter', 'DividerMaxValue']",
		label="!((DividerCounter >= DividerMaxValue - 1))",
		lineno=186];
	"inst_ph_cmp.11:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f12a6331990>",
		fillcolor=turquoise,
		label="inst_ph_cmp.11:BL
InputSignalEdgeDet <= { InputSignalEdgeDet[0], InputSignal };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f12a62f1190>]",
		style=filled,
		typ=Block];
	"inst_ph_cmp.10:AL" -> "inst_ph_cmp.11:BL"	 [cond="[]",
		lineno=None];
	"inst_zrwf.inst_M_Filter.55:NS" -> "inst_zrwf.inst_M_Filter.Leaf_48:AL"	 [cond="[]",
		lineno=None];
	"inst_zrwf.111:IF" -> "inst_zrwf.112:NS"	 [cond="['ResetterCounter', 'ResetterCounterMaxValue', 'ResetterCounter', 'ResetterCounterMinValue']",
		label="((ResetterCounter <= ResetterCounterMaxValue) || (ResetterCounter > ResetterCounterMinValue))",
		lineno=111];
	"inst_zrwf.124:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f12a5e9f510>",
		fillcolor=cadetblue,
		label="inst_zrwf.124:BS
ResetterValue = 256 - 6;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f12a5e9f510>]",
		style=filled,
		typ=BlockingSubstitution];
	"inst_zrwf.124:BS" -> "inst_zrwf.Leaf_120:AL"	 [cond="[]",
		lineno=None];
	"inst_zrwf.inst_M_Filter.50:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f12a5eff110>",
		fillcolor=springgreen,
		label="inst_zrwf.inst_M_Filter.50:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"inst_zrwf.inst_M_Filter.49:BL" -> "inst_zrwf.inst_M_Filter.50:IF"	 [cond="[]",
		lineno=None];
	"inst_freqdiv.191:IF" -> "inst_freqdiv.191:NS"	 [cond="['DividerCounter']",
		label="(DividerCounter == 0)",
		lineno=191];
	"inst_zrwf.139:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f12a5ea9990>",
		fillcolor=firebrick,
		label="inst_zrwf.139:NS
N_FilterCounter <= ResetterValue;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f12a5ea9990>]",
		style=filled,
		typ=NonblockingSubstitution];
	"inst_zrwf.139:NS" -> "inst_zrwf.Leaf_136:AL"	 [cond="[]",
		lineno=None];
	"inst_ph_cmp.Leaf_25:AL" -> "inst_zrwf.136:AL";
	"inst_zrwf.125:CA" -> "inst_zrwf.125:BS"	 [cond="[]",
		lineno=None];
	"inst_zrwf.Leaf_102:AL" -> "inst_zrwf.120:AL";
	"inst_zrwf.Leaf_102:AL" -> "inst_zrwf.102:AL";
	"inst_zrwf.124:CA" -> "inst_zrwf.124:BS"	 [cond="[]",
		lineno=None];
	"inst_zrwf.Leaf_136:AL" -> "inst_zrwf.136:AL";
	"inst_zrwf.150:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f12a5ea8250>",
		clk_sens=True,
		fillcolor=gold,
		label="inst_zrwf.150:AL",
		sens="['MainClock']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['N_FilterCounter']"];
	"inst_zrwf.Leaf_136:AL" -> "inst_zrwf.150:AL";
	"inst_zrwf.141:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f12a5ea9dd0>",
		fillcolor=turquoise,
		label="inst_zrwf.141:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"inst_zrwf.141:BL" -> "inst_zrwf.143:IF"	 [cond="[]",
		lineno=None];
	"inst_zrwf.141:BL" -> "inst_zrwf.142:IF"	 [cond="[]",
		lineno=None];
	"inst_zrwf.151:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f12a5ea8490>",
		fillcolor=turquoise,
		label="inst_zrwf.151:BL
Positive <= N_FilterCounter == N_FilterMaxValue;
Negative <= N_FilterCounter == N_FilterMinValue;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f12a5ea8410>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f12a5ea8650>]",
		style=filled,
		typ=Block];
	"inst_zrwf.150:AL" -> "inst_zrwf.151:BL"	 [cond="[]",
		lineno=None];
	"inst_freqdiv.189:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f12a5ec8d90>",
		fillcolor=firebrick,
		label="inst_freqdiv.189:NS
DividerCounter <= DividerCounter;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f12a5ec8d90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"inst_freqdiv.189:NS" -> "inst_freqdiv.Leaf_184:AL"	 [cond="[]",
		lineno=None];
	"inst_zrwf.inst_M_Filter.54:NS" -> "inst_zrwf.inst_M_Filter.Leaf_48:AL"	 [cond="[]",
		lineno=None];
	"inst_zrwf.126:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f12a5e9fa50>",
		fillcolor=cadetblue,
		label="inst_zrwf.126:BS
ResetterValue = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f12a5e9fa50>]",
		style=filled,
		typ=BlockingSubstitution];
	"inst_zrwf.126:BS" -> "inst_zrwf.Leaf_120:AL"	 [cond="[]",
		lineno=None];
	"inst_zrwf.104:IF" -> "inst_zrwf.105:BL"	 [cond="['Up']",
		label=Up,
		lineno=104];
	"inst_zrwf.104:IF" -> "inst_zrwf.109:IF"	 [cond="['Up']",
		label="!(Up)",
		lineno=104];
	"inst_freqdiv.184:AL" -> "inst_freqdiv.185:BL"	 [cond="[]",
		lineno=None];
	"inst_zrwf.121:BL" -> "inst_zrwf.122:CS"	 [cond="[]",
		lineno=None];
	"inst_zrwf.138:IF" -> "inst_zrwf.139:NS"	 [cond="['N_FilterCounter', 'N_FilterMaxValue', 'N_FilterCounter', 'N_FilterMinValue']",
		label="((N_FilterCounter == N_FilterMaxValue) || (N_FilterCounter == N_FilterMinValue))",
		lineno=138];
	"inst_zrwf.138:IF" -> "inst_zrwf.141:BL"	 [cond="['N_FilterCounter', 'N_FilterMaxValue', 'N_FilterCounter', 'N_FilterMinValue']",
		label="!(((N_FilterCounter == N_FilterMaxValue) || (N_FilterCounter == N_FilterMinValue)))",
		lineno=138];
	"inst_zrwf.126:CA" -> "inst_zrwf.126:BS"	 [cond="[]",
		lineno=None];
	"inst_freqdiv.189:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f12a5ec8e50>",
		fillcolor=springgreen,
		label="inst_freqdiv.189:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"inst_freqdiv.189:IF" -> "inst_freqdiv.190:NS"	 [cond="['Positive']",
		label="!(Positive)",
		lineno=189];
	"inst_freqdiv.189:IF" -> "inst_freqdiv.189:NS"	 [cond="['Positive']",
		label=Positive,
		lineno=189];
	"inst_freqdiv.188:IF" -> "inst_freqdiv.188:NS"	 [cond="['Negative']",
		label=Negative,
		lineno=188];
	"inst_freqdiv.188:IF" -> "inst_freqdiv.189:IF"	 [cond="['Negative']",
		label="!(Negative)",
		lineno=188];
	"inst_zrwf.Leaf_120:AL" -> "inst_zrwf.136:AL";
	"inst_ph_cmp.25:AL" -> "inst_ph_cmp.26:BL"	 [cond="[]",
		lineno=None];
	"inst_ph_cmp.11:BL" -> "inst_ph_cmp.Leaf_10:AL"	 [cond="[]",
		lineno=None];
	"inst_zrwf.inst_M_Filter.50:IF" -> "inst_zrwf.inst_M_Filter.51:NS"	 [cond="['FilterCounter', 'FilterMaxValue', 'FilterCounter', 'FilterMinValue']",
		label="((FilterCounter == FilterMaxValue) || (FilterCounter == FilterMinValue))",
		lineno=50];
	"inst_zrwf.inst_M_Filter.53:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f12a5eff510>",
		fillcolor=turquoise,
		label="inst_zrwf.inst_M_Filter.53:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"inst_zrwf.inst_M_Filter.50:IF" -> "inst_zrwf.inst_M_Filter.53:BL"	 [cond="['FilterCounter', 'FilterMaxValue', 'FilterCounter', 'FilterMinValue']",
		label="!(((FilterCounter == FilterMaxValue) || (FilterCounter == FilterMinValue)))",
		lineno=50];
	"inst_zrwf.102:AL" -> "inst_zrwf.103:BL"	 [cond="[]",
		lineno=None];
	"inst_zrwf.Leaf_150:AL"	 [def_var="['Positive', 'Negative']",
		label="inst_zrwf.Leaf_150:AL"];
	"inst_zrwf.151:BL" -> "inst_zrwf.Leaf_150:AL"	 [cond="[]",
		lineno=None];
	"inst_zrwf.inst_M_Filter.Leaf_48:AL" -> "inst_zrwf.inst_M_Filter.62:AL";
	"inst_zrwf.inst_M_Filter.Leaf_48:AL" -> "inst_zrwf.inst_M_Filter.48:AL";
	"inst_zrwf.inst_M_Filter.53:BL" -> "inst_zrwf.inst_M_Filter.54:IF"	 [cond="[]",
		lineno=None];
	"inst_zrwf.inst_M_Filter.53:BL" -> "inst_zrwf.inst_M_Filter.55:IF"	 [cond="[]",
		lineno=None];
	"inst_zrwf.Leaf_150:AL" -> "inst_freqdiv.184:AL";
}
