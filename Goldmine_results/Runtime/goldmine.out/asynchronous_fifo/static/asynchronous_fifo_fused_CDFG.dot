strict digraph "compose( ,  )" {
	node [label="\N"];
	"rptr_h.20:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe970765950>",
		fillcolor=turquoise,
		label="rptr_h.20:BL
b_rptr <= b_rptr_next;
g_rptr <= g_rptr_next;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe970765c10>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7fe970765b10>]",
		style=filled,
		typ=Block];
	"rptr_h.Leaf_15:AL"	 [def_var="['b_rptr', 'g_rptr']",
		label="rptr_h.Leaf_15:AL"];
	"rptr_h.20:BL" -> "rptr_h.Leaf_15:AL"	 [cond="[]",
		lineno=None];
	"sync_wptr.6:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe97076e110>",
		fillcolor=springgreen,
		label="sync_wptr.6:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"sync_wptr.10:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe97077f3d0>",
		fillcolor=turquoise,
		label="sync_wptr.10:BL
q1 <= d_in;
d_out <= q1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe97077f290>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7fe970769510>]",
		style=filled,
		typ=Block];
	"sync_wptr.6:IF" -> "sync_wptr.10:BL"	 [cond="['rst_n']",
		label="!((!rst_n))",
		lineno=6];
	"sync_wptr.6:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe970714550>",
		fillcolor=turquoise,
		label="sync_wptr.6:BL
q1 <= 0;
d_out <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe970714290>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7fe97076e990>]",
		style=filled,
		typ=Block];
	"sync_wptr.6:IF" -> "sync_wptr.6:BL"	 [cond="['rst_n']",
		label="(!rst_n)",
		lineno=6];
	"wptr_h.43:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fe97075a650>",
		clk_sens=False,
		fillcolor=gold,
		label="wptr_h.43:AL",
		sens="['wclk', 'wrst_n']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['wfull', 'wrst_n']"];
	"wptr_h.43:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe97075a6d0>",
		fillcolor=turquoise,
		label="wptr_h.43:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"wptr_h.43:AL" -> "wptr_h.43:BL"	 [cond="[]",
		lineno=None];
	"sync_rptr.Leaf_5:AL"	 [def_var="['q1', 'd_out']",
		label="sync_rptr.Leaf_5:AL"];
	"wptr_h.48:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe97075ae90>",
		def_var="['wfull']",
		fillcolor=deepskyblue,
		label="wptr_h.48:AS
wfull = g_wptr_next == { ~g_rptr_sync[PTR_WIDTH:PTR_WIDTH-1], g_rptr_sync[PTR_WIDTH-2:0] };",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['g_wptr_next', 'g_rptr_sync', 'g_rptr_sync', 'PTR_WIDTH']"];
	"sync_rptr.Leaf_5:AL" -> "wptr_h.48:AS";
	"sync_rptr.5:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fe970765550>",
		clk_sens=False,
		fillcolor=gold,
		label="sync_rptr.5:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['q1', 'rst_n', 'd_in']"];
	"sync_rptr.Leaf_5:AL" -> "sync_rptr.5:AL";
	"rptr_h.13:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe96fc73790>",
		def_var="['rempty']",
		fillcolor=deepskyblue,
		label="rptr_h.13:AS
rempty = g_wptr_sync == g_rptr_next;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['g_wptr_sync', 'g_rptr_next']"];
	"rptr_h.26:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fe970765110>",
		clk_sens=False,
		fillcolor=gold,
		label="rptr_h.26:AL",
		sens="['rclk', 'rrst_n']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rrst_n', 'rempty']"];
	"rptr_h.13:AS" -> "rptr_h.26:AL";
	"wptr_h.37:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe97075a350>",
		fillcolor=turquoise,
		label="wptr_h.37:BL
b_wptr <= b_wptr_next;
g_wptr <= g_wptr_next;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe97075a390>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7fe97075a4d0>]",
		style=filled,
		typ=Block];
	"wptr_h.Leaf_32:AL"	 [def_var="['g_wptr', 'b_wptr']",
		label="wptr_h.Leaf_32:AL"];
	"wptr_h.37:BL" -> "wptr_h.Leaf_32:AL"	 [cond="[]",
		lineno=None];
	"sync_wptr.5:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fe970765550>",
		clk_sens=False,
		fillcolor=gold,
		label="sync_wptr.5:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['q1', 'rst_n', 'd_in']"];
	"sync_wptr.5:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe970765190>",
		fillcolor=turquoise,
		label="sync_wptr.5:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"sync_wptr.5:AL" -> "sync_wptr.5:BL"	 [cond="[]",
		lineno=None];
	"rptr_h.Leaf_26:AL"	 [def_var="['empty']",
		label="rptr_h.Leaf_26:AL"];
	"fifom.Leaf_102:AL"	 [def_var="['data_out']",
		label="fifom.Leaf_102:AL"];
	"rptr_h.Leaf_26:AL" -> "fifom.Leaf_102:AL";
	"rptr_h.11:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe96fc57b50>",
		def_var="['b_rptr_next']",
		fillcolor=deepskyblue,
		label="rptr_h.11:AS
b_rptr_next = b_rptr + (r_en & !empty);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['b_rptr', 'r_en', 'empty']"];
	"rptr_h.Leaf_26:AL" -> "rptr_h.11:AS";
	"rptr_h.26:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe970765b90>",
		fillcolor=turquoise,
		label="rptr_h.26:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"rptr_h.27:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe9707657d0>",
		fillcolor=springgreen,
		label="rptr_h.27:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"rptr_h.26:BL" -> "rptr_h.27:IF"	 [cond="[]",
		lineno=None];
	"sync_rptr.10:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe97077f3d0>",
		fillcolor=turquoise,
		label="sync_rptr.10:BL
q1 <= d_in;
d_out <= q1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe97077f290>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7fe970769510>]",
		style=filled,
		typ=Block];
	"sync_rptr.10:BL" -> "sync_rptr.Leaf_5:AL"	 [cond="[]",
		lineno=None];
	"rptr_h.16:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe970765f50>",
		fillcolor=turquoise,
		label="rptr_h.16:BL
b_rptr <= 0;
g_rptr <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe970765250>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7fe970765f90>]",
		style=filled,
		typ=Block];
	"rptr_h.16:BL" -> "rptr_h.Leaf_15:AL"	 [cond="[]",
		lineno=None];
	"sync_wptr.Leaf_5:AL"	 [def_var="['q1', 'd_out']",
		label="sync_wptr.Leaf_5:AL"];
	"sync_wptr.Leaf_5:AL" -> "rptr_h.13:AS";
	"sync_wptr.Leaf_5:AL" -> "sync_wptr.5:AL";
	"rptr_h.12:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe96fc73250>",
		def_var="['g_rptr_next']",
		fillcolor=deepskyblue,
		label="rptr_h.12:AS
g_rptr_next = (b_rptr_next >> 1) ^ b_rptr_next;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['b_rptr_next', 'b_rptr_next']"];
	"rptr_h.12:AS" -> "rptr_h.13:AS";
	"rptr_h.15:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fe99188ec50>",
		clk_sens=False,
		fillcolor=gold,
		label="rptr_h.15:AL",
		sens="['rclk', 'rrst_n']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['b_rptr_next', 'rrst_n', 'g_rptr_next']"];
	"rptr_h.12:AS" -> "rptr_h.15:AL";
	"wptr_h.44:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe97075a890>",
		fillcolor=springgreen,
		label="wptr_h.44:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"wptr_h.45:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe97075a9d0>",
		fillcolor=firebrick,
		label="wptr_h.45:NS
full <= wfull;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe97075a9d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"wptr_h.44:IF" -> "wptr_h.45:NS"	 [cond="['wrst_n']",
		label="!((!wrst_n))",
		lineno=44];
	"wptr_h.44:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe97075a850>",
		fillcolor=firebrick,
		label="wptr_h.44:NS
full <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe97075a850>]",
		style=filled,
		typ=NonblockingSubstitution];
	"wptr_h.44:IF" -> "wptr_h.44:NS"	 [cond="['wrst_n']",
		label="(!wrst_n)",
		lineno=44];
	"rptr_h.26:AL" -> "rptr_h.26:BL"	 [cond="[]",
		lineno=None];
	"rptr_h.28:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9707650d0>",
		fillcolor=firebrick,
		label="rptr_h.28:NS
empty <= rempty;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9707650d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"rptr_h.28:NS" -> "rptr_h.Leaf_26:AL"	 [cond="[]",
		lineno=None];
	"wptr_h.43:BL" -> "wptr_h.44:IF"	 [cond="[]",
		lineno=None];
	"wptr_h.30:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe970620710>",
		def_var="['g_wptr_next']",
		fillcolor=deepskyblue,
		label="wptr_h.30:AS
g_wptr_next = (b_wptr_next >> 1) ^ b_wptr_next;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['b_wptr_next', 'b_wptr_next']"];
	"wptr_h.32:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fe970620f90>",
		clk_sens=False,
		fillcolor=gold,
		label="wptr_h.32:AL",
		sens="['wclk', 'wrst_n']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['g_wptr_next', 'b_wptr_next', 'wrst_n']"];
	"wptr_h.30:AS" -> "wptr_h.32:AL";
	"wptr_h.30:AS" -> "wptr_h.48:AS";
	"wptr_h.Leaf_43:AL"	 [def_var="['full']",
		label="wptr_h.Leaf_43:AL"];
	"wptr_h.45:NS" -> "wptr_h.Leaf_43:AL"	 [cond="[]",
		lineno=None];
	"wptr_h.33:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe97075a250>",
		fillcolor=springgreen,
		label="wptr_h.33:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"wptr_h.33:IF" -> "wptr_h.37:BL"	 [cond="['wrst_n']",
		label="!((!wrst_n))",
		lineno=33];
	"wptr_h.33:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe97075a050>",
		fillcolor=turquoise,
		label="wptr_h.33:BL
b_wptr <= 0;
g_wptr <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe97075a090>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7fe97075a1d0>]",
		style=filled,
		typ=Block];
	"wptr_h.33:IF" -> "wptr_h.33:BL"	 [cond="['wrst_n']",
		label="(!wrst_n)",
		lineno=33];
	"wptr_h.44:NS" -> "wptr_h.Leaf_43:AL"	 [cond="[]",
		lineno=None];
	"rptr_h.27:IF" -> "rptr_h.28:NS"	 [cond="['rrst_n']",
		label="!((!rrst_n))",
		lineno=27];
	"rptr_h.27:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe970765e50>",
		fillcolor=firebrick,
		label="rptr_h.27:NS
empty <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe970765e50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"rptr_h.27:IF" -> "rptr_h.27:NS"	 [cond="['rrst_n']",
		label="(!rrst_n)",
		lineno=27];
	"rptr_h.27:NS" -> "rptr_h.Leaf_26:AL"	 [cond="[]",
		lineno=None];
	"fifom.91:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe9703180d0>",
		fillcolor=springgreen,
		label="fifom.91:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"fifom.91:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe9703183d0>",
		fillcolor=turquoise,
		label="fifom.91:BL
fifo[b_wptr[PTR_WIDTH-1:0]] <= data_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe970318410>]",
		style=filled,
		typ=Block];
	"fifom.91:IF" -> "fifom.91:BL"	 [cond="['w_en', 'full']",
		label="(w_en & !full)",
		lineno=91];
	"wptr_h.32:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe970620e50>",
		fillcolor=turquoise,
		label="wptr_h.32:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"wptr_h.32:AL" -> "wptr_h.32:BL"	 [cond="[]",
		lineno=None];
	"wptr_h.48:AS" -> "wptr_h.43:AL";
	"fifom.102:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe9703187d0>",
		fillcolor=turquoise,
		label="fifom.102:BL
data_out <= fifo[b_rptr[PTR_WIDTH-1:0]];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe970318810>]",
		style=filled,
		typ=Block];
	"fifom.102:BL" -> "fifom.Leaf_102:AL"	 [cond="[]",
		lineno=None];
	"fifom.90:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe970756f90>",
		fillcolor=turquoise,
		label="fifom.90:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"fifom.90:BL" -> "fifom.91:IF"	 [cond="[]",
		lineno=None];
	"sync_rptr.6:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe970714550>",
		fillcolor=turquoise,
		label="sync_rptr.6:BL
q1 <= 0;
d_out <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe970714290>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7fe97076e990>]",
		style=filled,
		typ=Block];
	"sync_rptr.6:BL" -> "sync_rptr.Leaf_5:AL"	 [cond="[]",
		lineno=None];
	"wptr_h.29:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe970620650>",
		def_var="['b_wptr_next']",
		fillcolor=deepskyblue,
		label="wptr_h.29:AS
b_wptr_next = b_wptr + (w_en & !full);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['b_wptr', 'w_en', 'full']"];
	"wptr_h.29:AS" -> "wptr_h.30:AS";
	"wptr_h.29:AS" -> "wptr_h.32:AL";
	"sync_rptr.5:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe970765190>",
		fillcolor=turquoise,
		label="sync_rptr.5:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"sync_rptr.6:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe97076e110>",
		fillcolor=springgreen,
		label="sync_rptr.6:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"sync_rptr.5:BL" -> "sync_rptr.6:IF"	 [cond="[]",
		lineno=None];
	"sync_wptr.10:BL" -> "sync_wptr.Leaf_5:AL"	 [cond="[]",
		lineno=None];
	"rptr_h.16:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe9707652d0>",
		fillcolor=springgreen,
		label="rptr_h.16:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"rptr_h.16:IF" -> "rptr_h.20:BL"	 [cond="['rrst_n']",
		label="!((!rrst_n))",
		lineno=16];
	"rptr_h.16:IF" -> "rptr_h.16:BL"	 [cond="['rrst_n']",
		label="(!rrst_n)",
		lineno=16];
	"fifom.Leaf_90:AL"	 [def_var="['fifo']",
		label="fifom.Leaf_90:AL"];
	"fifom.91:BL" -> "fifom.Leaf_90:AL"	 [cond="[]",
		lineno=None];
	"fifom.102:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fe970318590>",
		clk_sens=False,
		fillcolor=gold,
		label="fifom.102:AL",
		sens="['rclk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['b_rptr', 'fifo']"];
	"fifom.Leaf_90:AL" -> "fifom.102:AL";
	"wptr_h.32:BL" -> "wptr_h.33:IF"	 [cond="[]",
		lineno=None];
	"fifom.102:AL" -> "fifom.102:BL"	 [cond="[]",
		lineno=None];
	"rptr_h.15:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe99188ed50>",
		fillcolor=turquoise,
		label="rptr_h.15:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"rptr_h.15:BL" -> "rptr_h.16:IF"	 [cond="[]",
		lineno=None];
	"wptr_h.Leaf_43:AL" -> "wptr_h.29:AS";
	"fifom.90:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fe970756f10>",
		clk_sens=False,
		fillcolor=gold,
		label="fifom.90:AL",
		sens="['wclk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['w_en', 'data_in', 'full']"];
	"wptr_h.Leaf_43:AL" -> "fifom.90:AL";
	"wptr_h.33:BL" -> "wptr_h.Leaf_32:AL"	 [cond="[]",
		lineno=None];
	"rptr_h.11:AS" -> "rptr_h.12:AS";
	"rptr_h.11:AS" -> "rptr_h.15:AL";
	"fifom.90:AL" -> "fifom.90:BL"	 [cond="[]",
		lineno=None];
	"sync_wptr.5:BL" -> "sync_wptr.6:IF"	 [cond="[]",
		lineno=None];
	"rptr_h.Leaf_15:AL" -> "fifom.102:AL";
	"rptr_h.Leaf_15:AL" -> "rptr_h.11:AS";
	"rptr_h.Leaf_15:AL" -> "sync_rptr.5:AL";
	"wptr_h.Leaf_32:AL" -> "sync_wptr.5:AL";
	"wptr_h.Leaf_32:AL" -> "wptr_h.29:AS";
	"wptr_h.Leaf_32:AL" -> "fifom.102:AL";
	"sync_wptr.6:BL" -> "sync_wptr.Leaf_5:AL"	 [cond="[]",
		lineno=None];
	"sync_rptr.6:IF" -> "sync_rptr.10:BL"	 [cond="['rst_n']",
		label="!((!rst_n))",
		lineno=6];
	"sync_rptr.6:IF" -> "sync_rptr.6:BL"	 [cond="['rst_n']",
		label="(!rst_n)",
		lineno=6];
	"sync_rptr.5:AL" -> "sync_rptr.5:BL"	 [cond="[]",
		lineno=None];
	"rptr_h.15:AL" -> "rptr_h.15:BL"	 [cond="[]",
		lineno=None];
}
