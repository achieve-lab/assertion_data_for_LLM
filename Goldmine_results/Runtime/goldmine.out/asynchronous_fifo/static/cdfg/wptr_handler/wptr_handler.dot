strict digraph "compose( ,  )" {
	node [label="\N"];
	"33:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe97075a250>",
		fillcolor=springgreen,
		label="33:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"33:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe97075a050>",
		fillcolor=turquoise,
		label="33:BL
b_wptr <= 0;
g_wptr <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe97075a090>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7fe97075a1d0>]",
		style=filled,
		typ=Block];
	"33:IF" -> "33:BL"	 [cond="['wrst_n']",
		label="(!wrst_n)",
		lineno=33];
	"37:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe97075a350>",
		fillcolor=turquoise,
		label="37:BL
b_wptr <= b_wptr_next;
g_wptr <= g_wptr_next;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe97075a390>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7fe97075a4d0>]",
		style=filled,
		typ=Block];
	"33:IF" -> "37:BL"	 [cond="['wrst_n']",
		label="!((!wrst_n))",
		lineno=33];
	"44:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe97075a850>",
		fillcolor=firebrick,
		label="44:NS
full <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe97075a850>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_43:AL"	 [def_var="['full']",
		label="Leaf_43:AL"];
	"44:NS" -> "Leaf_43:AL"	 [cond="[]",
		lineno=None];
	"30:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe970620710>",
		def_var="['g_wptr_next']",
		fillcolor=deepskyblue,
		label="30:AS
g_wptr_next = (b_wptr_next >> 1) ^ b_wptr_next;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['b_wptr_next', 'b_wptr_next']"];
	"32:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fe970620f90>",
		clk_sens=False,
		fillcolor=gold,
		label="32:AL",
		sens="['wclk', 'wrst_n']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['g_wptr_next', 'b_wptr_next', 'wrst_n']"];
	"30:AS" -> "32:AL";
	"48:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe97075ae90>",
		def_var="['wfull']",
		fillcolor=deepskyblue,
		label="48:AS
wfull = g_wptr_next == { ~g_rptr_sync[PTR_WIDTH:PTR_WIDTH-1], g_rptr_sync[PTR_WIDTH-2:0] };",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['g_wptr_next', 'g_rptr_sync', 'g_rptr_sync', 'PTR_WIDTH']"];
	"30:AS" -> "48:AS";
	"Leaf_32:AL"	 [def_var="['g_wptr', 'b_wptr']",
		label="Leaf_32:AL"];
	"29:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe970620650>",
		def_var="['b_wptr_next']",
		fillcolor=deepskyblue,
		label="29:AS
b_wptr_next = b_wptr + (w_en & !full);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['b_wptr', 'w_en', 'full']"];
	"Leaf_32:AL" -> "29:AS";
	"32:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe970620e50>",
		fillcolor=turquoise,
		label="32:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"32:AL" -> "32:BL"	 [cond="[]",
		lineno=None];
	"43:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fe97075a650>",
		clk_sens=False,
		fillcolor=gold,
		label="43:AL",
		sens="['wclk', 'wrst_n']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['wfull', 'wrst_n']"];
	"48:AS" -> "43:AL";
	"32:BL" -> "33:IF"	 [cond="[]",
		lineno=None];
	"33:BL" -> "Leaf_32:AL"	 [cond="[]",
		lineno=None];
	"43:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe97075a6d0>",
		fillcolor=turquoise,
		label="43:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"43:AL" -> "43:BL"	 [cond="[]",
		lineno=None];
	"44:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe97075a890>",
		fillcolor=springgreen,
		label="44:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"44:IF" -> "44:NS"	 [cond="['wrst_n']",
		label="(!wrst_n)",
		lineno=44];
	"45:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe97075a9d0>",
		fillcolor=firebrick,
		label="45:NS
full <= wfull;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe97075a9d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"44:IF" -> "45:NS"	 [cond="['wrst_n']",
		label="!((!wrst_n))",
		lineno=44];
	"45:NS" -> "Leaf_43:AL"	 [cond="[]",
		lineno=None];
	"Leaf_43:AL" -> "29:AS";
	"29:AS" -> "30:AS";
	"29:AS" -> "32:AL";
	"43:BL" -> "44:IF"	 [cond="[]",
		lineno=None];
	"37:BL" -> "Leaf_32:AL"	 [cond="[]",
		lineno=None];
}
