strict digraph "" {
	node [label="\N"];
	"2077:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f204c6e0fd0>",
		fillcolor=firebrick,
		label="2077:NS
len_comb <= TrailingOnes;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f204c6e0fd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_2075:AL"	 [def_var="['len_comb']",
		label="Leaf_2075:AL"];
	"2077:NS" -> "Leaf_2075:AL"	 [cond="[]",
		lineno=None];
	"2079:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f204c6e0050>",
		fillcolor=firebrick,
		label="2079:NS
len_comb <= level_prefix_comb + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f204c6e0050>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2079:NS" -> "Leaf_2075:AL"	 [cond="[]",
		lineno=None];
	"2085:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f204c6e0650>",
		fillcolor=firebrick,
		label="2085:NS
len_comb <= 12;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f204c6e0650>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2085:NS" -> "Leaf_2075:AL"	 [cond="[]",
		lineno=None];
	"2084:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f204c6e04d0>",
		fillcolor=springgreen,
		label="2084:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2084:IF" -> "2085:NS"	 [cond="['suffix_sel', 'level_prefix']",
		label="(suffix_sel && (level_prefix == 15))",
		lineno=2084];
	"2087:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f204c6e0510>",
		fillcolor=firebrick,
		label="2087:NS
len_comb <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f204c6e0510>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2084:IF" -> "2087:NS"	 [cond="['suffix_sel', 'level_prefix']",
		label="!((suffix_sel && (level_prefix == 15)))",
		lineno=2084];
	"2076:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f204c6e03d0>",
		fillcolor=springgreen,
		label="2076:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2076:IF" -> "2077:NS"	 [cond="['t1s_sel']",
		label=t1s_sel,
		lineno=2076];
	"2078:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f204c6e0410>",
		fillcolor=springgreen,
		label="2078:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2076:IF" -> "2078:IF"	 [cond="['t1s_sel']",
		label="!(t1s_sel)",
		lineno=2076];
	"2087:NS" -> "Leaf_2075:AL"	 [cond="[]",
		lineno=None];
	"2081:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f204c6e0bd0>",
		fillcolor=firebrick,
		label="2081:NS
len_comb <= suffixLength;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f204c6e0bd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2081:NS" -> "Leaf_2075:AL"	 [cond="[]",
		lineno=None];
	"2078:IF" -> "2079:NS"	 [cond="['prefix_sel']",
		label=prefix_sel,
		lineno=2078];
	"2080:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f204c6e0450>",
		fillcolor=springgreen,
		label="2080:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2078:IF" -> "2080:IF"	 [cond="['prefix_sel']",
		label="!(prefix_sel)",
		lineno=2078];
	"2082:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f204c6e0490>",
		fillcolor=springgreen,
		label="2082:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2082:IF" -> "2084:IF"	 [cond="['suffix_sel', 'level_prefix']",
		label="!((suffix_sel && (level_prefix == 14)))",
		lineno=2082];
	"2083:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f204c6e0910>",
		fillcolor=firebrick,
		label="2083:NS
len_comb <= 4;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f204c6e0910>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2082:IF" -> "2083:NS"	 [cond="['suffix_sel', 'level_prefix']",
		label="(suffix_sel && (level_prefix == 14))",
		lineno=2082];
	"2075:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f204c6e0310>",
		clk_sens=False,
		fillcolor=gold,
		label="2075:AL",
		sens="['suffixLength', 'level_prefix_comb', 'TrailingOnes']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['suffix_sel', 'prefix_sel', 't1s_sel', 'level_prefix_comb', 'suffixLength', 'level_prefix', 'TrailingOnes']"];
	"2075:AL" -> "2076:IF"	 [cond="[]",
		lineno=None];
	"2080:IF" -> "2081:NS"	 [cond="['suffix_sel', 'suffixLength', 'level_prefix']",
		label="(suffix_sel && (suffixLength > 0) && (level_prefix <= 14))",
		lineno=2080];
	"2080:IF" -> "2082:IF"	 [cond="['suffix_sel', 'suffixLength', 'level_prefix']",
		label="!((suffix_sel && (suffixLength > 0) && (level_prefix <= 14)))",
		lineno=2080];
	"2083:NS" -> "Leaf_2075:AL"	 [cond="[]",
		lineno=None];
}
