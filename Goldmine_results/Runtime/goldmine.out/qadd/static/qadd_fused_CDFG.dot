strict digraph "compose( ,  )" {
	node [label="\N"];
	"63:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff6a03e7c10>",
		fillcolor=turquoise,
		label="63:BL
res[N-2:0] = b[N-2:0] - a[N-2:0];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff6a03e7f90>]",
		style=filled,
		typ=Block];
	"65:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff6a03e7ad0>",
		fillcolor=springgreen,
		label="65:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"63:BL" -> "65:IF"	 [cond="[]",
		lineno=None];
	"Leaf_36:AL"	 [def_var="['res']",
		label="Leaf_36:AL"];
	"34:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7ff6a03fa990>",
		def_var="['c']",
		fillcolor=deepskyblue,
		label="34:AS
c = res;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['res']"];
	"Leaf_36:AL" -> "34:AS";
	"46:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff6a03d7f90>",
		fillcolor=springgreen,
		label="46:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"53:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff6a03e7290>",
		fillcolor=springgreen,
		label="53:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"46:IF" -> "53:IF"	 [cond="['a', 'N', 'b', 'N']",
		label="!(((a[N - 1] == 0) && (b[N - 1] == 0)))",
		lineno=46];
	"46:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff6a03d7b10>",
		fillcolor=turquoise,
		label="46:BL
res[N - 1] = 0;
res[N-2:0] = a[N-2:0] + b[N-2:0];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff6a03d7990>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff6a03d7e90>]",
		style=filled,
		typ=Block];
	"46:IF" -> "46:BL"	 [cond="['a', 'N', 'b', 'N']",
		label="((a[N - 1] == 0) && (b[N - 1] == 0))",
		lineno=46];
	"39:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff6a03d72d0>",
		fillcolor=springgreen,
		label="39:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"39:IF" -> "46:IF"	 [cond="['a', 'N', 'b', 'N']",
		label="!(((a[N - 1] == 1) && (b[N - 1] == 1)))",
		lineno=39];
	"39:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff6a06dedd0>",
		fillcolor=turquoise,
		label="39:BL
res[N - 1] = 1;
res[N-2:0] = a[N-2:0] + b[N-2:0];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff6a2851f10>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff6a03d71d0>]",
		style=filled,
		typ=Block];
	"39:IF" -> "39:BL"	 [cond="['a', 'N', 'b', 'N']",
		label="((a[N - 1] == 1) && (b[N - 1] == 1))",
		lineno=39];
	"53:IF" -> "63:BL"	 [cond="['a', 'N', 'b', 'N']",
		label="!(((a[N - 1] == 0) && (b[N - 1] == 1)))",
		lineno=53];
	"53:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff6a03e5dd0>",
		fillcolor=turquoise,
		label="53:BL
res[N-2:0] = a[N-2:0] - b[N-2:0];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff6a03e7190>]",
		style=filled,
		typ=Block];
	"53:IF" -> "53:BL"	 [cond="['a', 'N', 'b', 'N']",
		label="((a[N - 1] == 0) && (b[N - 1] == 1))",
		lineno=53];
	"36:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7ff6a0403150>",
		clk_sens=False,
		fillcolor=gold,
		label="36:AL",
		sens="['a', 'b']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['a', 'b', 'N']"];
	"37:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7ff6a0403b90>",
		fillcolor=turquoise,
		label="37:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"36:AL" -> "37:BL"	 [cond="[]",
		lineno=None];
	"66:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff6a03e78d0>",
		fillcolor=cadetblue,
		label="66:BS
res[N - 1] = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff6a03e78d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"66:BS" -> "Leaf_36:AL"	 [cond="[]",
		lineno=None];
	"68:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff6a03e7b50>",
		fillcolor=cadetblue,
		label="68:BS
res[N - 1] = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff6a03e7b50>]",
		style=filled,
		typ=BlockingSubstitution];
	"68:BS" -> "Leaf_36:AL"	 [cond="[]",
		lineno=None];
	"55:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff6a03e5c90>",
		fillcolor=springgreen,
		label="55:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"56:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff6a03e5a90>",
		fillcolor=cadetblue,
		label="56:BS
res[N - 1] = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff6a03e5a90>]",
		style=filled,
		typ=BlockingSubstitution];
	"55:IF" -> "56:BS"	 [cond="['a', 'N', 'b', 'N']",
		label="(a[N-2:0] > b[N-2:0])",
		lineno=55];
	"58:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff6a03e5d10>",
		fillcolor=cadetblue,
		label="58:BS
res[N - 1] = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff6a03e5d10>]",
		style=filled,
		typ=BlockingSubstitution];
	"55:IF" -> "58:BS"	 [cond="['a', 'N', 'b', 'N']",
		label="!((a[N-2:0] > b[N-2:0]))",
		lineno=55];
	"56:BS" -> "Leaf_36:AL"	 [cond="[]",
		lineno=None];
	"58:BS" -> "Leaf_36:AL"	 [cond="[]",
		lineno=None];
	"65:IF" -> "66:BS"	 [cond="['a', 'N', 'b', 'N']",
		label="(a[N-2:0] < b[N-2:0])",
		lineno=65];
	"65:IF" -> "68:BS"	 [cond="['a', 'N', 'b', 'N']",
		label="!((a[N-2:0] < b[N-2:0]))",
		lineno=65];
	"53:BL" -> "55:IF"	 [cond="[]",
		lineno=None];
	"46:BL" -> "Leaf_36:AL"	 [cond="[]",
		lineno=None];
	"39:BL" -> "Leaf_36:AL"	 [cond="[]",
		lineno=None];
	"37:BL" -> "39:IF"	 [cond="[]",
		lineno=None];
}
