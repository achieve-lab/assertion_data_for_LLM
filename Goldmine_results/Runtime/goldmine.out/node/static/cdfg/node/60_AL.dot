strict digraph "" {
	node [label="\N"];
	"70:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f44c6f5f210>",
		fillcolor=lightcyan,
		label="70:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"71:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f44c6f5f490>",
		fillcolor=turquoise,
		label="71:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"70:CA" -> "71:BL"	 [cond="[]",
		lineno=None];
	"62:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f44c6f5fa10>",
		fillcolor=linen,
		label="62:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"62:CS" -> "70:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=62];
	"77:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f44c6f69050>",
		fillcolor=lightcyan,
		label="77:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"62:CS" -> "77:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=62];
	"63:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f44c6f5fad0>",
		fillcolor=lightcyan,
		label="63:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"62:CS" -> "63:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=62];
	"75:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f44c6f5f810>",
		fillcolor=cadetblue,
		label="75:BS
data_hi = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f44c6f5f810>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_60:AL"	 [def_var="['data_hi', 'data_lo']",
		label="Leaf_60:AL"];
	"75:BS" -> "Leaf_60:AL"	 [cond="[]",
		lineno=None];
	"66:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f44c6f5fbd0>",
		fillcolor=cadetblue,
		label="66:BS
data_lo = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f44c6f5fbd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"66:BS" -> "Leaf_60:AL"	 [cond="[]",
		lineno=None];
	"78:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f44c6f69090>",
		fillcolor=turquoise,
		label="78:BL
data_lo = { DATA_WIDTH{ 1'b0 } };
data_hi = { DATA_WIDTH{ 1'b0 } };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f44c6f690d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f44c6f69290>]",
		style=filled,
		typ=Block];
	"78:BL" -> "Leaf_60:AL"	 [cond="[]",
		lineno=None];
	"77:CA" -> "78:BL"	 [cond="[]",
		lineno=None];
	"61:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f44c6f695d0>",
		fillcolor=turquoise,
		label="61:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"61:BL" -> "62:CS"	 [cond="[]",
		lineno=None];
	"64:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f44c6f5fb50>",
		fillcolor=turquoise,
		label="64:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"63:CA" -> "64:BL"	 [cond="[]",
		lineno=None];
	"68:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f44c6f5fe10>",
		fillcolor=cadetblue,
		label="68:BS
data_hi = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f44c6f5fe10>]",
		style=filled,
		typ=BlockingSubstitution];
	"68:BS" -> "Leaf_60:AL"	 [cond="[]",
		lineno=None];
	"67:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f44c6f5fdd0>",
		fillcolor=springgreen,
		label="67:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"67:IF" -> "68:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=67];
	"74:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f44c6f5f7d0>",
		fillcolor=springgreen,
		label="74:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"74:IF" -> "75:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=74];
	"64:BL" -> "67:IF"	 [cond="[]",
		lineno=None];
	"65:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f44c6f5fb90>",
		fillcolor=springgreen,
		label="65:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"64:BL" -> "65:IF"	 [cond="[]",
		lineno=None];
	"72:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f44c6f5f4d0>",
		fillcolor=springgreen,
		label="72:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"73:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f44c6f5f590>",
		fillcolor=cadetblue,
		label="73:BS
data_lo = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f44c6f5f590>]",
		style=filled,
		typ=BlockingSubstitution];
	"72:IF" -> "73:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=72];
	"71:BL" -> "74:IF"	 [cond="[]",
		lineno=None];
	"71:BL" -> "72:IF"	 [cond="[]",
		lineno=None];
	"73:BS" -> "Leaf_60:AL"	 [cond="[]",
		lineno=None];
	"65:IF" -> "66:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=65];
	"60:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f44c6f69510>",
		clk_sens=False,
		fillcolor=gold,
		label="60:AL",
		sens="['data_b', 'data_a']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a', 'sel0', 'LOW_MUX', 'HI_MUX']"];
	"60:AL" -> "61:BL"	 [cond="[]",
		lineno=None];
}
