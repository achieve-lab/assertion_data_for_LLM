strict digraph "compose( ,  )" {
	node [label="\N"];
	"node_u7.Leaf_93:AL"	 [def_var="['data_hi', 'data_lo']",
		label="node_u7.Leaf_93:AL"];
	"node_u8.93:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f8ec69d7350>",
		clk_sens=False,
		fillcolor=gold,
		label="node_u8.93:AL",
		sens="['data_b', 'data_a']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a', 'sel0', 'LOW_MUX', 'HI_MUX']"];
	"node_u7.Leaf_93:AL" -> "node_u8.93:AL";
	"node_u9.93:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f8ec69d7350>",
		clk_sens=False,
		fillcolor=gold,
		label="node_u9.93:AL",
		sens="['data_b', 'data_a']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a', 'sel0', 'LOW_MUX', 'HI_MUX']"];
	"node_u7.Leaf_93:AL" -> "node_u9.93:AL";
	"node_u9.83:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f8ec69c52d0>",
		clk_sens=False,
		fillcolor=gold,
		label="node_u9.83:AL",
		sens="[]",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a']"];
	"node_u7.Leaf_93:AL" -> "node_u9.83:AL";
	"node_u8.83:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f8ec69c52d0>",
		clk_sens=False,
		fillcolor=gold,
		label="node_u8.83:AL",
		sens="[]",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a']"];
	"node_u7.Leaf_93:AL" -> "node_u8.83:AL";
	"node_u2.103:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f8ec68652d0>",
		fillcolor=lightcyan,
		label="node_u2.103:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u2.104:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec6865190>",
		fillcolor=turquoise,
		label="node_u2.104:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u2.103:CA" -> "node_u2.104:BL"	 [cond="[]",
		lineno=None];
	"node_u4.85:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec69ad050>",
		fillcolor=springgreen,
		label="node_u4.85:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u4.87:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec69adb50>",
		fillcolor=turquoise,
		label="node_u4.87:BL
sel0 = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec69ad150>]",
		style=filled,
		typ=Block];
	"node_u4.85:IF" -> "node_u4.87:BL"	 [cond="['data_a', 'data_b']",
		label="!((data_a < data_b))",
		lineno=85];
	"node_u4.85:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec69ad450>",
		fillcolor=turquoise,
		label="node_u4.85:BL
sel0 = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec69ad550>]",
		style=filled,
		typ=Block];
	"node_u4.85:IF" -> "node_u4.85:BL"	 [cond="['data_a', 'data_b']",
		label="(data_a < data_b)",
		lineno=85];
	"node_u0.110:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f8ec68659d0>",
		fillcolor=lightcyan,
		label="node_u0.110:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u0.111:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec6865450>",
		fillcolor=turquoise,
		label="node_u0.111:BL
data_lo = { DATA_WIDTH{ 1'b0 } };
data_hi = { DATA_WIDTH{ 1'b0 } };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865b90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865d90>]",
		style=filled,
		typ=Block];
	"node_u0.110:CA" -> "node_u0.111:BL"	 [cond="[]",
		lineno=None];
	"node_u7.110:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f8ec68659d0>",
		fillcolor=lightcyan,
		label="node_u7.110:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u7.111:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec6865450>",
		fillcolor=turquoise,
		label="node_u7.111:BL
data_lo = { DATA_WIDTH{ 1'b0 } };
data_hi = { DATA_WIDTH{ 1'b0 } };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865b90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865d90>]",
		style=filled,
		typ=Block];
	"node_u7.110:CA" -> "node_u7.111:BL"	 [cond="[]",
		lineno=None];
	"node_u8.94:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec72a64d0>",
		fillcolor=turquoise,
		label="node_u8.94:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u8.93:AL" -> "node_u8.94:BL"	 [cond="[]",
		lineno=None];
	"node_u7.105:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec6865e50>",
		fillcolor=springgreen,
		label="node_u7.105:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u7.106:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865e90>",
		fillcolor=cadetblue,
		label="node_u7.106:BS
data_lo = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865e90>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u7.105:IF" -> "node_u7.106:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=105];
	"node_u1.106:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865e90>",
		fillcolor=cadetblue,
		label="node_u1.106:BS
data_lo = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865e90>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u1.Leaf_93:AL"	 [def_var="['data_hi', 'data_lo']",
		label="node_u1.Leaf_93:AL"];
	"node_u1.106:BS" -> "node_u1.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u9.110:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f8ec68659d0>",
		fillcolor=lightcyan,
		label="node_u9.110:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u9.111:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec6865450>",
		fillcolor=turquoise,
		label="node_u9.111:BL
data_lo = { DATA_WIDTH{ 1'b0 } };
data_hi = { DATA_WIDTH{ 1'b0 } };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865b90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865d90>]",
		style=filled,
		typ=Block];
	"node_u9.110:CA" -> "node_u9.111:BL"	 [cond="[]",
		lineno=None];
	"node_u5.Leaf_83:AL"	 [def_var="['sel0']",
		label="node_u5.Leaf_83:AL"];
	"node_u5.93:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f8ec69d7350>",
		clk_sens=False,
		fillcolor=gold,
		label="node_u5.93:AL",
		sens="['data_b', 'data_a']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a', 'sel0', 'LOW_MUX', 'HI_MUX']"];
	"node_u5.Leaf_83:AL" -> "node_u5.93:AL";
	"node_u9.Leaf_93:AL"	 [def_var="['data_hi', 'data_lo']",
		label="node_u9.Leaf_93:AL"];
	"node_u9.84:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec69c50d0>",
		fillcolor=turquoise,
		label="node_u9.84:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u9.85:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec69ad050>",
		fillcolor=springgreen,
		label="node_u9.85:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u9.84:BL" -> "node_u9.85:IF"	 [cond="[]",
		lineno=None];
	"node_u4.83:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f8ec69c52d0>",
		clk_sens=False,
		fillcolor=gold,
		label="node_u4.83:AL",
		sens="[]",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a']"];
	"node_u1.Leaf_93:AL" -> "node_u4.83:AL";
	"node_u6.93:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f8ec69d7350>",
		clk_sens=False,
		fillcolor=gold,
		label="node_u6.93:AL",
		sens="['data_b', 'data_a']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a', 'sel0', 'LOW_MUX', 'HI_MUX']"];
	"node_u1.Leaf_93:AL" -> "node_u6.93:AL";
	"node_u6.83:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f8ec69c52d0>",
		clk_sens=False,
		fillcolor=gold,
		label="node_u6.83:AL",
		sens="[]",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a']"];
	"node_u1.Leaf_93:AL" -> "node_u6.83:AL";
	"node_u4.93:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f8ec69d7350>",
		clk_sens=False,
		fillcolor=gold,
		label="node_u4.93:AL",
		sens="['data_b', 'data_a']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a', 'sel0', 'LOW_MUX', 'HI_MUX']"];
	"node_u1.Leaf_93:AL" -> "node_u4.93:AL";
	"node_u2.Leaf_93:AL"	 [def_var="['data_hi', 'data_lo']",
		label="node_u2.Leaf_93:AL"];
	"node_u2.Leaf_93:AL" -> "node_u5.93:AL";
	"node_u5.83:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f8ec69c52d0>",
		clk_sens=False,
		fillcolor=gold,
		label="node_u5.83:AL",
		sens="[]",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a']"];
	"node_u2.Leaf_93:AL" -> "node_u5.83:AL";
	"node_u9.111:BL" -> "node_u9.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u6.87:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec69adb50>",
		fillcolor=turquoise,
		label="node_u6.87:BL
sel0 = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec69ad150>]",
		style=filled,
		typ=Block];
	"node_u6.Leaf_83:AL"	 [def_var="['sel0']",
		label="node_u6.Leaf_83:AL"];
	"node_u6.87:BL" -> "node_u6.Leaf_83:AL"	 [cond="[]",
		lineno=None];
	"node_u7.97:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec6c8d910>",
		fillcolor=turquoise,
		label="node_u7.97:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u7.100:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec6865650>",
		fillcolor=springgreen,
		label="node_u7.100:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u7.97:BL" -> "node_u7.100:IF"	 [cond="[]",
		lineno=None];
	"node_u7.98:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec6c8d450>",
		fillcolor=springgreen,
		label="node_u7.98:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u7.97:BL" -> "node_u7.98:IF"	 [cond="[]",
		lineno=None];
	"node_u3.99:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865850>",
		fillcolor=cadetblue,
		label="node_u3.99:BS
data_lo = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865850>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u3.Leaf_93:AL"	 [def_var="['data_hi', 'data_lo']",
		label="node_u3.Leaf_93:AL"];
	"node_u3.99:BS" -> "node_u3.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u8.85:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec69ad450>",
		fillcolor=turquoise,
		label="node_u8.85:BL
sel0 = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec69ad550>]",
		style=filled,
		typ=Block];
	"node_u8.Leaf_83:AL"	 [def_var="['sel0']",
		label="node_u8.Leaf_83:AL"];
	"node_u8.85:BL" -> "node_u8.Leaf_83:AL"	 [cond="[]",
		lineno=None];
	"node_u3.96:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f8ec6c8da50>",
		fillcolor=lightcyan,
		label="node_u3.96:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u3.97:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec6c8d910>",
		fillcolor=turquoise,
		label="node_u3.97:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u3.96:CA" -> "node_u3.97:BL"	 [cond="[]",
		lineno=None];
	"node_u3.85:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec69ad450>",
		fillcolor=turquoise,
		label="node_u3.85:BL
sel0 = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec69ad550>]",
		style=filled,
		typ=Block];
	"node_u3.Leaf_83:AL"	 [def_var="['sel0']",
		label="node_u3.Leaf_83:AL"];
	"node_u3.85:BL" -> "node_u3.Leaf_83:AL"	 [cond="[]",
		lineno=None];
	"node_u1.110:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f8ec68659d0>",
		fillcolor=lightcyan,
		label="node_u1.110:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u1.111:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec6865450>",
		fillcolor=turquoise,
		label="node_u1.111:BL
data_lo = { DATA_WIDTH{ 1'b0 } };
data_hi = { DATA_WIDTH{ 1'b0 } };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865b90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865d90>]",
		style=filled,
		typ=Block];
	"node_u1.110:CA" -> "node_u1.111:BL"	 [cond="[]",
		lineno=None];
	"node_u9.105:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec6865e50>",
		fillcolor=springgreen,
		label="node_u9.105:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u9.106:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865e90>",
		fillcolor=cadetblue,
		label="node_u9.106:BS
data_lo = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865e90>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u9.105:IF" -> "node_u9.106:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=105];
	"node_u0.106:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865e90>",
		fillcolor=cadetblue,
		label="node_u0.106:BS
data_lo = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865e90>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u0.Leaf_93:AL"	 [def_var="['data_hi', 'data_lo']",
		label="node_u0.Leaf_93:AL"];
	"node_u0.106:BS" -> "node_u0.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u2.96:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f8ec6c8da50>",
		fillcolor=lightcyan,
		label="node_u2.96:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u2.97:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec6c8d910>",
		fillcolor=turquoise,
		label="node_u2.97:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u2.96:CA" -> "node_u2.97:BL"	 [cond="[]",
		lineno=None];
	"node_u2.85:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec69ad450>",
		fillcolor=turquoise,
		label="node_u2.85:BL
sel0 = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec69ad550>]",
		style=filled,
		typ=Block];
	"node_u2.Leaf_83:AL"	 [def_var="['sel0']",
		label="node_u2.Leaf_83:AL"];
	"node_u2.85:BL" -> "node_u2.Leaf_83:AL"	 [cond="[]",
		lineno=None];
	"node_u4.98:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec6c8d450>",
		fillcolor=springgreen,
		label="node_u4.98:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u4.99:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865850>",
		fillcolor=cadetblue,
		label="node_u4.99:BS
data_lo = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865850>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u4.98:IF" -> "node_u4.99:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=98];
	"node_u3.93:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f8ec69d7350>",
		clk_sens=False,
		fillcolor=gold,
		label="node_u3.93:AL",
		sens="['data_b', 'data_a']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a', 'sel0', 'LOW_MUX', 'HI_MUX']"];
	"node_u3.94:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec72a64d0>",
		fillcolor=turquoise,
		label="node_u3.94:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u3.93:AL" -> "node_u3.94:BL"	 [cond="[]",
		lineno=None];
	"node_u2.93:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f8ec69d7350>",
		clk_sens=False,
		fillcolor=gold,
		label="node_u2.93:AL",
		sens="['data_b', 'data_a']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a', 'sel0', 'LOW_MUX', 'HI_MUX']"];
	"node_u2.Leaf_83:AL" -> "node_u2.93:AL";
	"node_u4.Leaf_83:AL"	 [def_var="['sel0']",
		label="node_u4.Leaf_83:AL"];
	"node_u4.87:BL" -> "node_u4.Leaf_83:AL"	 [cond="[]",
		lineno=None];
	"node_u0.111:BL" -> "node_u0.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u9.107:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec68653d0>",
		fillcolor=springgreen,
		label="node_u9.107:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u9.108:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865dd0>",
		fillcolor=cadetblue,
		label="node_u9.108:BS
data_hi = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865dd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u9.107:IF" -> "node_u9.108:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=107];
	"node_u1.99:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865850>",
		fillcolor=cadetblue,
		label="node_u1.99:BS
data_lo = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865850>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u1.99:BS" -> "node_u1.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u3.101:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865c90>",
		fillcolor=cadetblue,
		label="node_u3.101:BS
data_hi = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865c90>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u3.101:BS" -> "node_u3.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u9.94:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec72a64d0>",
		fillcolor=turquoise,
		label="node_u9.94:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u9.93:AL" -> "node_u9.94:BL"	 [cond="[]",
		lineno=None];
	"node_u9.98:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec6c8d450>",
		fillcolor=springgreen,
		label="node_u9.98:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u9.99:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865850>",
		fillcolor=cadetblue,
		label="node_u9.99:BS
data_lo = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865850>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u9.98:IF" -> "node_u9.99:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=98];
	"node_u3.98:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec6c8d450>",
		fillcolor=springgreen,
		label="node_u3.98:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u3.97:BL" -> "node_u3.98:IF"	 [cond="[]",
		lineno=None];
	"node_u3.100:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec6865650>",
		fillcolor=springgreen,
		label="node_u3.100:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u3.97:BL" -> "node_u3.100:IF"	 [cond="[]",
		lineno=None];
	"node_u7.83:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f8ec69c52d0>",
		clk_sens=False,
		fillcolor=gold,
		label="node_u7.83:AL",
		sens="[]",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a']"];
	"node_u7.84:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec69c50d0>",
		fillcolor=turquoise,
		label="node_u7.84:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u7.83:AL" -> "node_u7.84:BL"	 [cond="[]",
		lineno=None];
	"node_u8.96:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f8ec6c8da50>",
		fillcolor=lightcyan,
		label="node_u8.96:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u8.97:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec6c8d910>",
		fillcolor=turquoise,
		label="node_u8.97:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u8.96:CA" -> "node_u8.97:BL"	 [cond="[]",
		lineno=None];
	"node_u3.Leaf_93:AL" -> "node_u7.83:AL";
	"node_u7.93:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f8ec69d7350>",
		clk_sens=False,
		fillcolor=gold,
		label="node_u7.93:AL",
		sens="['data_b', 'data_a']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a', 'sel0', 'LOW_MUX', 'HI_MUX']"];
	"node_u3.Leaf_93:AL" -> "node_u7.93:AL";
	"node_u3.104:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec6865190>",
		fillcolor=turquoise,
		label="node_u3.104:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u3.107:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec68653d0>",
		fillcolor=springgreen,
		label="node_u3.107:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u3.104:BL" -> "node_u3.107:IF"	 [cond="[]",
		lineno=None];
	"node_u3.105:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec6865e50>",
		fillcolor=springgreen,
		label="node_u3.105:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u3.104:BL" -> "node_u3.105:IF"	 [cond="[]",
		lineno=None];
	"node_u6.104:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec6865190>",
		fillcolor=turquoise,
		label="node_u6.104:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u6.105:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec6865e50>",
		fillcolor=springgreen,
		label="node_u6.105:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u6.104:BL" -> "node_u6.105:IF"	 [cond="[]",
		lineno=None];
	"node_u6.107:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec68653d0>",
		fillcolor=springgreen,
		label="node_u6.107:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u6.104:BL" -> "node_u6.107:IF"	 [cond="[]",
		lineno=None];
	"node_u6.101:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865c90>",
		fillcolor=cadetblue,
		label="node_u6.101:BS
data_hi = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865c90>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u6.Leaf_93:AL"	 [def_var="['data_hi', 'data_lo']",
		label="node_u6.Leaf_93:AL"];
	"node_u6.101:BS" -> "node_u6.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u1.101:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865c90>",
		fillcolor=cadetblue,
		label="node_u1.101:BS
data_hi = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865c90>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u1.101:BS" -> "node_u1.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u6.111:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec6865450>",
		fillcolor=turquoise,
		label="node_u6.111:BL
data_lo = { DATA_WIDTH{ 1'b0 } };
data_hi = { DATA_WIDTH{ 1'b0 } };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865b90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865d90>]",
		style=filled,
		typ=Block];
	"node_u6.111:BL" -> "node_u6.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u0.104:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec6865190>",
		fillcolor=turquoise,
		label="node_u0.104:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u0.107:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec68653d0>",
		fillcolor=springgreen,
		label="node_u0.107:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u0.104:BL" -> "node_u0.107:IF"	 [cond="[]",
		lineno=None];
	"node_u0.105:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec6865e50>",
		fillcolor=springgreen,
		label="node_u0.105:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u0.104:BL" -> "node_u0.105:IF"	 [cond="[]",
		lineno=None];
	"node_u7.106:BS" -> "node_u7.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u2.87:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec69adb50>",
		fillcolor=turquoise,
		label="node_u2.87:BL
sel0 = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec69ad150>]",
		style=filled,
		typ=Block];
	"node_u2.87:BL" -> "node_u2.Leaf_83:AL"	 [cond="[]",
		lineno=None];
	"node_u5.84:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec69c50d0>",
		fillcolor=turquoise,
		label="node_u5.84:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u5.85:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec69ad050>",
		fillcolor=springgreen,
		label="node_u5.85:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u5.84:BL" -> "node_u5.85:IF"	 [cond="[]",
		lineno=None];
	"node_u5.94:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec72a64d0>",
		fillcolor=turquoise,
		label="node_u5.94:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u5.93:AL" -> "node_u5.94:BL"	 [cond="[]",
		lineno=None];
	"node_u1.85:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec69ad050>",
		fillcolor=springgreen,
		label="node_u1.85:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u1.87:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec69adb50>",
		fillcolor=turquoise,
		label="node_u1.87:BL
sel0 = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec69ad150>]",
		style=filled,
		typ=Block];
	"node_u1.85:IF" -> "node_u1.87:BL"	 [cond="['data_a', 'data_b']",
		label="!((data_a < data_b))",
		lineno=85];
	"node_u1.85:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec69ad450>",
		fillcolor=turquoise,
		label="node_u1.85:BL
sel0 = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec69ad550>]",
		style=filled,
		typ=Block];
	"node_u1.85:IF" -> "node_u1.85:BL"	 [cond="['data_a', 'data_b']",
		label="(data_a < data_b)",
		lineno=85];
	"node_u4.104:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec6865190>",
		fillcolor=turquoise,
		label="node_u4.104:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u4.107:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec68653d0>",
		fillcolor=springgreen,
		label="node_u4.107:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u4.104:BL" -> "node_u4.107:IF"	 [cond="[]",
		lineno=None];
	"node_u4.105:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec6865e50>",
		fillcolor=springgreen,
		label="node_u4.105:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u4.104:BL" -> "node_u4.105:IF"	 [cond="[]",
		lineno=None];
	"node_u8.110:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f8ec68659d0>",
		fillcolor=lightcyan,
		label="node_u8.110:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u8.111:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec6865450>",
		fillcolor=turquoise,
		label="node_u8.111:BL
data_lo = { DATA_WIDTH{ 1'b0 } };
data_hi = { DATA_WIDTH{ 1'b0 } };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865b90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865d90>]",
		style=filled,
		typ=Block];
	"node_u8.110:CA" -> "node_u8.111:BL"	 [cond="[]",
		lineno=None];
	"node_u0.95:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f8ec6865750>",
		fillcolor=linen,
		label="node_u0.95:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"node_u0.95:CS" -> "node_u0.110:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=95];
	"node_u0.103:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f8ec68652d0>",
		fillcolor=lightcyan,
		label="node_u0.103:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u0.95:CS" -> "node_u0.103:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=95];
	"node_u0.96:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f8ec6c8da50>",
		fillcolor=lightcyan,
		label="node_u0.96:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u0.95:CS" -> "node_u0.96:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=95];
	"node_u2.83:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f8ec69c52d0>",
		clk_sens=False,
		fillcolor=gold,
		label="node_u2.83:AL",
		sens="[]",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a']"];
	"node_u2.84:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec69c50d0>",
		fillcolor=turquoise,
		label="node_u2.84:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u2.83:AL" -> "node_u2.84:BL"	 [cond="[]",
		lineno=None];
	"node_u0.84:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec69c50d0>",
		fillcolor=turquoise,
		label="node_u0.84:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u0.85:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec69ad050>",
		fillcolor=springgreen,
		label="node_u0.85:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u0.84:BL" -> "node_u0.85:IF"	 [cond="[]",
		lineno=None];
	"node_u6.106:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865e90>",
		fillcolor=cadetblue,
		label="node_u6.106:BS
data_lo = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865e90>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u6.105:IF" -> "node_u6.106:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=105];
	"node_u1.94:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec72a64d0>",
		fillcolor=turquoise,
		label="node_u1.94:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u1.95:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f8ec6865750>",
		fillcolor=linen,
		label="node_u1.95:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"node_u1.94:BL" -> "node_u1.95:CS"	 [cond="[]",
		lineno=None];
	"node_u2.98:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec6c8d450>",
		fillcolor=springgreen,
		label="node_u2.98:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u2.99:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865850>",
		fillcolor=cadetblue,
		label="node_u2.99:BS
data_lo = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865850>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u2.98:IF" -> "node_u2.99:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=98];
	"node_u5.108:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865dd0>",
		fillcolor=cadetblue,
		label="node_u5.108:BS
data_hi = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865dd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u5.Leaf_93:AL"	 [def_var="['data_hi', 'data_lo']",
		label="node_u5.Leaf_93:AL"];
	"node_u5.108:BS" -> "node_u5.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u5.96:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f8ec6c8da50>",
		fillcolor=lightcyan,
		label="node_u5.96:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u5.97:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec6c8d910>",
		fillcolor=turquoise,
		label="node_u5.97:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u5.96:CA" -> "node_u5.97:BL"	 [cond="[]",
		lineno=None];
	"node_u6.96:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f8ec6c8da50>",
		fillcolor=lightcyan,
		label="node_u6.96:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u6.97:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec6c8d910>",
		fillcolor=turquoise,
		label="node_u6.97:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u6.96:CA" -> "node_u6.97:BL"	 [cond="[]",
		lineno=None];
	"node_u3.Leaf_83:AL" -> "node_u3.93:AL";
	"node_u9.83:AL" -> "node_u9.84:BL"	 [cond="[]",
		lineno=None];
	"node_u4.Leaf_93:AL"	 [def_var="['data_hi', 'data_lo']",
		label="node_u4.Leaf_93:AL"];
	"node_u4.99:BS" -> "node_u4.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u2.85:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec69ad050>",
		fillcolor=springgreen,
		label="node_u2.85:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u2.85:IF" -> "node_u2.85:BL"	 [cond="['data_a', 'data_b']",
		label="(data_a < data_b)",
		lineno=85];
	"node_u2.85:IF" -> "node_u2.87:BL"	 [cond="['data_a', 'data_b']",
		label="!((data_a < data_b))",
		lineno=85];
	"node_u6.106:BS" -> "node_u6.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u3.87:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec69adb50>",
		fillcolor=turquoise,
		label="node_u3.87:BL
sel0 = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec69ad150>]",
		style=filled,
		typ=Block];
	"node_u3.87:BL" -> "node_u3.Leaf_83:AL"	 [cond="[]",
		lineno=None];
	"node_u8.87:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec69adb50>",
		fillcolor=turquoise,
		label="node_u8.87:BL
sel0 = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec69ad150>]",
		style=filled,
		typ=Block];
	"node_u8.87:BL" -> "node_u8.Leaf_83:AL"	 [cond="[]",
		lineno=None];
	"node_u7.95:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f8ec6865750>",
		fillcolor=linen,
		label="node_u7.95:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"node_u7.95:CS" -> "node_u7.110:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=95];
	"node_u7.103:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f8ec68652d0>",
		fillcolor=lightcyan,
		label="node_u7.103:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u7.95:CS" -> "node_u7.103:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=95];
	"node_u7.96:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f8ec6c8da50>",
		fillcolor=lightcyan,
		label="node_u7.96:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u7.95:CS" -> "node_u7.96:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=95];
	"node_u2.94:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec72a64d0>",
		fillcolor=turquoise,
		label="node_u2.94:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u2.93:AL" -> "node_u2.94:BL"	 [cond="[]",
		lineno=None];
	"node_u7.Leaf_83:AL"	 [def_var="['sel0']",
		label="node_u7.Leaf_83:AL"];
	"node_u7.Leaf_83:AL" -> "node_u7.93:AL";
	"node_u8.106:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865e90>",
		fillcolor=cadetblue,
		label="node_u8.106:BS
data_lo = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865e90>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u8.Leaf_93:AL"	 [def_var="['data_hi', 'data_lo']",
		label="node_u8.Leaf_93:AL"];
	"node_u8.106:BS" -> "node_u8.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u1.98:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec6c8d450>",
		fillcolor=springgreen,
		label="node_u1.98:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u1.98:IF" -> "node_u1.99:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=98];
	"node_u5.101:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865c90>",
		fillcolor=cadetblue,
		label="node_u5.101:BS
data_hi = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865c90>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u5.101:BS" -> "node_u5.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u2.100:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec6865650>",
		fillcolor=springgreen,
		label="node_u2.100:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u2.101:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865c90>",
		fillcolor=cadetblue,
		label="node_u2.101:BS
data_hi = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865c90>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u2.100:IF" -> "node_u2.101:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=100];
	"node_u8.111:BL" -> "node_u8.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u7.104:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec6865190>",
		fillcolor=turquoise,
		label="node_u7.104:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u7.103:CA" -> "node_u7.104:BL"	 [cond="[]",
		lineno=None];
	"node_u0.98:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec6c8d450>",
		fillcolor=springgreen,
		label="node_u0.98:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u0.99:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865850>",
		fillcolor=cadetblue,
		label="node_u0.99:BS
data_lo = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865850>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u0.98:IF" -> "node_u0.99:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=98];
	"node_u2.108:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865dd0>",
		fillcolor=cadetblue,
		label="node_u2.108:BS
data_hi = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865dd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u2.108:BS" -> "node_u2.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u5.111:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec6865450>",
		fillcolor=turquoise,
		label="node_u5.111:BL
data_lo = { DATA_WIDTH{ 1'b0 } };
data_hi = { DATA_WIDTH{ 1'b0 } };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865b90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865d90>]",
		style=filled,
		typ=Block];
	"node_u5.111:BL" -> "node_u5.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u8.84:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec69c50d0>",
		fillcolor=turquoise,
		label="node_u8.84:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u8.85:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec69ad050>",
		fillcolor=springgreen,
		label="node_u8.85:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u8.84:BL" -> "node_u8.85:IF"	 [cond="[]",
		lineno=None];
	"node_u4.85:BL" -> "node_u4.Leaf_83:AL"	 [cond="[]",
		lineno=None];
	"node_u7.99:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865850>",
		fillcolor=cadetblue,
		label="node_u7.99:BS
data_lo = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865850>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u7.99:BS" -> "node_u7.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u6.Leaf_93:AL" -> "node_u7.83:AL";
	"node_u6.Leaf_93:AL" -> "node_u7.93:AL";
	"node_u5.100:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec6865650>",
		fillcolor=springgreen,
		label="node_u5.100:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u5.97:BL" -> "node_u5.100:IF"	 [cond="[]",
		lineno=None];
	"node_u5.98:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec6c8d450>",
		fillcolor=springgreen,
		label="node_u5.98:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u5.97:BL" -> "node_u5.98:IF"	 [cond="[]",
		lineno=None];
	"node_u0.94:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec72a64d0>",
		fillcolor=turquoise,
		label="node_u0.94:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u0.94:BL" -> "node_u0.95:CS"	 [cond="[]",
		lineno=None];
	"node_u0.83:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f8ec69c52d0>",
		clk_sens=False,
		fillcolor=gold,
		label="node_u0.83:AL",
		sens="[]",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a']"];
	"node_u0.83:AL" -> "node_u0.84:BL"	 [cond="[]",
		lineno=None];
	"node_u7.101:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865c90>",
		fillcolor=cadetblue,
		label="node_u7.101:BS
data_hi = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865c90>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u7.100:IF" -> "node_u7.101:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=100];
	"node_u0.100:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec6865650>",
		fillcolor=springgreen,
		label="node_u0.100:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u0.101:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865c90>",
		fillcolor=cadetblue,
		label="node_u0.101:BS
data_hi = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865c90>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u0.100:IF" -> "node_u0.101:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=100];
	"node_u6.98:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec6c8d450>",
		fillcolor=springgreen,
		label="node_u6.98:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u6.97:BL" -> "node_u6.98:IF"	 [cond="[]",
		lineno=None];
	"node_u6.100:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec6865650>",
		fillcolor=springgreen,
		label="node_u6.100:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u6.97:BL" -> "node_u6.100:IF"	 [cond="[]",
		lineno=None];
	"node_u8.104:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec6865190>",
		fillcolor=turquoise,
		label="node_u8.104:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u8.105:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec6865e50>",
		fillcolor=springgreen,
		label="node_u8.105:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u8.104:BL" -> "node_u8.105:IF"	 [cond="[]",
		lineno=None];
	"node_u8.107:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec68653d0>",
		fillcolor=springgreen,
		label="node_u8.107:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u8.104:BL" -> "node_u8.107:IF"	 [cond="[]",
		lineno=None];
	"node_u9.85:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec69ad450>",
		fillcolor=turquoise,
		label="node_u9.85:BL
sel0 = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec69ad550>]",
		style=filled,
		typ=Block];
	"node_u9.Leaf_83:AL"	 [def_var="['sel0']",
		label="node_u9.Leaf_83:AL"];
	"node_u9.85:BL" -> "node_u9.Leaf_83:AL"	 [cond="[]",
		lineno=None];
	"node_u5.100:IF" -> "node_u5.101:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=100];
	"node_u0.87:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec69adb50>",
		fillcolor=turquoise,
		label="node_u0.87:BL
sel0 = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec69ad150>]",
		style=filled,
		typ=Block];
	"node_u0.Leaf_83:AL"	 [def_var="['sel0']",
		label="node_u0.Leaf_83:AL"];
	"node_u0.87:BL" -> "node_u0.Leaf_83:AL"	 [cond="[]",
		lineno=None];
	"node_u9.95:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f8ec6865750>",
		fillcolor=linen,
		label="node_u9.95:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"node_u9.95:CS" -> "node_u9.110:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=95];
	"node_u9.96:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f8ec6c8da50>",
		fillcolor=lightcyan,
		label="node_u9.96:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u9.95:CS" -> "node_u9.96:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=95];
	"node_u9.103:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f8ec68652d0>",
		fillcolor=lightcyan,
		label="node_u9.103:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u9.95:CS" -> "node_u9.103:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=95];
	"node_u2.107:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec68653d0>",
		fillcolor=springgreen,
		label="node_u2.107:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u2.104:BL" -> "node_u2.107:IF"	 [cond="[]",
		lineno=None];
	"node_u2.105:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec6865e50>",
		fillcolor=springgreen,
		label="node_u2.105:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u2.104:BL" -> "node_u2.105:IF"	 [cond="[]",
		lineno=None];
	"node_u9.106:BS" -> "node_u9.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u8.105:IF" -> "node_u8.106:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=105];
	"node_u5.85:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec69ad450>",
		fillcolor=turquoise,
		label="node_u5.85:BL
sel0 = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec69ad550>]",
		style=filled,
		typ=Block];
	"node_u5.85:BL" -> "node_u5.Leaf_83:AL"	 [cond="[]",
		lineno=None];
	"node_u1.93:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f8ec69d7350>",
		clk_sens=False,
		fillcolor=gold,
		label="node_u1.93:AL",
		sens="['data_b', 'data_a']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a', 'sel0', 'LOW_MUX', 'HI_MUX']"];
	"node_u1.93:AL" -> "node_u1.94:BL"	 [cond="[]",
		lineno=None];
	"node_u9.101:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865c90>",
		fillcolor=cadetblue,
		label="node_u9.101:BS
data_hi = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865c90>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u9.101:BS" -> "node_u9.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u2.101:BS" -> "node_u2.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u4.97:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec6c8d910>",
		fillcolor=turquoise,
		label="node_u4.97:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u4.97:BL" -> "node_u4.98:IF"	 [cond="[]",
		lineno=None];
	"node_u4.100:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec6865650>",
		fillcolor=springgreen,
		label="node_u4.100:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u4.97:BL" -> "node_u4.100:IF"	 [cond="[]",
		lineno=None];
	"node_u4.84:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec69c50d0>",
		fillcolor=turquoise,
		label="node_u4.84:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u4.83:AL" -> "node_u4.84:BL"	 [cond="[]",
		lineno=None];
	"node_u3.111:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec6865450>",
		fillcolor=turquoise,
		label="node_u3.111:BL
data_lo = { DATA_WIDTH{ 1'b0 } };
data_hi = { DATA_WIDTH{ 1'b0 } };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865b90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865d90>]",
		style=filled,
		typ=Block];
	"node_u3.111:BL" -> "node_u3.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u6.108:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865dd0>",
		fillcolor=cadetblue,
		label="node_u6.108:BS
data_hi = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865dd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u6.107:IF" -> "node_u6.108:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=107];
	"node_u8.101:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865c90>",
		fillcolor=cadetblue,
		label="node_u8.101:BS
data_hi = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865c90>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u8.101:BS" -> "node_u8.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u2.84:BL" -> "node_u2.85:IF"	 [cond="[]",
		lineno=None];
	"node_u9.99:BS" -> "node_u9.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u3.106:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865e90>",
		fillcolor=cadetblue,
		label="node_u3.106:BS
data_lo = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865e90>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u3.106:BS" -> "node_u3.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u1.105:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec6865e50>",
		fillcolor=springgreen,
		label="node_u1.105:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u1.105:IF" -> "node_u1.106:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=105];
	"node_u3.98:IF" -> "node_u3.99:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=98];
	"node_u5.110:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f8ec68659d0>",
		fillcolor=lightcyan,
		label="node_u5.110:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u5.110:CA" -> "node_u5.111:BL"	 [cond="[]",
		lineno=None];
	"node_u0.93:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f8ec69d7350>",
		clk_sens=False,
		fillcolor=gold,
		label="node_u0.93:AL",
		sens="['data_b', 'data_a']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a', 'sel0', 'LOW_MUX', 'HI_MUX']"];
	"node_u0.93:AL" -> "node_u0.94:BL"	 [cond="[]",
		lineno=None];
	"node_u9.94:BL" -> "node_u9.95:CS"	 [cond="[]",
		lineno=None];
	"node_u4.Leaf_83:AL" -> "node_u4.93:AL";
	"node_u6.94:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec72a64d0>",
		fillcolor=turquoise,
		label="node_u6.94:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u6.93:AL" -> "node_u6.94:BL"	 [cond="[]",
		lineno=None];
	"node_u7.96:CA" -> "node_u7.97:BL"	 [cond="[]",
		lineno=None];
	"node_u1.Leaf_83:AL"	 [def_var="['sel0']",
		label="node_u1.Leaf_83:AL"];
	"node_u1.87:BL" -> "node_u1.Leaf_83:AL"	 [cond="[]",
		lineno=None];
	"node_u1.96:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f8ec6c8da50>",
		fillcolor=lightcyan,
		label="node_u1.96:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u1.97:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec6c8d910>",
		fillcolor=turquoise,
		label="node_u1.97:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u1.96:CA" -> "node_u1.97:BL"	 [cond="[]",
		lineno=None];
	"node_u1.Leaf_83:AL" -> "node_u1.93:AL";
	"node_u1.108:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865dd0>",
		fillcolor=cadetblue,
		label="node_u1.108:BS
data_hi = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865dd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u1.108:BS" -> "node_u1.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u7.85:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec69ad050>",
		fillcolor=springgreen,
		label="node_u7.85:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u7.84:BL" -> "node_u7.85:IF"	 [cond="[]",
		lineno=None];
	"node_u0.108:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865dd0>",
		fillcolor=cadetblue,
		label="node_u0.108:BS
data_hi = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865dd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u0.107:IF" -> "node_u0.108:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=107];
	"node_u1.84:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec69c50d0>",
		fillcolor=turquoise,
		label="node_u1.84:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u1.84:BL" -> "node_u1.85:IF"	 [cond="[]",
		lineno=None];
	"node_u6.84:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec69c50d0>",
		fillcolor=turquoise,
		label="node_u6.84:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u6.83:AL" -> "node_u6.84:BL"	 [cond="[]",
		lineno=None];
	"node_u7.94:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec72a64d0>",
		fillcolor=turquoise,
		label="node_u7.94:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u7.94:BL" -> "node_u7.95:CS"	 [cond="[]",
		lineno=None];
	"node_u9.85:IF" -> "node_u9.85:BL"	 [cond="['data_a', 'data_b']",
		label="(data_a < data_b)",
		lineno=85];
	"node_u9.87:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec69adb50>",
		fillcolor=turquoise,
		label="node_u9.87:BL
sel0 = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec69ad150>]",
		style=filled,
		typ=Block];
	"node_u9.85:IF" -> "node_u9.87:BL"	 [cond="['data_a', 'data_b']",
		label="!((data_a < data_b))",
		lineno=85];
	"node_u5.87:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec69adb50>",
		fillcolor=turquoise,
		label="node_u5.87:BL
sel0 = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec69ad150>]",
		style=filled,
		typ=Block];
	"node_u5.87:BL" -> "node_u5.Leaf_83:AL"	 [cond="[]",
		lineno=None];
	"node_u8.98:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec6c8d450>",
		fillcolor=springgreen,
		label="node_u8.98:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u8.99:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865850>",
		fillcolor=cadetblue,
		label="node_u8.99:BS
data_lo = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865850>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u8.98:IF" -> "node_u8.99:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=98];
	"node_u1.103:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f8ec68652d0>",
		fillcolor=lightcyan,
		label="node_u1.103:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u1.104:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec6865190>",
		fillcolor=turquoise,
		label="node_u1.104:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u1.103:CA" -> "node_u1.104:BL"	 [cond="[]",
		lineno=None];
	"node_u4.94:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec72a64d0>",
		fillcolor=turquoise,
		label="node_u4.94:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u4.95:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f8ec6865750>",
		fillcolor=linen,
		label="node_u4.95:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"node_u4.94:BL" -> "node_u4.95:CS"	 [cond="[]",
		lineno=None];
	"node_u1.100:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec6865650>",
		fillcolor=springgreen,
		label="node_u1.100:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u1.100:IF" -> "node_u1.101:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=100];
	"node_u3.110:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f8ec68659d0>",
		fillcolor=lightcyan,
		label="node_u3.110:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u3.110:CA" -> "node_u3.111:BL"	 [cond="[]",
		lineno=None];
	"node_u3.108:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865dd0>",
		fillcolor=cadetblue,
		label="node_u3.108:BS
data_hi = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865dd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u3.107:IF" -> "node_u3.108:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=107];
	"node_u5.107:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec68653d0>",
		fillcolor=springgreen,
		label="node_u5.107:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u5.107:IF" -> "node_u5.108:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=107];
	"node_u7.93:AL" -> "node_u7.94:BL"	 [cond="[]",
		lineno=None];
	"node_u0.108:BS" -> "node_u0.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u3.108:BS" -> "node_u3.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u4.110:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f8ec68659d0>",
		fillcolor=lightcyan,
		label="node_u4.110:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u4.111:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec6865450>",
		fillcolor=turquoise,
		label="node_u4.111:BL
data_lo = { DATA_WIDTH{ 1'b0 } };
data_hi = { DATA_WIDTH{ 1'b0 } };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865b90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865d90>]",
		style=filled,
		typ=Block];
	"node_u4.110:CA" -> "node_u4.111:BL"	 [cond="[]",
		lineno=None];
	"node_u4.106:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865e90>",
		fillcolor=cadetblue,
		label="node_u4.106:BS
data_lo = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865e90>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u4.106:BS" -> "node_u4.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u0.99:BS" -> "node_u0.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u2.106:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865e90>",
		fillcolor=cadetblue,
		label="node_u2.106:BS
data_lo = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865e90>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u2.106:BS" -> "node_u2.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u8.Leaf_93:AL" -> "node_u9.93:AL";
	"node_u8.Leaf_93:AL" -> "node_u9.83:AL";
	"node_u5.Leaf_93:AL" -> "node_u8.93:AL";
	"node_u5.Leaf_93:AL" -> "node_u8.83:AL";
	"node_u1.97:BL" -> "node_u1.98:IF"	 [cond="[]",
		lineno=None];
	"node_u1.97:BL" -> "node_u1.100:IF"	 [cond="[]",
		lineno=None];
	"node_u1.95:CS" -> "node_u1.110:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=95];
	"node_u1.95:CS" -> "node_u1.96:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=95];
	"node_u1.95:CS" -> "node_u1.103:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=95];
	"node_u9.87:BL" -> "node_u9.Leaf_83:AL"	 [cond="[]",
		lineno=None];
	"node_u3.100:IF" -> "node_u3.101:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=100];
	"node_u2.95:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f8ec6865750>",
		fillcolor=linen,
		label="node_u2.95:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"node_u2.94:BL" -> "node_u2.95:CS"	 [cond="[]",
		lineno=None];
	"node_u3.103:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f8ec68652d0>",
		fillcolor=lightcyan,
		label="node_u3.103:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u3.103:CA" -> "node_u3.104:BL"	 [cond="[]",
		lineno=None];
	"node_u4.93:AL" -> "node_u4.94:BL"	 [cond="[]",
		lineno=None];
	"node_u4.101:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865c90>",
		fillcolor=cadetblue,
		label="node_u4.101:BS
data_hi = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865c90>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u4.100:IF" -> "node_u4.101:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=100];
	"node_u4.95:CS" -> "node_u4.110:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=95];
	"node_u4.96:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f8ec6c8da50>",
		fillcolor=lightcyan,
		label="node_u4.96:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u4.95:CS" -> "node_u4.96:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=95];
	"node_u4.103:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f8ec68652d0>",
		fillcolor=lightcyan,
		label="node_u4.103:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u4.95:CS" -> "node_u4.103:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=95];
	"node_u6.99:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865850>",
		fillcolor=cadetblue,
		label="node_u6.99:BS
data_lo = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865850>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u6.98:IF" -> "node_u6.99:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=98];
	"node_u8.99:BS" -> "node_u8.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u4.108:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865dd0>",
		fillcolor=cadetblue,
		label="node_u4.108:BS
data_hi = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865dd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u4.107:IF" -> "node_u4.108:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=107];
	"node_u2.111:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec6865450>",
		fillcolor=turquoise,
		label="node_u2.111:BL
data_lo = { DATA_WIDTH{ 1'b0 } };
data_hi = { DATA_WIDTH{ 1'b0 } };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865b90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865d90>]",
		style=filled,
		typ=Block];
	"node_u2.111:BL" -> "node_u2.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u5.99:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865850>",
		fillcolor=cadetblue,
		label="node_u5.99:BS
data_lo = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865850>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u5.98:IF" -> "node_u5.99:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=98];
	"node_u0.Leaf_93:AL" -> "node_u3.93:AL";
	"node_u3.83:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f8ec69c52d0>",
		clk_sens=False,
		fillcolor=gold,
		label="node_u3.83:AL",
		sens="[]",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a']"];
	"node_u0.Leaf_93:AL" -> "node_u3.83:AL";
	"node_u0.101:BS" -> "node_u0.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u0.85:IF" -> "node_u0.87:BL"	 [cond="['data_a', 'data_b']",
		label="!((data_a < data_b))",
		lineno=85];
	"node_u0.85:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec69ad450>",
		fillcolor=turquoise,
		label="node_u0.85:BL
sel0 = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec69ad550>]",
		style=filled,
		typ=Block];
	"node_u0.85:IF" -> "node_u0.85:BL"	 [cond="['data_a', 'data_b']",
		label="(data_a < data_b)",
		lineno=85];
	"node_u5.83:AL" -> "node_u5.84:BL"	 [cond="[]",
		lineno=None];
	"node_u3.84:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec69c50d0>",
		fillcolor=turquoise,
		label="node_u3.84:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u3.83:AL" -> "node_u3.84:BL"	 [cond="[]",
		lineno=None];
	"node_u5.95:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f8ec6865750>",
		fillcolor=linen,
		label="node_u5.95:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"node_u5.94:BL" -> "node_u5.95:CS"	 [cond="[]",
		lineno=None];
	"node_u5.103:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f8ec68652d0>",
		fillcolor=lightcyan,
		label="node_u5.103:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u5.104:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec6865190>",
		fillcolor=turquoise,
		label="node_u5.104:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u5.103:CA" -> "node_u5.104:BL"	 [cond="[]",
		lineno=None];
	"node_u6.95:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f8ec6865750>",
		fillcolor=linen,
		label="node_u6.95:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"node_u6.95:CS" -> "node_u6.96:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=95];
	"node_u6.110:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f8ec68659d0>",
		fillcolor=lightcyan,
		label="node_u6.110:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u6.95:CS" -> "node_u6.110:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=95];
	"node_u6.103:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f8ec68652d0>",
		fillcolor=lightcyan,
		label="node_u6.103:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u6.95:CS" -> "node_u6.103:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=95];
	"node_u0.103:CA" -> "node_u0.104:BL"	 [cond="[]",
		lineno=None];
	"node_u4.111:BL" -> "node_u4.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u8.Leaf_83:AL" -> "node_u8.93:AL";
	"node_u8.95:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f8ec6865750>",
		fillcolor=linen,
		label="node_u8.95:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"node_u8.95:CS" -> "node_u8.96:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=95];
	"node_u8.95:CS" -> "node_u8.110:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=95];
	"node_u8.103:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f8ec68652d0>",
		fillcolor=lightcyan,
		label="node_u8.103:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u8.95:CS" -> "node_u8.103:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=95];
	"node_u4.96:CA" -> "node_u4.97:BL"	 [cond="[]",
		lineno=None];
	"node_u4.103:CA" -> "node_u4.104:BL"	 [cond="[]",
		lineno=None];
	"node_u2.110:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f8ec68659d0>",
		fillcolor=lightcyan,
		label="node_u2.110:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u2.110:CA" -> "node_u2.111:BL"	 [cond="[]",
		lineno=None];
	"node_u4.84:BL" -> "node_u4.85:IF"	 [cond="[]",
		lineno=None];
	"node_u5.85:IF" -> "node_u5.85:BL"	 [cond="['data_a', 'data_b']",
		label="(data_a < data_b)",
		lineno=85];
	"node_u5.85:IF" -> "node_u5.87:BL"	 [cond="['data_a', 'data_b']",
		label="!((data_a < data_b))",
		lineno=85];
	"node_u2.95:CS" -> "node_u2.103:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=95];
	"node_u2.95:CS" -> "node_u2.96:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=95];
	"node_u2.95:CS" -> "node_u2.110:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=95];
	"node_u9.Leaf_83:AL" -> "node_u9.93:AL";
	"node_u7.87:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec69adb50>",
		fillcolor=turquoise,
		label="node_u7.87:BL
sel0 = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec69ad150>]",
		style=filled,
		typ=Block];
	"node_u7.87:BL" -> "node_u7.Leaf_83:AL"	 [cond="[]",
		lineno=None];
	"node_u0.97:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec6c8d910>",
		fillcolor=turquoise,
		label="node_u0.97:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u0.96:CA" -> "node_u0.97:BL"	 [cond="[]",
		lineno=None];
	"node_u9.97:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec6c8d910>",
		fillcolor=turquoise,
		label="node_u9.97:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u9.96:CA" -> "node_u9.97:BL"	 [cond="[]",
		lineno=None];
	"node_u6.94:BL" -> "node_u6.95:CS"	 [cond="[]",
		lineno=None];
	"node_u0.Leaf_83:AL" -> "node_u0.93:AL";
	"node_u9.104:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec6865190>",
		fillcolor=turquoise,
		label="node_u9.104:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u9.104:BL" -> "node_u9.105:IF"	 [cond="[]",
		lineno=None];
	"node_u9.104:BL" -> "node_u9.107:IF"	 [cond="[]",
		lineno=None];
	"node_u2.107:IF" -> "node_u2.108:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=107];
	"node_u8.108:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865dd0>",
		fillcolor=cadetblue,
		label="node_u8.108:BS
data_hi = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865dd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u8.108:BS" -> "node_u8.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u3.95:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f8ec6865750>",
		fillcolor=linen,
		label="node_u3.95:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"node_u3.94:BL" -> "node_u3.95:CS"	 [cond="[]",
		lineno=None];
	"node_u1.107:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec68653d0>",
		fillcolor=springgreen,
		label="node_u1.107:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u1.107:IF" -> "node_u1.108:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=107];
	"node_u5.95:CS" -> "node_u5.96:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=95];
	"node_u5.95:CS" -> "node_u5.110:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=95];
	"node_u5.95:CS" -> "node_u5.103:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=95];
	"node_u6.108:BS" -> "node_u6.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u8.107:IF" -> "node_u8.108:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=107];
	"node_u5.104:BL" -> "node_u5.107:IF"	 [cond="[]",
		lineno=None];
	"node_u5.105:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec6865e50>",
		fillcolor=springgreen,
		label="node_u5.105:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u5.104:BL" -> "node_u5.105:IF"	 [cond="[]",
		lineno=None];
	"node_u9.103:CA" -> "node_u9.104:BL"	 [cond="[]",
		lineno=None];
	"node_u1.104:BL" -> "node_u1.105:IF"	 [cond="[]",
		lineno=None];
	"node_u1.104:BL" -> "node_u1.107:IF"	 [cond="[]",
		lineno=None];
	"node_u7.104:BL" -> "node_u7.105:IF"	 [cond="[]",
		lineno=None];
	"node_u7.107:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec68653d0>",
		fillcolor=springgreen,
		label="node_u7.107:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u7.104:BL" -> "node_u7.107:IF"	 [cond="[]",
		lineno=None];
	"node_u7.101:BS" -> "node_u7.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u0.97:BL" -> "node_u0.98:IF"	 [cond="[]",
		lineno=None];
	"node_u0.97:BL" -> "node_u0.100:IF"	 [cond="[]",
		lineno=None];
	"node_u5.99:BS" -> "node_u5.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u3.85:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec69ad050>",
		fillcolor=springgreen,
		label="node_u3.85:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u3.84:BL" -> "node_u3.85:IF"	 [cond="[]",
		lineno=None];
	"node_u9.100:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec6865650>",
		fillcolor=springgreen,
		label="node_u9.100:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u9.100:IF" -> "node_u9.101:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=100];
	"node_u5.106:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865e90>",
		fillcolor=cadetblue,
		label="node_u5.106:BS
data_lo = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865e90>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u5.106:BS" -> "node_u5.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u8.94:BL" -> "node_u8.95:CS"	 [cond="[]",
		lineno=None];
	"node_u1.83:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f8ec69c52d0>",
		clk_sens=False,
		fillcolor=gold,
		label="node_u1.83:AL",
		sens="[]",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a']"];
	"node_u1.83:AL" -> "node_u1.84:BL"	 [cond="[]",
		lineno=None];
	"node_u8.83:AL" -> "node_u8.84:BL"	 [cond="[]",
		lineno=None];
	"node_u7.98:IF" -> "node_u7.99:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=98];
	"node_u6.99:BS" -> "node_u6.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u8.85:IF" -> "node_u8.85:BL"	 [cond="['data_a', 'data_b']",
		label="(data_a < data_b)",
		lineno=85];
	"node_u8.85:IF" -> "node_u8.87:BL"	 [cond="['data_a', 'data_b']",
		label="!((data_a < data_b))",
		lineno=85];
	"node_u4.105:IF" -> "node_u4.106:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=105];
	"node_u5.105:IF" -> "node_u5.106:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=105];
	"node_u4.108:BS" -> "node_u4.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u2.97:BL" -> "node_u2.98:IF"	 [cond="[]",
		lineno=None];
	"node_u2.97:BL" -> "node_u2.100:IF"	 [cond="[]",
		lineno=None];
	"node_u6.110:CA" -> "node_u6.111:BL"	 [cond="[]",
		lineno=None];
	"node_u2.99:BS" -> "node_u2.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u6.103:CA" -> "node_u6.104:BL"	 [cond="[]",
		lineno=None];
	"node_u6.100:IF" -> "node_u6.101:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=100];
	"node_u3.95:CS" -> "node_u3.96:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=95];
	"node_u3.95:CS" -> "node_u3.110:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=95];
	"node_u3.95:CS" -> "node_u3.103:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=95];
	"node_u4.Leaf_93:AL" -> "node_u6.93:AL";
	"node_u4.Leaf_93:AL" -> "node_u6.83:AL";
	"node_u3.105:IF" -> "node_u3.106:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=105];
	"node_u8.103:CA" -> "node_u8.104:BL"	 [cond="[]",
		lineno=None];
	"node_u4.101:BS" -> "node_u4.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u7.85:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec69ad450>",
		fillcolor=turquoise,
		label="node_u7.85:BL
sel0 = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec69ad550>]",
		style=filled,
		typ=Block];
	"node_u7.85:BL" -> "node_u7.Leaf_83:AL"	 [cond="[]",
		lineno=None];
	"node_u7.108:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865dd0>",
		fillcolor=cadetblue,
		label="node_u7.108:BS
data_hi = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec6865dd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u7.108:BS" -> "node_u7.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u6.Leaf_83:AL" -> "node_u6.93:AL";
	"node_u6.85:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec69ad050>",
		fillcolor=springgreen,
		label="node_u6.85:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u6.85:IF" -> "node_u6.87:BL"	 [cond="['data_a', 'data_b']",
		label="!((data_a < data_b))",
		lineno=85];
	"node_u6.85:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8ec69ad450>",
		fillcolor=turquoise,
		label="node_u6.85:BL
sel0 = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8ec69ad550>]",
		style=filled,
		typ=Block];
	"node_u6.85:IF" -> "node_u6.85:BL"	 [cond="['data_a', 'data_b']",
		label="(data_a < data_b)",
		lineno=85];
	"node_u3.85:IF" -> "node_u3.85:BL"	 [cond="['data_a', 'data_b']",
		label="(data_a < data_b)",
		lineno=85];
	"node_u3.85:IF" -> "node_u3.87:BL"	 [cond="['data_a', 'data_b']",
		label="!((data_a < data_b))",
		lineno=85];
	"node_u2.105:IF" -> "node_u2.106:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=105];
	"node_u9.108:BS" -> "node_u9.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u6.84:BL" -> "node_u6.85:IF"	 [cond="[]",
		lineno=None];
	"node_u0.105:IF" -> "node_u0.106:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=105];
	"node_u8.97:BL" -> "node_u8.98:IF"	 [cond="[]",
		lineno=None];
	"node_u8.100:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8ec6865650>",
		fillcolor=springgreen,
		label="node_u8.100:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u8.97:BL" -> "node_u8.100:IF"	 [cond="[]",
		lineno=None];
	"node_u7.111:BL" -> "node_u7.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u0.85:BL" -> "node_u0.Leaf_83:AL"	 [cond="[]",
		lineno=None];
	"node_u7.107:IF" -> "node_u7.108:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=107];
	"node_u1.85:BL" -> "node_u1.Leaf_83:AL"	 [cond="[]",
		lineno=None];
	"node_u1.111:BL" -> "node_u1.Leaf_93:AL"	 [cond="[]",
		lineno=None];
	"node_u8.100:IF" -> "node_u8.101:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=100];
	"node_u6.85:BL" -> "node_u6.Leaf_83:AL"	 [cond="[]",
		lineno=None];
	"node_u9.97:BL" -> "node_u9.98:IF"	 [cond="[]",
		lineno=None];
	"node_u9.97:BL" -> "node_u9.100:IF"	 [cond="[]",
		lineno=None];
	"node_u7.85:IF" -> "node_u7.87:BL"	 [cond="['data_a', 'data_b']",
		label="!((data_a < data_b))",
		lineno=85];
	"node_u7.85:IF" -> "node_u7.85:BL"	 [cond="['data_a', 'data_b']",
		label="(data_a < data_b)",
		lineno=85];
}
