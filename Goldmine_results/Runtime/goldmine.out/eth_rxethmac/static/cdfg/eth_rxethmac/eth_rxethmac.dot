strict digraph "compose( ,  )" {
	node [label="\N"];
	"Leaf_1432:AL"	 [def_var="['RxStartFrm', 'RxStartFrm_d']",
		label="Leaf_1432:AL"];
	"1432:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fb43061c910>",
		clk_sens=True,
		fillcolor=gold,
		label="1432:AL",
		sens="['MRxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'GenerateRxStartFrm', 'RxStartFrm_d']"];
	"Leaf_1432:AL" -> "1432:AL";
	"1398:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fb430611bd0>",
		fillcolor=turquoise,
		label="1398:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1399:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fb430611f50>",
		fillcolor=springgreen,
		label="1399:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1398:BL" -> "1399:IF"	 [cond="[]",
		lineno=None];
	"1421:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fb43061c0d0>",
		fillcolor=turquoise,
		label="1421:BL
RxValid_d <= GenerateRxValid;
RxValid <= RxValid_d;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb43061c110>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7fb43061c250>]",
		style=filled,
		typ=Block];
	"Leaf_1413:AL"	 [def_var="['RxValid', 'RxValid_d']",
		label="Leaf_1413:AL"];
	"1421:BL" -> "Leaf_1413:AL"	 [cond="[]",
		lineno=None];
	"1368:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fb43060c990>",
		fillcolor=springgreen,
		label="1368:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1371:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb43060ca10>",
		fillcolor=firebrick,
		label="1371:NS
RxData_d[7:0] <= 8'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb43060ca10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1368:IF" -> "1371:NS"	 [cond="['DelayData']",
		label="(~DelayData)",
		lineno=1368];
	"1366:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb43060c690>",
		fillcolor=firebrick,
		label="1366:NS
RxData_d[7:0] <= LatchedByte[7:0] & { 8{ |StateData } };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb43060c690>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_1349:AL"	 [def_var="['LatchedByte', 'RxData', 'RxData_d', 'DelayData']",
		label="Leaf_1349:AL"];
	"1366:NS" -> "Leaf_1349:AL"	 [cond="[]",
		lineno=None];
	"1307:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fb4305fc5d0>",
		def_var="['Data_Crc']",
		fillcolor=deepskyblue,
		label="1307:AS
Data_Crc[1] = MRxD[2];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['MRxD']"];
	"1384:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fb43060cf10>",
		fillcolor=turquoise,
		label="1384:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1385:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fb430611590>",
		fillcolor=springgreen,
		label="1385:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1384:BL" -> "1385:IF"	 [cond="[]",
		lineno=None];
	"1391:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fb430611c10>",
		fillcolor=springgreen,
		label="1391:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1392:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb430611d50>",
		fillcolor=firebrick,
		label="1392:NS
Broadcast <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb430611d50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1391:IF" -> "1392:NS"	 [cond="['RxAbort', 'RxEndFrm']",
		label="(RxAbort | RxEndFrm)",
		lineno=1391];
	"1302:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fb40eba7c10>",
		def_var="['Enable_Crc']",
		fillcolor=deepskyblue,
		label="1302:AS
Enable_Crc = MRxDV & (|StateData & ~ByteCntMaxFrame);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['MRxDV', 'StateData', 'ByteCntMaxFrame']"];
	"1306:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fb4305fc390>",
		def_var="['Data_Crc']",
		fillcolor=deepskyblue,
		label="1306:AS
Data_Crc[0] = MRxD[3];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['MRxD']"];
	"1453:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fb430621a50>",
		fillcolor=turquoise,
		label="1453:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1454:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fb430621cd0>",
		fillcolor=springgreen,
		label="1454:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1453:BL" -> "1454:IF"	 [cond="[]",
		lineno=None];
	"1349:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fb4306072d0>",
		clk_sens=True,
		fillcolor=gold,
		label="1349:AL",
		sens="['MRxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'RxData_d', 'DelayData', 'GenerateRxValid', 'MRxD', 'LatchedByte', 'StateData']"];
	"1350:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fb430607290>",
		fillcolor=turquoise,
		label="1350:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1349:AL" -> "1350:BL"	 [cond="[]",
		lineno=None];
	"1404:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb430617410>",
		fillcolor=firebrick,
		label="1404:NS
Multicast <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb430617410>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_1397:AL"	 [def_var="['Multicast']",
		label="Leaf_1397:AL"];
	"1404:NS" -> "Leaf_1397:AL"	 [cond="[]",
		lineno=None];
	"1413:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fb430617bd0>",
		clk_sens=True,
		fillcolor=gold,
		label="1413:AL",
		sens="['MRxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'RxValid_d', 'GenerateRxValid']"];
	"Leaf_1413:AL" -> "1413:AL";
	"1405:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fb4306175d0>",
		fillcolor=springgreen,
		label="1405:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1406:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb430617710>",
		fillcolor=firebrick,
		label="1406:NS
Multicast <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb430617710>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1405:IF" -> "1406:NS"	 [cond="['RxAbort', 'RxEndFrm']",
		label="(RxAbort | RxEndFrm)",
		lineno=1405];
	"1416:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fb430617d50>",
		fillcolor=turquoise,
		label="1416:BL
RxValid_d <= 1'b0;
RxValid <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb430617d90>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7fb430617ed0>]",
		style=filled,
		typ=Block];
	"1416:BL" -> "Leaf_1413:AL"	 [cond="[]",
		lineno=None];
	"1340:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fb430601910>",
		fillcolor=turquoise,
		label="1340:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1341:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fb430601c10>",
		fillcolor=springgreen,
		label="1341:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1340:BL" -> "1341:IF"	 [cond="[]",
		lineno=None];
	"1400:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb430611f10>",
		fillcolor=firebrick,
		label="1400:NS
Multicast <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb430611f10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1400:NS" -> "Leaf_1397:AL"	 [cond="[]",
		lineno=None];
	"1339:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fb4306018d0>",
		clk_sens=True,
		fillcolor=gold,
		label="1339:AL",
		sens="['MRxClk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'StateIdle', 'ByteCntEq6', 'StateData', 'Crc']"];
	"1339:AL" -> "1340:BL"	 [cond="[]",
		lineno=None];
	"1344:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fb430601f90>",
		fillcolor=springgreen,
		label="1344:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1345:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb4306070d0>",
		fillcolor=firebrick,
		label="1345:NS
CrcHash[5:0] <= Crc[31:26];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb4306070d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1344:IF" -> "1345:NS"	 [cond="['StateData', 'ByteCntEq6']",
		label="(StateData[0] & ByteCntEq6)",
		lineno=1344];
	"1428:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fb43061c690>",
		def_var="['GenerateRxStartFrm']",
		fillcolor=deepskyblue,
		label="1428:AS
GenerateRxStartFrm = StateData[0] & (ByteCntEq1 & ~DlyCrcEn | (DlyCrcCnt == 4'h3) & DlyCrcEn);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StateData', 'ByteCntEq1', 'DlyCrcEn', 'DlyCrcCnt', 'DlyCrcEn']"];
	"1428:AS" -> "1432:AL";
	"1389:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb430611a50>",
		fillcolor=firebrick,
		label="1389:NS
Broadcast <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb430611a50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_1379:AL"	 [def_var="['Broadcast']",
		label="Leaf_1379:AL"];
	"1389:NS" -> "Leaf_1379:AL"	 [cond="[]",
		lineno=None];
	"1435:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fb43061cad0>",
		fillcolor=turquoise,
		label="1435:BL
RxStartFrm_d <= 1'b0;
RxStartFrm <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb43061cb10>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7fb43061cc50>]",
		style=filled,
		typ=Block];
	"1435:BL" -> "Leaf_1432:AL"	 [cond="[]",
		lineno=None];
	"1334:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fb4306014d0>",
		clk_sens=True,
		fillcolor=gold,
		label="1334:AL",
		sens="['MRxClk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['ByteCntEq6', 'StateData']"];
	"1335:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fb430601650>",
		fillcolor=turquoise,
		label="1335:BL
CrcHashGood <= StateData[0] & ByteCntEq6;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb430601690>]",
		style=filled,
		typ=Block];
	"1334:AL" -> "1335:BL"	 [cond="[]",
		lineno=None];
	"1455:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fb430621b90>",
		fillcolor=turquoise,
		label="1455:BL
RxEndFrm_d <= 1'b0;
RxEndFrm <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb430621bd0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7fb430621d10>]",
		style=filled,
		typ=Block];
	"Leaf_1452:AL"	 [def_var="['RxEndFrm_d', 'RxEndFrm']",
		label="Leaf_1452:AL"];
	"1455:BL" -> "Leaf_1452:AL"	 [cond="[]",
		lineno=None];
	"1209:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fb40eb864d0>",
		def_var="['MRxDEq5']",
		fillcolor=deepskyblue,
		label="1209:AS
MRxDEq5 = MRxD == 4'h5;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['MRxD']"];
	"Leaf_1334:AL"	 [def_var="['CrcHashGood']",
		label="Leaf_1334:AL"];
	"1388:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fb430611a90>",
		fillcolor=springgreen,
		label="1388:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1388:IF" -> "1391:IF"	 [cond="['StateData', 'LatchedByte', 'ByteCntEq1']",
		label="!((StateData[0] & &LatchedByte[7:0] & ByteCntEq1))",
		lineno=1388];
	"1388:IF" -> "1389:NS"	 [cond="['StateData', 'LatchedByte', 'ByteCntEq1']",
		label="(StateData[0] & &LatchedByte[7:0] & ByteCntEq1)",
		lineno=1388];
	"1208:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fb40eb86310>",
		def_var="['MRxDEqD']",
		fillcolor=deepskyblue,
		label="1208:AS
MRxDEqD = MRxD == 4'hd;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['MRxD']"];
	"1415:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fb430617e90>",
		fillcolor=springgreen,
		label="1415:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1415:IF" -> "1421:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=1415];
	"1415:IF" -> "1416:BL"	 [cond="['Reset']",
		label=Reset,
		lineno=1415];
	"1454:IF" -> "1455:BL"	 [cond="['Reset']",
		label=Reset,
		lineno=1454];
	"1460:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fb430621ed0>",
		fillcolor=turquoise,
		label="1460:BL
RxEndFrm_d <= GenerateRxEndFrm;
RxEndFrm <= RxEndFrm_d | DribbleRxEndFrm;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb430621f10>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7fb430626150>]",
		style=filled,
		typ=Block];
	"1454:IF" -> "1460:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=1454];
	"1414:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fb430617c10>",
		fillcolor=turquoise,
		label="1414:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1413:AL" -> "1414:BL"	 [cond="[]",
		lineno=None];
	"1381:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fb43060cf90>",
		fillcolor=springgreen,
		label="1381:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1381:IF" -> "1384:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=1381];
	"1382:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb43060cf50>",
		fillcolor=firebrick,
		label="1382:NS
Broadcast <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb43060cf50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1381:IF" -> "1382:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=1381];
	"1440:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fb43061ce50>",
		fillcolor=turquoise,
		label="1440:BL
RxStartFrm_d <= GenerateRxStartFrm;
RxStartFrm <= RxStartFrm_d;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb43061ce90>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7fb430621050>]",
		style=filled,
		typ=Block];
	"1440:BL" -> "Leaf_1432:AL"	 [cond="[]",
		lineno=None];
	"1414:BL" -> "1415:IF"	 [cond="[]",
		lineno=None];
	"1452:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fb430621a10>",
		clk_sens=True,
		fillcolor=gold,
		label="1452:AL",
		sens="['MRxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'RxEndFrm_d', 'GenerateRxEndFrm', 'DribbleRxEndFrm']"];
	"Leaf_1452:AL" -> "1452:AL";
	"1379:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fb43060cdd0>",
		clk_sens=True,
		fillcolor=gold,
		label="1379:AL",
		sens="['MRxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'ByteCntSmall7', 'RxAbort', 'RxEndFrm', 'LatchedByte', 'ByteCntEq1', 'StateData']"];
	"Leaf_1452:AL" -> "1379:AL";
	"1397:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fb430611d10>",
		clk_sens=True,
		fillcolor=gold,
		label="1397:AL",
		sens="['MRxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'RxAbort', 'RxEndFrm', 'LatchedByte', 'ByteCntEq1', 'StateData']"];
	"Leaf_1452:AL" -> "1397:AL";
	"1402:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fb430611fd0>",
		fillcolor=turquoise,
		label="1402:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1403:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fb4306173d0>",
		fillcolor=springgreen,
		label="1403:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1402:BL" -> "1403:IF"	 [cond="[]",
		lineno=None];
	"1411:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fb430617950>",
		def_var="['GenerateRxValid']",
		fillcolor=deepskyblue,
		label="1411:AS
GenerateRxValid = StateData[0] & (~ByteCntEq0 | (DlyCrcCnt >= 4'h3));",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StateData', 'ByteCntEq0', 'DlyCrcCnt']"];
	"1411:AS" -> "1349:AL";
	"1411:AS" -> "1413:AL";
	"1403:IF" -> "1404:NS"	 [cond="['StateData', 'ByteCntEq1', 'LatchedByte']",
		label="(StateData[0] & ByteCntEq1 & LatchedByte[0])",
		lineno=1403];
	"1403:IF" -> "1405:IF"	 [cond="['StateData', 'ByteCntEq1', 'LatchedByte']",
		label="!((StateData[0] & ByteCntEq1 & LatchedByte[0]))",
		lineno=1403];
	"1351:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fb430607a50>",
		fillcolor=springgreen,
		label="1351:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1359:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fb43060c9d0>",
		fillcolor=turquoise,
		label="1359:BL
LatchedByte[7:0] <= { MRxD[3:0], LatchedByte[7:4] };
DelayData <= StateData[0];
RxData[7:0] <= RxData_d[7:0];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb430607f90>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7fb43060c110>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb43060cb50>]",
		style=filled,
		typ=Block];
	"1351:IF" -> "1359:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=1351];
	"1352:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fb430607a10>",
		fillcolor=turquoise,
		label="1352:BL
RxData_d[7:0] <= 8'h0;
DelayData <= 1'b0;
LatchedByte[7:0] <= 8'h0;
RxData[7:0] <= 8'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb430607550>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7fb430607690>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb430607890>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7fb430607a90>]",
		style=filled,
		typ=Block];
	"1351:IF" -> "1352:BL"	 [cond="['Reset']",
		label=Reset,
		lineno=1351];
	"1342:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb430601bd0>",
		fillcolor=firebrick,
		label="1342:NS
CrcHash[5:0] <= 6'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb430601bd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_1339:AL"	 [def_var="['CrcHash']",
		label="Leaf_1339:AL"];
	"1342:NS" -> "Leaf_1339:AL"	 [cond="[]",
		lineno=None];
	"1364:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fb43060c650>",
		fillcolor=springgreen,
		label="1364:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1364:IF" -> "1368:IF"	 [cond="['GenerateRxValid']",
		label="!(GenerateRxValid)",
		lineno=1364];
	"1364:IF" -> "1366:NS"	 [cond="['GenerateRxValid']",
		label=GenerateRxValid,
		lineno=1364];
	"Leaf_1349:AL" -> "1349:AL";
	"Leaf_1349:AL" -> "1379:AL";
	"Leaf_1349:AL" -> "1397:AL";
	"1406:NS" -> "Leaf_1397:AL"	 [cond="[]",
		lineno=None];
	"1460:BL" -> "Leaf_1452:AL"	 [cond="[]",
		lineno=None];
	"1449:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fb4306216d0>",
		def_var="['DribbleRxEndFrm']",
		fillcolor=deepskyblue,
		label="1449:AS
DribbleRxEndFrm = StateData[1] & ~MRxDV & ByteCntGreat2;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StateData', 'MRxDV', 'ByteCntGreat2']"];
	"1449:AS" -> "1452:AL";
	"1399:IF" -> "1400:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=1399];
	"1399:IF" -> "1402:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=1399];
	"1434:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fb43061cc10>",
		fillcolor=springgreen,
		label="1434:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1434:IF" -> "1435:BL"	 [cond="['Reset']",
		label=Reset,
		lineno=1434];
	"1434:IF" -> "1440:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=1434];
	"1452:AL" -> "1453:BL"	 [cond="[]",
		lineno=None];
	"1447:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fb430621450>",
		def_var="['GenerateRxEndFrm']",
		fillcolor=deepskyblue,
		label="1447:AS
GenerateRxEndFrm = StateData[0] & (~MRxDV & ByteCntGreat2 | ByteCntMaxFrame);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StateData', 'MRxDV', 'ByteCntGreat2', 'ByteCntMaxFrame']"];
	"1447:AS" -> "1452:AL";
	"1433:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fb43061c950>",
		fillcolor=turquoise,
		label="1433:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1433:BL" -> "1434:IF"	 [cond="[]",
		lineno=None];
	"1345:NS" -> "Leaf_1339:AL"	 [cond="[]",
		lineno=None];
	"1341:IF" -> "1344:IF"	 [cond="['Reset', 'StateIdle']",
		label="!((Reset | StateIdle))",
		lineno=1341];
	"1341:IF" -> "1342:NS"	 [cond="['Reset', 'StateIdle']",
		label="(Reset | StateIdle)",
		lineno=1341];
	"1350:BL" -> "1351:IF"	 [cond="[]",
		lineno=None];
	"1359:BL" -> "1364:IF"	 [cond="[]",
		lineno=None];
	"1432:AL" -> "1433:BL"	 [cond="[]",
		lineno=None];
	"1309:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fb4305fca50>",
		def_var="['Data_Crc']",
		fillcolor=deepskyblue,
		label="1309:AS
Data_Crc[3] = MRxD[0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['MRxD']"];
	"1380:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fb43060cd90>",
		fillcolor=turquoise,
		label="1380:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1379:AL" -> "1380:BL"	 [cond="[]",
		lineno=None];
	"1335:BL" -> "Leaf_1334:AL"	 [cond="[]",
		lineno=None];
	"1397:AL" -> "1398:BL"	 [cond="[]",
		lineno=None];
	"1385:IF" -> "1388:IF"	 [cond="['StateData', 'LatchedByte', 'ByteCntSmall7']",
		label="!((StateData[0] & ~(&LatchedByte[7:0]) & ByteCntSmall7))",
		lineno=1385];
	"1386:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb430611550>",
		fillcolor=firebrick,
		label="1386:NS
Broadcast <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb430611550>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1385:IF" -> "1386:NS"	 [cond="['StateData', 'LatchedByte', 'ByteCntSmall7']",
		label="(StateData[0] & ~(&LatchedByte[7:0]) & ByteCntSmall7)",
		lineno=1385];
	"1380:BL" -> "1381:IF"	 [cond="[]",
		lineno=None];
	"1303:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fb4305fc150>",
		def_var="['Initialize_Crc']",
		fillcolor=deepskyblue,
		label="1303:AS
Initialize_Crc = StateSFD | DlyCrcEn & |DlyCrcCnt[3:0] & (DlyCrcCnt[3:0] < 4'h9);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StateSFD', 'DlyCrcEn', 'DlyCrcCnt', 'DlyCrcCnt']"];
	"1371:NS" -> "Leaf_1349:AL"	 [cond="[]",
		lineno=None];
	"1308:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fb4305fc810>",
		def_var="['Data_Crc']",
		fillcolor=deepskyblue,
		label="1308:AS
Data_Crc[2] = MRxD[1];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['MRxD']"];
	"1392:NS" -> "Leaf_1379:AL"	 [cond="[]",
		lineno=None];
	"1382:NS" -> "Leaf_1379:AL"	 [cond="[]",
		lineno=None];
	"1352:BL" -> "Leaf_1349:AL"	 [cond="[]",
		lineno=None];
	"1386:NS" -> "Leaf_1379:AL"	 [cond="[]",
		lineno=None];
}
