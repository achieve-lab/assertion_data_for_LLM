strict digraph "compose( ,  )" {
	node [label="\N"];
	"812:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fb40f0a7950>",
		def_var="['ByteCntEq5']",
		fillcolor=deepskyblue,
		label="812:AS
ByteCntEq5 = ByteCnt == 16'd5;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ByteCnt']"];
	"856:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fb40f07af90>",
		fillcolor=springgreen,
		label="856:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"857:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb40f0aa190>",
		fillcolor=firebrick,
		label="857:NS
DlyCrcCnt[3:0] <= DlyCrcCnt[3:0] + 4'd1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb40f0aa190>]",
		style=filled,
		typ=NonblockingSubstitution];
	"856:IF" -> "857:NS"	 [cond="['DlyCrcEn', 'DlyCrcCnt']",
		label="(DlyCrcEn & |DlyCrcCnt[3:0])",
		lineno=856];
	"849:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fb40f07a390>",
		fillcolor=turquoise,
		label="849:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"850:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fb40f07a7d0>",
		fillcolor=springgreen,
		label="850:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"849:BL" -> "850:IF"	 [cond="[]",
		lineno=None];
	"796:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fb40f0b4790>",
		fillcolor=springgreen,
		label="796:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"797:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb40f0b4750>",
		fillcolor=firebrick,
		label="797:NS
ByteCnt[15:0] <= 16'd0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb40f0b4750>]",
		style=filled,
		typ=NonblockingSubstitution];
	"796:IF" -> "797:NS"	 [cond="['ResetByteCounter']",
		label=ResetByteCounter,
		lineno=796];
	"799:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fb40f0b4a50>",
		fillcolor=springgreen,
		label="799:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"796:IF" -> "799:IF"	 [cond="['ResetByteCounter']",
		label="!(ResetByteCounter)",
		lineno=796];
	"782:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fb40f0a4650>",
		def_var="['ResetByteCounter']",
		fillcolor=deepskyblue,
		label="782:AS
ResetByteCounter = MRxDV & (StateSFD & MRxDEqD | StateData[0] & ByteCntMaxFrame);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['MRxDV', 'StateSFD', 'MRxDEqD', 'StateData', 'ByteCntMaxFrame']"];
	"784:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fb40f0a4fd0>",
		def_var="['IncrementByteCounter']",
		fillcolor=deepskyblue,
		label="784:AS
IncrementByteCounter = ~ResetByteCounter & MRxDV & (StatePreamble | StateSFD | StateIdle & ~Transmitting | StateData[1] & ~\
ByteCntMax & ~(DlyCrcEn & |DlyCrcCnt));",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ResetByteCounter', 'MRxDV', 'StatePreamble', 'StateSFD', 'StateIdle', 'Transmitting', 'StateData', 'ByteCntMax', 'DlyCrcEn', '\
DlyCrcCnt']"];
	"782:AS" -> "784:AS";
	"790:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fb40f0b4150>",
		clk_sens=True,
		fillcolor=gold,
		label="790:AL",
		sens="['MRxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'ResetByteCounter', 'ByteCnt', 'IncrementByteCounter']"];
	"782:AS" -> "790:AL";
	"832:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb40f09d750>",
		fillcolor=firebrick,
		label="832:NS
IFGCounter[4:0] <= 5'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb40f09d750>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_825:AL"	 [def_var="['IFGCounter']",
		label="Leaf_825:AL"];
	"832:NS" -> "Leaf_825:AL"	 [cond="[]",
		lineno=None];
	"823:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fb40f087dd0>",
		def_var="['IncrementIFGCounter']",
		fillcolor=deepskyblue,
		label="823:AS
IncrementIFGCounter = ~ResetIFGCounter & (StateDrop | StateIdle | StatePreamble | StateSFD) & ~IFGCounterEq24;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ResetIFGCounter', 'StateDrop', 'StateIdle', 'StatePreamble', 'StateSFD', 'IFGCounterEq24']"];
	"825:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fb40f09d150>",
		clk_sens=True,
		fillcolor=gold,
		label="825:AL",
		sens="['MRxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'ResetIFGCounter', 'IncrementIFGCounter', 'IFGCounter']"];
	"823:AS" -> "825:AL";
	"814:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fb40f0a7cd0>",
		def_var="['ByteCntEq7']",
		fillcolor=deepskyblue,
		label="814:AS
ByteCntEq7 = ByteCnt == 16'd7;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ByteCnt']"];
	"841:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fb40f09dd10>",
		def_var="['IFGCounterEq24']",
		fillcolor=deepskyblue,
		label="841:AS
IFGCounterEq24 = (IFGCounter[4:0] == 5'h18) | r_IFG;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['IFGCounter', 'r_IFG']"];
	"841:AS" -> "823:AS";
	"Leaf_790:AL"	 [def_var="['ByteCnt']",
		label="Leaf_790:AL"];
	"797:NS" -> "Leaf_790:AL"	 [cond="[]",
		lineno=None];
	"Leaf_825:AL" -> "841:AS";
	"Leaf_825:AL" -> "825:AL";
	"800:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb40f0b4c10>",
		fillcolor=firebrick,
		label="800:NS
ByteCnt[15:0] <= ByteCnt[15:0] + 16'd1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb40f0b4c10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"799:IF" -> "800:NS"	 [cond="['IncrementByteCounter']",
		label=IncrementByteCounter,
		lineno=799];
	"809:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fb40f0a7410>",
		def_var="['ByteCntEq2']",
		fillcolor=deepskyblue,
		label="809:AS
ByteCntEq2 = ByteCnt == 16'd2;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ByteCnt']"];
	"Leaf_790:AL" -> "812:AS";
	"Leaf_790:AL" -> "814:AS";
	"Leaf_790:AL" -> "809:AS";
	"817:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fb40f0872d0>",
		def_var="['ByteCntMax']",
		fillcolor=deepskyblue,
		label="817:AS
ByteCntMax = ByteCnt == 16'hffff;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ByteCnt']"];
	"Leaf_790:AL" -> "817:AS";
	"815:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fb40f0a7ed0>",
		def_var="['ByteCntGreat2']",
		fillcolor=deepskyblue,
		label="815:AS
ByteCntGreat2 = ByteCnt > 16'd2;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ByteCnt']"];
	"Leaf_790:AL" -> "815:AS";
	"816:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fb40f087110>",
		def_var="['ByteCntSmall7']",
		fillcolor=deepskyblue,
		label="816:AS
ByteCntSmall7 = ByteCnt < 16'd7;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ByteCnt']"];
	"Leaf_790:AL" -> "816:AS";
	"808:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fb40f0a7250>",
		def_var="['ByteCntEq1']",
		fillcolor=deepskyblue,
		label="808:AS
ByteCntEq1 = ByteCnt == 16'd1;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ByteCnt']"];
	"Leaf_790:AL" -> "808:AS";
	"807:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fb40f0a7090>",
		def_var="['ByteCntEq0']",
		fillcolor=deepskyblue,
		label="807:AS
ByteCntEq0 = ByteCnt == 16'd0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ByteCnt']"];
	"Leaf_790:AL" -> "807:AS";
	"813:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fb40f0a7b10>",
		def_var="['ByteCntEq6']",
		fillcolor=deepskyblue,
		label="813:AS
ByteCntEq6 = ByteCnt == 16'd6;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ByteCnt']"];
	"Leaf_790:AL" -> "813:AS";
	"804:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fb40f0b4b90>",
		def_var="['ByteCntDelayed']",
		fillcolor=deepskyblue,
		label="804:AS
ByteCntDelayed = ByteCnt + 16'd4;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ByteCnt']"];
	"Leaf_790:AL" -> "804:AS";
	"818:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fb40f087550>",
		def_var="['ByteCntMaxFrame']",
		fillcolor=deepskyblue,
		label="818:AS
ByteCntMaxFrame = (ByteCnt == MaxFL[15:0]) & ~HugEn;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ByteCnt', 'MaxFL', 'HugEn']"];
	"Leaf_790:AL" -> "818:AS";
	"Leaf_790:AL" -> "790:AL";
	"811:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fb40f0a7790>",
		def_var="['ByteCntEq4']",
		fillcolor=deepskyblue,
		label="811:AS
ByteCntEq4 = ByteCnt == 16'd4;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ByteCnt']"];
	"Leaf_790:AL" -> "811:AS";
	"805:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fb40f0b4e10>",
		def_var="['ByteCntOut']",
		fillcolor=deepskyblue,
		label="805:AS
ByteCntOut = (DlyCrcEn)? ByteCntDelayed : ByteCnt;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['DlyCrcEn', 'ByteCntDelayed', 'ByteCnt']"];
	"Leaf_790:AL" -> "805:AS";
	"810:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fb40f0a75d0>",
		def_var="['ByteCntEq3']",
		fillcolor=deepskyblue,
		label="810:AS
ByteCntEq3 = ByteCnt == 16'd3;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ByteCnt']"];
	"Leaf_790:AL" -> "810:AS";
	"817:AS" -> "784:AS";
	"853:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fb40f07ab90>",
		fillcolor=springgreen,
		label="853:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"853:IF" -> "856:IF"	 [cond="['DlyCrcEn', 'StateSFD']",
		label="!((DlyCrcEn & StateSFD))",
		lineno=853];
	"854:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb40f07ab50>",
		fillcolor=firebrick,
		label="854:NS
DlyCrcCnt[3:0] <= 4'h1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb40f07ab50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"853:IF" -> "854:NS"	 [cond="['DlyCrcEn', 'StateSFD']",
		label="(DlyCrcEn & StateSFD)",
		lineno=853];
	"834:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fb40f09da50>",
		fillcolor=springgreen,
		label="834:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"835:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb40f09dc10>",
		fillcolor=firebrick,
		label="835:NS
IFGCounter[4:0] <= IFGCounter[4:0] + 5'd1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb40f09dc10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"834:IF" -> "835:NS"	 [cond="['IncrementIFGCounter']",
		label=IncrementIFGCounter,
		lineno=834];
	"Leaf_844:AL"	 [def_var="['DlyCrcCnt']",
		label="Leaf_844:AL"];
	"Leaf_844:AL" -> "784:AS";
	"844:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fb40f07a090>",
		clk_sens=True,
		fillcolor=gold,
		label="844:AL",
		sens="['MRxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'DlyCrcEn', 'StateSFD', 'DlyCrcCnt']"];
	"Leaf_844:AL" -> "844:AL";
	"793:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb40f0b4390>",
		fillcolor=firebrick,
		label="793:NS
ByteCnt[15:0] <= 16'd0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb40f0b4390>]",
		style=filled,
		typ=NonblockingSubstitution];
	"793:NS" -> "Leaf_790:AL"	 [cond="[]",
		lineno=None];
	"800:NS" -> "Leaf_790:AL"	 [cond="[]",
		lineno=None];
	"857:NS" -> "Leaf_844:AL"	 [cond="[]",
		lineno=None];
	"828:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb40f09d390>",
		fillcolor=firebrick,
		label="828:NS
IFGCounter[4:0] <= 5'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb40f09d390>]",
		style=filled,
		typ=NonblockingSubstitution];
	"828:NS" -> "Leaf_825:AL"	 [cond="[]",
		lineno=None];
	"845:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fb40f07a050>",
		fillcolor=turquoise,
		label="845:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"846:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fb40f07a310>",
		fillcolor=springgreen,
		label="846:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"845:BL" -> "846:IF"	 [cond="[]",
		lineno=None];
	"804:AS" -> "805:AS";
	"851:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb40f07a790>",
		fillcolor=firebrick,
		label="851:NS
DlyCrcCnt[3:0] <= 4'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb40f07a790>]",
		style=filled,
		typ=NonblockingSubstitution];
	"851:NS" -> "Leaf_844:AL"	 [cond="[]",
		lineno=None];
	"784:AS" -> "790:AL";
	"844:AL" -> "845:BL"	 [cond="[]",
		lineno=None];
	"826:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fb40f09d110>",
		fillcolor=turquoise,
		label="826:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"825:AL" -> "826:BL"	 [cond="[]",
		lineno=None];
	"850:IF" -> "853:IF"	 [cond="['DlyCrcCnt']",
		label="!((DlyCrcCnt[3:0] == 4'h9))",
		lineno=850];
	"850:IF" -> "851:NS"	 [cond="['DlyCrcCnt']",
		label="(DlyCrcCnt[3:0] == 4'h9)",
		lineno=850];
	"818:AS" -> "782:AS";
	"854:NS" -> "Leaf_844:AL"	 [cond="[]",
		lineno=None];
	"835:NS" -> "Leaf_825:AL"	 [cond="[]",
		lineno=None];
	"792:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fb40f0b43d0>",
		fillcolor=springgreen,
		label="792:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"792:IF" -> "793:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=792];
	"795:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fb40f0b4450>",
		fillcolor=turquoise,
		label="795:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"792:IF" -> "795:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=792];
	"791:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fb40f0b4190>",
		fillcolor=turquoise,
		label="791:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"791:BL" -> "792:IF"	 [cond="[]",
		lineno=None];
	"790:AL" -> "791:BL"	 [cond="[]",
		lineno=None];
	"795:BL" -> "796:IF"	 [cond="[]",
		lineno=None];
	"831:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fb40f09d790>",
		fillcolor=springgreen,
		label="831:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"831:IF" -> "832:NS"	 [cond="['ResetIFGCounter']",
		label=ResetIFGCounter,
		lineno=831];
	"831:IF" -> "834:IF"	 [cond="['ResetIFGCounter']",
		label="!(ResetIFGCounter)",
		lineno=831];
	"827:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fb40f09d3d0>",
		fillcolor=springgreen,
		label="827:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"826:BL" -> "827:IF"	 [cond="[]",
		lineno=None];
	"846:IF" -> "849:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=846];
	"847:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb40f07a2d0>",
		fillcolor=firebrick,
		label="847:NS
DlyCrcCnt[3:0] <= 4'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb40f07a2d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"846:IF" -> "847:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=846];
	"830:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fb40f09d450>",
		fillcolor=turquoise,
		label="830:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"830:BL" -> "831:IF"	 [cond="[]",
		lineno=None];
	"821:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fb40f087850>",
		def_var="['ResetIFGCounter']",
		fillcolor=deepskyblue,
		label="821:AS
ResetIFGCounter = StateSFD & MRxDV & MRxDEqD | StateDrop;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StateSFD', 'MRxDV', 'MRxDEqD', 'StateDrop']"];
	"821:AS" -> "823:AS";
	"821:AS" -> "825:AL";
	"827:IF" -> "828:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=827];
	"827:IF" -> "830:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=827];
	"847:NS" -> "Leaf_844:AL"	 [cond="[]",
		lineno=None];
}
