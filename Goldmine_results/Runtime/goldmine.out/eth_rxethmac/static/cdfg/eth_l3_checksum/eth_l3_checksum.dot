strict digraph "compose( ,  )" {
	node [label="\N"];
	"1533:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb43063aed0>",
		fillcolor=firebrick,
		label="1533:NS
StartCalc[1:0] <= 2'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb43063aed0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_1509:AL"	 [def_var="['CSready', 'CheckSum', 'StartCalc', 'Sum']",
		label="Leaf_1509:AL"];
	"1533:NS" -> "Leaf_1509:AL"	 [cond="[]",
		lineno=None];
	"1544:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fb4305bf710>",
		fillcolor=turquoise,
		label="1544:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1545:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fb4305bf8d0>",
		fillcolor=springgreen,
		label="1545:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1544:BL" -> "1545:IF"	 [cond="[]",
		lineno=None];
	"Leaf_1494:AL"	 [def_var="['prev_latched_Rx1', 'Divided_2_clk', 'prev_latched_Rx']",
		label="Leaf_1494:AL"];
	"1543:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fb4305bf690>",
		clk_sens=False,
		fillcolor=gold,
		label="1543:AL",
		sens="['Divided_4_clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['RxData', 'prev_latched_Rx1', 'StartCalc', 'Sum']"];
	"Leaf_1494:AL" -> "1543:AL";
	"1505:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fb43062f7d0>",
		clk_sens=False,
		fillcolor=gold,
		label="1505:AL",
		sens="['Divided_2_clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Divided_4_clk', 'Divided_2_clk']"];
	"Leaf_1494:AL" -> "1505:AL";
	"1494:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fb43062aa90>",
		clk_sens=True,
		fillcolor=gold,
		label="1494:AL",
		sens="['MRxClk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['RxData', 'Divided_2_clk', 'prev_latched_Rx', 'ByteCnt', 'MRxClk']"];
	"Leaf_1494:AL" -> "1494:AL";
	"1498:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fb43062f650>",
		fillcolor=turquoise,
		label="1498:BL
prev_latched_Rx[7:0] <= RxData[7:0];
prev_latched_Rx1[7:0] <= prev_latched_Rx[7:0];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb43062f410>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7fb43062f790>]",
		style=filled,
		typ=Block];
	"1498:BL" -> "Leaf_1494:AL"	 [cond="[]",
		lineno=None];
	"1543:AL" -> "1544:BL"	 [cond="[]",
		lineno=None];
	"1510:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fb43062fe90>",
		fillcolor=turquoise,
		label="1510:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1511:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fb430634190>",
		fillcolor=springgreen,
		label="1511:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1510:BL" -> "1511:IF"	 [cond="[]",
		lineno=None];
	"1535:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fb43063ae90>",
		fillcolor=springgreen,
		label="1535:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1510:BL" -> "1535:IF"	 [cond="[]",
		lineno=None];
	"1517:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fb430634750>",
		fillcolor=springgreen,
		label="1517:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1520:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fb43063a350>",
		fillcolor=springgreen,
		label="1520:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1517:IF" -> "1520:IF"	 [cond="['ByteCnt']",
		label="!((ByteCnt[15:0] == 16'h15))",
		lineno=1517];
	"1518:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb430634710>",
		fillcolor=firebrick,
		label="1518:NS
StartCalc[0] <= RxData[7:0] == 8'h8;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb430634710>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1517:IF" -> "1518:NS"	 [cond="['ByteCnt']",
		label="(ByteCnt[15:0] == 16'h15)",
		lineno=1517];
	"Leaf_1509:AL" -> "1543:AL";
	"1509:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fb43062fdd0>",
		clk_sens=False,
		fillcolor=gold,
		label="1509:AL",
		sens="['Divided_2_clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'RxData', 'StartCalc', 'ByteCnt', 'Sum']"];
	"Leaf_1509:AL" -> "1509:AL";
	"1521:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fb43063a210>",
		fillcolor=turquoise,
		label="1521:BL
StartCalc[0] <= (RxData[7:0] == 8'h0) & StartCalc[0];
CheckSum[15:0] <= 16'h0;
Sum[31:0] <= 32'h0;
CSready <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb430634e10>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7fb43063a050>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb43063a250>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7fb43063a390>]",
		style=filled,
		typ=Block];
	"1521:BL" -> "Leaf_1509:AL"	 [cond="[]",
		lineno=None];
	"Leaf_1505:AL"	 [def_var="['Divided_4_clk']",
		label="Leaf_1505:AL"];
	"Leaf_1505:AL" -> "1505:AL";
	"1520:IF" -> "1521:BL"	 [cond="['ByteCnt']",
		label="(ByteCnt[15:0] == 16'h16)",
		lineno=1520];
	"1528:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fb43063ae50>",
		fillcolor=springgreen,
		label="1528:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1520:IF" -> "1528:IF"	 [cond="['ByteCnt']",
		label="!((ByteCnt[15:0] == 16'h16))",
		lineno=1520];
	"Leaf_1543:AL"	 [def_var="['Sum']",
		label="Leaf_1543:AL"];
	"Leaf_1543:AL" -> "1543:AL";
	"Leaf_1543:AL" -> "1509:AL";
	"1546:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb4305bfd50>",
		fillcolor=firebrick,
		label="1546:NS
Sum[31:0] <= Sum[31:0] + { prev_latched_Rx1[7:0], RxData[7:0] };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb4305bfd50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1545:IF" -> "1546:NS"	 [cond="['StartCalc']",
		label="(&StartCalc)",
		lineno=1545];
	"1546:NS" -> "Leaf_1543:AL"	 [cond="[]",
		lineno=None];
	"1506:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb43062fb10>",
		fillcolor=firebrick,
		label="1506:NS
Divided_4_clk <= Divided_4_clk ^ Divided_2_clk;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb43062fb10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1505:AL" -> "1506:NS"	 [cond="[]",
		lineno=None];
	"1509:AL" -> "1510:BL"	 [cond="[]",
		lineno=None];
	"1511:IF" -> "1517:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=1511];
	"1512:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fb430634050>",
		fillcolor=turquoise,
		label="1512:BL
CheckSum[15:0] <= 16'd0;
CSready <= 1'd0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb430634090>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7fb4306341d0>]",
		style=filled,
		typ=Block];
	"1511:IF" -> "1512:BL"	 [cond="['Reset']",
		label=Reset,
		lineno=1511];
	"1495:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fb43062acd0>",
		fillcolor=turquoise,
		label="1495:BL
Divided_2_clk <= MRxClk ^ Divided_2_clk;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb43062ac50>]",
		style=filled,
		typ=Block];
	"1497:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fb43062f090>",
		fillcolor=springgreen,
		label="1497:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1495:BL" -> "1497:IF"	 [cond="[]",
		lineno=None];
	"1497:IF" -> "1498:BL"	 [cond="['ByteCnt', 'ByteCnt']",
		label="((ByteCnt[15:0] >= 16'h17) & (ByteCnt[15:0] < 16'h17 + 16'd20))",
		lineno=1497];
	"1536:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fb4305bf250>",
		fillcolor=turquoise,
		label="1536:BL
CSready <= 1'b1;
CheckSum[15:0] <= ~(Sum[15:0] + Sum[31:16]);",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb4305bf090>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7fb4305bf590>]",
		style=filled,
		typ=Block];
	"1535:IF" -> "1536:BL"	 [cond="['ByteCnt']",
		label="(ByteCnt[15:0] - 16'h17 == 16'd20)",
		lineno=1535];
	"1506:NS" -> "Leaf_1505:AL"	 [cond="[]",
		lineno=None];
	"1518:NS" -> "Leaf_1509:AL"	 [cond="[]",
		lineno=None];
	"1536:BL" -> "Leaf_1509:AL"	 [cond="[]",
		lineno=None];
	"1494:AL" -> "1495:BL"	 [cond="[]",
		lineno=None];
	"1529:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fb43063a910>",
		fillcolor=turquoise,
		label="1529:BL
StartCalc[1] <= (ByteCnt[15:0] > 16'h17) & StartCalc[0];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fb43063ac90>]",
		style=filled,
		typ=Block];
	"1529:BL" -> "Leaf_1509:AL"	 [cond="[]",
		lineno=None];
	"1512:BL" -> "Leaf_1509:AL"	 [cond="[]",
		lineno=None];
	"1528:IF" -> "1533:NS"	 [cond="['ByteCnt', 'ByteCnt']",
		label="!(((ByteCnt[15:0] >= 16'h17) & (ByteCnt[15:0] < 16'h17 + 16'd20)))",
		lineno=1528];
	"1528:IF" -> "1529:BL"	 [cond="['ByteCnt', 'ByteCnt']",
		label="((ByteCnt[15:0] >= 16'h17) & (ByteCnt[15:0] < 16'h17 + 16'd20))",
		lineno=1528];
}
