strict digraph "" {
	node [label="\N"];
	"278:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fc3769afc50>",
		fillcolor=turquoise,
		label="278:BL
txDoneTick = 1'b1;
stateNext = start;
sNext = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc3769af750>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc3769af9d0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc3769afb10>]",
		style=filled,
		typ=Block];
	"Leaf_262:AL"	 [def_var="['txDoneTick', 'txNext', 'stateNext', 'nNext', 'sNext', 'bNext']",
		label="Leaf_262:AL"];
	"278:BL" -> "Leaf_262:AL"	 [cond="[]",
		lineno=None];
	"299:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc3775ddad0>",
		fillcolor=cadetblue,
		label="299:BS
sNext = sReg + 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc3775ddad0>]",
		style=filled,
		typ=BlockingSubstitution];
	"299:BS" -> "Leaf_262:AL"	 [cond="[]",
		lineno=None];
	"322:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fc3769aff90>",
		fillcolor=turquoise,
		label="322:BL
txNext = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc3769afe50>]",
		style=filled,
		typ=Block];
	"325:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fc3769affd0>",
		fillcolor=springgreen,
		label="325:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"322:BL" -> "325:IF"	 [cond="[]",
		lineno=None];
	"318:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc3769ce5d0>",
		fillcolor=cadetblue,
		label="318:BS
sNext = sReg + 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc3769ce5d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"318:BS" -> "Leaf_262:AL"	 [cond="[]",
		lineno=None];
	"303:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fc3769cec10>",
		fillcolor=lightcyan,
		label="303:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"303:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fc3769cec90>",
		fillcolor=turquoise,
		label="303:BL
txNext = bReg[0];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc3769cecd0>]",
		style=filled,
		typ=Block];
	"303:CA" -> "303:BL"	 [cond="[]",
		lineno=None];
	"333:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc3769ce110>",
		fillcolor=cadetblue,
		label="333:BS
sNext = sReg + 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc3769ce110>]",
		style=filled,
		typ=BlockingSubstitution];
	"333:BS" -> "Leaf_262:AL"	 [cond="[]",
		lineno=None];
	"263:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fc3769aca90>",
		fillcolor=turquoise,
		label="263:BL
stateNext = stateReg;
sNext = sReg;
bNext = bReg;
nNext = nReg;
txNext = txReg;
txDoneTick = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc3769ac310>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc3769ac450>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc3769ac590>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc3769ac6d0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc3769ac810>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc3769ac950>]",
		style=filled,
		typ=Block];
	"272:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fc3769acad0>",
		fillcolor=linen,
		label="272:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"263:BL" -> "272:CS"	 [cond="[]",
		lineno=None];
	"313:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc3769ce990>",
		fillcolor=cadetblue,
		label="313:BS
stateNext = stop;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc3769ce990>]",
		style=filled,
		typ=BlockingSubstitution];
	"313:BS" -> "Leaf_262:AL"	 [cond="[]",
		lineno=None];
	"326:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fc3769ce0d0>",
		fillcolor=springgreen,
		label="326:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"325:IF" -> "326:IF"	 [cond="['sTick']",
		label=sTick,
		lineno=325];
	"274:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fc3769acc10>",
		fillcolor=turquoise,
		label="274:BL
txNext = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc3769acc50>]",
		style=filled,
		typ=Block];
	"277:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fc3769acdd0>",
		fillcolor=springgreen,
		label="277:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"274:BL" -> "277:IF"	 [cond="[]",
		lineno=None];
	"322:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fc3769cc8d0>",
		fillcolor=lightcyan,
		label="322:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"322:CA" -> "322:BL"	 [cond="[]",
		lineno=None];
	"286:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fc3769ace50>",
		fillcolor=lightcyan,
		label="286:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"286:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fc3769aced0>",
		fillcolor=turquoise,
		label="286:BL
txNext = 0;
txDoneTick = 1'b0;
bNext = din;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc3769acf10>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc3769cc0d0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc3769cc210>]",
		style=filled,
		typ=Block];
	"286:CA" -> "286:BL"	 [cond="[]",
		lineno=None];
	"290:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fc3769cc350>",
		fillcolor=springgreen,
		label="290:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"291:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fc3769cc390>",
		fillcolor=springgreen,
		label="291:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"290:IF" -> "291:IF"	 [cond="['sTick']",
		label=sTick,
		lineno=290];
	"292:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fc3769cc3d0>",
		fillcolor=turquoise,
		label="292:BL
stateNext = data;
sNext = 1'b0;
nNext = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc3769cc410>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc3769cc550>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc3769cc690>]",
		style=filled,
		typ=Block];
	"292:BL" -> "Leaf_262:AL"	 [cond="[]",
		lineno=None];
	"327:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fc3769ce2d0>",
		fillcolor=turquoise,
		label="327:BL
stateNext = idle;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc3769ce310>]",
		style=filled,
		typ=Block];
	"327:BL" -> "Leaf_262:AL"	 [cond="[]",
		lineno=None];
	"306:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fc3769cee90>",
		fillcolor=springgreen,
		label="306:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"307:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fc3769ceed0>",
		fillcolor=springgreen,
		label="307:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"306:IF" -> "307:IF"	 [cond="['sTick']",
		label=sTick,
		lineno=306];
	"308:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fc3769cef10>",
		fillcolor=turquoise,
		label="308:BL
sNext = 0;
bNext = bReg >> 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc3769cef50>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc3769ac0d0>]",
		style=filled,
		typ=Block];
	"312:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fc3769ce790>",
		fillcolor=springgreen,
		label="312:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"308:BL" -> "312:IF"	 [cond="[]",
		lineno=None];
	"272:CS" -> "303:CA"	 [cond="['stateReg']",
		label=stateReg,
		lineno=272];
	"272:CS" -> "322:CA"	 [cond="['stateReg']",
		label=stateReg,
		lineno=272];
	"272:CS" -> "286:CA"	 [cond="['stateReg']",
		label=stateReg,
		lineno=272];
	"274:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fc3769acb90>",
		fillcolor=lightcyan,
		label="274:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"272:CS" -> "274:CA"	 [cond="['stateReg']",
		label=stateReg,
		lineno=272];
	"262:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fc3769cc9d0>",
		clk_sens=False,
		fillcolor=gold,
		label="262:AL",
		sens="['din', 'nReg', 'bReg', 'stop', 'sReg', 'start', 'idle', 'stateReg', 'data', 'txReg']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['din', 'nReg', 'txStart', 'dataBits', 'sbTick', 'stop', 'stateReg', 'start', 'idle', 'sTick', 'sReg', 'data', 'bReg', 'txReg']"];
	"262:AL" -> "263:BL"	 [cond="[]",
		lineno=None];
	"303:BL" -> "306:IF"	 [cond="[]",
		lineno=None];
	"277:IF" -> "278:BL"	 [cond="['txStart']",
		label=txStart,
		lineno=277];
	"315:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc3769ce7d0>",
		fillcolor=cadetblue,
		label="315:BS
nNext = nReg + 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc3769ce7d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"315:BS" -> "Leaf_262:AL"	 [cond="[]",
		lineno=None];
	"291:IF" -> "299:BS"	 [cond="['sReg']",
		label="!((sReg == 15))",
		lineno=291];
	"291:IF" -> "292:BL"	 [cond="['sReg']",
		label="(sReg == 15)",
		lineno=291];
	"312:IF" -> "313:BS"	 [cond="['nReg', 'dataBits']",
		label="(nReg == dataBits - 1)",
		lineno=312];
	"312:IF" -> "315:BS"	 [cond="['nReg', 'dataBits']",
		label="!((nReg == dataBits - 1))",
		lineno=312];
	"286:BL" -> "290:IF"	 [cond="[]",
		lineno=None];
	"307:IF" -> "318:BS"	 [cond="['sReg']",
		label="!((sReg == 15))",
		lineno=307];
	"307:IF" -> "308:BL"	 [cond="['sReg']",
		label="(sReg == 15)",
		lineno=307];
	"326:IF" -> "333:BS"	 [cond="['sReg', 'sbTick']",
		label="!((sReg == sbTick - 1))",
		lineno=326];
	"326:IF" -> "327:BL"	 [cond="['sReg', 'sbTick']",
		label="(sReg == sbTick - 1)",
		lineno=326];
	"274:CA" -> "274:BL"	 [cond="[]",
		lineno=None];
}
