strict digraph "compose( ,  )" {
	node [label="\N"];
	"502:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fac081ef790>",
		fillcolor=firebrick,
		label="502:NS
cnt <= cnt + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fac081ef790>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_490:AL"	 [def_var="['cnt']",
		label="Leaf_490:AL"];
	"502:NS" -> "Leaf_490:AL"	 [cond="[]",
		lineno=None];
	"518:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fac085c6350>",
		clk_sens=True,
		fillcolor=gold,
		label="518:AL",
		sens="['clk', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'write', 'clear', 'full', 'write_pointer']"];
	"519:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fac085c6390>",
		fillcolor=turquoise,
		label="519:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"518:AL" -> "519:BL"	 [cond="[]",
		lineno=None];
	"490:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fac081baa90>",
		clk_sens=True,
		fillcolor=gold,
		label="490:AL",
		sens="['clk', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['read', 'write', 'clear', 'cnt', 'reset']"];
	"491:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fac081baad0>",
		fillcolor=turquoise,
		label="491:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"490:AL" -> "491:BL"	 [cond="[]",
		lineno=None];
	"508:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fac081ef990>",
		fillcolor=springgreen,
		label="508:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"511:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fac081efdd0>",
		fillcolor=springgreen,
		label="511:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"508:IF" -> "511:IF"	 [cond="['reset']",
		label="!(reset)",
		lineno=508];
	"509:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fac081ef950>",
		fillcolor=firebrick,
		label="509:NS
read_pointer <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fac081ef950>]",
		style=filled,
		typ=NonblockingSubstitution];
	"508:IF" -> "509:NS"	 [cond="['reset']",
		label=reset,
		lineno=508];
	"514:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fac085c60d0>",
		fillcolor=springgreen,
		label="514:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"511:IF" -> "514:IF"	 [cond="['clear']",
		label="!(clear)",
		lineno=511];
	"512:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fac081efc90>",
		fillcolor=firebrick,
		label="512:NS
read_pointer <= { { CNT_WIDTH - 2{ 1'b0 } }, read };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fac081efc90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"511:IF" -> "512:NS"	 [cond="['clear']",
		label=clear,
		lineno=511];
	"533:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fac085c9450>",
		def_var="['almost_full']",
		fillcolor=deepskyblue,
		label="533:AS
almost_full = &cnt[CNT_WIDTH-2:0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cnt']"];
	"515:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fac085c6290>",
		fillcolor=firebrick,
		label="515:NS
read_pointer <= read_pointer + 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fac085c6290>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_506:AL"	 [def_var="['read_pointer']",
		label="Leaf_506:AL"];
	"515:NS" -> "Leaf_506:AL"	 [cond="[]",
		lineno=None];
	"527:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fac085c6e10>",
		fillcolor=firebrick,
		label="527:NS
write_pointer <= write_pointer + 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fac085c6e10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_518:AL"	 [def_var="['write_pointer']",
		label="Leaf_518:AL"];
	"527:NS" -> "Leaf_518:AL"	 [cond="[]",
		lineno=None];
	"521:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fac085c6510>",
		fillcolor=firebrick,
		label="521:NS
write_pointer <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fac085c6510>]",
		style=filled,
		typ=NonblockingSubstitution];
	"521:NS" -> "Leaf_518:AL"	 [cond="[]",
		lineno=None];
	"573:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fac085cf310>",
		fillcolor=firebrick,
		label="573:NS
data_out <= fifo[read_pointer];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fac085cf310>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_568:AL"	 [def_var="['data_out']",
		label="Leaf_568:AL"];
	"573:NS" -> "Leaf_568:AL"	 [cond="[]",
		lineno=None];
	"563:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fac085c9bd0>",
		fillcolor=springgreen,
		label="563:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"564:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fac085c9d50>",
		fillcolor=firebrick,
		label="564:NS
fifo[write_pointer] <= data_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fac085c9d50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"563:IF" -> "564:NS"	 [cond="['write', 'full']",
		label="(write & ~full)",
		lineno=563];
	"526:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fac085c6c50>",
		fillcolor=springgreen,
		label="526:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"526:IF" -> "527:NS"	 [cond="['write', 'full']",
		label="(write & ~full)",
		lineno=526];
	"Leaf_558:AL"	 [def_var="['fifo']",
		label="Leaf_558:AL"];
	"568:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fac085c9e50>",
		clk_sens=True,
		fillcolor=gold,
		label="568:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['clear', 'fifo', 'read_pointer']"];
	"Leaf_558:AL" -> "568:AL";
	"Leaf_490:AL" -> "490:AL";
	"Leaf_490:AL" -> "533:AS";
	"531:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fac085c9050>",
		def_var="['almost_empty']",
		fillcolor=deepskyblue,
		label="531:AS
almost_empty = cnt == 1;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cnt']"];
	"Leaf_490:AL" -> "531:AS";
	"530:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fac085c6b90>",
		def_var="['empty']",
		fillcolor=deepskyblue,
		label="530:AS
empty = ~(|cnt);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cnt']"];
	"Leaf_490:AL" -> "530:AS";
	"532:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fac085c9210>",
		def_var="['full']",
		fillcolor=deepskyblue,
		label="532:AS
full = cnt == DEPTH;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cnt']"];
	"Leaf_490:AL" -> "532:AS";
	"524:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fac085c6850>",
		fillcolor=firebrick,
		label="524:NS
write_pointer <= { { CNT_WIDTH - 2{ 1'b0 } }, write };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fac085c6850>]",
		style=filled,
		typ=NonblockingSubstitution];
	"524:NS" -> "Leaf_518:AL"	 [cond="[]",
		lineno=None];
	"499:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fac081ef550>",
		fillcolor=springgreen,
		label="499:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"499:IF" -> "502:NS"	 [cond="['read']",
		label="!(read)",
		lineno=499];
	"500:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fac081ef590>",
		fillcolor=firebrick,
		label="500:NS
cnt <= cnt - 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fac081ef590>]",
		style=filled,
		typ=NonblockingSubstitution];
	"499:IF" -> "500:NS"	 [cond="['read']",
		label=read,
		lineno=499];
	"569:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fac085c9e90>",
		fillcolor=turquoise,
		label="569:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"570:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fac085cf050>",
		fillcolor=springgreen,
		label="570:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"569:BL" -> "570:IF"	 [cond="[]",
		lineno=None];
	"492:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fac081bac50>",
		fillcolor=springgreen,
		label="492:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"491:BL" -> "492:IF"	 [cond="[]",
		lineno=None];
	"564:NS" -> "Leaf_558:AL"	 [cond="[]",
		lineno=None];
	"520:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fac085c6550>",
		fillcolor=springgreen,
		label="520:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"520:IF" -> "521:NS"	 [cond="['reset']",
		label=reset,
		lineno=520];
	"523:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fac085c6990>",
		fillcolor=springgreen,
		label="523:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"520:IF" -> "523:IF"	 [cond="['reset']",
		label="!(reset)",
		lineno=520];
	"495:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fac081ef050>",
		fillcolor=springgreen,
		label="495:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"492:IF" -> "495:IF"	 [cond="['reset']",
		label="!(reset)",
		lineno=492];
	"493:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fac081bac10>",
		fillcolor=firebrick,
		label="493:NS
cnt <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fac081bac10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"492:IF" -> "493:NS"	 [cond="['reset']",
		label=reset,
		lineno=492];
	"568:AL" -> "569:BL"	 [cond="[]",
		lineno=None];
	"570:IF" -> "573:NS"	 [cond="['clear']",
		label="!(clear)",
		lineno=570];
	"571:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fac085cf0d0>",
		fillcolor=firebrick,
		label="571:NS
data_out <= fifo[0];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fac085cf0d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"570:IF" -> "571:NS"	 [cond="['clear']",
		label=clear,
		lineno=570];
	"571:NS" -> "Leaf_568:AL"	 [cond="[]",
		lineno=None];
	"514:IF" -> "515:NS"	 [cond="['read', 'empty']",
		label="(read & ~empty)",
		lineno=514];
	"558:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fac085c9690>",
		clk_sens=True,
		fillcolor=gold,
		label="558:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['write', 'clear', 'full', 'data_in']"];
	"559:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fac085c96d0>",
		fillcolor=turquoise,
		label="559:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"558:AL" -> "559:BL"	 [cond="[]",
		lineno=None];
	"500:NS" -> "Leaf_490:AL"	 [cond="[]",
		lineno=None];
	"Leaf_518:AL" -> "518:AL";
	"507:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fac081ef750>",
		fillcolor=turquoise,
		label="507:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"507:BL" -> "508:IF"	 [cond="[]",
		lineno=None];
	"523:IF" -> "526:IF"	 [cond="['clear']",
		label="!(clear)",
		lineno=523];
	"523:IF" -> "524:NS"	 [cond="['clear']",
		label=clear,
		lineno=523];
	"Leaf_506:AL" -> "568:AL";
	"506:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fac081ef610>",
		clk_sens=True,
		fillcolor=gold,
		label="506:AL",
		sens="['clk', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'read', 'clear', 'empty', 'read_pointer']"];
	"Leaf_506:AL" -> "506:AL";
	"496:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fac081ef110>",
		fillcolor=firebrick,
		label="496:NS
cnt <= { { CNT_WIDTH - 1{ 1'b0 } }, read ^ write };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fac081ef110>]",
		style=filled,
		typ=NonblockingSubstitution];
	"495:IF" -> "496:NS"	 [cond="['clear']",
		label=clear,
		lineno=495];
	"498:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fac081ef310>",
		fillcolor=springgreen,
		label="498:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"495:IF" -> "498:IF"	 [cond="['clear']",
		label="!(clear)",
		lineno=495];
	"496:NS" -> "Leaf_490:AL"	 [cond="[]",
		lineno=None];
	"560:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fac085c9990>",
		fillcolor=springgreen,
		label="560:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"560:IF" -> "563:IF"	 [cond="['write', 'clear']",
		label="!((write & clear))",
		lineno=560];
	"561:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fac085c9950>",
		fillcolor=firebrick,
		label="561:NS
fifo[0] <= data_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fac085c9950>]",
		style=filled,
		typ=NonblockingSubstitution];
	"560:IF" -> "561:NS"	 [cond="['write', 'clear']",
		label="(write & clear)",
		lineno=560];
	"519:BL" -> "520:IF"	 [cond="[]",
		lineno=None];
	"530:AS" -> "506:AL";
	"532:AS" -> "518:AL";
	"532:AS" -> "558:AL";
	"493:NS" -> "Leaf_490:AL"	 [cond="[]",
		lineno=None];
	"498:IF" -> "499:IF"	 [cond="['read', 'write']",
		label="(read ^ write)",
		lineno=498];
	"509:NS" -> "Leaf_506:AL"	 [cond="[]",
		lineno=None];
	"559:BL" -> "560:IF"	 [cond="[]",
		lineno=None];
	"506:AL" -> "507:BL"	 [cond="[]",
		lineno=None];
	"512:NS" -> "Leaf_506:AL"	 [cond="[]",
		lineno=None];
	"561:NS" -> "Leaf_558:AL"	 [cond="[]",
		lineno=None];
}
