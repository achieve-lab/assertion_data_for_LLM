strict digraph "compose( ,  )" {
	node [label="\N"];
	"Leaf_772:AL"	 [def_var="['fifo']",
		label="Leaf_772:AL"];
	"782:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37da86af10>",
		clk_sens=False,
		fillcolor=gold,
		label="782:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['clear', 'fifo', 'read_pointer']"];
	"Leaf_772:AL" -> "782:AL";
	"734:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da865610>",
		fillcolor=springgreen,
		label="734:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"735:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da8655d0>",
		fillcolor=firebrick,
		label="735:NS
write_pointer <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da8655d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"734:IF" -> "735:NS"	 [cond="['reset']",
		label=reset,
		lineno=734];
	"737:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da865a50>",
		fillcolor=springgreen,
		label="737:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"734:IF" -> "737:IF"	 [cond="['reset']",
		label="!(reset)",
		lineno=734];
	"733:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da865450>",
		fillcolor=turquoise,
		label="733:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"733:BL" -> "734:IF"	 [cond="[]",
		lineno=None];
	"713:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da492610>",
		fillcolor=springgreen,
		label="713:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"714:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da492650>",
		fillcolor=firebrick,
		label="714:NS
cnt <= cnt - 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da492650>]",
		style=filled,
		typ=NonblockingSubstitution];
	"713:IF" -> "714:NS"	 [cond="['read']",
		label=read,
		lineno=713];
	"716:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da492850>",
		fillcolor=firebrick,
		label="716:NS
cnt <= cnt + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da492850>]",
		style=filled,
		typ=NonblockingSubstitution];
	"713:IF" -> "716:NS"	 [cond="['read']",
		label="!(read)",
		lineno=713];
	"712:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da4923d0>",
		fillcolor=springgreen,
		label="712:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"712:IF" -> "713:IF"	 [cond="['read', 'write']",
		label="(read ^ write)",
		lineno=712];
	"Leaf_732:AL"	 [def_var="['write_pointer']",
		label="Leaf_732:AL"];
	"735:NS" -> "Leaf_732:AL"	 [cond="[]",
		lineno=None];
	"707:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da459cd0>",
		fillcolor=firebrick,
		label="707:NS
cnt <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da459cd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_704:AL"	 [def_var="['cnt']",
		label="Leaf_704:AL"];
	"707:NS" -> "Leaf_704:AL"	 [cond="[]",
		lineno=None];
	"783:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da86af50>",
		fillcolor=turquoise,
		label="783:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"782:AL" -> "783:BL"	 [cond="[]",
		lineno=None];
	"738:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da865910>",
		fillcolor=firebrick,
		label="738:NS
write_pointer <= { { CNT_WIDTH - 2{ 1'b0 } }, write };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da865910>]",
		style=filled,
		typ=NonblockingSubstitution];
	"737:IF" -> "738:NS"	 [cond="['clear']",
		label=clear,
		lineno=737];
	"740:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da865d10>",
		fillcolor=springgreen,
		label="740:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"737:IF" -> "740:IF"	 [cond="['clear']",
		label="!(clear)",
		lineno=737];
	"774:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da86aa50>",
		fillcolor=springgreen,
		label="774:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"775:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da86aa10>",
		fillcolor=firebrick,
		label="775:NS
fifo[0] <= data_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da86aa10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"774:IF" -> "775:NS"	 [cond="['write', 'clear']",
		label="(write & clear)",
		lineno=774];
	"777:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da86ac90>",
		fillcolor=springgreen,
		label="777:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"774:IF" -> "777:IF"	 [cond="['write', 'clear']",
		label="!((write & clear))",
		lineno=774];
	"729:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da865350>",
		fillcolor=firebrick,
		label="729:NS
read_pointer <= read_pointer + 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da865350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_720:AL"	 [def_var="['read_pointer']",
		label="Leaf_720:AL"];
	"729:NS" -> "Leaf_720:AL"	 [cond="[]",
		lineno=None];
	"741:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da865ed0>",
		fillcolor=firebrick,
		label="741:NS
write_pointer <= write_pointer + 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da865ed0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"741:NS" -> "Leaf_732:AL"	 [cond="[]",
		lineno=None];
	"747:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37da86a510>",
		def_var="['almost_full']",
		fillcolor=deepskyblue,
		label="747:AS
almost_full = &cnt[CNT_WIDTH-2:0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cnt']"];
	"706:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da459d10>",
		fillcolor=springgreen,
		label="706:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"706:IF" -> "707:NS"	 [cond="['reset']",
		label=reset,
		lineno=706];
	"709:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da492150>",
		fillcolor=springgreen,
		label="709:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"706:IF" -> "709:IF"	 [cond="['reset']",
		label="!(reset)",
		lineno=706];
	"705:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da459b90>",
		fillcolor=turquoise,
		label="705:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"705:BL" -> "706:IF"	 [cond="[]",
		lineno=None];
	"784:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da434110>",
		fillcolor=springgreen,
		label="784:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"783:BL" -> "784:IF"	 [cond="[]",
		lineno=None];
	"732:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37da865410>",
		clk_sens=False,
		fillcolor=gold,
		label="732:AL",
		sens="['clk', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'write', 'clear', 'full', 'write_pointer']"];
	"732:AL" -> "733:BL"	 [cond="[]",
		lineno=None];
	"775:NS" -> "Leaf_772:AL"	 [cond="[]",
		lineno=None];
	"787:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4343d0>",
		fillcolor=firebrick,
		label="787:NS
data_out <= fifo[read_pointer];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4343d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_782:AL"	 [def_var="['data_out']",
		label="Leaf_782:AL"];
	"787:NS" -> "Leaf_782:AL"	 [cond="[]",
		lineno=None];
	"714:NS" -> "Leaf_704:AL"	 [cond="[]",
		lineno=None];
	"778:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da86ae10>",
		fillcolor=firebrick,
		label="778:NS
fifo[write_pointer] <= data_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da86ae10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"778:NS" -> "Leaf_772:AL"	 [cond="[]",
		lineno=None];
	"Leaf_720:AL" -> "782:AL";
	"720:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37da4926d0>",
		clk_sens=False,
		fillcolor=gold,
		label="720:AL",
		sens="['clk', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'read', 'clear', 'read_pointer', 'empty']"];
	"Leaf_720:AL" -> "720:AL";
	"721:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da492810>",
		fillcolor=turquoise,
		label="721:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"720:AL" -> "721:BL"	 [cond="[]",
		lineno=None];
	"738:NS" -> "Leaf_732:AL"	 [cond="[]",
		lineno=None];
	"723:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da492a10>",
		fillcolor=firebrick,
		label="723:NS
read_pointer <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da492a10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"723:NS" -> "Leaf_720:AL"	 [cond="[]",
		lineno=None];
	"784:IF" -> "787:NS"	 [cond="['clear']",
		label="!(clear)",
		lineno=784];
	"785:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da434190>",
		fillcolor=firebrick,
		label="785:NS
data_out <= fifo[0];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da434190>]",
		style=filled,
		typ=NonblockingSubstitution];
	"784:IF" -> "785:NS"	 [cond="['clear']",
		label=clear,
		lineno=784];
	"709:IF" -> "712:IF"	 [cond="['clear']",
		label="!(clear)",
		lineno=709];
	"710:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4921d0>",
		fillcolor=firebrick,
		label="710:NS
cnt <= { { CNT_WIDTH - 1{ 1'b0 } }, read ^ write };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4921d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"709:IF" -> "710:NS"	 [cond="['clear']",
		label=clear,
		lineno=709];
	"722:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da492a50>",
		fillcolor=springgreen,
		label="722:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"721:BL" -> "722:IF"	 [cond="[]",
		lineno=None];
	"785:NS" -> "Leaf_782:AL"	 [cond="[]",
		lineno=None];
	"726:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da492d50>",
		fillcolor=firebrick,
		label="726:NS
read_pointer <= { { CNT_WIDTH - 2{ 1'b0 } }, read };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da492d50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"726:NS" -> "Leaf_720:AL"	 [cond="[]",
		lineno=None];
	"777:IF" -> "778:NS"	 [cond="['write', 'full']",
		label="(write & ~full)",
		lineno=777];
	"710:NS" -> "Leaf_704:AL"	 [cond="[]",
		lineno=None];
	"740:IF" -> "741:NS"	 [cond="['write', 'full']",
		label="(write & ~full)",
		lineno=740];
	"744:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37da865c50>",
		def_var="['empty']",
		fillcolor=deepskyblue,
		label="744:AS
empty = ~(|cnt);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cnt']"];
	"744:AS" -> "720:AL";
	"722:IF" -> "723:NS"	 [cond="['reset']",
		label=reset,
		lineno=722];
	"725:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da492e90>",
		fillcolor=springgreen,
		label="725:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"722:IF" -> "725:IF"	 [cond="['reset']",
		label="!(reset)",
		lineno=722];
	"745:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37da86a110>",
		def_var="['almost_empty']",
		fillcolor=deepskyblue,
		label="745:AS
almost_empty = cnt == 1;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cnt']"];
	"728:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da865190>",
		fillcolor=springgreen,
		label="728:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"728:IF" -> "729:NS"	 [cond="['read', 'empty']",
		label="(read & ~empty)",
		lineno=728];
	"746:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37da86a2d0>",
		def_var="['full']",
		fillcolor=deepskyblue,
		label="746:AS
full = cnt == DEPTH;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cnt']"];
	"746:AS" -> "732:AL";
	"772:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37da86a750>",
		clk_sens=False,
		fillcolor=gold,
		label="772:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['write', 'clear', 'full', 'data_in']"];
	"746:AS" -> "772:AL";
	"Leaf_704:AL" -> "747:AS";
	"Leaf_704:AL" -> "744:AS";
	"Leaf_704:AL" -> "745:AS";
	"Leaf_704:AL" -> "746:AS";
	"704:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37da459b50>",
		clk_sens=False,
		fillcolor=gold,
		label="704:AL",
		sens="['clk', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'read', 'clear', 'write', 'cnt']"];
	"Leaf_704:AL" -> "704:AL";
	"773:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da86a790>",
		fillcolor=turquoise,
		label="773:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"773:BL" -> "774:IF"	 [cond="[]",
		lineno=None];
	"772:AL" -> "773:BL"	 [cond="[]",
		lineno=None];
	"725:IF" -> "726:NS"	 [cond="['clear']",
		label=clear,
		lineno=725];
	"725:IF" -> "728:IF"	 [cond="['clear']",
		label="!(clear)",
		lineno=725];
	"Leaf_732:AL" -> "732:AL";
	"716:NS" -> "Leaf_704:AL"	 [cond="[]",
		lineno=None];
	"704:AL" -> "705:BL"	 [cond="[]",
		lineno=None];
}
