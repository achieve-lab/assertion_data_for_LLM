strict digraph "compose( ,  )" {
	node [label="\N"];
	"899:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da437750>",
		fillcolor=turquoise,
		label="899:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"900:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da437910>",
		fillcolor=springgreen,
		label="900:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"899:BL" -> "900:IF"	 [cond="[]",
		lineno=None];
	"Leaf_1024:AL"	 [def_var="['ByteCnt']",
		label="Leaf_1024:AL"];
	"1040:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37da73e190>",
		def_var="['ControlEnd']",
		fillcolor=deepskyblue,
		label="1040:AS
ControlEnd = ByteCnt[5:0] == 6'h22;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ByteCnt']"];
	"Leaf_1024:AL" -> "1040:AS";
	"1072:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37da747f50>",
		clk_sens=True,
		fillcolor=gold,
		label="1072:AL",
		sens="['MTxClk', 'TxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['MuxedCtrlData', 'ByteCnt', 'TxReset']"];
	"Leaf_1024:AL" -> "1072:AL";
	"1044:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37da73e850>",
		clk_sens=False,
		fillcolor=gold,
		label="1044:AL",
		sens="['ByteCnt', 'DlyCrcEn', 'MAC', 'TxPauseTV', 'DlyCrcCnt']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['DlyCrcEn', 'TxPauseTV', 'MAC', 'DlyCrcCnt', 'ByteCnt']"];
	"Leaf_1024:AL" -> "1044:AL";
	"1024:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37da4556d0>",
		clk_sens=True,
		fillcolor=gold,
		label="1024:AL",
		sens="['MTxClk', 'TxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['IncrementByteCnt', 'EnableCnt', 'IncrementByteCntBy2', 'ResetByteCnt', 'ByteCnt', 'TxReset']"];
	"Leaf_1024:AL" -> "1024:AL";
	"970:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da457790>",
		fillcolor=turquoise,
		label="970:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"971:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da4579d0>",
		fillcolor=springgreen,
		label="971:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"970:BL" -> "971:IF"	 [cond="[]",
		lineno=None];
	"1066:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da747650>",
		fillcolor=cadetblue,
		label="1066:BS
MuxedCtrlData[7:0] = TxPauseTV[15:8];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da747650>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_1044:AL"	 [def_var="['MuxedCtrlData']",
		label="Leaf_1044:AL"];
	"1066:BS" -> "Leaf_1044:AL"	 [cond="[]",
		lineno=None];
	"964:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da457590>",
		fillcolor=springgreen,
		label="964:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"965:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da457690>",
		fillcolor=firebrick,
		label="965:NS
SendingCtrlFrm <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da457690>]",
		style=filled,
		typ=NonblockingSubstitution];
	"964:IF" -> "965:NS"	 [cond="['TxDoneIn']",
		label=TxDoneIn,
		lineno=964];
	"947:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da42cad0>",
		fillcolor=firebrick,
		label="947:NS
CtrlMux <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da42cad0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_941:AL"	 [def_var="['CtrlMux']",
		label="Leaf_941:AL"];
	"947:NS" -> "Leaf_941:AL"	 [cond="[]",
		lineno=None];
	"974:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da457b10>",
		fillcolor=firebrick,
		label="974:NS
TxUsedDataIn_q <= TxUsedDataIn;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da457b10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_969:AL"	 [def_var="['TxUsedDataIn_q']",
		label="Leaf_969:AL"];
	"974:NS" -> "Leaf_969:AL"	 [cond="[]",
		lineno=None];
	"1065:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da7472d0>",
		fillcolor=cadetblue,
		label="1065:BS
MuxedCtrlData[7:0] = 8'h01;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da7472d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"1065:BS" -> "Leaf_1044:AL"	 [cond="[]",
		lineno=None];
	"1052:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da746690>",
		fillcolor=cadetblue,
		label="1052:BS
MuxedCtrlData[7:0] = 8'hC2;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da746690>]",
		style=filled,
		typ=BlockingSubstitution];
	"1052:BS" -> "Leaf_1044:AL"	 [cond="[]",
		lineno=None];
	"Leaf_956:AL"	 [def_var="['SendingCtrlFrm']",
		label="Leaf_956:AL"];
	"965:NS" -> "Leaf_956:AL"	 [cond="[]",
		lineno=None];
	"1047:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da73e650>",
		fillcolor=lightcyan,
		label="1047:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1047:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da7460d0>",
		fillcolor=springgreen,
		label="1047:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1047:CA" -> "1047:IF"	 [cond="[]",
		lineno=None];
	"1057:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da74f710>",
		fillcolor=cadetblue,
		label="1057:BS
MuxedCtrlData[7:0] = MAC[39:32];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da74f710>]",
		style=filled,
		typ=BlockingSubstitution];
	"1057:BS" -> "Leaf_1044:AL"	 [cond="[]",
		lineno=None];
	"1061:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da74d550>",
		fillcolor=lightcyan,
		label="1061:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1061:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da74d650>",
		fillcolor=cadetblue,
		label="1061:BS
MuxedCtrlData[7:0] = MAC[7:0];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da74d650>]",
		style=filled,
		typ=BlockingSubstitution];
	"1061:CA" -> "1061:BS"	 [cond="[]",
		lineno=None];
	"1068:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da747c90>",
		fillcolor=lightcyan,
		label="1068:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1068:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da747d10>",
		fillcolor=cadetblue,
		label="1068:BS
MuxedCtrlData[7:0] = 8'h0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da747d10>]",
		style=filled,
		typ=BlockingSubstitution];
	"1068:CA" -> "1068:BS"	 [cond="[]",
		lineno=None];
	"Leaf_1072:AL"	 [def_var="['ControlData']",
		label="Leaf_1072:AL"];
	"1022:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37da4554d0>",
		def_var="['EnableCnt']",
		fillcolor=deepskyblue,
		label="1022:AS
EnableCnt = ~DlyCrcEn | DlyCrcEn & &DlyCrcCnt[1:0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['DlyCrcEn', 'DlyCrcEn', 'DlyCrcCnt']"];
	"1022:AS" -> "1024:AL";
	"1063:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da74dc10>",
		fillcolor=lightcyan,
		label="1063:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1063:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da74dc90>",
		fillcolor=cadetblue,
		label="1063:BS
MuxedCtrlData[7:0] = 8'h08;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da74dc90>]",
		style=filled,
		typ=BlockingSubstitution];
	"1063:CA" -> "1063:BS"	 [cond="[]",
		lineno=None];
	"901:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4378d0>",
		fillcolor=firebrick,
		label="901:NS
WillSendControlFrame <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4378d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"900:IF" -> "901:NS"	 [cond="['TxReset']",
		label=TxReset,
		lineno=900];
	"903:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da437c90>",
		fillcolor=springgreen,
		label="903:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"900:IF" -> "903:IF"	 [cond="['TxReset']",
		label="!(TxReset)",
		lineno=900];
	"1054:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da746c10>",
		fillcolor=lightcyan,
		label="1054:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1054:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da746c90>",
		fillcolor=cadetblue,
		label="1054:BS
MuxedCtrlData[7:0] = 8'h00;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da746c90>]",
		style=filled,
		typ=BlockingSubstitution];
	"1054:CA" -> "1054:BS"	 [cond="[]",
		lineno=None];
	"1059:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da74fe90>",
		fillcolor=cadetblue,
		label="1059:BS
MuxedCtrlData[7:0] = MAC[23:16];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da74fe90>]",
		style=filled,
		typ=BlockingSubstitution];
	"1059:BS" -> "Leaf_1044:AL"	 [cond="[]",
		lineno=None];
	"1066:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da747550>",
		fillcolor=lightcyan,
		label="1066:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1066:CA" -> "1066:BS"	 [cond="[]",
		lineno=None];
	"Leaf_1044:AL" -> "1072:AL";
	"950:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da42cd50>",
		fillcolor=firebrick,
		label="950:NS
CtrlMux <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da42cd50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"950:NS" -> "Leaf_941:AL"	 [cond="[]",
		lineno=None];
	"957:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da42ce50>",
		fillcolor=turquoise,
		label="957:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"958:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da42cf90>",
		fillcolor=springgreen,
		label="958:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"957:BL" -> "958:IF"	 [cond="[]",
		lineno=None];
	"1027:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da455850>",
		fillcolor=firebrick,
		label="1027:NS
ByteCnt <= 6'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da455850>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1027:NS" -> "Leaf_1024:AL"	 [cond="[]",
		lineno=None];
	"915:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da42f210>",
		fillcolor=firebrick,
		label="915:NS
TxCtrlStartFrm <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da42f210>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_912:AL"	 [def_var="['TxCtrlStartFrm']",
		label="Leaf_912:AL"];
	"915:NS" -> "Leaf_912:AL"	 [cond="[]",
		lineno=None];
	"1078:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da751690>",
		fillcolor=firebrick,
		label="1078:NS
ControlData[7:0] <= MuxedCtrlData[7:0];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da751690>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1078:NS" -> "Leaf_1072:AL"	 [cond="[]",
		lineno=None];
	"914:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da42f250>",
		fillcolor=springgreen,
		label="914:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"914:IF" -> "915:NS"	 [cond="['TxReset']",
		label=TxReset,
		lineno=914];
	"917:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da42f5d0>",
		fillcolor=springgreen,
		label="917:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"914:IF" -> "917:IF"	 [cond="['TxReset']",
		label="!(TxReset)",
		lineno=914];
	"1063:BS" -> "Leaf_1044:AL"	 [cond="[]",
		lineno=None];
	"1057:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da74f610>",
		fillcolor=lightcyan,
		label="1057:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1057:CA" -> "1057:BS"	 [cond="[]",
		lineno=None];
	"1029:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da455b50>",
		fillcolor=springgreen,
		label="1029:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1032:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da455e50>",
		fillcolor=springgreen,
		label="1032:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1029:IF" -> "1032:IF"	 [cond="['ResetByteCnt']",
		label="!(ResetByteCnt)",
		lineno=1029];
	"1030:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da455b10>",
		fillcolor=firebrick,
		label="1030:NS
ByteCnt <= 6'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da455b10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1029:IF" -> "1030:NS"	 [cond="['ResetByteCnt']",
		label=ResetByteCnt,
		lineno=1029];
	"Leaf_898:AL"	 [def_var="['WillSendControlFrame']",
		label="Leaf_898:AL"];
	"901:NS" -> "Leaf_898:AL"	 [cond="[]",
		lineno=None];
	"946:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da42cb10>",
		fillcolor=springgreen,
		label="946:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"946:IF" -> "947:NS"	 [cond="['WillSendControlFrame', 'TxUsedDataOut']",
		label="(WillSendControlFrame & ~TxUsedDataOut)",
		lineno=946];
	"949:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da42cc10>",
		fillcolor=springgreen,
		label="949:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"946:IF" -> "949:IF"	 [cond="['WillSendControlFrame', 'TxUsedDataOut']",
		label="!((WillSendControlFrame & ~TxUsedDataOut))",
		lineno=946];
	"1067:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da747a10>",
		fillcolor=cadetblue,
		label="1067:BS
MuxedCtrlData[7:0] = TxPauseTV[7:0];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da747a10>]",
		style=filled,
		typ=BlockingSubstitution];
	"1067:BS" -> "Leaf_1044:AL"	 [cond="[]",
		lineno=None];
	"1013:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da456350>",
		fillcolor=springgreen,
		label="1013:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1014:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da456510>",
		fillcolor=firebrick,
		label="1014:NS
DlyCrcCnt <= DlyCrcCnt + 4'd1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da456510>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1013:IF" -> "1014:NS"	 [cond="['IncrementDlyCrcCnt']",
		label=IncrementDlyCrcCnt,
		lineno=1013];
	"1019:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37da456c90>",
		def_var="['IncrementByteCnt']",
		fillcolor=deepskyblue,
		label="1019:AS
IncrementByteCnt = CtrlMux & (TxCtrlStartFrm & ~TxCtrlStartFrm_q & ~TxUsedDataIn | TxUsedDataIn & ~ControlEnd);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['CtrlMux', 'TxCtrlStartFrm', 'TxCtrlStartFrm_q', 'TxUsedDataIn', 'TxUsedDataIn', 'ControlEnd']"];
	"1019:AS" -> "1024:AL";
	"956:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37da42ce10>",
		clk_sens=True,
		fillcolor=gold,
		label="956:AL",
		sens="['MTxClk', 'TxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['WillSendControlFrame', 'TxCtrlStartFrm', 'TxReset', 'TxDoneIn']"];
	"956:AL" -> "957:BL"	 [cond="[]",
		lineno=None];
	"1061:BS" -> "Leaf_1044:AL"	 [cond="[]",
		lineno=None];
	"1064:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da74df10>",
		fillcolor=lightcyan,
		label="1064:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1064:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da74df90>",
		fillcolor=cadetblue,
		label="1064:BS
MuxedCtrlData[7:0] = 8'h00;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da74df90>]",
		style=filled,
		typ=BlockingSubstitution];
	"1064:CA" -> "1064:BS"	 [cond="[]",
		lineno=None];
	"1073:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da747f90>",
		fillcolor=turquoise,
		label="1073:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1074:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da751210>",
		fillcolor=springgreen,
		label="1074:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1073:BL" -> "1074:IF"	 [cond="[]",
		lineno=None];
	"1045:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da73e810>",
		fillcolor=turquoise,
		label="1045:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1046:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f37da747ad0>",
		fillcolor=linen,
		label="1046:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"1045:BL" -> "1046:CS"	 [cond="[]",
		lineno=None];
	"1075:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da7511d0>",
		fillcolor=firebrick,
		label="1075:NS
ControlData[7:0] <= 8'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da7511d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1074:IF" -> "1075:NS"	 [cond="['TxReset']",
		label=TxReset,
		lineno=1074];
	"1077:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da751550>",
		fillcolor=springgreen,
		label="1077:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1074:IF" -> "1077:IF"	 [cond="['TxReset']",
		label="!(TxReset)",
		lineno=1074];
	"1060:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da74d290>",
		fillcolor=cadetblue,
		label="1060:BS
MuxedCtrlData[7:0] = MAC[15:8];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da74d290>]",
		style=filled,
		typ=BlockingSubstitution];
	"1060:BS" -> "Leaf_1044:AL"	 [cond="[]",
		lineno=None];
	"1040:AS" -> "1019:AS";
	"994:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37da4532d0>",
		clk_sens=True,
		fillcolor=gold,
		label="994:AL",
		sens="['MTxClk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['TxCtrlStartFrm', 'ControlEnd']"];
	"1040:AS" -> "994:AL";
	"927:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37da42fd10>",
		clk_sens=True,
		fillcolor=gold,
		label="927:AL",
		sens="['MTxClk', 'TxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['ControlEnd_q', 'ControlEnd', 'TxReset']"];
	"1040:AS" -> "927:AL";
	"1050:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da746150>",
		fillcolor=cadetblue,
		label="1050:BS
MuxedCtrlData[7:0] = 8'h0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da746150>]",
		style=filled,
		typ=BlockingSubstitution];
	"1047:IF" -> "1050:BS"	 [cond="['DlyCrcEn', 'DlyCrcEn', 'DlyCrcCnt']",
		label="!((~DlyCrcEn | DlyCrcEn & &DlyCrcCnt[1:0]))",
		lineno=1047];
	"1048:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da73ee90>",
		fillcolor=cadetblue,
		label="1048:BS
MuxedCtrlData[7:0] = 8'h01;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da73ee90>]",
		style=filled,
		typ=BlockingSubstitution];
	"1047:IF" -> "1048:BS"	 [cond="['DlyCrcEn', 'DlyCrcEn', 'DlyCrcCnt']",
		label="(~DlyCrcEn | DlyCrcEn & &DlyCrcCnt[1:0])",
		lineno=1047];
	"995:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da453610>",
		fillcolor=turquoise,
		label="995:BL
ControlEnd_q <= ControlEnd;
TxCtrlStartFrm_q <= TxCtrlStartFrm;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da453550>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f37da453750>]",
		style=filled,
		typ=Block];
	"994:AL" -> "995:BL"	 [cond="[]",
		lineno=None];
	"1072:AL" -> "1073:BL"	 [cond="[]",
		lineno=None];
	"1051:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da7463d0>",
		fillcolor=cadetblue,
		label="1051:BS
MuxedCtrlData[7:0] = 8'h80;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da7463d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"1051:BS" -> "Leaf_1044:AL"	 [cond="[]",
		lineno=None];
	"929:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da42ff10>",
		fillcolor=springgreen,
		label="929:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"932:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da42c350>",
		fillcolor=springgreen,
		label="932:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"929:IF" -> "932:IF"	 [cond="['TxReset']",
		label="!(TxReset)",
		lineno=929];
	"930:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da42fed0>",
		fillcolor=firebrick,
		label="930:NS
TxCtrlEndFrm <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da42fed0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"929:IF" -> "930:NS"	 [cond="['TxReset']",
		label=TxReset,
		lineno=929];
	"1033:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da455f90>",
		fillcolor=firebrick,
		label="1033:NS
ByteCnt <= ByteCnt[5:0] + 6'd2;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da455f90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1032:IF" -> "1033:NS"	 [cond="['IncrementByteCntBy2', 'EnableCnt']",
		label="(IncrementByteCntBy2 & EnableCnt)",
		lineno=1032];
	"1035:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da73e1d0>",
		fillcolor=springgreen,
		label="1035:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1032:IF" -> "1035:IF"	 [cond="['IncrementByteCntBy2', 'EnableCnt']",
		label="!((IncrementByteCntBy2 & EnableCnt))",
		lineno=1032];
	"935:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da42c450>",
		fillcolor=firebrick,
		label="935:NS
TxCtrlEndFrm <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da42c450>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_927:AL"	 [def_var="['TxCtrlEndFrm']",
		label="Leaf_927:AL"];
	"935:NS" -> "Leaf_927:AL"	 [cond="[]",
		lineno=None];
	"1054:BS" -> "Leaf_1044:AL"	 [cond="[]",
		lineno=None];
	"1062:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da74d910>",
		fillcolor=lightcyan,
		label="1062:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1062:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da74d990>",
		fillcolor=cadetblue,
		label="1062:BS
MuxedCtrlData[7:0] = 8'h88;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da74d990>]",
		style=filled,
		typ=BlockingSubstitution];
	"1062:CA" -> "1062:BS"	 [cond="[]",
		lineno=None];
	"969:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37da457750>",
		clk_sens=True,
		fillcolor=gold,
		label="969:AL",
		sens="['MTxClk', 'TxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['TxUsedDataIn', 'TxReset']"];
	"969:AL" -> "970:BL"	 [cond="[]",
		lineno=None];
	"907:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da437f90>",
		fillcolor=firebrick,
		label="907:NS
WillSendControlFrame <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da437f90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"907:NS" -> "Leaf_898:AL"	 [cond="[]",
		lineno=None];
	"912:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37da42f050>",
		clk_sens=True,
		fillcolor=gold,
		label="912:AL",
		sens="['MTxClk', 'TxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['WillSendControlFrame', 'TxStartFrmIn', 'TxDoneIn', 'TxAbortIn', 'TxUsedDataIn_q', 'TxUsedDataOutDetected', 'CtrlMux', 'TxUsedDataOut', '\
TxReset']"];
	"913:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da437fd0>",
		fillcolor=turquoise,
		label="913:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"912:AL" -> "913:BL"	 [cond="[]",
		lineno=None];
	"962:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4573d0>",
		fillcolor=firebrick,
		label="962:NS
SendingCtrlFrm <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4573d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"962:NS" -> "Leaf_956:AL"	 [cond="[]",
		lineno=None];
	"1065:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da747250>",
		fillcolor=lightcyan,
		label="1065:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1065:CA" -> "1065:BS"	 [cond="[]",
		lineno=None];
	"943:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da42c750>",
		fillcolor=springgreen,
		label="943:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"943:IF" -> "946:IF"	 [cond="['TxReset']",
		label="!(TxReset)",
		lineno=943];
	"944:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da42c710>",
		fillcolor=firebrick,
		label="944:NS
CtrlMux <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da42c710>]",
		style=filled,
		typ=NonblockingSubstitution];
	"943:IF" -> "944:NS"	 [cond="['TxReset']",
		label=TxReset,
		lineno=943];
	"1046:CS" -> "1047:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1046];
	"1046:CS" -> "1061:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1046];
	"1046:CS" -> "1068:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1046];
	"1046:CS" -> "1063:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1046];
	"1046:CS" -> "1054:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1046];
	"1046:CS" -> "1066:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1046];
	"1046:CS" -> "1057:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1046];
	"1046:CS" -> "1064:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1046];
	"1046:CS" -> "1062:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1046];
	"1046:CS" -> "1065:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1046];
	"1052:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da746610>",
		fillcolor=lightcyan,
		label="1052:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1046:CS" -> "1052:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1046];
	"1060:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da74d190>",
		fillcolor=lightcyan,
		label="1060:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1046:CS" -> "1060:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1046];
	"1055:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da746f10>",
		fillcolor=lightcyan,
		label="1055:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1046:CS" -> "1055:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1046];
	"1053:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da746910>",
		fillcolor=lightcyan,
		label="1053:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1046:CS" -> "1053:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1046];
	"1067:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da747910>",
		fillcolor=lightcyan,
		label="1067:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1046:CS" -> "1067:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1046];
	"1056:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da74f250>",
		fillcolor=lightcyan,
		label="1056:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1046:CS" -> "1056:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1046];
	"1059:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da74fd90>",
		fillcolor=lightcyan,
		label="1059:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1046:CS" -> "1059:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1046];
	"1051:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da746350>",
		fillcolor=lightcyan,
		label="1051:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1046:CS" -> "1051:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1046];
	"1058:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da74f9d0>",
		fillcolor=lightcyan,
		label="1058:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1046:CS" -> "1058:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1046];
	"1052:CA" -> "1052:BS"	 [cond="[]",
		lineno=None];
	"933:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da42c290>",
		fillcolor=firebrick,
		label="933:NS
TxCtrlEndFrm <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da42c290>]",
		style=filled,
		typ=NonblockingSubstitution];
	"933:NS" -> "Leaf_927:AL"	 [cond="[]",
		lineno=None];
	"1060:CA" -> "1060:BS"	 [cond="[]",
		lineno=None];
	"932:IF" -> "935:NS"	 [cond="['ControlEnd', 'ControlEnd_q']",
		label="!((ControlEnd | ControlEnd_q))",
		lineno=932];
	"932:IF" -> "933:NS"	 [cond="['ControlEnd', 'ControlEnd_q']",
		label="(ControlEnd | ControlEnd_q)",
		lineno=932];
	"1068:BS" -> "Leaf_1044:AL"	 [cond="[]",
		lineno=None];
	"1006:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da453d90>",
		fillcolor=turquoise,
		label="1006:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1007:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da453f10>",
		fillcolor=springgreen,
		label="1007:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1006:BL" -> "1007:IF"	 [cond="[]",
		lineno=None];
	"1033:NS" -> "Leaf_1024:AL"	 [cond="[]",
		lineno=None];
	"1010:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da456210>",
		fillcolor=springgreen,
		label="1010:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1007:IF" -> "1010:IF"	 [cond="['TxReset']",
		label="!(TxReset)",
		lineno=1007];
	"1008:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da453ed0>",
		fillcolor=firebrick,
		label="1008:NS
DlyCrcCnt <= 4'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da453ed0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1007:IF" -> "1008:NS"	 [cond="['TxReset']",
		label=TxReset,
		lineno=1007];
	"983:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da457ed0>",
		fillcolor=springgreen,
		label="983:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"984:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da457e90>",
		fillcolor=firebrick,
		label="984:NS
BlockTxDone <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da457e90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"983:IF" -> "984:NS"	 [cond="['TxReset']",
		label=TxReset,
		lineno=983];
	"986:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da4531d0>",
		fillcolor=springgreen,
		label="986:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"983:IF" -> "986:IF"	 [cond="['TxReset']",
		label="!(TxReset)",
		lineno=983];
	"944:NS" -> "Leaf_941:AL"	 [cond="[]",
		lineno=None];
	"961:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da457410>",
		fillcolor=springgreen,
		label="961:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"961:IF" -> "964:IF"	 [cond="['WillSendControlFrame', 'TxCtrlStartFrm']",
		label="!((WillSendControlFrame & TxCtrlStartFrm))",
		lineno=961];
	"961:IF" -> "962:NS"	 [cond="['WillSendControlFrame', 'TxCtrlStartFrm']",
		label="(WillSendControlFrame & TxCtrlStartFrm)",
		lineno=961];
	"1010:IF" -> "1013:IF"	 [cond="['ResetByteCnt']",
		label="!(ResetByteCnt)",
		lineno=1010];
	"1011:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4561d0>",
		fillcolor=firebrick,
		label="1011:NS
DlyCrcCnt <= 4'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4561d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1010:IF" -> "1011:NS"	 [cond="['ResetByteCnt']",
		label=ResetByteCnt,
		lineno=1010];
	"Leaf_912:AL" -> "1019:AS";
	"Leaf_912:AL" -> "956:AL";
	"Leaf_912:AL" -> "994:AL";
	"981:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37da457d10>",
		clk_sens=True,
		fillcolor=gold,
		label="981:AL",
		sens="['MTxClk', 'TxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['TxCtrlStartFrm', 'TxStartFrmIn', 'TxReset']"];
	"Leaf_912:AL" -> "981:AL";
	"1018:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37da456790>",
		def_var="['ResetByteCnt']",
		fillcolor=deepskyblue,
		label="1018:AS
ResetByteCnt = TxReset | ~TxCtrlStartFrm & (TxDoneIn | TxAbortIn);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['TxReset', 'TxCtrlStartFrm', 'TxDoneIn', 'TxAbortIn']"];
	"Leaf_912:AL" -> "1018:AS";
	"1020:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37da455090>",
		def_var="['IncrementByteCntBy2']",
		fillcolor=deepskyblue,
		label="1020:AS
IncrementByteCntBy2 = CtrlMux & TxCtrlStartFrm & ~TxCtrlStartFrm_q & TxUsedDataIn;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['CtrlMux', 'TxCtrlStartFrm', 'TxCtrlStartFrm_q', 'TxUsedDataIn']"];
	"Leaf_912:AL" -> "1020:AS";
	"Leaf_981:AL"	 [def_var="['BlockTxDone']",
		label="Leaf_981:AL"];
	"928:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da42fd50>",
		fillcolor=turquoise,
		label="928:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"927:AL" -> "928:BL"	 [cond="[]",
		lineno=None];
	"Leaf_994:AL"	 [def_var="['ControlEnd_q', 'TxCtrlStartFrm_q']",
		label="Leaf_994:AL"];
	"Leaf_994:AL" -> "1019:AS";
	"Leaf_994:AL" -> "927:AL";
	"Leaf_994:AL" -> "1020:AS";
	"958:IF" -> "961:IF"	 [cond="['TxReset']",
		label="!(TxReset)",
		lineno=958];
	"959:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da42cfd0>",
		fillcolor=firebrick,
		label="959:NS
SendingCtrlFrm <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da42cfd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"958:IF" -> "959:NS"	 [cond="['TxReset']",
		label=TxReset,
		lineno=958];
	"1053:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da746990>",
		fillcolor=cadetblue,
		label="1053:BS
MuxedCtrlData[7:0] = 8'h00;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da746990>]",
		style=filled,
		typ=BlockingSubstitution];
	"1053:BS" -> "Leaf_1044:AL"	 [cond="[]",
		lineno=None];
	"1055:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da746f90>",
		fillcolor=cadetblue,
		label="1055:BS
MuxedCtrlData[7:0] = 8'h01;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da746f90>]",
		style=filled,
		typ=BlockingSubstitution];
	"1055:CA" -> "1055:BS"	 [cond="[]",
		lineno=None];
	"Leaf_1005:AL"	 [def_var="['DlyCrcCnt']",
		label="Leaf_1005:AL"];
	"1008:NS" -> "Leaf_1005:AL"	 [cond="[]",
		lineno=None];
	"1001:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37da453b10>",
		def_var="['IncrementDlyCrcCnt']",
		fillcolor=deepskyblue,
		label="1001:AS
IncrementDlyCrcCnt = CtrlMux & TxUsedDataIn & ~DlyCrcCnt[2];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['CtrlMux', 'TxUsedDataIn', 'DlyCrcCnt']"];
	"1005:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37da453d50>",
		clk_sens=True,
		fillcolor=gold,
		label="1005:AL",
		sens="['MTxClk', 'TxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['IncrementDlyCrcCnt', 'DlyCrcCnt', 'ResetByteCnt', 'TxReset']"];
	"1001:AS" -> "1005:AL";
	"913:BL" -> "914:IF"	 [cond="[]",
		lineno=None];
	"Leaf_1005:AL" -> "1022:AS";
	"Leaf_1005:AL" -> "1001:AS";
	"Leaf_1005:AL" -> "1005:AL";
	"Leaf_1005:AL" -> "1044:AL";
	"959:NS" -> "Leaf_956:AL"	 [cond="[]",
		lineno=None];
	"982:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da457d50>",
		fillcolor=turquoise,
		label="982:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"982:BL" -> "983:IF"	 [cond="[]",
		lineno=None];
	"989:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da453310>",
		fillcolor=springgreen,
		label="989:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"990:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da453450>",
		fillcolor=firebrick,
		label="990:NS
BlockTxDone <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da453450>]",
		style=filled,
		typ=NonblockingSubstitution];
	"989:IF" -> "990:NS"	 [cond="['TxStartFrmIn']",
		label=TxStartFrmIn,
		lineno=989];
	"941:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37da42c590>",
		clk_sens=True,
		fillcolor=gold,
		label="941:AL",
		sens="['MTxClk', 'TxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['WillSendControlFrame', 'TxDoneIn', 'TxUsedDataOut', 'TxReset']"];
	"942:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da42c5d0>",
		fillcolor=turquoise,
		label="942:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"941:AL" -> "942:BL"	 [cond="[]",
		lineno=None];
	"1058:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da74fad0>",
		fillcolor=cadetblue,
		label="1058:BS
MuxedCtrlData[7:0] = MAC[31:24];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da74fad0>]",
		style=filled,
		typ=BlockingSubstitution];
	"1058:BS" -> "Leaf_1044:AL"	 [cond="[]",
		lineno=None];
	"930:NS" -> "Leaf_927:AL"	 [cond="[]",
		lineno=None];
	"1030:NS" -> "Leaf_1024:AL"	 [cond="[]",
		lineno=None];
	"921:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da42fc50>",
		fillcolor=firebrick,
		label="921:NS
TxCtrlStartFrm <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da42fc50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"921:NS" -> "Leaf_912:AL"	 [cond="[]",
		lineno=None];
	"904:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da437c50>",
		fillcolor=firebrick,
		label="904:NS
WillSendControlFrame <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da437c50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"904:NS" -> "Leaf_898:AL"	 [cond="[]",
		lineno=None];
	"918:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da42f590>",
		fillcolor=firebrick,
		label="918:NS
TxCtrlStartFrm <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da42f590>]",
		style=filled,
		typ=NonblockingSubstitution];
	"918:NS" -> "Leaf_912:AL"	 [cond="[]",
		lineno=None];
	"928:BL" -> "929:IF"	 [cond="[]",
		lineno=None];
	"1053:CA" -> "1053:BS"	 [cond="[]",
		lineno=None];
	"1075:NS" -> "Leaf_1072:AL"	 [cond="[]",
		lineno=None];
	"1064:BS" -> "Leaf_1044:AL"	 [cond="[]",
		lineno=None];
	"984:NS" -> "Leaf_981:AL"	 [cond="[]",
		lineno=None];
	"1062:BS" -> "Leaf_1044:AL"	 [cond="[]",
		lineno=None];
	"898:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37da437710>",
		clk_sens=True,
		fillcolor=gold,
		label="898:AL",
		sens="['MTxClk', 'TxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['TxFlow', 'TxCtrlEndFrm', 'CtrlMux', 'TPauseRq', 'TxReset']"];
	"Leaf_927:AL" -> "898:AL";
	"1036:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da73e450>",
		fillcolor=firebrick,
		label="1036:NS
ByteCnt <= ByteCnt[5:0] + 6'd1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da73e450>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1036:NS" -> "Leaf_1024:AL"	 [cond="[]",
		lineno=None];
	"1067:CA" -> "1067:BS"	 [cond="[]",
		lineno=None];
	"1026:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da455890>",
		fillcolor=springgreen,
		label="1026:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1026:IF" -> "1027:NS"	 [cond="['TxReset']",
		label=TxReset,
		lineno=1026];
	"1026:IF" -> "1029:IF"	 [cond="['TxReset']",
		label="!(TxReset)",
		lineno=1026];
	"981:AL" -> "982:BL"	 [cond="[]",
		lineno=None];
	"1056:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da74f350>",
		fillcolor=cadetblue,
		label="1056:BS
MuxedCtrlData[7:0] = MAC[47:40];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da74f350>]",
		style=filled,
		typ=BlockingSubstitution];
	"1056:CA" -> "1056:BS"	 [cond="[]",
		lineno=None];
	"1005:AL" -> "1006:BL"	 [cond="[]",
		lineno=None];
	"917:IF" -> "918:NS"	 [cond="['TxUsedDataIn_q', 'CtrlMux']",
		label="(TxUsedDataIn_q & CtrlMux)",
		lineno=917];
	"920:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da42fb50>",
		fillcolor=springgreen,
		label="920:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"917:IF" -> "920:IF"	 [cond="['TxUsedDataIn_q', 'CtrlMux']",
		label="!((TxUsedDataIn_q & CtrlMux))",
		lineno=917];
	"1050:BS" -> "Leaf_1044:AL"	 [cond="[]",
		lineno=None];
	"972:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da457910>",
		fillcolor=firebrick,
		label="972:NS
TxUsedDataIn_q <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da457910>]",
		style=filled,
		typ=NonblockingSubstitution];
	"972:NS" -> "Leaf_969:AL"	 [cond="[]",
		lineno=None];
	"1059:CA" -> "1059:BS"	 [cond="[]",
		lineno=None];
	"949:IF" -> "950:NS"	 [cond="['TxDoneIn']",
		label=TxDoneIn,
		lineno=949];
	"1044:AL" -> "1045:BL"	 [cond="[]",
		lineno=None];
	"1018:AS" -> "1005:AL";
	"1018:AS" -> "1024:AL";
	"1051:CA" -> "1051:BS"	 [cond="[]",
		lineno=None];
	"987:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da453190>",
		fillcolor=firebrick,
		label="987:NS
BlockTxDone <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da453190>]",
		style=filled,
		typ=NonblockingSubstitution];
	"987:NS" -> "Leaf_981:AL"	 [cond="[]",
		lineno=None];
	"1025:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da455710>",
		fillcolor=turquoise,
		label="1025:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1024:AL" -> "1025:BL"	 [cond="[]",
		lineno=None];
	"990:NS" -> "Leaf_981:AL"	 [cond="[]",
		lineno=None];
	"920:IF" -> "921:NS"	 [cond="['WillSendControlFrame', 'TxUsedDataOut', 'TxDoneIn', 'TxAbortIn', 'TxStartFrmIn', 'TxUsedDataOutDetected']",
		label="(WillSendControlFrame & ~TxUsedDataOut & (TxDoneIn | TxAbortIn | TxStartFrmIn | ~TxUsedDataOutDetected))",
		lineno=920];
	"898:AL" -> "899:BL"	 [cond="[]",
		lineno=None];
	"1077:IF" -> "1078:NS"	 [cond="['ByteCnt']",
		label="(~ByteCnt[0])",
		lineno=1077];
	"1020:AS" -> "1024:AL";
	"1025:BL" -> "1026:IF"	 [cond="[]",
		lineno=None];
	"1055:BS" -> "Leaf_1044:AL"	 [cond="[]",
		lineno=None];
	"1056:BS" -> "Leaf_1044:AL"	 [cond="[]",
		lineno=None];
	"903:IF" -> "904:NS"	 [cond="['TxCtrlEndFrm', 'CtrlMux']",
		label="(TxCtrlEndFrm & CtrlMux)",
		lineno=903];
	"906:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da437e90>",
		fillcolor=springgreen,
		label="906:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"903:IF" -> "906:IF"	 [cond="['TxCtrlEndFrm', 'CtrlMux']",
		label="!((TxCtrlEndFrm & CtrlMux))",
		lineno=903];
	"995:BL" -> "Leaf_994:AL"	 [cond="[]",
		lineno=None];
	"1048:BS" -> "Leaf_1044:AL"	 [cond="[]",
		lineno=None];
	"971:IF" -> "974:NS"	 [cond="['TxReset']",
		label="!(TxReset)",
		lineno=971];
	"971:IF" -> "972:NS"	 [cond="['TxReset']",
		label=TxReset,
		lineno=971];
	"1011:NS" -> "Leaf_1005:AL"	 [cond="[]",
		lineno=None];
	"986:IF" -> "989:IF"	 [cond="['TxCtrlStartFrm']",
		label="!(TxCtrlStartFrm)",
		lineno=986];
	"986:IF" -> "987:NS"	 [cond="['TxCtrlStartFrm']",
		label=TxCtrlStartFrm,
		lineno=986];
	"Leaf_941:AL" -> "1019:AS";
	"Leaf_941:AL" -> "912:AL";
	"Leaf_941:AL" -> "1001:AS";
	"Leaf_941:AL" -> "898:AL";
	"Leaf_941:AL" -> "1020:AS";
	"906:IF" -> "907:NS"	 [cond="['TPauseRq', 'TxFlow']",
		label="(TPauseRq & TxFlow)",
		lineno=906];
	"1058:CA" -> "1058:BS"	 [cond="[]",
		lineno=None];
	"Leaf_898:AL" -> "956:AL";
	"Leaf_898:AL" -> "912:AL";
	"Leaf_898:AL" -> "941:AL";
	"Leaf_969:AL" -> "912:AL";
	"1014:NS" -> "Leaf_1005:AL"	 [cond="[]",
		lineno=None];
	"1035:IF" -> "1036:NS"	 [cond="['IncrementByteCnt', 'EnableCnt']",
		label="(IncrementByteCnt & EnableCnt)",
		lineno=1035];
	"942:BL" -> "943:IF"	 [cond="[]",
		lineno=None];
}
