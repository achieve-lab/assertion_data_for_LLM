strict digraph "" {
	node [label="\N"];
	"Leaf_1024:AL"	 [def_var="['ByteCnt']",
		label="Leaf_1024:AL"];
	"1032:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fb677990>",
		fillcolor=springgreen,
		label="1032:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1033:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fb677d90>",
		fillcolor=firebrick,
		label="1033:NS
ByteCnt <= ByteCnt[5:0] + 6'd2;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fb677d90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1032:IF" -> "1033:NS"	 [cond="['IncrementByteCntBy2', 'EnableCnt']",
		label="(IncrementByteCntBy2 & EnableCnt)",
		lineno=1032];
	"1035:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fb6779d0>",
		fillcolor=springgreen,
		label="1035:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1032:IF" -> "1035:IF"	 [cond="['IncrementByteCntBy2', 'EnableCnt']",
		label="!((IncrementByteCntBy2 & EnableCnt))",
		lineno=1032];
	"1025:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37fb67a150>",
		fillcolor=turquoise,
		label="1025:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1026:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fb67a190>",
		fillcolor=springgreen,
		label="1026:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1025:BL" -> "1026:IF"	 [cond="[]",
		lineno=None];
	"1029:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fb67a1d0>",
		fillcolor=springgreen,
		label="1029:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1029:IF" -> "1032:IF"	 [cond="['ResetByteCnt']",
		label="!(ResetByteCnt)",
		lineno=1029];
	"1030:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fb67a210>",
		fillcolor=firebrick,
		label="1030:NS
ByteCnt <= 6'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fb67a210>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1029:IF" -> "1030:NS"	 [cond="['ResetByteCnt']",
		label=ResetByteCnt,
		lineno=1029];
	"1026:IF" -> "1029:IF"	 [cond="['TxReset']",
		label="!(TxReset)",
		lineno=1026];
	"1027:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fb67a3d0>",
		fillcolor=firebrick,
		label="1027:NS
ByteCnt <= 6'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fb67a3d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1026:IF" -> "1027:NS"	 [cond="['TxReset']",
		label=TxReset,
		lineno=1026];
	"1033:NS" -> "Leaf_1024:AL"	 [cond="[]",
		lineno=None];
	"1024:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37fb67a550>",
		clk_sens=True,
		fillcolor=gold,
		label="1024:AL",
		sens="['MTxClk', 'TxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['IncrementByteCnt', 'EnableCnt', 'IncrementByteCntBy2', 'ResetByteCnt', 'ByteCnt', 'TxReset']"];
	"1024:AL" -> "1025:BL"	 [cond="[]",
		lineno=None];
	"1027:NS" -> "Leaf_1024:AL"	 [cond="[]",
		lineno=None];
	"1036:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fb677a10>",
		fillcolor=firebrick,
		label="1036:NS
ByteCnt <= ByteCnt[5:0] + 6'd1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fb677a10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1035:IF" -> "1036:NS"	 [cond="['IncrementByteCnt', 'EnableCnt']",
		label="(IncrementByteCnt & EnableCnt)",
		lineno=1035];
	"1036:NS" -> "Leaf_1024:AL"	 [cond="[]",
		lineno=None];
	"1030:NS" -> "Leaf_1024:AL"	 [cond="[]",
		lineno=None];
}
