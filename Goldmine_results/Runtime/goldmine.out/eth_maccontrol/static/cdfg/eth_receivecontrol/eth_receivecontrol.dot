strict digraph "compose( ,  )" {
	node [label="\N"];
	"1671:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fba2cb90>",
		fillcolor=springgreen,
		label="1671:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1674:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba2cd50>",
		fillcolor=firebrick,
		label="1674:NS
Divider2 <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba2cd50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1671:IF" -> "1674:NS"	 [cond="['PauseTimer', 'RxFlow']",
		label="!((|PauseTimer[15:0] & RxFlow))",
		lineno=1671];
	"1672:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba2cbd0>",
		fillcolor=firebrick,
		label="1672:NS
Divider2 <= ~Divider2;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba2cbd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1671:IF" -> "1672:NS"	 [cond="['PauseTimer', 'RxFlow']",
		label="(|PauseTimer[15:0] & RxFlow)",
		lineno=1671];
	"1449:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fc5650>",
		fillcolor=firebrick,
		label="1449:NS
AddressOK <= ((RxData[7:0] == ReservedMulticast[39:32]) | (RxData[7:0] == MAC[39:32])) & AddressOK;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fc5650>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_1440:AL"	 [def_var="['AddressOK']",
		label="Leaf_1440:AL"];
	"1449:NS" -> "Leaf_1440:AL"	 [cond="[]",
		lineno=None];
	"Leaf_1683:AL"	 [def_var="['SlotTimer']",
		label="Leaf_1683:AL"];
	"1683:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37fba312d0>",
		clk_sens=False,
		fillcolor=gold,
		label="1683:AL",
		sens="['MRxClk', 'RxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['IncrementSlotTimer', 'RxReset', 'ResetSlotTimer', 'SlotTimer']"];
	"Leaf_1683:AL" -> "1683:AL";
	"1696:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37fba31d90>",
		def_var="['SlotFinished']",
		fillcolor=deepskyblue,
		label="1696:AS
SlotFinished = &SlotTimer[5:0] & IncrementSlotTimer;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['SlotTimer', 'IncrementSlotTimer']"];
	"Leaf_1683:AL" -> "1696:AS";
	"1579:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fc11d0>",
		fillcolor=firebrick,
		label="1579:NS
DlyCrcCnt <= DlyCrcCnt + 3'd1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fc11d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_1570:AL"	 [def_var="['DlyCrcCnt']",
		label="Leaf_1570:AL"];
	"1579:NS" -> "Leaf_1570:AL"	 [cond="[]",
		lineno=None];
	"1631:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba22f90>",
		fillcolor=firebrick,
		label="1631:NS
PauseTimer[15:0] <= PauseTimer[15:0] - 16'd1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba22f90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_1622:AL"	 [def_var="['PauseTimer']",
		label="Leaf_1622:AL"];
	"1631:NS" -> "Leaf_1622:AL"	 [cond="[]",
		lineno=None];
	"1523:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37d9f9b2d0>",
		fillcolor=turquoise,
		label="1523:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1524:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9f9b550>",
		fillcolor=springgreen,
		label="1524:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1523:BL" -> "1524:IF"	 [cond="[]",
		lineno=None];
	"1508:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37d9fcf8d0>",
		fillcolor=turquoise,
		label="1508:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1509:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fcfa90>",
		fillcolor=springgreen,
		label="1509:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1508:BL" -> "1509:IF"	 [cond="[]",
		lineno=None];
	"1548:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fd1950>",
		fillcolor=springgreen,
		label="1548:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1549:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fd1a50>",
		fillcolor=firebrick,
		label="1549:NS
DetectionWindow <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fd1a50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1548:IF" -> "1549:NS"	 [cond="['ReceiveEnd']",
		label=ReceiveEnd,
		lineno=1548];
	"1624:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fba22690>",
		fillcolor=springgreen,
		label="1624:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1625:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba22650>",
		fillcolor=firebrick,
		label="1625:NS
PauseTimer[15:0] <= 16'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba22650>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1624:IF" -> "1625:NS"	 [cond="['RxReset']",
		label=RxReset,
		lineno=1624];
	"1627:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fba22ad0>",
		fillcolor=springgreen,
		label="1627:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1624:IF" -> "1627:IF"	 [cond="['RxReset']",
		label="!(RxReset)",
		lineno=1624];
	"1471:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37d9fc5f50>",
		fillcolor=turquoise,
		label="1471:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1472:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fa9950>",
		fillcolor=springgreen,
		label="1472:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1471:BL" -> "1472:IF"	 [cond="[]",
		lineno=None];
	"1441:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37d9fb5450>",
		fillcolor=turquoise,
		label="1441:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1442:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fb55d0>",
		fillcolor=springgreen,
		label="1442:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1441:BL" -> "1442:IF"	 [cond="[]",
		lineno=None];
	"1625:NS" -> "Leaf_1622:AL"	 [cond="[]",
		lineno=None];
	"1657:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fba28e90>",
		fillcolor=springgreen,
		label="1657:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1658:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba28e50>",
		fillcolor=firebrick,
		label="1658:NS
Pause <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba28e50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1657:IF" -> "1658:NS"	 [cond="['TxReset']",
		label=TxReset,
		lineno=1657];
	"1660:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fba2c190>",
		fillcolor=springgreen,
		label="1660:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1657:IF" -> "1660:IF"	 [cond="['TxReset']",
		label="!(TxReset)",
		lineno=1657];
	"1575:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fb7cd0>",
		fillcolor=springgreen,
		label="1575:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1576:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fb7c90>",
		fillcolor=firebrick,
		label="1576:NS
DlyCrcCnt <= 3'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fb7c90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1575:IF" -> "1576:NS"	 [cond="['RxValid', 'RxEndFrm']",
		label="(RxValid & RxEndFrm)",
		lineno=1575];
	"1578:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fb7fd0>",
		fillcolor=springgreen,
		label="1578:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1575:IF" -> "1578:IF"	 [cond="['RxValid', 'RxEndFrm']",
		label="!((RxValid & RxEndFrm))",
		lineno=1575];
	"1686:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba31510>",
		fillcolor=firebrick,
		label="1686:NS
SlotTimer[5:0] <= 6'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba31510>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1686:NS" -> "Leaf_1683:AL"	 [cond="[]",
		lineno=None];
	"1597:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fa1250>",
		fillcolor=springgreen,
		label="1597:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1598:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fa1410>",
		fillcolor=firebrick,
		label="1598:NS
ByteCnt[4:0] <= ByteCnt[4:0] + 5'd1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fa1410>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1597:IF" -> "1598:NS"	 [cond="['IncrementByteCnt']",
		label=IncrementByteCnt,
		lineno=1597];
	"1510:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fcfa50>",
		fillcolor=firebrick,
		label="1510:NS
ReceivedPauseFrmWAddr <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fcfa50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_1507:AL"	 [def_var="['ReceivedPauseFrmWAddr']",
		label="Leaf_1507:AL"];
	"1510:NS" -> "Leaf_1507:AL"	 [cond="[]",
		lineno=None];
	"1555:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37d9fd1b10>",
		clk_sens=False,
		fillcolor=gold,
		label="1555:AL",
		sens="['MRxClk', 'RxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['ReceiveEnd', 'ByteCntEq18', 'AssembledTimerValue', 'RxReset', 'ReceivedPauseFrmWAddr', 'DetectionWindow']"];
	"1556:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37d9fd1b50>",
		fillcolor=turquoise,
		label="1556:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1555:AL" -> "1556:BL"	 [cond="[]",
		lineno=None];
	"1603:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37d9fa1850>",
		def_var="['ByteCntEq1']",
		fillcolor=deepskyblue,
		label="1603:AS
ByteCntEq1 = RxValid & (ByteCnt[4:0] == 5'h1);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxValid', 'ByteCnt']"];
	"1440:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37d9fb5410>",
		clk_sens=False,
		fillcolor=gold,
		label="1440:AL",
		sens="['MRxClk', 'RxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['ReservedMulticast', 'ReceiveEnd', 'ByteCntEq5', 'MAC', 'RxData', 'ByteCntEq3', 'RxReset', 'ByteCntEq4', 'ByteCntEq2', 'ByteCntEq1', '\
ByteCntEq0', 'DetectionWindow', 'AddressOK']"];
	"1603:AS" -> "1440:AL";
	"1560:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fb73d0>",
		fillcolor=springgreen,
		label="1560:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1563:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fb76d0>",
		fillcolor=springgreen,
		label="1563:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1560:IF" -> "1563:IF"	 [cond="['DetectionWindow', 'ReceivedPauseFrmWAddr', 'ByteCntEq18']",
		label="!((DetectionWindow & ReceivedPauseFrmWAddr & ByteCntEq18))",
		lineno=1560];
	"1561:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fb7390>",
		fillcolor=firebrick,
		label="1561:NS
LatchedTimerValue[15:0] <= AssembledTimerValue[15:0];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fb7390>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1560:IF" -> "1561:NS"	 [cond="['DetectionWindow', 'ReceivedPauseFrmWAddr', 'ByteCntEq18']",
		label="(DetectionWindow & ReceivedPauseFrmWAddr & ByteCntEq18)",
		lineno=1560];
	"1678:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37fba2cd10>",
		def_var="['ResetSlotTimer']",
		fillcolor=deepskyblue,
		label="1678:AS
ResetSlotTimer = RxReset;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxReset']"];
	"1678:AS" -> "1683:AL";
	"1576:NS" -> "Leaf_1570:AL"	 [cond="[]",
		lineno=None];
	"1546:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fd1790>",
		fillcolor=firebrick,
		label="1546:NS
DetectionWindow <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fd1790>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_1540:AL"	 [def_var="['DetectionWindow']",
		label="Leaf_1540:AL"];
	"1546:NS" -> "Leaf_1540:AL"	 [cond="[]",
		lineno=None];
	"1440:AL" -> "1441:BL"	 [cond="[]",
		lineno=None];
	"1617:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37fba1dcd0>",
		def_var="['SetPauseTimer']",
		fillcolor=deepskyblue,
		label="1617:AS
SetPauseTimer = ReceiveEnd & ReceivedPauseFrmWAddr & ReceivedPacketGood & ReceivedLengthOK & RxFlow;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ReceiveEnd', 'ReceivedPauseFrmWAddr', 'ReceivedPacketGood', 'ReceivedLengthOK', 'RxFlow']"];
	"1622:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37fba22410>",
		clk_sens=False,
		fillcolor=gold,
		label="1622:AL",
		sens="['MRxClk', 'RxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['RxReset', 'DecrementPauseTimer', 'LatchedTimerValue', 'PauseTimer', 'SetPauseTimer']"];
	"1617:AS" -> "1622:AL";
	"1630:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fba22dd0>",
		fillcolor=springgreen,
		label="1630:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1630:IF" -> "1631:NS"	 [cond="['DecrementPauseTimer']",
		label=DecrementPauseTimer,
		lineno=1630];
	"1513:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fcfd10>",
		fillcolor=firebrick,
		label="1513:NS
ReceivedPauseFrmWAddr <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fcfd10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1513:NS" -> "Leaf_1507:AL"	 [cond="[]",
		lineno=None];
	"1606:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37d9f9e190>",
		def_var="['ByteCntEq4']",
		fillcolor=deepskyblue,
		label="1606:AS
ByteCntEq4 = RxValid & (ByteCnt[4:0] == 5'h4);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxValid', 'ByteCnt']"];
	"1606:AS" -> "1440:AL";
	"1702:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37fba361d0>",
		fillcolor=turquoise,
		label="1702:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1703:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fba36390>",
		fillcolor=springgreen,
		label="1703:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1702:BL" -> "1703:IF"	 [cond="[]",
		lineno=None];
	"Leaf_1655:AL"	 [def_var="['Pause']",
		label="Leaf_1655:AL"];
	"1679:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37fba2cf90>",
		def_var="['IncrementSlotTimer']",
		fillcolor=deepskyblue,
		label="1679:AS
IncrementSlotTimer = Pause & RxFlow & Divider2;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Pause', 'RxFlow', 'Divider2']"];
	"Leaf_1655:AL" -> "1679:AS";
	"1669:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba2c790>",
		fillcolor=firebrick,
		label="1669:NS
Divider2 <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba2c790>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_1666:AL"	 [def_var="['Divider2']",
		label="Leaf_1666:AL"];
	"1669:NS" -> "Leaf_1666:AL"	 [cond="[]",
		lineno=None];
	"1572:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fb79d0>",
		fillcolor=springgreen,
		label="1572:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1572:IF" -> "1575:IF"	 [cond="['RxReset']",
		label="!(RxReset)",
		lineno=1572];
	"1573:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fb7990>",
		fillcolor=firebrick,
		label="1573:NS
DlyCrcCnt <= 3'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fb7990>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1572:IF" -> "1573:NS"	 [cond="['RxReset']",
		label=RxReset,
		lineno=1572];
	"Leaf_1522:AL"	 [def_var="['AssembledTimerValue']",
		label="Leaf_1522:AL"];
	"Leaf_1522:AL" -> "1555:AL";
	"1573:NS" -> "Leaf_1570:AL"	 [cond="[]",
		lineno=None];
	"1564:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fb7750>",
		fillcolor=firebrick,
		label="1564:NS
LatchedTimerValue[15:0] <= 16'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fb7750>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1563:IF" -> "1564:NS"	 [cond="['ReceiveEnd']",
		label=ReceiveEnd,
		lineno=1563];
	"1706:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fba36890>",
		fillcolor=springgreen,
		label="1706:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1707:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba36850>",
		fillcolor=firebrick,
		label="1707:NS
ReceivedPauseFrm <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba36850>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1706:IF" -> "1707:NS"	 [cond="['RxStatusWriteLatched_sync2', 'r_PassAll', 'ReceivedPauseFrm', 'r_PassAll']",
		label="(RxStatusWriteLatched_sync2 & r_PassAll | ReceivedPauseFrm & ~r_PassAll)",
		lineno=1706];
	"1709:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fba36b50>",
		fillcolor=springgreen,
		label="1709:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1706:IF" -> "1709:IF"	 [cond="['RxStatusWriteLatched_sync2', 'r_PassAll', 'ReceivedPauseFrm', 'r_PassAll']",
		label="!((RxStatusWriteLatched_sync2 & r_PassAll | ReceivedPauseFrm & ~r_PassAll))",
		lineno=1706];
	"1533:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fd1110>",
		fillcolor=springgreen,
		label="1533:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1534:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fd1210>",
		fillcolor=firebrick,
		label="1534:NS
AssembledTimerValue[7:0] <= RxData[7:0];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fd1210>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1533:IF" -> "1534:NS"	 [cond="['DetectionWindow', 'ByteCntEq17']",
		label="(DetectionWindow & ByteCntEq17)",
		lineno=1533];
	"1543:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fd14d0>",
		fillcolor=firebrick,
		label="1543:NS
DetectionWindow <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fd14d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1543:NS" -> "Leaf_1540:AL"	 [cond="[]",
		lineno=None];
	"1668:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fba2c7d0>",
		fillcolor=springgreen,
		label="1668:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1668:IF" -> "1671:IF"	 [cond="['RxReset']",
		label="!(RxReset)",
		lineno=1668];
	"1668:IF" -> "1669:NS"	 [cond="['RxReset']",
		label=RxReset,
		lineno=1668];
	"Leaf_1555:AL"	 [def_var="['LatchedTimerValue']",
		label="Leaf_1555:AL"];
	"Leaf_1555:AL" -> "1622:AL";
	"1515:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9f9b0d0>",
		fillcolor=springgreen,
		label="1515:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1516:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9f9b1d0>",
		fillcolor=firebrick,
		label="1516:NS
ReceivedPauseFrmWAddr <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9f9b1d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1515:IF" -> "1516:NS"	 [cond="['ByteCntEq16', 'TypeLengthOK', 'OpCodeOK', 'AddressOK']",
		label="(ByteCntEq16 & TypeLengthOK & OpCodeOK & AddressOK)",
		lineno=1515];
	"1549:NS" -> "Leaf_1540:AL"	 [cond="[]",
		lineno=None];
	"1655:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37fba28cd0>",
		clk_sens=True,
		fillcolor=gold,
		label="1655:AL",
		sens="['MTxClk', 'TxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['TxStartFrmOut', 'TxDoneIn', 'TxAbortIn', 'TxUsedDataOutDetected', 'RxFlow', 'TxReset', 'PauseTimerEq0_sync2']"];
	"1656:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37fba28d10>",
		fillcolor=turquoise,
		label="1656:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1655:AL" -> "1656:BL"	 [cond="[]",
		lineno=None];
	"1534:NS" -> "Leaf_1522:AL"	 [cond="[]",
		lineno=None];
	"1473:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fcdbd0>",
		fillcolor=firebrick,
		label="1473:NS
TypeLengthOK <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fcdbd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1472:IF" -> "1473:NS"	 [cond="['RxReset']",
		label=RxReset,
		lineno=1472];
	"1475:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fcdfd0>",
		fillcolor=springgreen,
		label="1475:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1472:IF" -> "1475:IF"	 [cond="['RxReset']",
		label="!(RxReset)",
		lineno=1472];
	"1674:NS" -> "Leaf_1666:AL"	 [cond="[]",
		lineno=None];
	"1634:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37fba22c10>",
		def_var="['PauseTimerEq0']",
		fillcolor=deepskyblue,
		label="1634:AS
PauseTimerEq0 = ~(|PauseTimer[15:0]);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['PauseTimer']"];
	"1639:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37fba28350>",
		clk_sens=True,
		fillcolor=gold,
		label="1639:AL",
		sens="['MTxClk', 'TxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['PauseTimerEq0', 'PauseTimerEq0_sync1', 'TxReset']"];
	"1634:AS" -> "1639:AL";
	"1557:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fd1dd0>",
		fillcolor=springgreen,
		label="1557:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1556:BL" -> "1557:IF"	 [cond="[]",
		lineno=None];
	"Leaf_1666:AL" -> "1679:AS";
	"1666:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37fba2c610>",
		clk_sens=False,
		fillcolor=gold,
		label="1666:AL",
		sens="['MRxClk', 'RxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['RxReset', 'PauseTimer', 'RxFlow', 'Divider2']"];
	"Leaf_1666:AL" -> "1666:AL";
	"1527:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9f9b8d0>",
		fillcolor=springgreen,
		label="1527:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1528:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9f9b890>",
		fillcolor=firebrick,
		label="1528:NS
AssembledTimerValue[15:0] <= 16'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9f9b890>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1527:IF" -> "1528:NS"	 [cond="['RxStartFrm']",
		label=RxStartFrm,
		lineno=1527];
	"1530:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37d9f9be50>",
		fillcolor=turquoise,
		label="1530:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1527:IF" -> "1530:BL"	 [cond="['RxStartFrm']",
		label="!(RxStartFrm)",
		lineno=1527];
	"1445:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fb5d90>",
		fillcolor=springgreen,
		label="1445:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1446:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fb5d50>",
		fillcolor=firebrick,
		label="1446:NS
AddressOK <= (RxData[7:0] == ReservedMulticast[47:40]) | (RxData[7:0] == MAC[47:40]);",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fb5d50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1445:IF" -> "1446:NS"	 [cond="['DetectionWindow', 'ByteCntEq0']",
		label="(DetectionWindow & ByteCntEq0)",
		lineno=1445];
	"1448:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fc53d0>",
		fillcolor=springgreen,
		label="1448:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1445:IF" -> "1448:IF"	 [cond="['DetectionWindow', 'ByteCntEq0']",
		label="!((DetectionWindow & ByteCntEq0))",
		lineno=1445];
	"Leaf_1589:AL"	 [def_var="['ByteCnt']",
		label="Leaf_1589:AL"];
	"1598:NS" -> "Leaf_1589:AL"	 [cond="[]",
		lineno=None];
	"1611:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37fba1d0d0>",
		def_var="['ByteCntEq15']",
		fillcolor=deepskyblue,
		label="1611:AS
ByteCntEq15 = RxValid & (ByteCnt[4:0] == 5'h0F);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxValid', 'ByteCnt']"];
	"1488:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37d9f997d0>",
		clk_sens=False,
		fillcolor=gold,
		label="1488:AL",
		sens="['MRxClk', 'RxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['OpCodeOK', 'RxData', 'RxReset', 'ByteCntEq15', 'ByteCntEq14', 'DetectionWindow', 'ByteCntEq16']"];
	"1611:AS" -> "1488:AL";
	"1703:IF" -> "1706:IF"	 [cond="['RxReset']",
		label="!(RxReset)",
		lineno=1703];
	"1704:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba36350>",
		fillcolor=firebrick,
		label="1704:NS
ReceivedPauseFrm <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba36350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1703:IF" -> "1704:NS"	 [cond="['RxReset']",
		label=RxReset,
		lineno=1703];
	"1478:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9f99710>",
		fillcolor=springgreen,
		label="1478:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1481:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9f99890>",
		fillcolor=springgreen,
		label="1481:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1478:IF" -> "1481:IF"	 [cond="['DetectionWindow', 'ByteCntEq13']",
		label="!((DetectionWindow & ByteCntEq13))",
		lineno=1478];
	"1479:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9f99690>",
		fillcolor=firebrick,
		label="1479:NS
TypeLengthOK <= ByteCntEq13 & (RxData[7:0] == TypeLength[7:0]) & TypeLengthOK;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9f99690>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1478:IF" -> "1479:NS"	 [cond="['DetectionWindow', 'ByteCntEq13']",
		label="(DetectionWindow & ByteCntEq13)",
		lineno=1478];
	"1436:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37d9fb51d0>",
		def_var="['TypeLength']",
		fillcolor=deepskyblue,
		label="1436:AS
TypeLength = 16'h8808;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="[]"];
	"1470:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37d9fc5810>",
		clk_sens=False,
		fillcolor=gold,
		label="1470:AL",
		sens="['MRxClk', 'RxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['TypeLength', 'ReceiveEnd', 'RxData', 'TypeLengthOK', 'RxReset', 'ByteCntEq13', 'ByteCntEq12', 'DetectionWindow']"];
	"1436:AS" -> "1470:AL";
	"1647:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37fba288d0>",
		fillcolor=turquoise,
		label="1647:BL
PauseTimerEq0_sync1 <= PauseTimerEq0;
PauseTimerEq0_sync2 <= PauseTimerEq0_sync1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba28910>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f37fba28ad0>]",
		style=filled,
		typ=Block];
	"Leaf_1639:AL"	 [def_var="['PauseTimerEq0_sync1', 'PauseTimerEq0_sync2']",
		label="Leaf_1639:AL"];
	"1647:BL" -> "Leaf_1639:AL"	 [cond="[]",
		lineno=None];
	"Leaf_1440:AL" -> "1440:AL";
	"1507:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37d9fcf890>",
		clk_sens=False,
		fillcolor=gold,
		label="1507:AL",
		sens="['MRxClk', 'RxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['OpCodeOK', 'ReceiveEnd', 'TypeLengthOK', 'RxReset', 'ByteCntEq16', 'AddressOK']"];
	"Leaf_1440:AL" -> "1507:AL";
	"Leaf_1507:AL" -> "1555:AL";
	"Leaf_1507:AL" -> "1617:AS";
	"1640:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37fba28390>",
		fillcolor=turquoise,
		label="1640:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1639:AL" -> "1640:BL"	 [cond="[]",
		lineno=None];
	"1464:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fcdb50>",
		fillcolor=firebrick,
		label="1464:NS
AddressOK <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fcdb50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1464:NS" -> "Leaf_1440:AL"	 [cond="[]",
		lineno=None];
	"1524:IF" -> "1527:IF"	 [cond="['RxReset']",
		label="!(RxReset)",
		lineno=1524];
	"1525:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9f9b510>",
		fillcolor=firebrick,
		label="1525:NS
AssembledTimerValue[15:0] <= 16'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9f9b510>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1524:IF" -> "1525:NS"	 [cond="['RxReset']",
		label=RxReset,
		lineno=1524];
	"1701:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37fba36190>",
		clk_sens=False,
		fillcolor=gold,
		label="1701:AL",
		sens="['MRxClk', 'RxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['r_PassAll', 'OpCodeOK', 'ReceivedPauseFrm', 'RxStatusWriteLatched_sync2', 'TypeLengthOK', 'RxReset', 'ByteCntEq16']"];
	"1701:AL" -> "1702:BL"	 [cond="[]",
		lineno=None];
	"1610:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37d9f9ed90>",
		def_var="['ByteCntEq14']",
		fillcolor=deepskyblue,
		label="1610:AS
ByteCntEq14 = RxValid & (ByteCnt[4:0] == 5'h0E);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxValid', 'ByteCnt']"];
	"1610:AS" -> "1488:AL";
	"1583:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37d9fb7e90>",
		def_var="['ResetByteCnt']",
		fillcolor=deepskyblue,
		label="1583:AS
ResetByteCnt = RxEndFrm;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxEndFrm']"];
	"1589:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37d9fc1950>",
		clk_sens=False,
		fillcolor=gold,
		label="1589:AL",
		sens="['MRxClk', 'RxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['RxReset', 'ResetByteCnt', 'IncrementByteCnt', 'ByteCnt']"];
	"1583:AS" -> "1589:AL";
	"Leaf_1470:AL"	 [def_var="['TypeLengthOK']",
		label="Leaf_1470:AL"];
	"1473:NS" -> "Leaf_1470:AL"	 [cond="[]",
		lineno=None];
	"1602:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37d9fa1550>",
		def_var="['ByteCntEq0']",
		fillcolor=deepskyblue,
		label="1602:AS
ByteCntEq0 = RxValid & (ByteCnt[4:0] == 5'h0);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxValid', 'ByteCnt']"];
	"1602:AS" -> "1440:AL";
	"1512:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fcfd50>",
		fillcolor=springgreen,
		label="1512:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1512:IF" -> "1513:NS"	 [cond="['ReceiveEnd']",
		label=ReceiveEnd,
		lineno=1512];
	"1512:IF" -> "1515:IF"	 [cond="['ReceiveEnd']",
		label="!(ReceiveEnd)",
		lineno=1512];
	"1528:NS" -> "Leaf_1522:AL"	 [cond="[]",
		lineno=None];
	"1590:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37d9fc1990>",
		fillcolor=turquoise,
		label="1590:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1591:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fc1bd0>",
		fillcolor=springgreen,
		label="1591:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1590:BL" -> "1591:IF"	 [cond="[]",
		lineno=None];
	"1592:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fc1b90>",
		fillcolor=firebrick,
		label="1592:NS
ByteCnt[4:0] <= 5'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fc1b90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1591:IF" -> "1592:NS"	 [cond="['RxReset']",
		label=RxReset,
		lineno=1591];
	"1594:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fc1f50>",
		fillcolor=springgreen,
		label="1594:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1591:IF" -> "1594:IF"	 [cond="['RxReset']",
		label="!(RxReset)",
		lineno=1591];
	"1691:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fba31b90>",
		fillcolor=springgreen,
		label="1691:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1692:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba31d50>",
		fillcolor=firebrick,
		label="1692:NS
SlotTimer[5:0] <= SlotTimer[5:0] + 6'd1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba31d50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1691:IF" -> "1692:NS"	 [cond="['IncrementSlotTimer']",
		label=IncrementSlotTimer,
		lineno=1691];
	"1530:BL" -> "1533:IF"	 [cond="[]",
		lineno=None];
	"1531:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9f9bc90>",
		fillcolor=springgreen,
		label="1531:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1530:BL" -> "1531:IF"	 [cond="[]",
		lineno=None];
	"Leaf_1488:AL"	 [def_var="['OpCodeOK']",
		label="Leaf_1488:AL"];
	"Leaf_1488:AL" -> "1701:AL";
	"Leaf_1488:AL" -> "1488:AL";
	"Leaf_1488:AL" -> "1507:AL";
	"1490:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9f99b50>",
		fillcolor=springgreen,
		label="1490:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1491:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9f99b10>",
		fillcolor=firebrick,
		label="1491:NS
OpCodeOK <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9f99b10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1490:IF" -> "1491:NS"	 [cond="['RxReset']",
		label=RxReset,
		lineno=1490];
	"1493:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9f99dd0>",
		fillcolor=springgreen,
		label="1493:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1490:IF" -> "1493:IF"	 [cond="['RxReset']",
		label="!(RxReset)",
		lineno=1490];
	"Leaf_1701:AL"	 [def_var="['ReceivedPauseFrm']",
		label="Leaf_1701:AL"];
	"1704:NS" -> "Leaf_1701:AL"	 [cond="[]",
		lineno=None];
	"1509:IF" -> "1510:NS"	 [cond="['RxReset']",
		label=RxReset,
		lineno=1509];
	"1509:IF" -> "1512:IF"	 [cond="['RxReset']",
		label="!(RxReset)",
		lineno=1509];
	"1463:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fcda10>",
		fillcolor=springgreen,
		label="1463:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1463:IF" -> "1464:NS"	 [cond="['ReceiveEnd']",
		label=ReceiveEnd,
		lineno=1463];
	"1475:IF" -> "1478:IF"	 [cond="['DetectionWindow', 'ByteCntEq12']",
		label="!((DetectionWindow & ByteCntEq12))",
		lineno=1475];
	"1476:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fcdf10>",
		fillcolor=firebrick,
		label="1476:NS
TypeLengthOK <= ByteCntEq12 & (RxData[7:0] == TypeLength[15:8]);",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fcdf10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1475:IF" -> "1476:NS"	 [cond="['DetectionWindow', 'ByteCntEq12']",
		label="(DetectionWindow & ByteCntEq12)",
		lineno=1475];
	"1482:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9f99990>",
		fillcolor=firebrick,
		label="1482:NS
TypeLengthOK <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9f99990>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1481:IF" -> "1482:NS"	 [cond="['ReceiveEnd']",
		label=ReceiveEnd,
		lineno=1481];
	"1532:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9f9bd90>",
		fillcolor=firebrick,
		label="1532:NS
AssembledTimerValue[15:8] <= RxData[7:0];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9f9bd90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1531:IF" -> "1532:NS"	 [cond="['DetectionWindow', 'ByteCntEq16']",
		label="(DetectionWindow & ByteCntEq16)",
		lineno=1531];
	"1454:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fa9510>",
		fillcolor=springgreen,
		label="1454:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1455:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fa9790>",
		fillcolor=firebrick,
		label="1455:NS
AddressOK <= ((RxData[7:0] == ReservedMulticast[23:16]) | (RxData[7:0] == MAC[23:16])) & AddressOK;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fa9790>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1454:IF" -> "1455:NS"	 [cond="['DetectionWindow', 'ByteCntEq3']",
		label="(DetectionWindow & ByteCntEq3)",
		lineno=1454];
	"1457:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fcd050>",
		fillcolor=springgreen,
		label="1457:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1454:IF" -> "1457:IF"	 [cond="['DetectionWindow', 'ByteCntEq3']",
		label="!((DetectionWindow & ByteCntEq3))",
		lineno=1454];
	"1540:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37d9fd1310>",
		clk_sens=False,
		fillcolor=gold,
		label="1540:AL",
		sens="['MRxClk', 'RxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['RxReset', 'ByteCntEq18', 'ReceiveEnd']"];
	"1541:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37d9fd1350>",
		fillcolor=turquoise,
		label="1541:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1540:AL" -> "1541:BL"	 [cond="[]",
		lineno=None];
	"1446:NS" -> "Leaf_1440:AL"	 [cond="[]",
		lineno=None];
	"1679:AS" -> "1683:AL";
	"1679:AS" -> "1696:AS";
	"1612:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37fba1d3d0>",
		def_var="['ByteCntEq16']",
		fillcolor=deepskyblue,
		label="1612:AS
ByteCntEq16 = RxValid & (ByteCnt[4:0] == 5'h10);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxValid', 'ByteCnt']"];
	"1612:AS" -> "1701:AL";
	"1612:AS" -> "1488:AL";
	"1522:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37d9f9b290>",
		clk_sens=False,
		fillcolor=gold,
		label="1522:AL",
		sens="['MRxClk', 'RxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['RxStartFrm', 'RxData', 'DetectionWindow', 'RxReset', 'ByteCntEq17', 'ByteCntEq16']"];
	"1612:AS" -> "1522:AL";
	"1612:AS" -> "1507:AL";
	"1500:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fcf450>",
		fillcolor=springgreen,
		label="1500:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1501:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fcf750>",
		fillcolor=firebrick,
		label="1501:NS
OpCodeOK <= ByteCntEq15 & (RxData[7:0] == 8'h01) & OpCodeOK;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fcf750>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1500:IF" -> "1501:NS"	 [cond="['DetectionWindow', 'ByteCntEq15']",
		label="(DetectionWindow & ByteCntEq15)",
		lineno=1500];
	"1476:NS" -> "Leaf_1470:AL"	 [cond="[]",
		lineno=None];
	"Leaf_1701:AL" -> "1701:AL";
	"1627:IF" -> "1630:IF"	 [cond="['SetPauseTimer']",
		label="!(SetPauseTimer)",
		lineno=1627];
	"1628:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba22a90>",
		fillcolor=firebrick,
		label="1628:NS
PauseTimer[15:0] <= LatchedTimerValue[15:0];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba22a90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1627:IF" -> "1628:NS"	 [cond="['SetPauseTimer']",
		label=SetPauseTimer,
		lineno=1627];
	"1628:NS" -> "Leaf_1622:AL"	 [cond="[]",
		lineno=None];
	"1491:NS" -> "Leaf_1488:AL"	 [cond="[]",
		lineno=None];
	"Leaf_1470:AL" -> "1701:AL";
	"Leaf_1470:AL" -> "1470:AL";
	"Leaf_1470:AL" -> "1507:AL";
	"1460:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fcd650>",
		fillcolor=springgreen,
		label="1460:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1460:IF" -> "1463:IF"	 [cond="['DetectionWindow', 'ByteCntEq5']",
		label="!((DetectionWindow & ByteCntEq5))",
		lineno=1460];
	"1461:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fcd8d0>",
		fillcolor=firebrick,
		label="1461:NS
AddressOK <= ((RxData[7:0] == ReservedMulticast[7:0]) | (RxData[7:0] == MAC[7:0])) & AddressOK;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fcd8d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1460:IF" -> "1461:NS"	 [cond="['DetectionWindow', 'ByteCntEq5']",
		label="(DetectionWindow & ByteCntEq5)",
		lineno=1460];
	"Leaf_1589:AL" -> "1603:AS";
	"Leaf_1589:AL" -> "1606:AS";
	"Leaf_1589:AL" -> "1611:AS";
	"Leaf_1589:AL" -> "1610:AS";
	"Leaf_1589:AL" -> "1602:AS";
	"Leaf_1589:AL" -> "1612:AS";
	"1608:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37d9f9e790>",
		def_var="['ByteCntEq12']",
		fillcolor=deepskyblue,
		label="1608:AS
ByteCntEq12 = RxValid & (ByteCnt[4:0] == 5'h0C);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxValid', 'ByteCnt']"];
	"Leaf_1589:AL" -> "1608:AS";
	"Leaf_1589:AL" -> "1589:AL";
	"1614:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37fba1d9d0>",
		def_var="['ByteCntEq18']",
		fillcolor=deepskyblue,
		label="1614:AS
ByteCntEq18 = RxValid & (ByteCnt[4:0] == 5'h12) & DetectionWindow;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxValid', 'ByteCnt', 'DetectionWindow']"];
	"Leaf_1589:AL" -> "1614:AS";
	"1607:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37d9f9e490>",
		def_var="['ByteCntEq5']",
		fillcolor=deepskyblue,
		label="1607:AS
ByteCntEq5 = RxValid & (ByteCnt[4:0] == 5'h5);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxValid', 'ByteCnt']"];
	"Leaf_1589:AL" -> "1607:AS";
	"1604:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37d9fa1b50>",
		def_var="['ByteCntEq2']",
		fillcolor=deepskyblue,
		label="1604:AS
ByteCntEq2 = RxValid & (ByteCnt[4:0] == 5'h2);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxValid', 'ByteCnt']"];
	"Leaf_1589:AL" -> "1604:AS";
	"1609:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37d9f9ea90>",
		def_var="['ByteCntEq13']",
		fillcolor=deepskyblue,
		label="1609:AS
ByteCntEq13 = RxValid & (ByteCnt[4:0] == 5'h0D);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxValid', 'ByteCnt']"];
	"Leaf_1589:AL" -> "1609:AS";
	"1605:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37d9fa1e50>",
		def_var="['ByteCntEq3']",
		fillcolor=deepskyblue,
		label="1605:AS
ByteCntEq3 = RxValid & (ByteCnt[4:0] == 5'h3);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxValid', 'ByteCnt']"];
	"Leaf_1589:AL" -> "1605:AS";
	"1613:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37fba1d6d0>",
		def_var="['ByteCntEq17']",
		fillcolor=deepskyblue,
		label="1613:AS
ByteCntEq17 = RxValid & (ByteCnt[4:0] == 5'h11);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxValid', 'ByteCnt']"];
	"Leaf_1589:AL" -> "1613:AS";
	"1501:NS" -> "Leaf_1488:AL"	 [cond="[]",
		lineno=None];
	"1608:AS" -> "1470:AL";
	"1561:NS" -> "Leaf_1555:AL"	 [cond="[]",
		lineno=None];
	"1667:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37fba2c650>",
		fillcolor=turquoise,
		label="1667:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1667:BL" -> "1668:IF"	 [cond="[]",
		lineno=None];
	"1455:NS" -> "Leaf_1440:AL"	 [cond="[]",
		lineno=None];
	"1496:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37d9f99d50>",
		fillcolor=turquoise,
		label="1496:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1496:BL" -> "1500:IF"	 [cond="[]",
		lineno=None];
	"1497:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9f99fd0>",
		fillcolor=springgreen,
		label="1497:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1496:BL" -> "1497:IF"	 [cond="[]",
		lineno=None];
	"Leaf_1639:AL" -> "1655:AL";
	"Leaf_1639:AL" -> "1639:AL";
	"1461:NS" -> "Leaf_1440:AL"	 [cond="[]",
		lineno=None];
	"1578:IF" -> "1579:NS"	 [cond="['RxValid', 'RxEndFrm', 'DlyCrcCnt']",
		label="(RxValid & ~RxEndFrm & ~DlyCrcCnt[2])",
		lineno=1578];
	"1498:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fcf310>",
		fillcolor=firebrick,
		label="1498:NS
OpCodeOK <= ByteCntEq14 & (RxData[7:0] == 8'h00);",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fcf310>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1497:IF" -> "1498:NS"	 [cond="['DetectionWindow', 'ByteCntEq14']",
		label="(DetectionWindow & ByteCntEq14)",
		lineno=1497];
	"1661:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba2c490>",
		fillcolor=firebrick,
		label="1661:NS
Pause <= RxFlow & ~PauseTimerEq0_sync2;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba2c490>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1661:NS" -> "Leaf_1655:AL"	 [cond="[]",
		lineno=None];
	"1692:NS" -> "Leaf_1683:AL"	 [cond="[]",
		lineno=None];
	"1479:NS" -> "Leaf_1470:AL"	 [cond="[]",
		lineno=None];
	"1658:NS" -> "Leaf_1655:AL"	 [cond="[]",
		lineno=None];
	"1570:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37d9fb7810>",
		clk_sens=False,
		fillcolor=gold,
		label="1570:AL",
		sens="['MRxClk', 'RxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['RxReset', 'RxValid', 'DlyCrcCnt', 'RxEndFrm']"];
	"Leaf_1570:AL" -> "1570:AL";
	"1584:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37d9fc1690>",
		def_var="['IncrementByteCnt']",
		fillcolor=deepskyblue,
		label="1584:AS
IncrementByteCnt = RxValid & DetectionWindow & ~ByteCntEq18 & (~DlyCrcEn | DlyCrcEn & DlyCrcCnt[2]);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxValid', 'DetectionWindow', 'ByteCntEq18', 'DlyCrcEn', 'DlyCrcEn', 'DlyCrcCnt']"];
	"Leaf_1570:AL" -> "1584:AS";
	"1452:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fc5ed0>",
		fillcolor=firebrick,
		label="1452:NS
AddressOK <= ((RxData[7:0] == ReservedMulticast[31:24]) | (RxData[7:0] == MAC[31:24])) & AddressOK;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fc5ed0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1452:NS" -> "Leaf_1440:AL"	 [cond="[]",
		lineno=None];
	"1532:NS" -> "Leaf_1522:AL"	 [cond="[]",
		lineno=None];
	"1571:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37d9fb7850>",
		fillcolor=turquoise,
		label="1571:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1571:BL" -> "1572:IF"	 [cond="[]",
		lineno=None];
	"1589:AL" -> "1590:BL"	 [cond="[]",
		lineno=None];
	"1684:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37fba31310>",
		fillcolor=turquoise,
		label="1684:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1683:AL" -> "1684:BL"	 [cond="[]",
		lineno=None];
	"1542:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fd1510>",
		fillcolor=springgreen,
		label="1542:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1542:IF" -> "1543:NS"	 [cond="['RxReset']",
		label=RxReset,
		lineno=1542];
	"1545:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fd17d0>",
		fillcolor=springgreen,
		label="1545:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1542:IF" -> "1545:IF"	 [cond="['RxReset']",
		label="!(RxReset)",
		lineno=1542];
	"1442:IF" -> "1445:IF"	 [cond="['RxReset']",
		label="!(RxReset)",
		lineno=1442];
	"1443:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fb5590>",
		fillcolor=firebrick,
		label="1443:NS
AddressOK <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fb5590>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1442:IF" -> "1443:NS"	 [cond="['RxReset']",
		label=RxReset,
		lineno=1442];
	"Leaf_1540:AL" -> "1555:AL";
	"Leaf_1540:AL" -> "1440:AL";
	"Leaf_1540:AL" -> "1614:AS";
	"Leaf_1540:AL" -> "1488:AL";
	"Leaf_1540:AL" -> "1522:AL";
	"Leaf_1540:AL" -> "1584:AS";
	"Leaf_1540:AL" -> "1470:AL";
	"1685:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fba31550>",
		fillcolor=springgreen,
		label="1685:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1684:BL" -> "1685:IF"	 [cond="[]",
		lineno=None];
	"1641:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fba28690>",
		fillcolor=springgreen,
		label="1641:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1640:BL" -> "1641:IF"	 [cond="[]",
		lineno=None];
	"1685:IF" -> "1686:NS"	 [cond="['RxReset']",
		label=RxReset,
		lineno=1685];
	"1688:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fba318d0>",
		fillcolor=springgreen,
		label="1688:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1685:IF" -> "1688:IF"	 [cond="['RxReset']",
		label="!(RxReset)",
		lineno=1685];
	"1614:AS" -> "1555:AL";
	"1614:AS" -> "1540:AL";
	"1614:AS" -> "1584:AS";
	"1618:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37fba22190>",
		def_var="['DecrementPauseTimer']",
		fillcolor=deepskyblue,
		label="1618:AS
DecrementPauseTimer = SlotFinished & |PauseTimer;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['SlotFinished', 'PauseTimer']"];
	"1618:AS" -> "1622:AL";
	"1557:IF" -> "1560:IF"	 [cond="['RxReset']",
		label="!(RxReset)",
		lineno=1557];
	"1558:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fd1d90>",
		fillcolor=firebrick,
		label="1558:NS
LatchedTimerValue[15:0] <= 16'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fd1d90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1557:IF" -> "1558:NS"	 [cond="['RxReset']",
		label=RxReset,
		lineno=1557];
	"1707:NS" -> "Leaf_1701:AL"	 [cond="[]",
		lineno=None];
	"1607:AS" -> "1440:AL";
	"1570:AL" -> "1571:BL"	 [cond="[]",
		lineno=None];
	"1448:IF" -> "1449:NS"	 [cond="['DetectionWindow', 'ByteCntEq1']",
		label="(DetectionWindow & ByteCntEq1)",
		lineno=1448];
	"1451:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fc5c50>",
		fillcolor=springgreen,
		label="1451:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1448:IF" -> "1451:IF"	 [cond="['DetectionWindow', 'ByteCntEq1']",
		label="!((DetectionWindow & ByteCntEq1))",
		lineno=1448];
	"1710:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba36c50>",
		fillcolor=firebrick,
		label="1710:NS
ReceivedPauseFrm <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba36c50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1709:IF" -> "1710:NS"	 [cond="['ByteCntEq16', 'TypeLengthOK', 'OpCodeOK']",
		label="(ByteCntEq16 & TypeLengthOK & OpCodeOK)",
		lineno=1709];
	"1710:NS" -> "Leaf_1701:AL"	 [cond="[]",
		lineno=None];
	"1595:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fc1f10>",
		fillcolor=firebrick,
		label="1595:NS
ByteCnt[4:0] <= 5'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fc1f10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1595:NS" -> "Leaf_1589:AL"	 [cond="[]",
		lineno=None];
	"1592:NS" -> "Leaf_1589:AL"	 [cond="[]",
		lineno=None];
	"1672:NS" -> "Leaf_1666:AL"	 [cond="[]",
		lineno=None];
	"1489:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37d9f99950>",
		fillcolor=turquoise,
		label="1489:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1488:AL" -> "1489:BL"	 [cond="[]",
		lineno=None];
	"1696:AS" -> "1618:AS";
	"1435:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37d9fb5090>",
		def_var="['ReservedMulticast']",
		fillcolor=deepskyblue,
		label="1435:AS
ReservedMulticast = 48'h0180C2000001;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="[]"];
	"1435:AS" -> "1440:AL";
	"1604:AS" -> "1440:AL";
	"1641:IF" -> "1647:BL"	 [cond="['TxReset']",
		label="!(TxReset)",
		lineno=1641];
	"1642:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37fba28510>",
		fillcolor=turquoise,
		label="1642:BL
PauseTimerEq0_sync1 <= 1'b1;
PauseTimerEq0_sync2 <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba28550>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f37fba286d0>]",
		style=filled,
		typ=Block];
	"1641:IF" -> "1642:BL"	 [cond="['TxReset']",
		label=TxReset,
		lineno=1641];
	"1451:IF" -> "1454:IF"	 [cond="['DetectionWindow', 'ByteCntEq2']",
		label="!((DetectionWindow & ByteCntEq2))",
		lineno=1451];
	"1451:IF" -> "1452:NS"	 [cond="['DetectionWindow', 'ByteCntEq2']",
		label="(DetectionWindow & ByteCntEq2)",
		lineno=1451];
	"1498:NS" -> "Leaf_1488:AL"	 [cond="[]",
		lineno=None];
	"1522:AL" -> "1523:BL"	 [cond="[]",
		lineno=None];
	"1609:AS" -> "1470:AL";
	"Leaf_1622:AL" -> "1634:AS";
	"Leaf_1622:AL" -> "1618:AS";
	"Leaf_1622:AL" -> "1622:AL";
	"Leaf_1622:AL" -> "1666:AL";
	"1656:BL" -> "1657:IF"	 [cond="[]",
		lineno=None];
	"1545:IF" -> "1548:IF"	 [cond="['ByteCntEq18']",
		label="!(ByteCntEq18)",
		lineno=1545];
	"1545:IF" -> "1546:NS"	 [cond="['ByteCntEq18']",
		label=ByteCntEq18,
		lineno=1545];
	"1493:IF" -> "1496:BL"	 [cond="['ByteCntEq16']",
		label="!(ByteCntEq16)",
		lineno=1493];
	"1494:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9f99d90>",
		fillcolor=firebrick,
		label="1494:NS
OpCodeOK <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9f99d90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1493:IF" -> "1494:NS"	 [cond="['ByteCntEq16']",
		label=ByteCntEq16,
		lineno=1493];
	"1623:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37fba22450>",
		fillcolor=turquoise,
		label="1623:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1622:AL" -> "1623:BL"	 [cond="[]",
		lineno=None];
	"1689:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba31890>",
		fillcolor=firebrick,
		label="1689:NS
SlotTimer[5:0] <= 6'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba31890>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1689:NS" -> "Leaf_1683:AL"	 [cond="[]",
		lineno=None];
	"1660:IF" -> "1661:NS"	 [cond="['TxDoneIn', 'TxAbortIn', 'TxUsedDataOutDetected', 'TxStartFrmOut']",
		label="((TxDoneIn | TxAbortIn | ~TxUsedDataOutDetected) & ~TxStartFrmOut)",
		lineno=1660];
	"1541:BL" -> "1542:IF"	 [cond="[]",
		lineno=None];
	"1564:NS" -> "Leaf_1555:AL"	 [cond="[]",
		lineno=None];
	"1457:IF" -> "1460:IF"	 [cond="['DetectionWindow', 'ByteCntEq4']",
		label="!((DetectionWindow & ByteCntEq4))",
		lineno=1457];
	"1458:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fa9d90>",
		fillcolor=firebrick,
		label="1458:NS
AddressOK <= ((RxData[7:0] == ReservedMulticast[15:8]) | (RxData[7:0] == MAC[15:8])) & AddressOK;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fa9d90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1457:IF" -> "1458:NS"	 [cond="['DetectionWindow', 'ByteCntEq4']",
		label="(DetectionWindow & ByteCntEq4)",
		lineno=1457];
	"1558:NS" -> "Leaf_1555:AL"	 [cond="[]",
		lineno=None];
	"1605:AS" -> "1440:AL";
	"1688:IF" -> "1691:IF"	 [cond="['ResetSlotTimer']",
		label="!(ResetSlotTimer)",
		lineno=1688];
	"1688:IF" -> "1689:NS"	 [cond="['ResetSlotTimer']",
		label=ResetSlotTimer,
		lineno=1688];
	"1516:NS" -> "Leaf_1507:AL"	 [cond="[]",
		lineno=None];
	"1623:BL" -> "1624:IF"	 [cond="[]",
		lineno=None];
	"1666:AL" -> "1667:BL"	 [cond="[]",
		lineno=None];
	"1613:AS" -> "1522:AL";
	"1594:IF" -> "1597:IF"	 [cond="['ResetByteCnt']",
		label="!(ResetByteCnt)",
		lineno=1594];
	"1594:IF" -> "1595:NS"	 [cond="['ResetByteCnt']",
		label=ResetByteCnt,
		lineno=1594];
	"1482:NS" -> "Leaf_1470:AL"	 [cond="[]",
		lineno=None];
	"1443:NS" -> "Leaf_1440:AL"	 [cond="[]",
		lineno=None];
	"1584:AS" -> "1589:AL";
	"1470:AL" -> "1471:BL"	 [cond="[]",
		lineno=None];
	"1494:NS" -> "Leaf_1488:AL"	 [cond="[]",
		lineno=None];
	"1507:AL" -> "1508:BL"	 [cond="[]",
		lineno=None];
	"1489:BL" -> "1490:IF"	 [cond="[]",
		lineno=None];
	"1525:NS" -> "Leaf_1522:AL"	 [cond="[]",
		lineno=None];
	"1642:BL" -> "Leaf_1639:AL"	 [cond="[]",
		lineno=None];
	"1458:NS" -> "Leaf_1440:AL"	 [cond="[]",
		lineno=None];
}
