strict digraph "" {
	node [label="\N"];
	"Leaf_1440:AL"	 [def_var="['AddressOK']",
		label="Leaf_1440:AL"];
	"1445:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fb687190>",
		fillcolor=springgreen,
		label="1445:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1448:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fb687210>",
		fillcolor=springgreen,
		label="1448:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1445:IF" -> "1448:IF"	 [cond="['DetectionWindow', 'ByteCntEq0']",
		label="!((DetectionWindow & ByteCntEq0))",
		lineno=1445];
	"1446:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fb6784d0>",
		fillcolor=firebrick,
		label="1446:NS
AddressOK <= (RxData[7:0] == ReservedMulticast[47:40]) | (RxData[7:0] == MAC[47:40]);",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fb6784d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1445:IF" -> "1446:NS"	 [cond="['DetectionWindow', 'ByteCntEq0']",
		label="(DetectionWindow & ByteCntEq0)",
		lineno=1445];
	"1443:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fb678bd0>",
		fillcolor=firebrick,
		label="1443:NS
AddressOK <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fb678bd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1443:NS" -> "Leaf_1440:AL"	 [cond="[]",
		lineno=None];
	"1442:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fb678d10>",
		fillcolor=springgreen,
		label="1442:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1442:IF" -> "1445:IF"	 [cond="['RxReset']",
		label="!(RxReset)",
		lineno=1442];
	"1442:IF" -> "1443:NS"	 [cond="['RxReset']",
		label=RxReset,
		lineno=1442];
	"1458:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fb687cd0>",
		fillcolor=firebrick,
		label="1458:NS
AddressOK <= ((RxData[7:0] == ReservedMulticast[15:8]) | (RxData[7:0] == MAC[15:8])) & AddressOK;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fb687cd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1458:NS" -> "Leaf_1440:AL"	 [cond="[]",
		lineno=None];
	"1452:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fb685590>",
		fillcolor=firebrick,
		label="1452:NS
AddressOK <= ((RxData[7:0] == ReservedMulticast[31:24]) | (RxData[7:0] == MAC[31:24])) & AddressOK;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fb685590>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1452:NS" -> "Leaf_1440:AL"	 [cond="[]",
		lineno=None];
	"1455:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fb69a710>",
		fillcolor=firebrick,
		label="1455:NS
AddressOK <= ((RxData[7:0] == ReservedMulticast[23:16]) | (RxData[7:0] == MAC[23:16])) & AddressOK;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fb69a710>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1455:NS" -> "Leaf_1440:AL"	 [cond="[]",
		lineno=None];
	"1449:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fb685d10>",
		fillcolor=firebrick,
		label="1449:NS
AddressOK <= ((RxData[7:0] == ReservedMulticast[39:32]) | (RxData[7:0] == MAC[39:32])) & AddressOK;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fb685d10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1449:NS" -> "Leaf_1440:AL"	 [cond="[]",
		lineno=None];
	"1464:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fb6873d0>",
		fillcolor=firebrick,
		label="1464:NS
AddressOK <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fb6873d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1464:NS" -> "Leaf_1440:AL"	 [cond="[]",
		lineno=None];
	"1454:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fb687290>",
		fillcolor=springgreen,
		label="1454:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1454:IF" -> "1455:NS"	 [cond="['DetectionWindow', 'ByteCntEq3']",
		label="(DetectionWindow & ByteCntEq3)",
		lineno=1454];
	"1457:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fb6872d0>",
		fillcolor=springgreen,
		label="1457:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1454:IF" -> "1457:IF"	 [cond="['DetectionWindow', 'ByteCntEq3']",
		label="!((DetectionWindow & ByteCntEq3))",
		lineno=1454];
	"1440:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37fb678d90>",
		clk_sens=False,
		fillcolor=gold,
		label="1440:AL",
		sens="['MRxClk', 'RxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['ReservedMulticast', 'ReceiveEnd', 'ByteCntEq5', 'MAC', 'RxData', 'ByteCntEq3', 'RxReset', 'ByteCntEq4', 'ByteCntEq2', 'ByteCntEq1', '\
ByteCntEq0', 'DetectionWindow', 'AddressOK']"];
	"1441:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37fb678f10>",
		fillcolor=turquoise,
		label="1441:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1440:AL" -> "1441:BL"	 [cond="[]",
		lineno=None];
	"1441:BL" -> "1442:IF"	 [cond="[]",
		lineno=None];
	"1451:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fb687250>",
		fillcolor=springgreen,
		label="1451:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1451:IF" -> "1452:NS"	 [cond="['DetectionWindow', 'ByteCntEq2']",
		label="(DetectionWindow & ByteCntEq2)",
		lineno=1451];
	"1451:IF" -> "1454:IF"	 [cond="['DetectionWindow', 'ByteCntEq2']",
		label="!((DetectionWindow & ByteCntEq2))",
		lineno=1451];
	"1448:IF" -> "1449:NS"	 [cond="['DetectionWindow', 'ByteCntEq1']",
		label="(DetectionWindow & ByteCntEq1)",
		lineno=1448];
	"1448:IF" -> "1451:IF"	 [cond="['DetectionWindow', 'ByteCntEq1']",
		label="!((DetectionWindow & ByteCntEq1))",
		lineno=1448];
	"1460:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fb687310>",
		fillcolor=springgreen,
		label="1460:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1461:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fb687550>",
		fillcolor=firebrick,
		label="1461:NS
AddressOK <= ((RxData[7:0] == ReservedMulticast[7:0]) | (RxData[7:0] == MAC[7:0])) & AddressOK;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fb687550>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1460:IF" -> "1461:NS"	 [cond="['DetectionWindow', 'ByteCntEq5']",
		label="(DetectionWindow & ByteCntEq5)",
		lineno=1460];
	"1463:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fb687350>",
		fillcolor=springgreen,
		label="1463:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1460:IF" -> "1463:IF"	 [cond="['DetectionWindow', 'ByteCntEq5']",
		label="!((DetectionWindow & ByteCntEq5))",
		lineno=1460];
	"1461:NS" -> "Leaf_1440:AL"	 [cond="[]",
		lineno=None];
	"1457:IF" -> "1458:NS"	 [cond="['DetectionWindow', 'ByteCntEq4']",
		label="(DetectionWindow & ByteCntEq4)",
		lineno=1457];
	"1457:IF" -> "1460:IF"	 [cond="['DetectionWindow', 'ByteCntEq4']",
		label="!((DetectionWindow & ByteCntEq4))",
		lineno=1457];
	"1463:IF" -> "1464:NS"	 [cond="['ReceiveEnd']",
		label=ReceiveEnd,
		lineno=1463];
	"1446:NS" -> "Leaf_1440:AL"	 [cond="[]",
		lineno=None];
}
