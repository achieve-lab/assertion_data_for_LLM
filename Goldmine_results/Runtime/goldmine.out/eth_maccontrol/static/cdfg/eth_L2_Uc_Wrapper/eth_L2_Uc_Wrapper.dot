strict digraph "compose( ,  )" {
	node [label="\N"];
	"1173:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da4ab5d0>",
		fillcolor=lightcyan,
		label="1173:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1173:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da4aba50>",
		fillcolor=turquoise,
		label="1173:BL
TxData_wrapped_out[7:0] <= MAC[7:0];
read_fifo <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4ab990>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f37da4abb50>]",
		style=filled,
		typ=Block];
	"1173:CA" -> "1173:BL"	 [cond="[]",
		lineno=None];
	"1141:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da4b6890>",
		fillcolor=lightcyan,
		label="1141:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1141:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da4b6a50>",
		fillcolor=springgreen,
		label="1141:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1141:CA" -> "1141:IF"	 [cond="[]",
		lineno=None];
	"1141:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4b6b50>",
		fillcolor=firebrick,
		label="1141:NS
StateCount <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4b6b50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1141:IF" -> "1141:NS"	 [cond="['StateCount']",
		label="(StateCount == 0)",
		lineno=1141];
	"1142:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4b6e90>",
		fillcolor=firebrick,
		label="1142:NS
StateCount <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4b6e90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_1131:AL"	 [def_var="['Divided_2_clk', 'StateLeftinQ', 'StateCount']",
		label="Leaf_1131:AL"];
	"1142:NS" -> "Leaf_1131:AL"	 [cond="[]",
		lineno=None];
	"1164:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da4bb610>",
		fillcolor=lightcyan,
		label="1164:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1164:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da4bba50>",
		fillcolor=turquoise,
		label="1164:BL
TxData_wrapped_out[7:0] <= DMAC[31:24];
read_fifo <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4bb9d0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f37da4bbb50>]",
		style=filled,
		typ=Block];
	"1164:CA" -> "1164:BL"	 [cond="[]",
		lineno=None];
	"1165:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da4bbf90>",
		fillcolor=turquoise,
		label="1165:BL
TxData_wrapped_out[7:0] <= DMAC[23:16];
read_fifo <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4bbed0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f37da4a40d0>]",
		style=filled,
		typ=Block];
	"Leaf_1154:AL"	 [def_var="['read_fifo', 'TxData_wrapped_out', 'ByteCnt', 'PreNib15State', 'write_fifo']",
		label="Leaf_1154:AL"];
	"1165:BL" -> "Leaf_1154:AL"	 [cond="[]",
		lineno=None];
	"1170:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da4ada50>",
		fillcolor=turquoise,
		label="1170:BL
TxData_wrapped_out[7:0] <= MAC[31:24];
read_fifo <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4ad990>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f37da4adb50>]",
		style=filled,
		typ=Block];
	"1170:BL" -> "Leaf_1154:AL"	 [cond="[]",
		lineno=None];
	"1156:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da4a7910>",
		fillcolor=springgreen,
		label="1156:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1180:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da4b7310>",
		fillcolor=turquoise,
		label="1180:BL
ByteCnt <= 0;
read_fifo <= 0;
TxData_wrapped_out <= 8'h0;
PreNib15State <= 9'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4b7050>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f37da4b71d0>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4b7350>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f37da4b74d0>]",
		style=filled,
		typ=Block];
	"1156:IF" -> "1180:BL"	 [cond="['StateCount', 'StateLeftinQ', 'TxStartFrmIn']",
		label="!((StateCount | StateLeftinQ | TxStartFrmIn))",
		lineno=1156];
	"1157:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da4a7a50>",
		fillcolor=turquoise,
		label="1157:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1156:IF" -> "1157:BL"	 [cond="['StateCount', 'StateLeftinQ', 'TxStartFrmIn']",
		label="(StateCount | StateLeftinQ | TxStartFrmIn)",
		lineno=1156];
	"1168:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da4a4f90>",
		fillcolor=turquoise,
		label="1168:BL
TxData_wrapped_out[7:0] <= MAC[47:40];
read_fifo <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4a4ed0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f37da4ad0d0>]",
		style=filled,
		typ=Block];
	"1168:BL" -> "Leaf_1154:AL"	 [cond="[]",
		lineno=None];
	"1162:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da4a7f90>",
		fillcolor=turquoise,
		label="1162:BL
TxData_wrapped_out[7:0] <= DMAC[47:40];
read_fifo <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4a7ed0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f37da4bb0d0>]",
		style=filled,
		typ=Block];
	"1162:BL" -> "Leaf_1154:AL"	 [cond="[]",
		lineno=None];
	"1167:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da4a45d0>",
		fillcolor=lightcyan,
		label="1167:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1167:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da4a4a50>",
		fillcolor=turquoise,
		label="1167:BL
TxData_wrapped_out[7:0] <= DMAC[7:0];
read_fifo <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4a4990>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f37da4a4b50>]",
		style=filled,
		typ=Block];
	"1167:CA" -> "1167:BL"	 [cond="[]",
		lineno=None];
	"1125:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37da49cf10>",
		def_var="['TxEndFrmOut_uc']",
		fillcolor=deepskyblue,
		label="1125:AS
TxEndFrmOut_uc = TxBufferEmpty & StateLeftinQ;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['TxBufferEmpty', 'StateLeftinQ']"];
	"1166:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da4a4090>",
		fillcolor=lightcyan,
		label="1166:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1166:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da4a4510>",
		fillcolor=turquoise,
		label="1166:BL
TxData_wrapped_out[7:0] <= DMAC[15:8];
read_fifo <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4a4450>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f37da4a4610>]",
		style=filled,
		typ=Block];
	"1166:CA" -> "1166:BL"	 [cond="[]",
		lineno=None];
	"1172:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da4ab090>",
		fillcolor=lightcyan,
		label="1172:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1172:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da4ab510>",
		fillcolor=turquoise,
		label="1172:BL
TxData_wrapped_out[7:0] <= MAC[15:8];
read_fifo <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4ab450>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f37da4ab610>]",
		style=filled,
		typ=Block];
	"1172:CA" -> "1172:BL"	 [cond="[]",
		lineno=None];
	"1142:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da4b6d90>",
		fillcolor=springgreen,
		label="1142:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1142:IF" -> "1142:NS"	 [cond="['StateCount']",
		label="(StateCount == 1)",
		lineno=1142];
	"1155:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da4a7ad0>",
		fillcolor=turquoise,
		label="1155:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1155:BL" -> "1156:IF"	 [cond="[]",
		lineno=None];
	"1191:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da4b7d50>",
		fillcolor=springgreen,
		label="1191:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1155:BL" -> "1191:IF"	 [cond="[]",
		lineno=None];
	"1187:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da4b7490>",
		fillcolor=springgreen,
		label="1187:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1155:BL" -> "1187:IF"	 [cond="[]",
		lineno=None];
	"1154:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37da4a77d0>",
		clk_sens=False,
		fillcolor=gold,
		label="1154:AL",
		sens="['Divided_2_clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['DMAC', 'StateLeftinQ', 'StateCount', 'TxStartFrmIn', 'TxData_wrapped_out_wire', 'PreNib15State', 'MAC', 'ByteCnt']"];
	"Leaf_1154:AL" -> "1154:AL";
	"1154:AL" -> "1155:BL"	 [cond="[]",
		lineno=None];
	"Leaf_1131:AL" -> "1125:AS";
	"Leaf_1131:AL" -> "1154:AL";
	"1131:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37da4b6410>",
		clk_sens=True,
		fillcolor=gold,
		label="1131:AL",
		sens="['MTxClk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['StateLeftinQ', 'TxBufferEmpty', 'StateCount', 'TxStartFrmIn', 'MTxClk', 'Divided_2_clk', 'TxEndFrmIn']"];
	"Leaf_1131:AL" -> "1131:AL";
	"1173:BL" -> "Leaf_1154:AL"	 [cond="[]",
		lineno=None];
	"1165:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da4bbb10>",
		fillcolor=lightcyan,
		label="1165:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1165:CA" -> "1165:BL"	 [cond="[]",
		lineno=None];
	"1192:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da4b7b50>",
		fillcolor=turquoise,
		label="1192:BL
ByteCnt = ByteCnt + 1;
write_fifo <= 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da4b7b90>, <pyverilog.vparser.ast.NonblockingSubstitution object at \
0x7f37da4b7cd0>]",
		style=filled,
		typ=Block];
	"1191:IF" -> "1192:BL"	 [cond="['StateCount', 'PreNib15State']",
		label="(StateCount & (PreNib15State >= 8))",
		lineno=1191];
	"1196:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da4b7c90>",
		fillcolor=turquoise,
		label="1196:BL
write_fifo <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4b7e90>]",
		style=filled,
		typ=Block];
	"1191:IF" -> "1196:BL"	 [cond="['StateCount', 'PreNib15State']",
		label="!((StateCount & (PreNib15State >= 8)))",
		lineno=1191];
	"1145:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f37da4a7050>",
		fillcolor=linen,
		label="1145:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"1146:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da4b6fd0>",
		fillcolor=lightcyan,
		label="1146:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1145:CS" -> "1146:CA"	 [cond="['TxEndFrmIn', 'TxBufferEmpty']",
		label="{ TxEndFrmIn, TxBufferEmpty }",
		lineno=1145];
	"1147:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da4a7310>",
		fillcolor=lightcyan,
		label="1147:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1145:CS" -> "1147:CA"	 [cond="['TxEndFrmIn', 'TxBufferEmpty']",
		label="{ TxEndFrmIn, TxBufferEmpty }",
		lineno=1145];
	"1141:NS" -> "Leaf_1131:AL"	 [cond="[]",
		lineno=None];
	"1166:BL" -> "Leaf_1154:AL"	 [cond="[]",
		lineno=None];
	"1147:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da4a75d0>",
		fillcolor=springgreen,
		label="1147:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1147:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4a76d0>",
		fillcolor=firebrick,
		label="1147:NS
StateLeftinQ <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4a76d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1147:IF" -> "1147:NS"	 [cond="['StateLeftinQ']",
		label="(StateLeftinQ == 1)",
		lineno=1147];
	"1169:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da4ad510>",
		fillcolor=turquoise,
		label="1169:BL
TxData_wrapped_out[7:0] <= MAC[39:32];
read_fifo <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4ad450>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f37da4ad610>]",
		style=filled,
		typ=Block];
	"1169:BL" -> "Leaf_1154:AL"	 [cond="[]",
		lineno=None];
	"1146:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4a7350>",
		fillcolor=firebrick,
		label="1146:NS
StateLeftinQ <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4a7350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1146:NS" -> "Leaf_1131:AL"	 [cond="[]",
		lineno=None];
	"1192:BL" -> "Leaf_1154:AL"	 [cond="[]",
		lineno=None];
	"1171:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da4adf90>",
		fillcolor=turquoise,
		label="1171:BL
TxData_wrapped_out[7:0] <= MAC[23:16];
read_fifo <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4aded0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f37da4ab0d0>]",
		style=filled,
		typ=Block];
	"1171:BL" -> "Leaf_1154:AL"	 [cond="[]",
		lineno=None];
	"1188:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da4b7750>",
		fillcolor=turquoise,
		label="1188:BL
PreNib15State <= PreNib15State + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4b7790>]",
		style=filled,
		typ=Block];
	"1187:IF" -> "1188:BL"	 [cond="['StateCount']",
		label=StateCount,
		lineno=1187];
	"Leaf_1127:AL"	 [def_var="['Divided_2_clk']",
		label="Leaf_1127:AL"];
	"Leaf_1127:AL" -> "1131:AL";
	"1164:BL" -> "Leaf_1154:AL"	 [cond="[]",
		lineno=None];
	"1170:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da4ad5d0>",
		fillcolor=lightcyan,
		label="1170:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1170:CA" -> "1170:BL"	 [cond="[]",
		lineno=None];
	"1132:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da4b6d10>",
		fillcolor=turquoise,
		label="1132:BL
Divided_2_clk <= MTxClk ^ Divided_2_clk;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4b65d0>]",
		style=filled,
		typ=Block];
	"1131:AL" -> "1132:BL"	 [cond="[]",
		lineno=None];
	"1163:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da4bb550>",
		fillcolor=turquoise,
		label="1163:BL
TxData_wrapped_out[7:0] <= DMAC[39:32];
read_fifo <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4bb490>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f37da4bb650>]",
		style=filled,
		typ=Block];
	"1163:BL" -> "Leaf_1154:AL"	 [cond="[]",
		lineno=None];
	"1180:BL" -> "Leaf_1154:AL"	 [cond="[]",
		lineno=None];
	"1171:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da4adb10>",
		fillcolor=lightcyan,
		label="1171:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1171:CA" -> "1171:BL"	 [cond="[]",
		lineno=None];
	"1140:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f37da4b69d0>",
		fillcolor=linen,
		label="1140:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"1140:CS" -> "1141:CA"	 [cond="['TxStartFrmIn', 'TxEndFrmIn']",
		label="{ TxStartFrmIn, TxEndFrmIn }",
		lineno=1140];
	"1142:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da4b6b90>",
		fillcolor=lightcyan,
		label="1142:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1140:CS" -> "1142:CA"	 [cond="['TxStartFrmIn', 'TxEndFrmIn']",
		label="{ TxStartFrmIn, TxEndFrmIn }",
		lineno=1140];
	"1169:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da4ad090>",
		fillcolor=lightcyan,
		label="1169:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1169:CA" -> "1169:BL"	 [cond="[]",
		lineno=None];
	"1158:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f37da4abbd0>",
		fillcolor=linen,
		label="1158:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"1158:CS" -> "1173:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1158];
	"1158:CS" -> "1164:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1158];
	"1158:CS" -> "1167:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1158];
	"1158:CS" -> "1166:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1158];
	"1158:CS" -> "1172:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1158];
	"1158:CS" -> "1165:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1158];
	"1158:CS" -> "1170:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1158];
	"1158:CS" -> "1171:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1158];
	"1158:CS" -> "1169:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1158];
	"1163:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da4bb190>",
		fillcolor=lightcyan,
		label="1163:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1158:CS" -> "1163:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1158];
	"1162:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da4a7bd0>",
		fillcolor=lightcyan,
		label="1162:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1158:CS" -> "1162:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1158];
	"1168:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da4a4b10>",
		fillcolor=lightcyan,
		label="1168:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1158:CS" -> "1168:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1158];
	"1174:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da4abb10>",
		fillcolor=lightcyan,
		label="1174:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1158:CS" -> "1174:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1158];
	"1146:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da4a7250>",
		fillcolor=springgreen,
		label="1146:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1146:IF" -> "1146:NS"	 [cond="['StateLeftinQ']",
		label="(StateLeftinQ == 0)",
		lineno=1146];
	"1132:BL" -> "1145:CS"	 [cond="[]",
		lineno=None];
	"1132:BL" -> "1140:CS"	 [cond="[]",
		lineno=None];
	"1147:NS" -> "Leaf_1131:AL"	 [cond="[]",
		lineno=None];
	"1146:CA" -> "1146:IF"	 [cond="[]",
		lineno=None];
	"1163:CA" -> "1163:BL"	 [cond="[]",
		lineno=None];
	"1196:BL" -> "Leaf_1154:AL"	 [cond="[]",
		lineno=None];
	"1157:BL" -> "1158:CS"	 [cond="[]",
		lineno=None];
	"1142:CA" -> "1142:IF"	 [cond="[]",
		lineno=None];
	"1162:CA" -> "1162:BL"	 [cond="[]",
		lineno=None];
	"1174:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da4abd10>",
		fillcolor=turquoise,
		label="1174:BL
read_fifo <= 1;
TxData_wrapped_out <= TxData_wrapped_out_wire;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4abd50>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f37da4abf10>]",
		style=filled,
		typ=Block];
	"1174:BL" -> "Leaf_1154:AL"	 [cond="[]",
		lineno=None];
	"1167:BL" -> "Leaf_1154:AL"	 [cond="[]",
		lineno=None];
	"1168:CA" -> "1168:BL"	 [cond="[]",
		lineno=None];
	"1128:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da49ced0>",
		fillcolor=turquoise,
		label="1128:BL
Divided_2_clk = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da4b6210>]",
		style=filled,
		typ=Block];
	"1128:BL" -> "Leaf_1127:AL"	 [cond="[]",
		lineno=None];
	"1174:CA" -> "1174:BL"	 [cond="[]",
		lineno=None];
	"1172:BL" -> "Leaf_1154:AL"	 [cond="[]",
		lineno=None];
	"1127:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37da4b6110>",
		clk_sens=False,
		fillcolor=gold,
		label="1127:AL",
		sens="['TxStartFrmIn']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="[]"];
	"1127:AL" -> "1128:BL"	 [cond="[]",
		lineno=None];
	"1188:BL" -> "Leaf_1154:AL"	 [cond="[]",
		lineno=None];
	"1147:CA" -> "1147:IF"	 [cond="[]",
		lineno=None];
}
