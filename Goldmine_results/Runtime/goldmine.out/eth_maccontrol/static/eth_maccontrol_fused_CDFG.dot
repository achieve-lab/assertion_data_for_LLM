strict digraph "compose( ,  )" {
	node [label="\N"];
	"1854:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37fb9da110>",
		def_var="['TxStartFrmOut']",
		fillcolor=deepskyblue,
		label="1854:AS
TxStartFrmOut = (CtrlMux)? TxCtrlStartFrm : TxStartFrmIn & ~Pause;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['CtrlMux', 'TxCtrlStartFrm', 'TxStartFrmIn', 'Pause']"];
	"receivecontrol1.1655:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37fba28cd0>",
		clk_sens=True,
		fillcolor=gold,
		label="receivecontrol1.1655:AL",
		sens="['MTxClk', 'TxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['TxStartFrmOut', 'TxDoneIn', 'TxAbortIn', 'TxUsedDataOutDetected', 'RxFlow', 'TxReset', 'PauseTimerEq0_sync2']"];
	"1854:AS" -> "receivecontrol1.1655:AL";
	"transmitcontrol1.1060:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da74d290>",
		fillcolor=cadetblue,
		label="transmitcontrol1.1060:BS
MuxedCtrlData[7:0] = MAC[15:8];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da74d290>]",
		style=filled,
		typ=BlockingSubstitution];
	"transmitcontrol1.Leaf_1044:AL"	 [def_var="['MuxedCtrlData']",
		label="transmitcontrol1.Leaf_1044:AL"];
	"transmitcontrol1.1060:BS" -> "transmitcontrol1.Leaf_1044:AL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.1072:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37da747f50>",
		clk_sens=True,
		fillcolor=gold,
		label="transmitcontrol1.1072:AL",
		sens="['MTxClk', 'TxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['MuxedCtrlData', 'ByteCnt', 'TxReset']"];
	"transmitcontrol1.1073:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da747f90>",
		fillcolor=turquoise,
		label="transmitcontrol1.1073:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"transmitcontrol1.1072:AL" -> "transmitcontrol1.1073:BL"	 [cond="[]",
		lineno=None];
	"1816:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37fba50150>",
		fillcolor=turquoise,
		label="1816:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1817:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fba502d0>",
		fillcolor=springgreen,
		label="1817:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1816:BL" -> "1817:IF"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.1142:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4b6e90>",
		fillcolor=firebrick,
		label="L2_UC_wrapper.1142:NS
StateCount <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4b6e90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"L2_UC_wrapper.Leaf_1131:AL"	 [def_var="['Divided_2_clk', 'StateLeftinQ', 'StateCount']",
		label="L2_UC_wrapper.Leaf_1131:AL"];
	"L2_UC_wrapper.1142:NS" -> "L2_UC_wrapper.Leaf_1131:AL"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.L2_fifo.746:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37da86a2d0>",
		def_var="['full']",
		fillcolor=deepskyblue,
		label="L2_UC_wrapper.L2_fifo.746:AS
full = cnt == DEPTH;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cnt']"];
	"L2_UC_wrapper.L2_fifo.732:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37da865410>",
		clk_sens=False,
		fillcolor=gold,
		label="L2_UC_wrapper.L2_fifo.732:AL",
		sens="['clk', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'write', 'clear', 'full', 'write_pointer']"];
	"L2_UC_wrapper.L2_fifo.746:AS" -> "L2_UC_wrapper.L2_fifo.732:AL";
	"L2_UC_wrapper.L2_fifo.772:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37da86a750>",
		clk_sens=False,
		fillcolor=gold,
		label="L2_UC_wrapper.L2_fifo.772:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['write', 'clear', 'full', 'data_in']"];
	"L2_UC_wrapper.L2_fifo.746:AS" -> "L2_UC_wrapper.L2_fifo.772:AL";
	"receivecontrol1.1656:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37fba28d10>",
		fillcolor=turquoise,
		label="receivecontrol1.1656:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"receivecontrol1.1657:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fba28e90>",
		fillcolor=springgreen,
		label="receivecontrol1.1657:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1656:BL" -> "receivecontrol1.1657:IF"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1500:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fcf450>",
		fillcolor=springgreen,
		label="receivecontrol1.1500:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1501:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fcf750>",
		fillcolor=firebrick,
		label="receivecontrol1.1501:NS
OpCodeOK <= ByteCntEq15 & (RxData[7:0] == 8'h01) & OpCodeOK;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fcf750>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.1500:IF" -> "receivecontrol1.1501:NS"	 [cond="['DetectionWindow', 'ByteCntEq15']",
		label="(DetectionWindow & ByteCntEq15)",
		lineno=1500];
	"receivecontrol1.1667:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37fba2c650>",
		fillcolor=turquoise,
		label="receivecontrol1.1667:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"receivecontrol1.1668:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fba2c7d0>",
		fillcolor=springgreen,
		label="receivecontrol1.1668:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1667:BL" -> "receivecontrol1.1668:IF"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.L2_fifo.785:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da434190>",
		fillcolor=firebrick,
		label="L2_UC_wrapper.L2_fifo.785:NS
data_out <= fifo[0];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da434190>]",
		style=filled,
		typ=NonblockingSubstitution];
	"L2_UC_wrapper.L2_fifo.Leaf_782:AL"	 [def_var="['data_out']",
		label="L2_UC_wrapper.L2_fifo.Leaf_782:AL"];
	"L2_UC_wrapper.L2_fifo.785:NS" -> "L2_UC_wrapper.L2_fifo.Leaf_782:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1683:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37fba312d0>",
		clk_sens=False,
		fillcolor=gold,
		label="receivecontrol1.1683:AL",
		sens="['MRxClk', 'RxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['IncrementSlotTimer', 'RxReset', 'ResetSlotTimer', 'SlotTimer']"];
	"receivecontrol1.1684:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37fba31310>",
		fillcolor=turquoise,
		label="receivecontrol1.1684:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"receivecontrol1.1683:AL" -> "receivecontrol1.1684:BL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1549:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fd1a50>",
		fillcolor=firebrick,
		label="receivecontrol1.1549:NS
DetectionWindow <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fd1a50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.Leaf_1540:AL"	 [def_var="['DetectionWindow']",
		label="receivecontrol1.Leaf_1540:AL"];
	"receivecontrol1.1549:NS" -> "receivecontrol1.Leaf_1540:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1524:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9f9b550>",
		fillcolor=springgreen,
		label="receivecontrol1.1524:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1525:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9f9b510>",
		fillcolor=firebrick,
		label="receivecontrol1.1525:NS
AssembledTimerValue[15:0] <= 16'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9f9b510>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.1524:IF" -> "receivecontrol1.1525:NS"	 [cond="['RxReset']",
		label=RxReset,
		lineno=1524];
	"receivecontrol1.1527:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9f9b8d0>",
		fillcolor=springgreen,
		label="receivecontrol1.1527:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1524:IF" -> "receivecontrol1.1527:IF"	 [cond="['RxReset']",
		label="!(RxReset)",
		lineno=1524];
	"L2_UC_wrapper.1163:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da4bb190>",
		fillcolor=lightcyan,
		label="L2_UC_wrapper.1163:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"L2_UC_wrapper.1163:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da4bb550>",
		fillcolor=turquoise,
		label="L2_UC_wrapper.1163:BL
TxData_wrapped_out[7:0] <= DMAC[39:32];
read_fifo <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4bb490>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f37da4bb650>]",
		style=filled,
		typ=Block];
	"L2_UC_wrapper.1163:CA" -> "L2_UC_wrapper.1163:BL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.913:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da437fd0>",
		fillcolor=turquoise,
		label="transmitcontrol1.913:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"transmitcontrol1.914:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da42f250>",
		fillcolor=springgreen,
		label="transmitcontrol1.914:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"transmitcontrol1.913:BL" -> "transmitcontrol1.914:IF"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1590:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37d9fc1990>",
		fillcolor=turquoise,
		label="receivecontrol1.1590:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"receivecontrol1.1591:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fc1bd0>",
		fillcolor=springgreen,
		label="receivecontrol1.1591:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1590:BL" -> "receivecontrol1.1591:IF"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1618:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37fba22190>",
		def_var="['DecrementPauseTimer']",
		fillcolor=deepskyblue,
		label="receivecontrol1.1618:AS
DecrementPauseTimer = SlotFinished & |PauseTimer;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['SlotFinished', 'PauseTimer']"];
	"receivecontrol1.1622:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37fba22410>",
		clk_sens=False,
		fillcolor=gold,
		label="receivecontrol1.1622:AL",
		sens="['MRxClk', 'RxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['RxReset', 'DecrementPauseTimer', 'LatchedTimerValue', 'PauseTimer', 'SetPauseTimer']"];
	"receivecontrol1.1618:AS" -> "receivecontrol1.1622:AL";
	"L2_UC_wrapper.1173:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da4ab5d0>",
		fillcolor=lightcyan,
		label="L2_UC_wrapper.1173:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"L2_UC_wrapper.1173:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da4aba50>",
		fillcolor=turquoise,
		label="L2_UC_wrapper.1173:BL
TxData_wrapped_out[7:0] <= MAC[7:0];
read_fifo <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4ab990>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f37da4abb50>]",
		style=filled,
		typ=Block];
	"L2_UC_wrapper.1173:CA" -> "L2_UC_wrapper.1173:BL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.1061:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da74d550>",
		fillcolor=lightcyan,
		label="transmitcontrol1.1061:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"transmitcontrol1.1061:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da74d650>",
		fillcolor=cadetblue,
		label="transmitcontrol1.1061:BS
MuxedCtrlData[7:0] = MAC[7:0];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da74d650>]",
		style=filled,
		typ=BlockingSubstitution];
	"transmitcontrol1.1061:CA" -> "transmitcontrol1.1061:BS"	 [cond="[]",
		lineno=None];
	"1838:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba55310>",
		fillcolor=firebrick,
		label="1838:NS
MuxedDone <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba55310>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_1829:AL"	 [def_var="['MuxedDone']",
		label="Leaf_1829:AL"];
	"1838:NS" -> "Leaf_1829:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1710:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba36c50>",
		fillcolor=firebrick,
		label="receivecontrol1.1710:NS
ReceivedPauseFrm <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba36c50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.Leaf_1701:AL"	 [def_var="['ReceivedPauseFrm']",
		label="receivecontrol1.Leaf_1701:AL"];
	"receivecontrol1.1710:NS" -> "receivecontrol1.Leaf_1701:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1473:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fcdbd0>",
		fillcolor=firebrick,
		label="receivecontrol1.1473:NS
TypeLengthOK <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fcdbd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.Leaf_1470:AL"	 [def_var="['TypeLengthOK']",
		label="receivecontrol1.Leaf_1470:AL"];
	"receivecontrol1.1473:NS" -> "receivecontrol1.Leaf_1470:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1563:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fb76d0>",
		fillcolor=springgreen,
		label="receivecontrol1.1563:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1564:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fb7750>",
		fillcolor=firebrick,
		label="receivecontrol1.1564:NS
LatchedTimerValue[15:0] <= 16'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fb7750>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.1563:IF" -> "receivecontrol1.1564:NS"	 [cond="['ReceiveEnd']",
		label=ReceiveEnd,
		lineno=1563];
	"receivecontrol1.1603:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37d9fa1850>",
		def_var="['ByteCntEq1']",
		fillcolor=deepskyblue,
		label="receivecontrol1.1603:AS
ByteCntEq1 = RxValid & (ByteCnt[4:0] == 5'h1);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxValid', 'ByteCnt']"];
	"receivecontrol1.1440:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37d9fb5410>",
		clk_sens=False,
		fillcolor=gold,
		label="receivecontrol1.1440:AL",
		sens="['MRxClk', 'RxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['ReservedMulticast', 'ReceiveEnd', 'ByteCntEq5', 'MAC', 'RxData', 'ByteCntEq3', 'RxReset', 'ByteCntEq4', 'ByteCntEq2', 'ByteCntEq1', '\
ByteCntEq0', 'DetectionWindow', 'AddressOK']"];
	"receivecontrol1.1603:AS" -> "receivecontrol1.1440:AL";
	"L2_UC_wrapper.1196:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da4b7c90>",
		fillcolor=turquoise,
		label="L2_UC_wrapper.1196:BL
write_fifo <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4b7e90>]",
		style=filled,
		typ=Block];
	"L2_UC_wrapper.Leaf_1154:AL"	 [def_var="['read_fifo', 'TxData_wrapped_out', 'ByteCnt', 'PreNib15State', 'write_fifo']",
		label="L2_UC_wrapper.Leaf_1154:AL"];
	"L2_UC_wrapper.1196:BL" -> "L2_UC_wrapper.Leaf_1154:AL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.930:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da42fed0>",
		fillcolor=firebrick,
		label="transmitcontrol1.930:NS
TxCtrlEndFrm <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da42fed0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"transmitcontrol1.Leaf_927:AL"	 [def_var="['TxCtrlEndFrm']",
		label="transmitcontrol1.Leaf_927:AL"];
	"transmitcontrol1.930:NS" -> "transmitcontrol1.Leaf_927:AL"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.L2_fifo.735:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da8655d0>",
		fillcolor=firebrick,
		label="L2_UC_wrapper.L2_fifo.735:NS
write_pointer <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da8655d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"L2_UC_wrapper.L2_fifo.Leaf_732:AL"	 [def_var="['write_pointer']",
		label="L2_UC_wrapper.L2_fifo.Leaf_732:AL"];
	"L2_UC_wrapper.L2_fifo.735:NS" -> "L2_UC_wrapper.L2_fifo.Leaf_732:AL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.Leaf_898:AL"	 [def_var="['WillSendControlFrame']",
		label="transmitcontrol1.Leaf_898:AL"];
	"transmitcontrol1.956:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37da42ce10>",
		clk_sens=True,
		fillcolor=gold,
		label="transmitcontrol1.956:AL",
		sens="['MTxClk', 'TxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['WillSendControlFrame', 'TxCtrlStartFrm', 'TxReset', 'TxDoneIn']"];
	"transmitcontrol1.Leaf_898:AL" -> "transmitcontrol1.956:AL";
	"transmitcontrol1.912:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37da42f050>",
		clk_sens=True,
		fillcolor=gold,
		label="transmitcontrol1.912:AL",
		sens="['MTxClk', 'TxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['WillSendControlFrame', 'TxStartFrmIn', 'TxDoneIn', 'TxAbortIn', 'TxUsedDataIn_q', 'TxUsedDataOutDetected', 'CtrlMux', 'TxUsedDataOut', '\
TxReset']"];
	"transmitcontrol1.Leaf_898:AL" -> "transmitcontrol1.912:AL";
	"transmitcontrol1.941:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37da42c590>",
		clk_sens=True,
		fillcolor=gold,
		label="transmitcontrol1.941:AL",
		sens="['MTxClk', 'TxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['WillSendControlFrame', 'TxDoneIn', 'TxUsedDataOut', 'TxReset']"];
	"transmitcontrol1.Leaf_898:AL" -> "transmitcontrol1.941:AL";
	"transmitcontrol1.1068:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da747d10>",
		fillcolor=cadetblue,
		label="transmitcontrol1.1068:BS
MuxedCtrlData[7:0] = 8'h0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da747d10>]",
		style=filled,
		typ=BlockingSubstitution];
	"transmitcontrol1.1068:BS" -> "transmitcontrol1.Leaf_1044:AL"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.L2_fifo.722:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da492a50>",
		fillcolor=springgreen,
		label="L2_UC_wrapper.L2_fifo.722:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"L2_UC_wrapper.L2_fifo.723:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da492a10>",
		fillcolor=firebrick,
		label="L2_UC_wrapper.L2_fifo.723:NS
read_pointer <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da492a10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"L2_UC_wrapper.L2_fifo.722:IF" -> "L2_UC_wrapper.L2_fifo.723:NS"	 [cond="['reset']",
		label=reset,
		lineno=722];
	"L2_UC_wrapper.L2_fifo.725:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da492e90>",
		fillcolor=springgreen,
		label="L2_UC_wrapper.L2_fifo.725:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"L2_UC_wrapper.L2_fifo.722:IF" -> "L2_UC_wrapper.L2_fifo.725:IF"	 [cond="['reset']",
		label="!(reset)",
		lineno=722];
	"L2_UC_wrapper.L2_fifo.706:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da459d10>",
		fillcolor=springgreen,
		label="L2_UC_wrapper.L2_fifo.706:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"L2_UC_wrapper.L2_fifo.709:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da492150>",
		fillcolor=springgreen,
		label="L2_UC_wrapper.L2_fifo.709:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"L2_UC_wrapper.L2_fifo.706:IF" -> "L2_UC_wrapper.L2_fifo.709:IF"	 [cond="['reset']",
		label="!(reset)",
		lineno=706];
	"L2_UC_wrapper.L2_fifo.707:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da459cd0>",
		fillcolor=firebrick,
		label="L2_UC_wrapper.L2_fifo.707:NS
cnt <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da459cd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"L2_UC_wrapper.L2_fifo.706:IF" -> "L2_UC_wrapper.L2_fifo.707:NS"	 [cond="['reset']",
		label=reset,
		lineno=706];
	"1871:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37fb9daf90>",
		def_var="['CrcEnOut']",
		fillcolor=deepskyblue,
		label="1871:AS
CrcEnOut = CrcEnIn | SendingCtrlFrm;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['CrcEnIn', 'SendingCtrlFrm']"];
	"L2_UC_wrapper.L2_fifo.738:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da865910>",
		fillcolor=firebrick,
		label="L2_UC_wrapper.L2_fifo.738:NS
write_pointer <= { { CNT_WIDTH - 2{ 1'b0 } }, write };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da865910>]",
		style=filled,
		typ=NonblockingSubstitution];
	"L2_UC_wrapper.L2_fifo.738:NS" -> "L2_UC_wrapper.L2_fifo.Leaf_732:AL"	 [cond="[]",
		lineno=None];
	"1834:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fba50ed0>",
		fillcolor=springgreen,
		label="1834:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1835:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba50e90>",
		fillcolor=firebrick,
		label="1835:NS
MuxedDone <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba50e90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1834:IF" -> "1835:NS"	 [cond="['TxStartFrmIn']",
		label=TxStartFrmIn,
		lineno=1834];
	"1837:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fba55110>",
		fillcolor=springgreen,
		label="1837:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1834:IF" -> "1837:IF"	 [cond="['TxStartFrmIn']",
		label="!(TxStartFrmIn)",
		lineno=1834];
	"transmitcontrol1.989:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da453310>",
		fillcolor=springgreen,
		label="transmitcontrol1.989:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"transmitcontrol1.990:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da453450>",
		fillcolor=firebrick,
		label="transmitcontrol1.990:NS
BlockTxDone <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da453450>]",
		style=filled,
		typ=NonblockingSubstitution];
	"transmitcontrol1.989:IF" -> "transmitcontrol1.990:NS"	 [cond="['TxStartFrmIn']",
		label=TxStartFrmIn,
		lineno=989];
	"L2_UC_wrapper.1158:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f37da4abbd0>",
		fillcolor=linen,
		label="L2_UC_wrapper.1158:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"L2_UC_wrapper.1158:CS" -> "L2_UC_wrapper.1163:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1158];
	"L2_UC_wrapper.1158:CS" -> "L2_UC_wrapper.1173:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1158];
	"L2_UC_wrapper.1170:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da4ad5d0>",
		fillcolor=lightcyan,
		label="L2_UC_wrapper.1170:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"L2_UC_wrapper.1158:CS" -> "L2_UC_wrapper.1170:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1158];
	"L2_UC_wrapper.1165:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da4bbb10>",
		fillcolor=lightcyan,
		label="L2_UC_wrapper.1165:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"L2_UC_wrapper.1158:CS" -> "L2_UC_wrapper.1165:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1158];
	"L2_UC_wrapper.1169:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da4ad090>",
		fillcolor=lightcyan,
		label="L2_UC_wrapper.1169:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"L2_UC_wrapper.1158:CS" -> "L2_UC_wrapper.1169:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1158];
	"L2_UC_wrapper.1166:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da4a4090>",
		fillcolor=lightcyan,
		label="L2_UC_wrapper.1166:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"L2_UC_wrapper.1158:CS" -> "L2_UC_wrapper.1166:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1158];
	"L2_UC_wrapper.1164:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da4bb610>",
		fillcolor=lightcyan,
		label="L2_UC_wrapper.1164:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"L2_UC_wrapper.1158:CS" -> "L2_UC_wrapper.1164:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1158];
	"L2_UC_wrapper.1174:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da4abb10>",
		fillcolor=lightcyan,
		label="L2_UC_wrapper.1174:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"L2_UC_wrapper.1158:CS" -> "L2_UC_wrapper.1174:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1158];
	"L2_UC_wrapper.1168:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da4a4b10>",
		fillcolor=lightcyan,
		label="L2_UC_wrapper.1168:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"L2_UC_wrapper.1158:CS" -> "L2_UC_wrapper.1168:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1158];
	"L2_UC_wrapper.1171:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da4adb10>",
		fillcolor=lightcyan,
		label="L2_UC_wrapper.1171:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"L2_UC_wrapper.1158:CS" -> "L2_UC_wrapper.1171:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1158];
	"L2_UC_wrapper.1172:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da4ab090>",
		fillcolor=lightcyan,
		label="L2_UC_wrapper.1172:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"L2_UC_wrapper.1158:CS" -> "L2_UC_wrapper.1172:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1158];
	"L2_UC_wrapper.1162:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da4a7bd0>",
		fillcolor=lightcyan,
		label="L2_UC_wrapper.1162:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"L2_UC_wrapper.1158:CS" -> "L2_UC_wrapper.1162:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1158];
	"L2_UC_wrapper.1167:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da4a45d0>",
		fillcolor=lightcyan,
		label="L2_UC_wrapper.1167:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"L2_UC_wrapper.1158:CS" -> "L2_UC_wrapper.1167:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1158];
	"receivecontrol1.1660:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fba2c190>",
		fillcolor=springgreen,
		label="receivecontrol1.1660:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1661:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba2c490>",
		fillcolor=firebrick,
		label="receivecontrol1.1661:NS
Pause <= RxFlow & ~PauseTimerEq0_sync2;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba2c490>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.1660:IF" -> "receivecontrol1.1661:NS"	 [cond="['TxDoneIn', 'TxAbortIn', 'TxUsedDataOutDetected', 'TxStartFrmOut']",
		label="((TxDoneIn | TxAbortIn | ~TxUsedDataOutDetected) & ~TxStartFrmOut)",
		lineno=1660];
	"1835:NS" -> "Leaf_1829:AL"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.L2_fifo.744:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37da865c50>",
		def_var="['empty']",
		fillcolor=deepskyblue,
		label="L2_UC_wrapper.L2_fifo.744:AS
empty = ~(|cnt);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cnt']"];
	"L2_UC_wrapper.L2_fifo.720:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37da4926d0>",
		clk_sens=False,
		fillcolor=gold,
		label="L2_UC_wrapper.L2_fifo.720:AL",
		sens="['clk', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'read', 'clear', 'read_pointer', 'empty']"];
	"L2_UC_wrapper.L2_fifo.744:AS" -> "L2_UC_wrapper.L2_fifo.720:AL";
	"L2_UC_wrapper.1131:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37da4b6410>",
		clk_sens=True,
		fillcolor=gold,
		label="L2_UC_wrapper.1131:AL",
		sens="['MTxClk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['StateLeftinQ', 'TxBufferEmpty', 'StateCount', 'TxStartFrmIn', 'MTxClk', 'Divided_2_clk', 'TxEndFrmIn']"];
	"L2_UC_wrapper.L2_fifo.744:AS" -> "L2_UC_wrapper.1131:AL";
	"L2_UC_wrapper.1125:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37da49cf10>",
		def_var="['TxEndFrmOut_uc']",
		fillcolor=deepskyblue,
		label="L2_UC_wrapper.1125:AS
TxEndFrmOut_uc = TxBufferEmpty & StateLeftinQ;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['TxBufferEmpty', 'StateLeftinQ']"];
	"L2_UC_wrapper.L2_fifo.744:AS" -> "L2_UC_wrapper.1125:AS";
	"receivecontrol1.Leaf_1555:AL"	 [def_var="['LatchedTimerValue']",
		label="receivecontrol1.Leaf_1555:AL"];
	"receivecontrol1.Leaf_1555:AL" -> "receivecontrol1.1622:AL";
	"transmitcontrol1.1058:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da74fad0>",
		fillcolor=cadetblue,
		label="transmitcontrol1.1058:BS
MuxedCtrlData[7:0] = MAC[31:24];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da74fad0>]",
		style=filled,
		typ=BlockingSubstitution];
	"transmitcontrol1.1058:BS" -> "transmitcontrol1.Leaf_1044:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1696:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37fba31d90>",
		def_var="['SlotFinished']",
		fillcolor=deepskyblue,
		label="receivecontrol1.1696:AS
SlotFinished = &SlotTimer[5:0] & IncrementSlotTimer;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['SlotTimer', 'IncrementSlotTimer']"];
	"receivecontrol1.1696:AS" -> "receivecontrol1.1618:AS";
	"receivecontrol1.1613:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37fba1d6d0>",
		def_var="['ByteCntEq17']",
		fillcolor=deepskyblue,
		label="receivecontrol1.1613:AS
ByteCntEq17 = RxValid & (ByteCnt[4:0] == 5'h11);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxValid', 'ByteCnt']"];
	"receivecontrol1.1522:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37d9f9b290>",
		clk_sens=False,
		fillcolor=gold,
		label="receivecontrol1.1522:AL",
		sens="['MRxClk', 'RxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['RxStartFrm', 'RxData', 'DetectionWindow', 'RxReset', 'ByteCntEq17', 'ByteCntEq16']"];
	"receivecontrol1.1613:AS" -> "receivecontrol1.1522:AL";
	"transmitcontrol1.1063:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da74dc90>",
		fillcolor=cadetblue,
		label="transmitcontrol1.1063:BS
MuxedCtrlData[7:0] = 8'h08;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da74dc90>]",
		style=filled,
		typ=BlockingSubstitution];
	"transmitcontrol1.1063:BS" -> "transmitcontrol1.Leaf_1044:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1482:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9f99990>",
		fillcolor=firebrick,
		label="receivecontrol1.1482:NS
TypeLengthOK <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9f99990>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.1482:NS" -> "receivecontrol1.Leaf_1470:AL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.903:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da437c90>",
		fillcolor=springgreen,
		label="transmitcontrol1.903:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"transmitcontrol1.904:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da437c50>",
		fillcolor=firebrick,
		label="transmitcontrol1.904:NS
WillSendControlFrame <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da437c50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"transmitcontrol1.903:IF" -> "transmitcontrol1.904:NS"	 [cond="['TxCtrlEndFrm', 'CtrlMux']",
		label="(TxCtrlEndFrm & CtrlMux)",
		lineno=903];
	"transmitcontrol1.906:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da437e90>",
		fillcolor=springgreen,
		label="transmitcontrol1.906:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"transmitcontrol1.903:IF" -> "transmitcontrol1.906:IF"	 [cond="['TxCtrlEndFrm', 'CtrlMux']",
		label="!((TxCtrlEndFrm & CtrlMux))",
		lineno=903];
	"transmitcontrol1.1066:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da747550>",
		fillcolor=lightcyan,
		label="transmitcontrol1.1066:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"transmitcontrol1.1066:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da747650>",
		fillcolor=cadetblue,
		label="transmitcontrol1.1066:BS
MuxedCtrlData[7:0] = TxPauseTV[15:8];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da747650>]",
		style=filled,
		typ=BlockingSubstitution];
	"transmitcontrol1.1066:CA" -> "transmitcontrol1.1066:BS"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.949:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da42cc10>",
		fillcolor=springgreen,
		label="transmitcontrol1.949:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"transmitcontrol1.950:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da42cd50>",
		fillcolor=firebrick,
		label="transmitcontrol1.950:NS
CtrlMux <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da42cd50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"transmitcontrol1.949:IF" -> "transmitcontrol1.950:NS"	 [cond="['TxDoneIn']",
		label=TxDoneIn,
		lineno=949];
	"transmitcontrol1.1001:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37da453b10>",
		def_var="['IncrementDlyCrcCnt']",
		fillcolor=deepskyblue,
		label="transmitcontrol1.1001:AS
IncrementDlyCrcCnt = CtrlMux & TxUsedDataIn & ~DlyCrcCnt[2];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['CtrlMux', 'TxUsedDataIn', 'DlyCrcCnt']"];
	"transmitcontrol1.1005:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37da453d50>",
		clk_sens=True,
		fillcolor=gold,
		label="transmitcontrol1.1005:AL",
		sens="['MTxClk', 'TxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['IncrementDlyCrcCnt', 'DlyCrcCnt', 'ResetByteCnt', 'TxReset']"];
	"transmitcontrol1.1001:AS" -> "transmitcontrol1.1005:AL";
	"L2_UC_wrapper.1169:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da4ad510>",
		fillcolor=turquoise,
		label="L2_UC_wrapper.1169:BL
TxData_wrapped_out[7:0] <= MAC[39:32];
read_fifo <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4ad450>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f37da4ad610>]",
		style=filled,
		typ=Block];
	"L2_UC_wrapper.1169:BL" -> "L2_UC_wrapper.Leaf_1154:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1561:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fb7390>",
		fillcolor=firebrick,
		label="receivecontrol1.1561:NS
LatchedTimerValue[15:0] <= AssembledTimerValue[15:0];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fb7390>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.1561:NS" -> "receivecontrol1.Leaf_1555:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1531:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9f9bc90>",
		fillcolor=springgreen,
		label="receivecontrol1.1531:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1532:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9f9bd90>",
		fillcolor=firebrick,
		label="receivecontrol1.1532:NS
AssembledTimerValue[15:8] <= RxData[7:0];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9f9bd90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.1531:IF" -> "receivecontrol1.1532:NS"	 [cond="['DetectionWindow', 'ByteCntEq16']",
		label="(DetectionWindow & ByteCntEq16)",
		lineno=1531];
	"receivecontrol1.1592:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fc1b90>",
		fillcolor=firebrick,
		label="receivecontrol1.1592:NS
ByteCnt[4:0] <= 5'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fc1b90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.Leaf_1589:AL"	 [def_var="['ByteCnt']",
		label="receivecontrol1.Leaf_1589:AL"];
	"receivecontrol1.1592:NS" -> "receivecontrol1.Leaf_1589:AL"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.L2_fifo.787:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4343d0>",
		fillcolor=firebrick,
		label="L2_UC_wrapper.L2_fifo.787:NS
data_out <= fifo[read_pointer];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4343d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"L2_UC_wrapper.L2_fifo.787:NS" -> "L2_UC_wrapper.L2_fifo.Leaf_782:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.Leaf_1488:AL"	 [def_var="['OpCodeOK']",
		label="receivecontrol1.Leaf_1488:AL"];
	"receivecontrol1.1701:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37fba36190>",
		clk_sens=False,
		fillcolor=gold,
		label="receivecontrol1.1701:AL",
		sens="['MRxClk', 'RxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['r_PassAll', 'OpCodeOK', 'ReceivedPauseFrm', 'RxStatusWriteLatched_sync2', 'TypeLengthOK', 'RxReset', 'ByteCntEq16']"];
	"receivecontrol1.Leaf_1488:AL" -> "receivecontrol1.1701:AL";
	"receivecontrol1.1507:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37d9fcf890>",
		clk_sens=False,
		fillcolor=gold,
		label="receivecontrol1.1507:AL",
		sens="['MRxClk', 'RxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['OpCodeOK', 'ReceiveEnd', 'TypeLengthOK', 'RxReset', 'ByteCntEq16', 'AddressOK']"];
	"receivecontrol1.Leaf_1488:AL" -> "receivecontrol1.1507:AL";
	"receivecontrol1.1488:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37d9f997d0>",
		clk_sens=False,
		fillcolor=gold,
		label="receivecontrol1.1488:AL",
		sens="['MRxClk', 'RxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['OpCodeOK', 'RxData', 'RxReset', 'ByteCntEq15', 'ByteCntEq14', 'DetectionWindow', 'ByteCntEq16']"];
	"receivecontrol1.Leaf_1488:AL" -> "receivecontrol1.1488:AL";
	"receivecontrol1.1479:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9f99690>",
		fillcolor=firebrick,
		label="receivecontrol1.1479:NS
TypeLengthOK <= ByteCntEq13 & (RxData[7:0] == TypeLength[7:0]) & TypeLengthOK;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9f99690>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.1479:NS" -> "receivecontrol1.Leaf_1470:AL"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.1146:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da4a7250>",
		fillcolor=springgreen,
		label="L2_UC_wrapper.1146:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"L2_UC_wrapper.1146:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4a7350>",
		fillcolor=firebrick,
		label="L2_UC_wrapper.1146:NS
StateLeftinQ <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4a7350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"L2_UC_wrapper.1146:IF" -> "L2_UC_wrapper.1146:NS"	 [cond="['StateLeftinQ']",
		label="(StateLeftinQ == 0)",
		lineno=1146];
	"receivecontrol1.1541:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37d9fd1350>",
		fillcolor=turquoise,
		label="receivecontrol1.1541:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"receivecontrol1.1542:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fd1510>",
		fillcolor=springgreen,
		label="receivecontrol1.1542:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1541:BL" -> "receivecontrol1.1542:IF"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.944:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da42c710>",
		fillcolor=firebrick,
		label="transmitcontrol1.944:NS
CtrlMux <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da42c710>]",
		style=filled,
		typ=NonblockingSubstitution];
	"transmitcontrol1.Leaf_941:AL"	 [def_var="['CtrlMux']",
		label="transmitcontrol1.Leaf_941:AL"];
	"transmitcontrol1.944:NS" -> "transmitcontrol1.Leaf_941:AL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.1026:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da455890>",
		fillcolor=springgreen,
		label="transmitcontrol1.1026:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"transmitcontrol1.1029:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da455b50>",
		fillcolor=springgreen,
		label="transmitcontrol1.1029:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"transmitcontrol1.1026:IF" -> "transmitcontrol1.1029:IF"	 [cond="['TxReset']",
		label="!(TxReset)",
		lineno=1026];
	"transmitcontrol1.1027:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da455850>",
		fillcolor=firebrick,
		label="transmitcontrol1.1027:NS
ByteCnt <= 6'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da455850>]",
		style=filled,
		typ=NonblockingSubstitution];
	"transmitcontrol1.1026:IF" -> "transmitcontrol1.1027:NS"	 [cond="['TxReset']",
		label=TxReset,
		lineno=1026];
	"transmitcontrol1.Leaf_1044:AL" -> "transmitcontrol1.1072:AL";
	"transmitcontrol1.965:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da457690>",
		fillcolor=firebrick,
		label="transmitcontrol1.965:NS
SendingCtrlFrm <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da457690>]",
		style=filled,
		typ=NonblockingSubstitution];
	"transmitcontrol1.Leaf_956:AL"	 [def_var="['SendingCtrlFrm']",
		label="transmitcontrol1.Leaf_956:AL"];
	"transmitcontrol1.965:NS" -> "transmitcontrol1.Leaf_956:AL"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.1170:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da4ada50>",
		fillcolor=turquoise,
		label="L2_UC_wrapper.1170:BL
TxData_wrapped_out[7:0] <= MAC[31:24];
read_fifo <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4ad990>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f37da4adb50>]",
		style=filled,
		typ=Block];
	"L2_UC_wrapper.1170:CA" -> "L2_UC_wrapper.1170:BL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1452:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fc5ed0>",
		fillcolor=firebrick,
		label="receivecontrol1.1452:NS
AddressOK <= ((RxData[7:0] == ReservedMulticast[31:24]) | (RxData[7:0] == MAC[31:24])) & AddressOK;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fc5ed0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.Leaf_1440:AL"	 [def_var="['AddressOK']",
		label="receivecontrol1.Leaf_1440:AL"];
	"receivecontrol1.1452:NS" -> "receivecontrol1.Leaf_1440:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1515:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9f9b0d0>",
		fillcolor=springgreen,
		label="receivecontrol1.1515:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1516:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9f9b1d0>",
		fillcolor=firebrick,
		label="receivecontrol1.1516:NS
ReceivedPauseFrmWAddr <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9f9b1d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.1515:IF" -> "receivecontrol1.1516:NS"	 [cond="['ByteCntEq16', 'TypeLengthOK', 'OpCodeOK', 'AddressOK']",
		label="(ByteCntEq16 & TypeLengthOK & OpCodeOK & AddressOK)",
		lineno=1515];
	"transmitcontrol1.1047:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da7460d0>",
		fillcolor=springgreen,
		label="transmitcontrol1.1047:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"transmitcontrol1.1048:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da73ee90>",
		fillcolor=cadetblue,
		label="transmitcontrol1.1048:BS
MuxedCtrlData[7:0] = 8'h01;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da73ee90>]",
		style=filled,
		typ=BlockingSubstitution];
	"transmitcontrol1.1047:IF" -> "transmitcontrol1.1048:BS"	 [cond="['DlyCrcEn', 'DlyCrcEn', 'DlyCrcCnt']",
		label="(~DlyCrcEn | DlyCrcEn & &DlyCrcCnt[1:0])",
		lineno=1047];
	"transmitcontrol1.1050:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da746150>",
		fillcolor=cadetblue,
		label="transmitcontrol1.1050:BS
MuxedCtrlData[7:0] = 8'h0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da746150>]",
		style=filled,
		typ=BlockingSubstitution];
	"transmitcontrol1.1047:IF" -> "transmitcontrol1.1050:BS"	 [cond="['DlyCrcEn', 'DlyCrcEn', 'DlyCrcCnt']",
		label="!((~DlyCrcEn | DlyCrcEn & &DlyCrcCnt[1:0]))",
		lineno=1047];
	"receivecontrol1.1617:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37fba1dcd0>",
		def_var="['SetPauseTimer']",
		fillcolor=deepskyblue,
		label="receivecontrol1.1617:AS
SetPauseTimer = ReceiveEnd & ReceivedPauseFrmWAddr & ReceivedPacketGood & ReceivedLengthOK & RxFlow;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ReceiveEnd', 'ReceivedPauseFrmWAddr', 'ReceivedPacketGood', 'ReceivedLengthOK', 'RxFlow']"];
	"receivecontrol1.1617:AS" -> "receivecontrol1.1622:AL";
	"receivecontrol1.Leaf_1522:AL"	 [def_var="['AssembledTimerValue']",
		label="receivecontrol1.Leaf_1522:AL"];
	"receivecontrol1.1525:NS" -> "receivecontrol1.Leaf_1522:AL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.898:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37da437710>",
		clk_sens=True,
		fillcolor=gold,
		label="transmitcontrol1.898:AL",
		sens="['MTxClk', 'TxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['TxFlow', 'TxCtrlEndFrm', 'CtrlMux', 'TPauseRq', 'TxReset']"];
	"transmitcontrol1.Leaf_927:AL" -> "transmitcontrol1.898:AL";
	"1858:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37fb9da450>",
		def_var="['TxEndFrmOut']",
		fillcolor=deepskyblue,
		label="1858:AS
TxEndFrmOut = (CtrlMux)? TxCtrlEndFrm : TxEndFrmOut_uc;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['CtrlMux', 'TxCtrlEndFrm', 'TxEndFrmOut_uc']"];
	"transmitcontrol1.Leaf_927:AL" -> "1858:AS";
	"1820:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fba50590>",
		fillcolor=springgreen,
		label="1820:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1823:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fba50790>",
		fillcolor=springgreen,
		label="1823:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1820:IF" -> "1823:IF"	 [cond="['TxStartFrmIn']",
		label="!(TxStartFrmIn)",
		lineno=1820];
	"1821:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba50550>",
		fillcolor=firebrick,
		label="1821:NS
MuxedAbort <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba50550>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1820:IF" -> "1821:NS"	 [cond="['TxStartFrmIn']",
		label=TxStartFrmIn,
		lineno=1820];
	"receivecontrol1.Leaf_1507:AL"	 [def_var="['ReceivedPauseFrmWAddr']",
		label="receivecontrol1.Leaf_1507:AL"];
	"receivecontrol1.Leaf_1507:AL" -> "receivecontrol1.1617:AS";
	"receivecontrol1.1555:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37d9fd1b10>",
		clk_sens=False,
		fillcolor=gold,
		label="receivecontrol1.1555:AL",
		sens="['MRxClk', 'RxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['ReceiveEnd', 'ByteCntEq18', 'AssembledTimerValue', 'RxReset', 'ReceivedPauseFrmWAddr', 'DetectionWindow']"];
	"receivecontrol1.Leaf_1507:AL" -> "receivecontrol1.1555:AL";
	"receivecontrol1.1435:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37d9fb5090>",
		def_var="['ReservedMulticast']",
		fillcolor=deepskyblue,
		label="receivecontrol1.1435:AS
ReservedMulticast = 48'h0180C2000001;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="[]"];
	"receivecontrol1.1435:AS" -> "receivecontrol1.1440:AL";
	"L2_UC_wrapper.1165:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da4bbf90>",
		fillcolor=turquoise,
		label="L2_UC_wrapper.1165:BL
TxData_wrapped_out[7:0] <= DMAC[23:16];
read_fifo <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4bbed0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f37da4a40d0>]",
		style=filled,
		typ=Block];
	"L2_UC_wrapper.1165:CA" -> "L2_UC_wrapper.1165:BL"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.L2_fifo.710:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4921d0>",
		fillcolor=firebrick,
		label="L2_UC_wrapper.L2_fifo.710:NS
cnt <= { { CNT_WIDTH - 1{ 1'b0 } }, read ^ write };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4921d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"L2_UC_wrapper.L2_fifo.709:IF" -> "L2_UC_wrapper.L2_fifo.710:NS"	 [cond="['clear']",
		label=clear,
		lineno=709];
	"L2_UC_wrapper.L2_fifo.712:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da4923d0>",
		fillcolor=springgreen,
		label="L2_UC_wrapper.L2_fifo.712:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"L2_UC_wrapper.L2_fifo.709:IF" -> "L2_UC_wrapper.L2_fifo.712:IF"	 [cond="['clear']",
		label="!(clear)",
		lineno=709];
	"receivecontrol1.Leaf_1522:AL" -> "receivecontrol1.1555:AL";
	"transmitcontrol1.957:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da42ce50>",
		fillcolor=turquoise,
		label="transmitcontrol1.957:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"transmitcontrol1.958:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da42cf90>",
		fillcolor=springgreen,
		label="transmitcontrol1.958:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"transmitcontrol1.957:BL" -> "transmitcontrol1.958:IF"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.L2_fifo.721:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da492810>",
		fillcolor=turquoise,
		label="L2_UC_wrapper.L2_fifo.721:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"L2_UC_wrapper.L2_fifo.720:AL" -> "L2_UC_wrapper.L2_fifo.721:BL"	 [cond="[]",
		lineno=None];
	"1789:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fba4b490>",
		fillcolor=springgreen,
		label="1789:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1790:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba4b450>",
		fillcolor=firebrick,
		label="1790:NS
TxUsedDataOutDetected <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba4b450>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1789:IF" -> "1790:NS"	 [cond="['TxDoneIn', 'TxAbortIn']",
		label="(TxDoneIn | TxAbortIn)",
		lineno=1789];
	"1792:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fba4b650>",
		fillcolor=springgreen,
		label="1792:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1789:IF" -> "1792:IF"	 [cond="['TxDoneIn', 'TxAbortIn']",
		label="!((TxDoneIn | TxAbortIn))",
		lineno=1789];
	"transmitcontrol1.1053:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da746990>",
		fillcolor=cadetblue,
		label="transmitcontrol1.1053:BS
MuxedCtrlData[7:0] = 8'h00;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da746990>]",
		style=filled,
		typ=BlockingSubstitution];
	"transmitcontrol1.1053:BS" -> "transmitcontrol1.Leaf_1044:AL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.983:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da457ed0>",
		fillcolor=springgreen,
		label="transmitcontrol1.983:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"transmitcontrol1.984:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da457e90>",
		fillcolor=firebrick,
		label="transmitcontrol1.984:NS
BlockTxDone <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da457e90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"transmitcontrol1.983:IF" -> "transmitcontrol1.984:NS"	 [cond="['TxReset']",
		label=TxReset,
		lineno=983];
	"transmitcontrol1.986:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da4531d0>",
		fillcolor=springgreen,
		label="transmitcontrol1.986:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"transmitcontrol1.983:IF" -> "transmitcontrol1.986:IF"	 [cond="['TxReset']",
		label="!(TxReset)",
		lineno=983];
	"receivecontrol1.1640:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37fba28390>",
		fillcolor=turquoise,
		label="receivecontrol1.1640:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"receivecontrol1.1641:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fba28690>",
		fillcolor=springgreen,
		label="receivecontrol1.1641:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1640:BL" -> "receivecontrol1.1641:IF"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.L2_fifo.Leaf_704:AL"	 [def_var="['cnt']",
		label="L2_UC_wrapper.L2_fifo.Leaf_704:AL"];
	"L2_UC_wrapper.L2_fifo.710:NS" -> "L2_UC_wrapper.L2_fifo.Leaf_704:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1634:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37fba22c10>",
		def_var="['PauseTimerEq0']",
		fillcolor=deepskyblue,
		label="receivecontrol1.1634:AS
PauseTimerEq0 = ~(|PauseTimer[15:0]);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['PauseTimer']"];
	"receivecontrol1.1639:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37fba28350>",
		clk_sens=True,
		fillcolor=gold,
		label="receivecontrol1.1639:AL",
		sens="['MTxClk', 'TxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['PauseTimerEq0', 'PauseTimerEq0_sync1', 'TxReset']"];
	"receivecontrol1.1634:AS" -> "receivecontrol1.1639:AL";
	"receivecontrol1.1685:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fba31550>",
		fillcolor=springgreen,
		label="receivecontrol1.1685:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1684:BL" -> "receivecontrol1.1685:IF"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.1036:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da73e450>",
		fillcolor=firebrick,
		label="transmitcontrol1.1036:NS
ByteCnt <= ByteCnt[5:0] + 6'd1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da73e450>]",
		style=filled,
		typ=NonblockingSubstitution];
	"transmitcontrol1.Leaf_1024:AL"	 [def_var="['ByteCnt']",
		label="transmitcontrol1.Leaf_1024:AL"];
	"transmitcontrol1.1036:NS" -> "transmitcontrol1.Leaf_1024:AL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.901:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4378d0>",
		fillcolor=firebrick,
		label="transmitcontrol1.901:NS
WillSendControlFrame <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4378d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"transmitcontrol1.901:NS" -> "transmitcontrol1.Leaf_898:AL"	 [cond="[]",
		lineno=None];
	"1800:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fba4bb10>",
		fillcolor=springgreen,
		label="1800:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1806:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37fba4bd10>",
		fillcolor=turquoise,
		label="1806:BL
TxAbortInLatched <= TxAbortIn;
TxDoneInLatched <= TxDoneIn;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba4bd50>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f37fba4bed0>]",
		style=filled,
		typ=Block];
	"1800:IF" -> "1806:BL"	 [cond="['TxReset']",
		label="!(TxReset)",
		lineno=1800];
	"1801:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37fba4b990>",
		fillcolor=turquoise,
		label="1801:BL
TxAbortInLatched <= 1'b0;
TxDoneInLatched <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba4b9d0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f37fba4bb50>]",
		style=filled,
		typ=Block];
	"1800:IF" -> "1801:BL"	 [cond="['TxReset']",
		label=TxReset,
		lineno=1800];
	"transmitcontrol1.1040:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37da73e190>",
		def_var="['ControlEnd']",
		fillcolor=deepskyblue,
		label="transmitcontrol1.1040:AS
ControlEnd = ByteCnt[5:0] == 6'h22;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ByteCnt']"];
	"transmitcontrol1.927:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37da42fd10>",
		clk_sens=True,
		fillcolor=gold,
		label="transmitcontrol1.927:AL",
		sens="['MTxClk', 'TxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['ControlEnd_q', 'ControlEnd', 'TxReset']"];
	"transmitcontrol1.1040:AS" -> "transmitcontrol1.927:AL";
	"transmitcontrol1.1019:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37da456c90>",
		def_var="['IncrementByteCnt']",
		fillcolor=deepskyblue,
		label="transmitcontrol1.1019:AS
IncrementByteCnt = CtrlMux & (TxCtrlStartFrm & ~TxCtrlStartFrm_q & ~TxUsedDataIn | TxUsedDataIn & ~ControlEnd);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['CtrlMux', 'TxCtrlStartFrm', 'TxCtrlStartFrm_q', 'TxUsedDataIn', 'TxUsedDataIn', 'ControlEnd']"];
	"transmitcontrol1.1040:AS" -> "transmitcontrol1.1019:AS";
	"transmitcontrol1.994:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37da4532d0>",
		clk_sens=True,
		fillcolor=gold,
		label="transmitcontrol1.994:AL",
		sens="['MTxClk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['TxCtrlStartFrm', 'ControlEnd']"];
	"transmitcontrol1.1040:AS" -> "transmitcontrol1.994:AL";
	"receivecontrol1.1625:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba22650>",
		fillcolor=firebrick,
		label="receivecontrol1.1625:NS
PauseTimer[15:0] <= 16'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba22650>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.Leaf_1622:AL"	 [def_var="['PauseTimer']",
		label="receivecontrol1.Leaf_1622:AL"];
	"receivecontrol1.1625:NS" -> "receivecontrol1.Leaf_1622:AL"	 [cond="[]",
		lineno=None];
	"Leaf_1798:AL"	 [def_var="['TxAbortInLatched', 'TxDoneInLatched']",
		label="Leaf_1798:AL"];
	"1806:BL" -> "Leaf_1798:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1572:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fb79d0>",
		fillcolor=springgreen,
		label="receivecontrol1.1572:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1573:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fb7990>",
		fillcolor=firebrick,
		label="receivecontrol1.1573:NS
DlyCrcCnt <= 3'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fb7990>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.1572:IF" -> "receivecontrol1.1573:NS"	 [cond="['RxReset']",
		label=RxReset,
		lineno=1572];
	"receivecontrol1.1575:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fb7cd0>",
		fillcolor=springgreen,
		label="receivecontrol1.1575:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1572:IF" -> "receivecontrol1.1575:IF"	 [cond="['RxReset']",
		label="!(RxReset)",
		lineno=1572];
	"receivecontrol1.1458:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fa9d90>",
		fillcolor=firebrick,
		label="receivecontrol1.1458:NS
AddressOK <= ((RxData[7:0] == ReservedMulticast[15:8]) | (RxData[7:0] == MAC[15:8])) & AddressOK;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fa9d90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.1458:NS" -> "receivecontrol1.Leaf_1440:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1709:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fba36b50>",
		fillcolor=springgreen,
		label="receivecontrol1.1709:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1709:IF" -> "receivecontrol1.1710:NS"	 [cond="['ByteCntEq16', 'TypeLengthOK', 'OpCodeOK']",
		label="(ByteCntEq16 & TypeLengthOK & OpCodeOK)",
		lineno=1709];
	"L2_UC_wrapper.L2_fifo.741:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da865ed0>",
		fillcolor=firebrick,
		label="L2_UC_wrapper.L2_fifo.741:NS
write_pointer <= write_pointer + 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da865ed0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"L2_UC_wrapper.L2_fifo.741:NS" -> "L2_UC_wrapper.L2_fifo.Leaf_732:AL"	 [cond="[]",
		lineno=None];
	"1830:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37fba50a90>",
		fillcolor=turquoise,
		label="1830:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1831:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fba50c10>",
		fillcolor=springgreen,
		label="1831:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1830:BL" -> "1831:IF"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1623:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37fba22450>",
		fillcolor=turquoise,
		label="receivecontrol1.1623:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"receivecontrol1.1624:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fba22690>",
		fillcolor=springgreen,
		label="receivecontrol1.1624:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1623:BL" -> "receivecontrol1.1624:IF"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1530:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37d9f9be50>",
		fillcolor=turquoise,
		label="receivecontrol1.1530:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"receivecontrol1.1530:BL" -> "receivecontrol1.1531:IF"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1533:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fd1110>",
		fillcolor=springgreen,
		label="receivecontrol1.1533:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1530:BL" -> "receivecontrol1.1533:IF"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.Leaf_1024:AL" -> "transmitcontrol1.1072:AL";
	"transmitcontrol1.Leaf_1024:AL" -> "transmitcontrol1.1040:AS";
	"transmitcontrol1.1024:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37da4556d0>",
		clk_sens=True,
		fillcolor=gold,
		label="transmitcontrol1.1024:AL",
		sens="['MTxClk', 'TxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['IncrementByteCnt', 'EnableCnt', 'IncrementByteCntBy2', 'ResetByteCnt', 'ByteCnt', 'TxReset']"];
	"transmitcontrol1.Leaf_1024:AL" -> "transmitcontrol1.1024:AL";
	"transmitcontrol1.1044:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37da73e850>",
		clk_sens=False,
		fillcolor=gold,
		label="transmitcontrol1.1044:AL",
		sens="['ByteCnt', 'DlyCrcEn', 'MAC', 'TxPauseTV', 'DlyCrcCnt']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['DlyCrcEn', 'TxPauseTV', 'MAC', 'DlyCrcCnt', 'ByteCnt']"];
	"transmitcontrol1.Leaf_1024:AL" -> "transmitcontrol1.1044:AL";
	"receivecontrol1.1674:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba2cd50>",
		fillcolor=firebrick,
		label="receivecontrol1.1674:NS
Divider2 <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba2cd50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.Leaf_1666:AL"	 [def_var="['Divider2']",
		label="receivecontrol1.Leaf_1666:AL"];
	"receivecontrol1.1674:NS" -> "receivecontrol1.Leaf_1666:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1591:IF" -> "receivecontrol1.1592:NS"	 [cond="['RxReset']",
		label=RxReset,
		lineno=1591];
	"receivecontrol1.1594:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fc1f50>",
		fillcolor=springgreen,
		label="receivecontrol1.1594:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1591:IF" -> "receivecontrol1.1594:IF"	 [cond="['RxReset']",
		label="!(RxReset)",
		lineno=1591];
	"transmitcontrol1.1059:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da74fd90>",
		fillcolor=lightcyan,
		label="transmitcontrol1.1059:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"transmitcontrol1.1059:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da74fe90>",
		fillcolor=cadetblue,
		label="transmitcontrol1.1059:BS
MuxedCtrlData[7:0] = MAC[23:16];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da74fe90>]",
		style=filled,
		typ=BlockingSubstitution];
	"transmitcontrol1.1059:CA" -> "transmitcontrol1.1059:BS"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1578:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fb7fd0>",
		fillcolor=springgreen,
		label="receivecontrol1.1578:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1579:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fc11d0>",
		fillcolor=firebrick,
		label="receivecontrol1.1579:NS
DlyCrcCnt <= DlyCrcCnt + 3'd1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fc11d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.1578:IF" -> "receivecontrol1.1579:NS"	 [cond="['RxValid', 'RxEndFrm', 'DlyCrcCnt']",
		label="(RxValid & ~RxEndFrm & ~DlyCrcCnt[2])",
		lineno=1578];
	"receivecontrol1.1490:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9f99b50>",
		fillcolor=springgreen,
		label="receivecontrol1.1490:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1493:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9f99dd0>",
		fillcolor=springgreen,
		label="receivecontrol1.1493:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1490:IF" -> "receivecontrol1.1493:IF"	 [cond="['RxReset']",
		label="!(RxReset)",
		lineno=1490];
	"receivecontrol1.1491:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9f99b10>",
		fillcolor=firebrick,
		label="receivecontrol1.1491:NS
OpCodeOK <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9f99b10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.1490:IF" -> "receivecontrol1.1491:NS"	 [cond="['RxReset']",
		label=RxReset,
		lineno=1490];
	"receivecontrol1.1496:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37d9f99d50>",
		fillcolor=turquoise,
		label="receivecontrol1.1496:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"receivecontrol1.1496:BL" -> "receivecontrol1.1500:IF"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1497:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9f99fd0>",
		fillcolor=springgreen,
		label="receivecontrol1.1497:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1496:BL" -> "receivecontrol1.1497:IF"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.L2_fifo.733:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da865450>",
		fillcolor=turquoise,
		label="L2_UC_wrapper.L2_fifo.733:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"L2_UC_wrapper.L2_fifo.732:AL" -> "L2_UC_wrapper.L2_fifo.733:BL"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.1154:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37da4a77d0>",
		clk_sens=False,
		fillcolor=gold,
		label="L2_UC_wrapper.1154:AL",
		sens="['Divided_2_clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['DMAC', 'StateLeftinQ', 'StateCount', 'TxStartFrmIn', 'TxData_wrapped_out_wire', 'PreNib15State', 'MAC', 'ByteCnt']"];
	"L2_UC_wrapper.L2_fifo.Leaf_782:AL" -> "L2_UC_wrapper.1154:AL";
	"transmitcontrol1.1030:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da455b10>",
		fillcolor=firebrick,
		label="transmitcontrol1.1030:NS
ByteCnt <= 6'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da455b10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"transmitcontrol1.1030:NS" -> "transmitcontrol1.Leaf_1024:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1669:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba2c790>",
		fillcolor=firebrick,
		label="receivecontrol1.1669:NS
Divider2 <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba2c790>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.1668:IF" -> "receivecontrol1.1669:NS"	 [cond="['RxReset']",
		label=RxReset,
		lineno=1668];
	"receivecontrol1.1671:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fba2cb90>",
		fillcolor=springgreen,
		label="receivecontrol1.1671:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1668:IF" -> "receivecontrol1.1671:IF"	 [cond="['RxReset']",
		label="!(RxReset)",
		lineno=1668];
	"receivecontrol1.1666:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37fba2c610>",
		clk_sens=False,
		fillcolor=gold,
		label="receivecontrol1.1666:AL",
		sens="['MRxClk', 'RxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['RxReset', 'PauseTimer', 'RxFlow', 'Divider2']"];
	"receivecontrol1.Leaf_1666:AL" -> "receivecontrol1.1666:AL";
	"receivecontrol1.1679:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37fba2cf90>",
		def_var="['IncrementSlotTimer']",
		fillcolor=deepskyblue,
		label="receivecontrol1.1679:AS
IncrementSlotTimer = Pause & RxFlow & Divider2;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Pause', 'RxFlow', 'Divider2']"];
	"receivecontrol1.Leaf_1666:AL" -> "receivecontrol1.1679:AS";
	"L2_UC_wrapper.L2_fifo.Leaf_732:AL" -> "L2_UC_wrapper.L2_fifo.732:AL";
	"receivecontrol1.1560:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fb73d0>",
		fillcolor=springgreen,
		label="receivecontrol1.1560:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1560:IF" -> "receivecontrol1.1563:IF"	 [cond="['DetectionWindow', 'ReceivedPauseFrmWAddr', 'ByteCntEq18']",
		label="!((DetectionWindow & ReceivedPauseFrmWAddr & ByteCntEq18))",
		lineno=1560];
	"receivecontrol1.1560:IF" -> "receivecontrol1.1561:NS"	 [cond="['DetectionWindow', 'ReceivedPauseFrmWAddr', 'ByteCntEq18']",
		label="(DetectionWindow & ReceivedPauseFrmWAddr & ByteCntEq18)",
		lineno=1560];
	"transmitcontrol1.907:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da437f90>",
		fillcolor=firebrick,
		label="transmitcontrol1.907:NS
WillSendControlFrame <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da437f90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"transmitcontrol1.907:NS" -> "transmitcontrol1.Leaf_898:AL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.935:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da42c450>",
		fillcolor=firebrick,
		label="transmitcontrol1.935:NS
TxCtrlEndFrm <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da42c450>]",
		style=filled,
		typ=NonblockingSubstitution];
	"transmitcontrol1.935:NS" -> "transmitcontrol1.Leaf_927:AL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.1056:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da74f250>",
		fillcolor=lightcyan,
		label="transmitcontrol1.1056:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"transmitcontrol1.1056:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da74f350>",
		fillcolor=cadetblue,
		label="transmitcontrol1.1056:BS
MuxedCtrlData[7:0] = MAC[47:40];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da74f350>]",
		style=filled,
		typ=BlockingSubstitution];
	"transmitcontrol1.1056:CA" -> "transmitcontrol1.1056:BS"	 [cond="[]",
		lineno=None];
	"1785:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37fba47f50>",
		fillcolor=turquoise,
		label="1785:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1786:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fba4b150>",
		fillcolor=springgreen,
		label="1786:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1785:BL" -> "1786:IF"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.1077:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da751550>",
		fillcolor=springgreen,
		label="transmitcontrol1.1077:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"transmitcontrol1.1078:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da751690>",
		fillcolor=firebrick,
		label="transmitcontrol1.1078:NS
ControlData[7:0] <= MuxedCtrlData[7:0];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da751690>]",
		style=filled,
		typ=NonblockingSubstitution];
	"transmitcontrol1.1077:IF" -> "transmitcontrol1.1078:NS"	 [cond="['ByteCnt']",
		label="(~ByteCnt[0])",
		lineno=1077];
	"transmitcontrol1.1065:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da7472d0>",
		fillcolor=cadetblue,
		label="transmitcontrol1.1065:BS
MuxedCtrlData[7:0] = 8'h01;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da7472d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"transmitcontrol1.1065:BS" -> "transmitcontrol1.Leaf_1044:AL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.Leaf_941:AL" -> "1854:AS";
	"transmitcontrol1.Leaf_941:AL" -> "transmitcontrol1.1001:AS";
	"1851:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37fba55e10>",
		def_var="['TxUsedDataOut']",
		fillcolor=deepskyblue,
		label="1851:AS
TxUsedDataOut = ~CtrlMux & TxUsedDataIn;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['CtrlMux', 'TxUsedDataIn']"];
	"transmitcontrol1.Leaf_941:AL" -> "1851:AS";
	"1843:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37fba55550>",
		def_var="['TxDoneOut']",
		fillcolor=deepskyblue,
		label="1843:AS
TxDoneOut = (CtrlMux)? ~TxStartFrmIn & ~BlockTxDone & MuxedDone : ~TxStartFrmIn & ~BlockTxDone & TxDoneIn;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['CtrlMux', 'TxStartFrmIn', 'BlockTxDone', 'MuxedDone', 'TxStartFrmIn', 'BlockTxDone', 'TxDoneIn']"];
	"transmitcontrol1.Leaf_941:AL" -> "1843:AS";
	"transmitcontrol1.1020:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37da455090>",
		def_var="['IncrementByteCntBy2']",
		fillcolor=deepskyblue,
		label="transmitcontrol1.1020:AS
IncrementByteCntBy2 = CtrlMux & TxCtrlStartFrm & ~TxCtrlStartFrm_q & TxUsedDataIn;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['CtrlMux', 'TxCtrlStartFrm', 'TxCtrlStartFrm_q', 'TxUsedDataIn']"];
	"transmitcontrol1.Leaf_941:AL" -> "transmitcontrol1.1020:AS";
	"transmitcontrol1.Leaf_941:AL" -> "transmitcontrol1.912:AL";
	"transmitcontrol1.Leaf_941:AL" -> "transmitcontrol1.1019:AS";
	"1863:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37fb9da9d0>",
		def_var="['TxDataOut']",
		fillcolor=deepskyblue,
		label="1863:AS
TxDataOut[7:0] = (CtrlMux)? ControlData[7:0] : 
(L2_wrap_en)? TxData_wrapped_out[7:0] : TxDataIn;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['CtrlMux', 'ControlData', 'L2_wrap_en', 'TxData_wrapped_out', 'TxDataIn']"];
	"transmitcontrol1.Leaf_941:AL" -> "1863:AS";
	"1847:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37fba55ad0>",
		def_var="['TxAbortOut']",
		fillcolor=deepskyblue,
		label="1847:AS
TxAbortOut = (CtrlMux)? ~TxStartFrmIn & ~BlockTxDone & MuxedAbort : ~TxStartFrmIn & ~BlockTxDone & TxAbortIn;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['CtrlMux', 'TxStartFrmIn', 'BlockTxDone', 'MuxedAbort', 'TxStartFrmIn', 'BlockTxDone', 'TxAbortIn']"];
	"transmitcontrol1.Leaf_941:AL" -> "1847:AS";
	"transmitcontrol1.Leaf_941:AL" -> "transmitcontrol1.898:AL";
	"transmitcontrol1.Leaf_941:AL" -> "1858:AS";
	"receivecontrol1.1540:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37d9fd1310>",
		clk_sens=False,
		fillcolor=gold,
		label="receivecontrol1.1540:AL",
		sens="['MRxClk', 'RxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['RxReset', 'ByteCntEq18', 'ReceiveEnd']"];
	"receivecontrol1.1540:AL" -> "receivecontrol1.1541:BL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.1008:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da453ed0>",
		fillcolor=firebrick,
		label="transmitcontrol1.1008:NS
DlyCrcCnt <= 4'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da453ed0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"transmitcontrol1.Leaf_1005:AL"	 [def_var="['DlyCrcCnt']",
		label="transmitcontrol1.Leaf_1005:AL"];
	"transmitcontrol1.1008:NS" -> "transmitcontrol1.Leaf_1005:AL"	 [cond="[]",
		lineno=None];
	"1784:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37fba47f10>",
		clk_sens=True,
		fillcolor=gold,
		label="1784:AL",
		sens="['MTxClk', 'TxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['TxDoneIn', 'TxAbortIn', 'TxUsedDataOut', 'TxReset']"];
	"1784:AL" -> "1785:BL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.Leaf_1683:AL"	 [def_var="['SlotTimer']",
		label="receivecontrol1.Leaf_1683:AL"];
	"receivecontrol1.Leaf_1683:AL" -> "receivecontrol1.1683:AL";
	"receivecontrol1.Leaf_1683:AL" -> "receivecontrol1.1696:AS";
	"transmitcontrol1.1033:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da455f90>",
		fillcolor=firebrick,
		label="transmitcontrol1.1033:NS
ByteCnt <= ByteCnt[5:0] + 6'd2;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da455f90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"transmitcontrol1.1033:NS" -> "transmitcontrol1.Leaf_1024:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1672:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba2cbd0>",
		fillcolor=firebrick,
		label="receivecontrol1.1672:NS
Divider2 <= ~Divider2;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba2cbd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.1672:NS" -> "receivecontrol1.Leaf_1666:AL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.1052:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da746690>",
		fillcolor=cadetblue,
		label="transmitcontrol1.1052:BS
MuxedCtrlData[7:0] = 8'hC2;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da746690>]",
		style=filled,
		typ=BlockingSubstitution];
	"transmitcontrol1.1052:BS" -> "transmitcontrol1.Leaf_1044:AL"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.L2_fifo.747:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37da86a510>",
		def_var="['almost_full']",
		fillcolor=deepskyblue,
		label="L2_UC_wrapper.L2_fifo.747:AS
almost_full = &cnt[CNT_WIDTH-2:0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cnt']"];
	"1817:IF" -> "1820:IF"	 [cond="['TxReset']",
		label="!(TxReset)",
		lineno=1817];
	"1818:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba50290>",
		fillcolor=firebrick,
		label="1818:NS
MuxedAbort <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba50290>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1817:IF" -> "1818:NS"	 [cond="['TxReset']",
		label=TxReset,
		lineno=1817];
	"1832:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba50bd0>",
		fillcolor=firebrick,
		label="1832:NS
MuxedDone <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba50bd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1832:NS" -> "Leaf_1829:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1556:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37d9fd1b50>",
		fillcolor=turquoise,
		label="receivecontrol1.1556:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"receivecontrol1.1557:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fd1dd0>",
		fillcolor=springgreen,
		label="receivecontrol1.1557:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1556:BL" -> "receivecontrol1.1557:IF"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.1035:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da73e1d0>",
		fillcolor=springgreen,
		label="transmitcontrol1.1035:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"transmitcontrol1.1035:IF" -> "transmitcontrol1.1036:NS"	 [cond="['IncrementByteCnt', 'EnableCnt']",
		label="(IncrementByteCnt & EnableCnt)",
		lineno=1035];
	"L2_UC_wrapper.L2_fifo.721:BL" -> "L2_UC_wrapper.L2_fifo.722:IF"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.1064:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da74df10>",
		fillcolor=lightcyan,
		label="transmitcontrol1.1064:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"transmitcontrol1.1064:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da74df90>",
		fillcolor=cadetblue,
		label="transmitcontrol1.1064:BS
MuxedCtrlData[7:0] = 8'h00;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da74df90>]",
		style=filled,
		typ=BlockingSubstitution];
	"transmitcontrol1.1064:CA" -> "transmitcontrol1.1064:BS"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.1127:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37da4b6110>",
		clk_sens=False,
		fillcolor=gold,
		label="L2_UC_wrapper.1127:AL",
		sens="['TxStartFrmIn']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="[]"];
	"L2_UC_wrapper.1128:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da49ced0>",
		fillcolor=turquoise,
		label="L2_UC_wrapper.1128:BL
Divided_2_clk = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da4b6210>]",
		style=filled,
		typ=Block];
	"L2_UC_wrapper.1127:AL" -> "L2_UC_wrapper.1128:BL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1658:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba28e50>",
		fillcolor=firebrick,
		label="receivecontrol1.1658:NS
Pause <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba28e50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.Leaf_1655:AL"	 [def_var="['Pause']",
		label="receivecontrol1.Leaf_1655:AL"];
	"receivecontrol1.1658:NS" -> "receivecontrol1.Leaf_1655:AL"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.L2_fifo.778:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da86ae10>",
		fillcolor=firebrick,
		label="L2_UC_wrapper.L2_fifo.778:NS
fifo[write_pointer] <= data_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da86ae10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"L2_UC_wrapper.L2_fifo.Leaf_772:AL"	 [def_var="['fifo']",
		label="L2_UC_wrapper.L2_fifo.Leaf_772:AL"];
	"L2_UC_wrapper.L2_fifo.778:NS" -> "L2_UC_wrapper.L2_fifo.Leaf_772:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1614:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37fba1d9d0>",
		def_var="['ByteCntEq18']",
		fillcolor=deepskyblue,
		label="receivecontrol1.1614:AS
ByteCntEq18 = RxValid & (ByteCnt[4:0] == 5'h12) & DetectionWindow;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxValid', 'ByteCnt', 'DetectionWindow']"];
	"receivecontrol1.1614:AS" -> "receivecontrol1.1540:AL";
	"receivecontrol1.1614:AS" -> "receivecontrol1.1555:AL";
	"receivecontrol1.1584:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37d9fc1690>",
		def_var="['IncrementByteCnt']",
		fillcolor=deepskyblue,
		label="receivecontrol1.1584:AS
IncrementByteCnt = RxValid & DetectionWindow & ~ByteCntEq18 & (~DlyCrcEn | DlyCrcEn & DlyCrcCnt[2]);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxValid', 'DetectionWindow', 'ByteCntEq18', 'DlyCrcEn', 'DlyCrcEn', 'DlyCrcCnt']"];
	"receivecontrol1.1614:AS" -> "receivecontrol1.1584:AS";
	"receivecontrol1.1445:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fb5d90>",
		fillcolor=springgreen,
		label="receivecontrol1.1445:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1448:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fc53d0>",
		fillcolor=springgreen,
		label="receivecontrol1.1448:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1445:IF" -> "receivecontrol1.1448:IF"	 [cond="['DetectionWindow', 'ByteCntEq0']",
		label="!((DetectionWindow & ByteCntEq0))",
		lineno=1445];
	"receivecontrol1.1446:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fb5d50>",
		fillcolor=firebrick,
		label="receivecontrol1.1446:NS
AddressOK <= (RxData[7:0] == ReservedMulticast[47:40]) | (RxData[7:0] == MAC[47:40]);",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fb5d50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.1445:IF" -> "receivecontrol1.1446:NS"	 [cond="['DetectionWindow', 'ByteCntEq0']",
		label="(DetectionWindow & ByteCntEq0)",
		lineno=1445];
	"transmitcontrol1.950:NS" -> "transmitcontrol1.Leaf_941:AL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.929:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da42ff10>",
		fillcolor=springgreen,
		label="transmitcontrol1.929:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"transmitcontrol1.929:IF" -> "transmitcontrol1.930:NS"	 [cond="['TxReset']",
		label=TxReset,
		lineno=929];
	"transmitcontrol1.932:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da42c350>",
		fillcolor=springgreen,
		label="transmitcontrol1.932:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"transmitcontrol1.929:IF" -> "transmitcontrol1.932:IF"	 [cond="['TxReset']",
		label="!(TxReset)",
		lineno=929];
	"L2_UC_wrapper.L2_fifo.716:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da492850>",
		fillcolor=firebrick,
		label="L2_UC_wrapper.L2_fifo.716:NS
cnt <= cnt + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da492850>]",
		style=filled,
		typ=NonblockingSubstitution];
	"L2_UC_wrapper.L2_fifo.716:NS" -> "L2_UC_wrapper.L2_fifo.Leaf_704:AL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.1025:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da455710>",
		fillcolor=turquoise,
		label="transmitcontrol1.1025:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"transmitcontrol1.1024:AL" -> "transmitcontrol1.1025:BL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1449:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fc5650>",
		fillcolor=firebrick,
		label="receivecontrol1.1449:NS
AddressOK <= ((RxData[7:0] == ReservedMulticast[39:32]) | (RxData[7:0] == MAC[39:32])) & AddressOK;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fc5650>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.1448:IF" -> "receivecontrol1.1449:NS"	 [cond="['DetectionWindow', 'ByteCntEq1']",
		label="(DetectionWindow & ByteCntEq1)",
		lineno=1448];
	"receivecontrol1.1451:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fc5c50>",
		fillcolor=springgreen,
		label="receivecontrol1.1451:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1448:IF" -> "receivecontrol1.1451:IF"	 [cond="['DetectionWindow', 'ByteCntEq1']",
		label="!((DetectionWindow & ByteCntEq1))",
		lineno=1448];
	"receivecontrol1.1564:NS" -> "receivecontrol1.Leaf_1555:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1472:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fa9950>",
		fillcolor=springgreen,
		label="receivecontrol1.1472:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1472:IF" -> "receivecontrol1.1473:NS"	 [cond="['RxReset']",
		label=RxReset,
		lineno=1472];
	"receivecontrol1.1475:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fcdfd0>",
		fillcolor=springgreen,
		label="receivecontrol1.1475:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1472:IF" -> "receivecontrol1.1475:IF"	 [cond="['RxReset']",
		label="!(RxReset)",
		lineno=1472];
	"L2_UC_wrapper.1146:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da4b6fd0>",
		fillcolor=lightcyan,
		label="L2_UC_wrapper.1146:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"L2_UC_wrapper.1146:CA" -> "L2_UC_wrapper.1146:IF"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.Leaf_1005:AL" -> "transmitcontrol1.1001:AS";
	"transmitcontrol1.Leaf_1005:AL" -> "transmitcontrol1.1044:AL";
	"transmitcontrol1.1022:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37da4554d0>",
		def_var="['EnableCnt']",
		fillcolor=deepskyblue,
		label="transmitcontrol1.1022:AS
EnableCnt = ~DlyCrcEn | DlyCrcEn & &DlyCrcCnt[1:0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['DlyCrcEn', 'DlyCrcEn', 'DlyCrcCnt']"];
	"transmitcontrol1.Leaf_1005:AL" -> "transmitcontrol1.1022:AS";
	"transmitcontrol1.Leaf_1005:AL" -> "transmitcontrol1.1005:AL";
	"L2_UC_wrapper.Leaf_1131:AL" -> "L2_UC_wrapper.1131:AL";
	"L2_UC_wrapper.Leaf_1131:AL" -> "L2_UC_wrapper.1125:AS";
	"L2_UC_wrapper.Leaf_1131:AL" -> "L2_UC_wrapper.1154:AL";
	"transmitcontrol1.946:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da42cb10>",
		fillcolor=springgreen,
		label="transmitcontrol1.946:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"transmitcontrol1.946:IF" -> "transmitcontrol1.949:IF"	 [cond="['WillSendControlFrame', 'TxUsedDataOut']",
		label="!((WillSendControlFrame & ~TxUsedDataOut))",
		lineno=946];
	"transmitcontrol1.947:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da42cad0>",
		fillcolor=firebrick,
		label="transmitcontrol1.947:NS
CtrlMux <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da42cad0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"transmitcontrol1.946:IF" -> "transmitcontrol1.947:NS"	 [cond="['WillSendControlFrame', 'TxUsedDataOut']",
		label="(WillSendControlFrame & ~TxUsedDataOut)",
		lineno=946];
	"transmitcontrol1.904:NS" -> "transmitcontrol1.Leaf_898:AL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.1066:BS" -> "transmitcontrol1.Leaf_1044:AL"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.1174:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da4abd10>",
		fillcolor=turquoise,
		label="L2_UC_wrapper.1174:BL
read_fifo <= 1;
TxData_wrapped_out <= TxData_wrapped_out_wire;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4abd50>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f37da4abf10>]",
		style=filled,
		typ=Block];
	"L2_UC_wrapper.1174:BL" -> "L2_UC_wrapper.Leaf_1154:AL"	 [cond="[]",
		lineno=None];
	"1801:BL" -> "Leaf_1798:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1493:IF" -> "receivecontrol1.1496:BL"	 [cond="['ByteCntEq16']",
		label="!(ByteCntEq16)",
		lineno=1493];
	"receivecontrol1.1494:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9f99d90>",
		fillcolor=firebrick,
		label="receivecontrol1.1494:NS
OpCodeOK <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9f99d90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.1493:IF" -> "receivecontrol1.1494:NS"	 [cond="['ByteCntEq16']",
		label=ByteCntEq16,
		lineno=1493];
	"L2_UC_wrapper.L2_fifo.737:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da865a50>",
		fillcolor=springgreen,
		label="L2_UC_wrapper.L2_fifo.737:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"L2_UC_wrapper.L2_fifo.737:IF" -> "L2_UC_wrapper.L2_fifo.738:NS"	 [cond="['clear']",
		label=clear,
		lineno=737];
	"L2_UC_wrapper.L2_fifo.740:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da865d10>",
		fillcolor=springgreen,
		label="L2_UC_wrapper.L2_fifo.740:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"L2_UC_wrapper.L2_fifo.737:IF" -> "L2_UC_wrapper.L2_fifo.740:IF"	 [cond="['clear']",
		label="!(clear)",
		lineno=737];
	"receivecontrol1.1436:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37d9fb51d0>",
		def_var="['TypeLength']",
		fillcolor=deepskyblue,
		label="receivecontrol1.1436:AS
TypeLength = 16'h8808;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="[]"];
	"receivecontrol1.1470:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37d9fc5810>",
		clk_sens=False,
		fillcolor=gold,
		label="receivecontrol1.1470:AL",
		sens="['MRxClk', 'RxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['TypeLength', 'ReceiveEnd', 'RxData', 'TypeLengthOK', 'RxReset', 'ByteCntEq13', 'ByteCntEq12', 'DetectionWindow']"];
	"receivecontrol1.1436:AS" -> "receivecontrol1.1470:AL";
	"1799:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37fba4b810>",
		fillcolor=turquoise,
		label="1799:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1799:BL" -> "1800:IF"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.1014:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da456510>",
		fillcolor=firebrick,
		label="transmitcontrol1.1014:NS
DlyCrcCnt <= DlyCrcCnt + 4'd1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da456510>]",
		style=filled,
		typ=NonblockingSubstitution];
	"transmitcontrol1.1014:NS" -> "transmitcontrol1.Leaf_1005:AL"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.Leaf_1154:AL" -> "L2_UC_wrapper.L2_fifo.720:AL";
	"L2_UC_wrapper.Leaf_1154:AL" -> "L2_UC_wrapper.L2_fifo.732:AL";
	"L2_UC_wrapper.L2_fifo.704:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37da459b50>",
		clk_sens=False,
		fillcolor=gold,
		label="L2_UC_wrapper.L2_fifo.704:AL",
		sens="['clk', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'read', 'clear', 'write', 'cnt']"];
	"L2_UC_wrapper.Leaf_1154:AL" -> "L2_UC_wrapper.L2_fifo.704:AL";
	"L2_UC_wrapper.Leaf_1154:AL" -> "1863:AS";
	"L2_UC_wrapper.Leaf_1154:AL" -> "L2_UC_wrapper.1154:AL";
	"L2_UC_wrapper.Leaf_1154:AL" -> "L2_UC_wrapper.L2_fifo.772:AL";
	"receivecontrol1.Leaf_1570:AL"	 [def_var="['DlyCrcCnt']",
		label="receivecontrol1.Leaf_1570:AL"];
	"receivecontrol1.1579:NS" -> "receivecontrol1.Leaf_1570:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1441:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37d9fb5450>",
		fillcolor=turquoise,
		label="receivecontrol1.1441:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"receivecontrol1.1440:AL" -> "receivecontrol1.1441:BL"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.1169:CA" -> "L2_UC_wrapper.1169:BL"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.1141:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da4b6a50>",
		fillcolor=springgreen,
		label="L2_UC_wrapper.1141:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"L2_UC_wrapper.1141:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4b6b50>",
		fillcolor=firebrick,
		label="L2_UC_wrapper.1141:NS
StateCount <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4b6b50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"L2_UC_wrapper.1141:IF" -> "L2_UC_wrapper.1141:NS"	 [cond="['StateCount']",
		label="(StateCount == 0)",
		lineno=1141];
	"transmitcontrol1.1006:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da453d90>",
		fillcolor=turquoise,
		label="transmitcontrol1.1006:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"transmitcontrol1.1007:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da453f10>",
		fillcolor=springgreen,
		label="transmitcontrol1.1007:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"transmitcontrol1.1006:BL" -> "transmitcontrol1.1007:IF"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1460:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fcd650>",
		fillcolor=springgreen,
		label="receivecontrol1.1460:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1463:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fcda10>",
		fillcolor=springgreen,
		label="receivecontrol1.1463:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1460:IF" -> "receivecontrol1.1463:IF"	 [cond="['DetectionWindow', 'ByteCntEq5']",
		label="!((DetectionWindow & ByteCntEq5))",
		lineno=1460];
	"receivecontrol1.1461:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fcd8d0>",
		fillcolor=firebrick,
		label="receivecontrol1.1461:NS
AddressOK <= ((RxData[7:0] == ReservedMulticast[7:0]) | (RxData[7:0] == MAC[7:0])) & AddressOK;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fcd8d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.1460:IF" -> "receivecontrol1.1461:NS"	 [cond="['DetectionWindow', 'ByteCntEq5']",
		label="(DetectionWindow & ByteCntEq5)",
		lineno=1460];
	"receivecontrol1.1455:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fa9790>",
		fillcolor=firebrick,
		label="receivecontrol1.1455:NS
AddressOK <= ((RxData[7:0] == ReservedMulticast[23:16]) | (RxData[7:0] == MAC[23:16])) & AddressOK;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fa9790>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.1455:NS" -> "receivecontrol1.Leaf_1440:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1702:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37fba361d0>",
		fillcolor=turquoise,
		label="receivecontrol1.1702:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"receivecontrol1.1701:AL" -> "receivecontrol1.1702:BL"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.L2_fifo.714:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da492650>",
		fillcolor=firebrick,
		label="L2_UC_wrapper.L2_fifo.714:NS
cnt <= cnt - 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da492650>]",
		style=filled,
		typ=NonblockingSubstitution];
	"L2_UC_wrapper.L2_fifo.714:NS" -> "L2_UC_wrapper.L2_fifo.Leaf_704:AL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.942:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da42c5d0>",
		fillcolor=turquoise,
		label="transmitcontrol1.942:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"transmitcontrol1.943:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da42c750>",
		fillcolor=springgreen,
		label="transmitcontrol1.943:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"transmitcontrol1.942:BL" -> "transmitcontrol1.943:IF"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1595:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fc1f10>",
		fillcolor=firebrick,
		label="receivecontrol1.1595:NS
ByteCnt[4:0] <= 5'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fc1f10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.1595:NS" -> "receivecontrol1.Leaf_1589:AL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.959:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da42cfd0>",
		fillcolor=firebrick,
		label="transmitcontrol1.959:NS
SendingCtrlFrm <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da42cfd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"transmitcontrol1.958:IF" -> "transmitcontrol1.959:NS"	 [cond="['TxReset']",
		label=TxReset,
		lineno=958];
	"transmitcontrol1.961:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da457410>",
		fillcolor=springgreen,
		label="transmitcontrol1.961:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"transmitcontrol1.958:IF" -> "transmitcontrol1.961:IF"	 [cond="['TxReset']",
		label="!(TxReset)",
		lineno=958];
	"L2_UC_wrapper.Leaf_1127:AL"	 [def_var="['Divided_2_clk']",
		label="L2_UC_wrapper.Leaf_1127:AL"];
	"L2_UC_wrapper.Leaf_1127:AL" -> "L2_UC_wrapper.1131:AL";
	"transmitcontrol1.1048:BS" -> "transmitcontrol1.Leaf_1044:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1555:AL" -> "receivecontrol1.1556:BL"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.1173:BL" -> "L2_UC_wrapper.Leaf_1154:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1476:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fcdf10>",
		fillcolor=firebrick,
		label="receivecontrol1.1476:NS
TypeLengthOK <= ByteCntEq12 & (RxData[7:0] == TypeLength[15:8]);",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fcdf10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.1476:NS" -> "receivecontrol1.Leaf_1470:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1478:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9f99710>",
		fillcolor=springgreen,
		label="receivecontrol1.1478:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1478:IF" -> "receivecontrol1.1479:NS"	 [cond="['DetectionWindow', 'ByteCntEq13']",
		label="(DetectionWindow & ByteCntEq13)",
		lineno=1478];
	"receivecontrol1.1481:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9f99890>",
		fillcolor=springgreen,
		label="receivecontrol1.1481:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1478:IF" -> "receivecontrol1.1481:IF"	 [cond="['DetectionWindow', 'ByteCntEq13']",
		label="!((DetectionWindow & ByteCntEq13))",
		lineno=1478];
	"1837:IF" -> "1838:NS"	 [cond="['TxDoneIn', 'TxDoneInLatched', 'TxUsedDataOutDetected']",
		label="(TxDoneIn & ~TxDoneInLatched & TxUsedDataOutDetected)",
		lineno=1837];
	"receivecontrol1.1692:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba31d50>",
		fillcolor=firebrick,
		label="receivecontrol1.1692:NS
SlotTimer[5:0] <= SlotTimer[5:0] + 6'd1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba31d50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.1692:NS" -> "receivecontrol1.Leaf_1683:AL"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.L2_fifo.726:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da492d50>",
		fillcolor=firebrick,
		label="L2_UC_wrapper.L2_fifo.726:NS
read_pointer <= { { CNT_WIDTH - 2{ 1'b0 } }, read };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da492d50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"L2_UC_wrapper.L2_fifo.Leaf_720:AL"	 [def_var="['read_pointer']",
		label="L2_UC_wrapper.L2_fifo.Leaf_720:AL"];
	"L2_UC_wrapper.L2_fifo.726:NS" -> "L2_UC_wrapper.L2_fifo.Leaf_720:AL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.1063:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da74dc10>",
		fillcolor=lightcyan,
		label="transmitcontrol1.1063:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"transmitcontrol1.1063:CA" -> "transmitcontrol1.1063:BS"	 [cond="[]",
		lineno=None];
	"1851:AS" -> "1784:AL";
	"1851:AS" -> "transmitcontrol1.912:AL";
	"1851:AS" -> "transmitcontrol1.941:AL";
	"transmitcontrol1.959:NS" -> "transmitcontrol1.Leaf_956:AL"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.L2_fifo.Leaf_704:AL" -> "L2_UC_wrapper.L2_fifo.746:AS";
	"L2_UC_wrapper.L2_fifo.Leaf_704:AL" -> "L2_UC_wrapper.L2_fifo.744:AS";
	"L2_UC_wrapper.L2_fifo.Leaf_704:AL" -> "L2_UC_wrapper.L2_fifo.747:AS";
	"L2_UC_wrapper.L2_fifo.Leaf_704:AL" -> "L2_UC_wrapper.L2_fifo.704:AL";
	"L2_UC_wrapper.L2_fifo.745:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37da86a110>",
		def_var="['almost_empty']",
		fillcolor=deepskyblue,
		label="L2_UC_wrapper.L2_fifo.745:AS
almost_empty = cnt == 1;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cnt']"];
	"L2_UC_wrapper.L2_fifo.Leaf_704:AL" -> "L2_UC_wrapper.L2_fifo.745:AS";
	"transmitcontrol1.982:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da457d50>",
		fillcolor=turquoise,
		label="transmitcontrol1.982:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"transmitcontrol1.982:BL" -> "transmitcontrol1.983:IF"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1609:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37d9f9ea90>",
		def_var="['ByteCntEq13']",
		fillcolor=deepskyblue,
		label="receivecontrol1.1609:AS
ByteCntEq13 = RxValid & (ByteCnt[4:0] == 5'h0D);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxValid', 'ByteCnt']"];
	"receivecontrol1.1609:AS" -> "receivecontrol1.1470:AL";
	"receivecontrol1.1606:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37d9f9e190>",
		def_var="['ByteCntEq4']",
		fillcolor=deepskyblue,
		label="receivecontrol1.1606:AS
ByteCntEq4 = RxValid & (ByteCnt[4:0] == 5'h4);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxValid', 'ByteCnt']"];
	"receivecontrol1.1606:AS" -> "receivecontrol1.1440:AL";
	"L2_UC_wrapper.L2_fifo.782:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37da86af10>",
		clk_sens=False,
		fillcolor=gold,
		label="L2_UC_wrapper.L2_fifo.782:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['clear', 'fifo', 'read_pointer']"];
	"L2_UC_wrapper.L2_fifo.Leaf_772:AL" -> "L2_UC_wrapper.L2_fifo.782:AL";
	"L2_UC_wrapper.1171:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da4adf90>",
		fillcolor=turquoise,
		label="L2_UC_wrapper.1171:BL
TxData_wrapped_out[7:0] <= MAC[23:16];
read_fifo <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4aded0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f37da4ab0d0>]",
		style=filled,
		typ=Block];
	"L2_UC_wrapper.1171:BL" -> "L2_UC_wrapper.Leaf_1154:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1573:NS" -> "receivecontrol1.Leaf_1570:AL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.915:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da42f210>",
		fillcolor=firebrick,
		label="transmitcontrol1.915:NS
TxCtrlStartFrm <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da42f210>]",
		style=filled,
		typ=NonblockingSubstitution];
	"transmitcontrol1.914:IF" -> "transmitcontrol1.915:NS"	 [cond="['TxReset']",
		label=TxReset,
		lineno=914];
	"transmitcontrol1.917:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da42f5d0>",
		fillcolor=springgreen,
		label="transmitcontrol1.917:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"transmitcontrol1.914:IF" -> "transmitcontrol1.917:IF"	 [cond="['TxReset']",
		label="!(TxReset)",
		lineno=914];
	"receivecontrol1.1558:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fd1d90>",
		fillcolor=firebrick,
		label="receivecontrol1.1558:NS
LatchedTimerValue[15:0] <= 16'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fd1d90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.1558:NS" -> "receivecontrol1.Leaf_1555:AL"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.L2_fifo.783:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da86af50>",
		fillcolor=turquoise,
		label="L2_UC_wrapper.L2_fifo.783:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"L2_UC_wrapper.L2_fifo.784:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da434110>",
		fillcolor=springgreen,
		label="L2_UC_wrapper.L2_fifo.784:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"L2_UC_wrapper.L2_fifo.783:BL" -> "L2_UC_wrapper.L2_fifo.784:IF"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1449:NS" -> "receivecontrol1.Leaf_1440:AL"	 [cond="[]",
		lineno=None];
	"1786:IF" -> "1789:IF"	 [cond="['TxReset']",
		label="!(TxReset)",
		lineno=1786];
	"1787:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba4b110>",
		fillcolor=firebrick,
		label="1787:NS
TxUsedDataOutDetected <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba4b110>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1786:IF" -> "1787:NS"	 [cond="['TxReset']",
		label=TxReset,
		lineno=1786];
	"receivecontrol1.1546:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fd1790>",
		fillcolor=firebrick,
		label="receivecontrol1.1546:NS
DetectionWindow <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fd1790>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.1546:NS" -> "receivecontrol1.Leaf_1540:AL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.1045:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da73e810>",
		fillcolor=turquoise,
		label="transmitcontrol1.1045:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"transmitcontrol1.1046:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f37da747ad0>",
		fillcolor=linen,
		label="transmitcontrol1.1046:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"transmitcontrol1.1045:BL" -> "transmitcontrol1.1046:CS"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1686:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba31510>",
		fillcolor=firebrick,
		label="receivecontrol1.1686:NS
SlotTimer[5:0] <= 6'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba31510>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.1686:NS" -> "receivecontrol1.Leaf_1683:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1534:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fd1210>",
		fillcolor=firebrick,
		label="receivecontrol1.1534:NS
AssembledTimerValue[7:0] <= RxData[7:0];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fd1210>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.1534:NS" -> "receivecontrol1.Leaf_1522:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1528:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9f9b890>",
		fillcolor=firebrick,
		label="receivecontrol1.1528:NS
AssembledTimerValue[15:0] <= 16'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9f9b890>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.1528:NS" -> "receivecontrol1.Leaf_1522:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1666:AL" -> "receivecontrol1.1667:BL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1627:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fba22ad0>",
		fillcolor=springgreen,
		label="receivecontrol1.1627:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1630:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fba22dd0>",
		fillcolor=springgreen,
		label="receivecontrol1.1630:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1627:IF" -> "receivecontrol1.1630:IF"	 [cond="['SetPauseTimer']",
		label="!(SetPauseTimer)",
		lineno=1627];
	"receivecontrol1.1628:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba22a90>",
		fillcolor=firebrick,
		label="receivecontrol1.1628:NS
PauseTimer[15:0] <= LatchedTimerValue[15:0];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba22a90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.1627:IF" -> "receivecontrol1.1628:NS"	 [cond="['SetPauseTimer']",
		label=SetPauseTimer,
		lineno=1627];
	"receivecontrol1.1703:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fba36390>",
		fillcolor=springgreen,
		label="receivecontrol1.1703:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1704:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba36350>",
		fillcolor=firebrick,
		label="receivecontrol1.1704:NS
ReceivedPauseFrm <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba36350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.1703:IF" -> "receivecontrol1.1704:NS"	 [cond="['RxReset']",
		label=RxReset,
		lineno=1703];
	"receivecontrol1.1706:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fba36890>",
		fillcolor=springgreen,
		label="receivecontrol1.1706:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1703:IF" -> "receivecontrol1.1706:IF"	 [cond="['RxReset']",
		label="!(RxReset)",
		lineno=1703];
	"transmitcontrol1.1057:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da74f610>",
		fillcolor=lightcyan,
		label="transmitcontrol1.1057:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"transmitcontrol1.1057:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da74f710>",
		fillcolor=cadetblue,
		label="transmitcontrol1.1057:BS
MuxedCtrlData[7:0] = MAC[39:32];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da74f710>]",
		style=filled,
		typ=BlockingSubstitution];
	"transmitcontrol1.1057:CA" -> "transmitcontrol1.1057:BS"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.1166:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da4a4510>",
		fillcolor=turquoise,
		label="L2_UC_wrapper.1166:BL
TxData_wrapped_out[7:0] <= DMAC[15:8];
read_fifo <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4a4450>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f37da4a4610>]",
		style=filled,
		typ=Block];
	"L2_UC_wrapper.1166:CA" -> "L2_UC_wrapper.1166:BL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.Leaf_1701:AL" -> "receivecontrol1.1701:AL";
	"1831:IF" -> "1834:IF"	 [cond="['TxReset']",
		label="!(TxReset)",
		lineno=1831];
	"1831:IF" -> "1832:NS"	 [cond="['TxReset']",
		label=TxReset,
		lineno=1831];
	"receivecontrol1.1471:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37d9fc5f50>",
		fillcolor=turquoise,
		label="receivecontrol1.1471:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"receivecontrol1.1471:BL" -> "receivecontrol1.1472:IF"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.1065:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da747250>",
		fillcolor=lightcyan,
		label="transmitcontrol1.1065:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"transmitcontrol1.1065:CA" -> "transmitcontrol1.1065:BS"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.1010:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da456210>",
		fillcolor=springgreen,
		label="transmitcontrol1.1010:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"transmitcontrol1.1011:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4561d0>",
		fillcolor=firebrick,
		label="transmitcontrol1.1011:NS
DlyCrcCnt <= 4'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4561d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"transmitcontrol1.1010:IF" -> "transmitcontrol1.1011:NS"	 [cond="['ResetByteCnt']",
		label=ResetByteCnt,
		lineno=1010];
	"transmitcontrol1.1013:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da456350>",
		fillcolor=springgreen,
		label="transmitcontrol1.1013:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"transmitcontrol1.1010:IF" -> "transmitcontrol1.1013:IF"	 [cond="['ResetByteCnt']",
		label="!(ResetByteCnt)",
		lineno=1010];
	"transmitcontrol1.974:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da457b10>",
		fillcolor=firebrick,
		label="transmitcontrol1.974:NS
TxUsedDataIn_q <= TxUsedDataIn;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da457b10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"transmitcontrol1.Leaf_969:AL"	 [def_var="['TxUsedDataIn_q']",
		label="transmitcontrol1.Leaf_969:AL"];
	"transmitcontrol1.974:NS" -> "transmitcontrol1.Leaf_969:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.Leaf_1570:AL" -> "receivecontrol1.1584:AS";
	"receivecontrol1.1570:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37d9fb7810>",
		clk_sens=False,
		fillcolor=gold,
		label="receivecontrol1.1570:AL",
		sens="['MRxClk', 'RxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['RxReset', 'RxValid', 'DlyCrcCnt', 'RxEndFrm']"];
	"receivecontrol1.Leaf_1570:AL" -> "receivecontrol1.1570:AL";
	"1824:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba50990>",
		fillcolor=firebrick,
		label="1824:NS
MuxedAbort <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba50990>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_1815:AL"	 [def_var="['MuxedAbort']",
		label="Leaf_1815:AL"];
	"1824:NS" -> "Leaf_1815:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1691:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fba31b90>",
		fillcolor=springgreen,
		label="receivecontrol1.1691:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1691:IF" -> "receivecontrol1.1692:NS"	 [cond="['IncrementSlotTimer']",
		label=IncrementSlotTimer,
		lineno=1691];
	"L2_UC_wrapper.1142:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da4b6d90>",
		fillcolor=springgreen,
		label="L2_UC_wrapper.1142:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"L2_UC_wrapper.1142:IF" -> "L2_UC_wrapper.1142:NS"	 [cond="['StateCount']",
		label="(StateCount == 1)",
		lineno=1142];
	"receivecontrol1.1464:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fcdb50>",
		fillcolor=firebrick,
		label="receivecontrol1.1464:NS
AddressOK <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fcdb50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.1463:IF" -> "receivecontrol1.1464:NS"	 [cond="['ReceiveEnd']",
		label=ReceiveEnd,
		lineno=1463];
	"receivecontrol1.1598:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fa1410>",
		fillcolor=firebrick,
		label="receivecontrol1.1598:NS
ByteCnt[4:0] <= ByteCnt[4:0] + 5'd1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fa1410>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.1598:NS" -> "receivecontrol1.Leaf_1589:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1688:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37fba318d0>",
		fillcolor=springgreen,
		label="receivecontrol1.1688:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1688:IF" -> "receivecontrol1.1691:IF"	 [cond="['ResetSlotTimer']",
		label="!(ResetSlotTimer)",
		lineno=1688];
	"receivecontrol1.1689:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba31890>",
		fillcolor=firebrick,
		label="receivecontrol1.1689:NS
SlotTimer[5:0] <= 6'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba31890>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.1688:IF" -> "receivecontrol1.1689:NS"	 [cond="['ResetSlotTimer']",
		label=ResetSlotTimer,
		lineno=1688];
	"transmitcontrol1.1058:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da74f9d0>",
		fillcolor=lightcyan,
		label="transmitcontrol1.1058:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"transmitcontrol1.1058:CA" -> "transmitcontrol1.1058:BS"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.Leaf_969:AL" -> "transmitcontrol1.912:AL";
	"receivecontrol1.1631:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba22f90>",
		fillcolor=firebrick,
		label="receivecontrol1.1631:NS
PauseTimer[15:0] <= PauseTimer[15:0] - 16'd1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba22f90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.1631:NS" -> "receivecontrol1.Leaf_1622:AL"	 [cond="[]",
		lineno=None];
	"Leaf_1784:AL"	 [def_var="['TxUsedDataOutDetected']",
		label="Leaf_1784:AL"];
	"1815:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37fba50110>",
		clk_sens=True,
		fillcolor=gold,
		label="1815:AL",
		sens="['MTxClk', 'TxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['TxAbortInLatched', 'TxStartFrmIn', 'TxAbortIn', 'TxUsedDataOutDetected', 'TxReset']"];
	"Leaf_1784:AL" -> "1815:AL";
	"1829:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37fba50a50>",
		clk_sens=True,
		fillcolor=gold,
		label="1829:AL",
		sens="['MTxClk', 'TxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['TxStartFrmIn', 'TxDoneIn', 'TxUsedDataOutDetected', 'TxReset', 'TxDoneInLatched']"];
	"Leaf_1784:AL" -> "1829:AL";
	"receivecontrol1.Leaf_1440:AL" -> "receivecontrol1.1440:AL";
	"receivecontrol1.Leaf_1440:AL" -> "receivecontrol1.1507:AL";
	"transmitcontrol1.906:IF" -> "transmitcontrol1.907:NS"	 [cond="['TPauseRq', 'TxFlow']",
		label="(TPauseRq & TxFlow)",
		lineno=906];
	"transmitcontrol1.921:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da42fc50>",
		fillcolor=firebrick,
		label="transmitcontrol1.921:NS
TxCtrlStartFrm <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da42fc50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"transmitcontrol1.Leaf_912:AL"	 [def_var="['TxCtrlStartFrm']",
		label="transmitcontrol1.Leaf_912:AL"];
	"transmitcontrol1.921:NS" -> "transmitcontrol1.Leaf_912:AL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.Leaf_981:AL"	 [def_var="['BlockTxDone']",
		label="transmitcontrol1.Leaf_981:AL"];
	"transmitcontrol1.984:NS" -> "transmitcontrol1.Leaf_981:AL"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.1164:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da4bba50>",
		fillcolor=turquoise,
		label="L2_UC_wrapper.1164:BL
TxData_wrapped_out[7:0] <= DMAC[31:24];
read_fifo <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4bb9d0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f37da4bbb50>]",
		style=filled,
		typ=Block];
	"L2_UC_wrapper.1164:CA" -> "L2_UC_wrapper.1164:BL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.972:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da457910>",
		fillcolor=firebrick,
		label="transmitcontrol1.972:NS
TxUsedDataIn_q <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da457910>]",
		style=filled,
		typ=NonblockingSubstitution];
	"transmitcontrol1.972:NS" -> "transmitcontrol1.Leaf_969:AL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.1050:BS" -> "transmitcontrol1.Leaf_1044:AL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.928:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da42fd50>",
		fillcolor=turquoise,
		label="transmitcontrol1.928:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"transmitcontrol1.927:AL" -> "transmitcontrol1.928:BL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.1055:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da746f10>",
		fillcolor=lightcyan,
		label="transmitcontrol1.1055:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"transmitcontrol1.1055:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da746f90>",
		fillcolor=cadetblue,
		label="transmitcontrol1.1055:BS
MuxedCtrlData[7:0] = 8'h01;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da746f90>]",
		style=filled,
		typ=BlockingSubstitution];
	"transmitcontrol1.1055:CA" -> "transmitcontrol1.1055:BS"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1545:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fd17d0>",
		fillcolor=springgreen,
		label="receivecontrol1.1545:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1545:IF" -> "receivecontrol1.1546:NS"	 [cond="['ByteCntEq18']",
		label=ByteCntEq18,
		lineno=1545];
	"receivecontrol1.1548:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fd1950>",
		fillcolor=springgreen,
		label="receivecontrol1.1548:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1545:IF" -> "receivecontrol1.1548:IF"	 [cond="['ByteCntEq18']",
		label="!(ByteCntEq18)",
		lineno=1545];
	"receivecontrol1.1576:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fb7c90>",
		fillcolor=firebrick,
		label="receivecontrol1.1576:NS
DlyCrcCnt <= 3'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fb7c90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.1576:NS" -> "receivecontrol1.Leaf_1570:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1498:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fcf310>",
		fillcolor=firebrick,
		label="receivecontrol1.1498:NS
OpCodeOK <= ByteCntEq14 & (RxData[7:0] == 8'h00);",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fcf310>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.1497:IF" -> "receivecontrol1.1498:NS"	 [cond="['DetectionWindow', 'ByteCntEq14']",
		label="(DetectionWindow & ByteCntEq14)",
		lineno=1497];
	"receivecontrol1.1610:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37d9f9ed90>",
		def_var="['ByteCntEq14']",
		fillcolor=deepskyblue,
		label="receivecontrol1.1610:AS
ByteCntEq14 = RxValid & (ByteCnt[4:0] == 5'h0E);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxValid', 'ByteCnt']"];
	"receivecontrol1.1610:AS" -> "receivecontrol1.1488:AL";
	"transmitcontrol1.1044:AL" -> "transmitcontrol1.1045:BL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1661:NS" -> "receivecontrol1.Leaf_1655:AL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.1054:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da746c90>",
		fillcolor=cadetblue,
		label="transmitcontrol1.1054:BS
MuxedCtrlData[7:0] = 8'h00;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da746c90>]",
		style=filled,
		typ=BlockingSubstitution];
	"transmitcontrol1.1054:BS" -> "transmitcontrol1.Leaf_1044:AL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.1067:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da747a10>",
		fillcolor=cadetblue,
		label="transmitcontrol1.1067:BS
MuxedCtrlData[7:0] = TxPauseTV[7:0];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da747a10>]",
		style=filled,
		typ=BlockingSubstitution];
	"transmitcontrol1.1067:BS" -> "transmitcontrol1.Leaf_1044:AL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.Leaf_1072:AL"	 [def_var="['ControlData']",
		label="transmitcontrol1.Leaf_1072:AL"];
	"transmitcontrol1.Leaf_1072:AL" -> "1863:AS";
	"receivecontrol1.1678:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37fba2cd10>",
		def_var="['ResetSlotTimer']",
		fillcolor=deepskyblue,
		label="receivecontrol1.1678:AS
ResetSlotTimer = RxReset;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxReset']"];
	"receivecontrol1.1678:AS" -> "receivecontrol1.1683:AL";
	"receivecontrol1.1630:IF" -> "receivecontrol1.1631:NS"	 [cond="['DecrementPauseTimer']",
		label=DecrementPauseTimer,
		lineno=1630];
	"L2_UC_wrapper.1128:BL" -> "L2_UC_wrapper.Leaf_1127:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1501:NS" -> "receivecontrol1.Leaf_1488:AL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.915:NS" -> "transmitcontrol1.Leaf_912:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1642:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37fba28510>",
		fillcolor=turquoise,
		label="receivecontrol1.1642:BL
PauseTimerEq0_sync1 <= 1'b1;
PauseTimerEq0_sync2 <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba28550>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f37fba286d0>]",
		style=filled,
		typ=Block];
	"receivecontrol1.1641:IF" -> "receivecontrol1.1642:BL"	 [cond="['TxReset']",
		label=TxReset,
		lineno=1641];
	"receivecontrol1.1647:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37fba288d0>",
		fillcolor=turquoise,
		label="receivecontrol1.1647:BL
PauseTimerEq0_sync1 <= PauseTimerEq0;
PauseTimerEq0_sync2 <= PauseTimerEq0_sync1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba28910>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f37fba28ad0>]",
		style=filled,
		typ=Block];
	"receivecontrol1.1641:IF" -> "receivecontrol1.1647:BL"	 [cond="['TxReset']",
		label="!(TxReset)",
		lineno=1641];
	"1790:NS" -> "Leaf_1784:AL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.1059:BS" -> "transmitcontrol1.Leaf_1044:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1669:NS" -> "receivecontrol1.Leaf_1666:AL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.956:AL" -> "transmitcontrol1.957:BL"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.1191:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da4b7d50>",
		fillcolor=springgreen,
		label="L2_UC_wrapper.1191:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"L2_UC_wrapper.1191:IF" -> "L2_UC_wrapper.1196:BL"	 [cond="['StateCount', 'PreNib15State']",
		label="!((StateCount & (PreNib15State >= 8)))",
		lineno=1191];
	"L2_UC_wrapper.1192:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da4b7b50>",
		fillcolor=turquoise,
		label="L2_UC_wrapper.1192:BL
ByteCnt = ByteCnt + 1;
write_fifo <= 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da4b7b90>, <pyverilog.vparser.ast.NonblockingSubstitution object at \
0x7f37da4b7cd0>]",
		style=filled,
		typ=Block];
	"L2_UC_wrapper.1191:IF" -> "L2_UC_wrapper.1192:BL"	 [cond="['StateCount', 'PreNib15State']",
		label="(StateCount & (PreNib15State >= 8))",
		lineno=1191];
	"L2_UC_wrapper.L2_fifo.729:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da865350>",
		fillcolor=firebrick,
		label="L2_UC_wrapper.L2_fifo.729:NS
read_pointer <= read_pointer + 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da865350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"L2_UC_wrapper.L2_fifo.729:NS" -> "L2_UC_wrapper.L2_fifo.Leaf_720:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1594:IF" -> "receivecontrol1.1595:NS"	 [cond="['ResetByteCnt']",
		label=ResetByteCnt,
		lineno=1594];
	"receivecontrol1.1597:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fa1250>",
		fillcolor=springgreen,
		label="receivecontrol1.1597:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1594:IF" -> "receivecontrol1.1597:IF"	 [cond="['ResetByteCnt']",
		label="!(ResetByteCnt)",
		lineno=1594];
	"transmitcontrol1.933:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da42c290>",
		fillcolor=firebrick,
		label="transmitcontrol1.933:NS
TxCtrlEndFrm <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da42c290>]",
		style=filled,
		typ=NonblockingSubstitution];
	"transmitcontrol1.933:NS" -> "transmitcontrol1.Leaf_927:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1532:NS" -> "receivecontrol1.Leaf_1522:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1498:NS" -> "receivecontrol1.Leaf_1488:AL"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.L2_fifo.774:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da86aa50>",
		fillcolor=springgreen,
		label="L2_UC_wrapper.L2_fifo.774:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"L2_UC_wrapper.L2_fifo.775:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da86aa10>",
		fillcolor=firebrick,
		label="L2_UC_wrapper.L2_fifo.775:NS
fifo[0] <= data_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da86aa10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"L2_UC_wrapper.L2_fifo.774:IF" -> "L2_UC_wrapper.L2_fifo.775:NS"	 [cond="['write', 'clear']",
		label="(write & clear)",
		lineno=774];
	"L2_UC_wrapper.L2_fifo.777:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da86ac90>",
		fillcolor=springgreen,
		label="L2_UC_wrapper.L2_fifo.777:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"L2_UC_wrapper.L2_fifo.774:IF" -> "L2_UC_wrapper.L2_fifo.777:IF"	 [cond="['write', 'clear']",
		label="!((write & clear))",
		lineno=774];
	"L2_UC_wrapper.L2_fifo.713:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da492610>",
		fillcolor=springgreen,
		label="L2_UC_wrapper.L2_fifo.713:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"L2_UC_wrapper.L2_fifo.713:IF" -> "L2_UC_wrapper.L2_fifo.716:NS"	 [cond="['read']",
		label="!(read)",
		lineno=713];
	"L2_UC_wrapper.L2_fifo.713:IF" -> "L2_UC_wrapper.L2_fifo.714:NS"	 [cond="['read']",
		label=read,
		lineno=713];
	"L2_UC_wrapper.1142:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da4b6b90>",
		fillcolor=lightcyan,
		label="L2_UC_wrapper.1142:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"L2_UC_wrapper.1142:CA" -> "L2_UC_wrapper.1142:IF"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1512:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fcfd50>",
		fillcolor=springgreen,
		label="receivecontrol1.1512:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1512:IF" -> "receivecontrol1.1515:IF"	 [cond="['ReceiveEnd']",
		label="!(ReceiveEnd)",
		lineno=1512];
	"receivecontrol1.1513:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fcfd10>",
		fillcolor=firebrick,
		label="receivecontrol1.1513:NS
ReceivedPauseFrmWAddr <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fcfd10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.1512:IF" -> "receivecontrol1.1513:NS"	 [cond="['ReceiveEnd']",
		label=ReceiveEnd,
		lineno=1512];
	"L2_UC_wrapper.L2_fifo.773:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da86a790>",
		fillcolor=turquoise,
		label="L2_UC_wrapper.L2_fifo.773:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"L2_UC_wrapper.L2_fifo.773:BL" -> "L2_UC_wrapper.L2_fifo.774:IF"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.1020:AS" -> "transmitcontrol1.1024:AL";
	"transmitcontrol1.Leaf_956:AL" -> "1871:AS";
	"1867:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37fb9dad90>",
		def_var="['PadOut']",
		fillcolor=deepskyblue,
		label="1867:AS
PadOut = PadIn | SendingCtrlFrm;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['PadIn', 'SendingCtrlFrm']"];
	"transmitcontrol1.Leaf_956:AL" -> "1867:AS";
	"receivecontrol1.1611:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37fba1d0d0>",
		def_var="['ByteCntEq15']",
		fillcolor=deepskyblue,
		label="receivecontrol1.1611:AS
ByteCntEq15 = RxValid & (ByteCnt[4:0] == 5'h0F);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxValid', 'ByteCnt']"];
	"receivecontrol1.1611:AS" -> "receivecontrol1.1488:AL";
	"receivecontrol1.1470:AL" -> "receivecontrol1.1471:BL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1671:IF" -> "receivecontrol1.1674:NS"	 [cond="['PauseTimer', 'RxFlow']",
		label="!((|PauseTimer[15:0] & RxFlow))",
		lineno=1671];
	"receivecontrol1.1671:IF" -> "receivecontrol1.1672:NS"	 [cond="['PauseTimer', 'RxFlow']",
		label="(|PauseTimer[15:0] & RxFlow)",
		lineno=1671];
	"transmitcontrol1.1052:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da746610>",
		fillcolor=lightcyan,
		label="transmitcontrol1.1052:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"transmitcontrol1.1052:CA" -> "transmitcontrol1.1052:BS"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.L2_fifo.734:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da865610>",
		fillcolor=springgreen,
		label="L2_UC_wrapper.L2_fifo.734:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"L2_UC_wrapper.L2_fifo.733:BL" -> "L2_UC_wrapper.L2_fifo.734:IF"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.1145:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f37da4a7050>",
		fillcolor=linen,
		label="L2_UC_wrapper.1145:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"L2_UC_wrapper.1145:CS" -> "L2_UC_wrapper.1146:CA"	 [cond="['TxEndFrmIn', 'TxBufferEmpty']",
		label="{ TxEndFrmIn, TxBufferEmpty }",
		lineno=1145];
	"L2_UC_wrapper.1147:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da4a7310>",
		fillcolor=lightcyan,
		label="L2_UC_wrapper.1147:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"L2_UC_wrapper.1145:CS" -> "L2_UC_wrapper.1147:CA"	 [cond="['TxEndFrmIn', 'TxBufferEmpty']",
		label="{ TxEndFrmIn, TxBufferEmpty }",
		lineno=1145];
	"receivecontrol1.1605:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37d9fa1e50>",
		def_var="['ByteCntEq3']",
		fillcolor=deepskyblue,
		label="receivecontrol1.1605:AS
ByteCntEq3 = RxValid & (ByteCnt[4:0] == 5'h3);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxValid', 'ByteCnt']"];
	"receivecontrol1.1605:AS" -> "receivecontrol1.1440:AL";
	"L2_UC_wrapper.L2_fifo.784:IF" -> "L2_UC_wrapper.L2_fifo.785:NS"	 [cond="['clear']",
		label=clear,
		lineno=784];
	"L2_UC_wrapper.L2_fifo.784:IF" -> "L2_UC_wrapper.L2_fifo.787:NS"	 [cond="['clear']",
		label="!(clear)",
		lineno=784];
	"transmitcontrol1.987:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da453190>",
		fillcolor=firebrick,
		label="transmitcontrol1.987:NS
BlockTxDone <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da453190>]",
		style=filled,
		typ=NonblockingSubstitution];
	"transmitcontrol1.987:NS" -> "transmitcontrol1.Leaf_981:AL"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.L2_fifo.705:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da459b90>",
		fillcolor=turquoise,
		label="L2_UC_wrapper.L2_fifo.705:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"L2_UC_wrapper.L2_fifo.705:BL" -> "L2_UC_wrapper.L2_fifo.706:IF"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.918:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da42f590>",
		fillcolor=firebrick,
		label="transmitcontrol1.918:NS
TxCtrlStartFrm <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da42f590>]",
		style=filled,
		typ=NonblockingSubstitution];
	"transmitcontrol1.917:IF" -> "transmitcontrol1.918:NS"	 [cond="['TxUsedDataIn_q', 'CtrlMux']",
		label="(TxUsedDataIn_q & CtrlMux)",
		lineno=917];
	"transmitcontrol1.920:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da42fb50>",
		fillcolor=springgreen,
		label="transmitcontrol1.920:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"transmitcontrol1.917:IF" -> "transmitcontrol1.920:IF"	 [cond="['TxUsedDataIn_q', 'CtrlMux']",
		label="!((TxUsedDataIn_q & CtrlMux))",
		lineno=917];
	"receivecontrol1.1508:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37d9fcf8d0>",
		fillcolor=turquoise,
		label="receivecontrol1.1508:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"receivecontrol1.1507:AL" -> "receivecontrol1.1508:BL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.1064:BS" -> "transmitcontrol1.Leaf_1044:AL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.912:AL" -> "transmitcontrol1.913:BL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1454:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fa9510>",
		fillcolor=springgreen,
		label="receivecontrol1.1454:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1454:IF" -> "receivecontrol1.1455:NS"	 [cond="['DetectionWindow', 'ByteCntEq3']",
		label="(DetectionWindow & ByteCntEq3)",
		lineno=1454];
	"receivecontrol1.1457:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fcd050>",
		fillcolor=springgreen,
		label="receivecontrol1.1457:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1454:IF" -> "receivecontrol1.1457:IF"	 [cond="['DetectionWindow', 'ByteCntEq3']",
		label="!((DetectionWindow & ByteCntEq3))",
		lineno=1454];
	"receivecontrol1.1446:NS" -> "receivecontrol1.Leaf_1440:AL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.1019:AS" -> "transmitcontrol1.1024:AL";
	"L2_UC_wrapper.1167:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da4a4a50>",
		fillcolor=turquoise,
		label="L2_UC_wrapper.1167:BL
TxData_wrapped_out[7:0] <= DMAC[7:0];
read_fifo <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4a4990>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f37da4a4b50>]",
		style=filled,
		typ=Block];
	"L2_UC_wrapper.1167:BL" -> "L2_UC_wrapper.Leaf_1154:AL"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.1141:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da4b6890>",
		fillcolor=lightcyan,
		label="L2_UC_wrapper.1141:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"L2_UC_wrapper.1141:CA" -> "L2_UC_wrapper.1141:IF"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.1140:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f37da4b69d0>",
		fillcolor=linen,
		label="L2_UC_wrapper.1140:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"L2_UC_wrapper.1140:CS" -> "L2_UC_wrapper.1142:CA"	 [cond="['TxStartFrmIn', 'TxEndFrmIn']",
		label="{ TxStartFrmIn, TxEndFrmIn }",
		lineno=1140];
	"L2_UC_wrapper.1140:CS" -> "L2_UC_wrapper.1141:CA"	 [cond="['TxStartFrmIn', 'TxEndFrmIn']",
		label="{ TxStartFrmIn, TxEndFrmIn }",
		lineno=1140];
	"receivecontrol1.1509:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fcfa90>",
		fillcolor=springgreen,
		label="receivecontrol1.1509:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1508:BL" -> "receivecontrol1.1509:IF"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1494:NS" -> "receivecontrol1.Leaf_1488:AL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.1075:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da7511d0>",
		fillcolor=firebrick,
		label="transmitcontrol1.1075:NS
ControlData[7:0] <= 8'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da7511d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"transmitcontrol1.1075:NS" -> "transmitcontrol1.Leaf_1072:AL"	 [cond="[]",
		lineno=None];
	"1861:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37fb9da650>",
		def_var="['L2_wrap_en']",
		fillcolor=deepskyblue,
		label="1861:AS
L2_wrap_en = 1;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="[]"];
	"1861:AS" -> "1863:AS";
	"receivecontrol1.1557:IF" -> "receivecontrol1.1560:IF"	 [cond="['RxReset']",
		label="!(RxReset)",
		lineno=1557];
	"receivecontrol1.1557:IF" -> "receivecontrol1.1558:NS"	 [cond="['RxReset']",
		label=RxReset,
		lineno=1557];
	"receivecontrol1.1707:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba36850>",
		fillcolor=firebrick,
		label="receivecontrol1.1707:NS
ReceivedPauseFrm <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba36850>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.1707:NS" -> "receivecontrol1.Leaf_1701:AL"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.1132:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da4b6d10>",
		fillcolor=turquoise,
		label="L2_UC_wrapper.1132:BL
Divided_2_clk <= MTxClk ^ Divided_2_clk;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4b65d0>]",
		style=filled,
		typ=Block];
	"L2_UC_wrapper.1131:AL" -> "L2_UC_wrapper.1132:BL"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.L2_fifo.734:IF" -> "L2_UC_wrapper.L2_fifo.735:NS"	 [cond="['reset']",
		label=reset,
		lineno=734];
	"L2_UC_wrapper.L2_fifo.734:IF" -> "L2_UC_wrapper.L2_fifo.737:IF"	 [cond="['reset']",
		label="!(reset)",
		lineno=734];
	"receivecontrol1.1622:AL" -> "receivecontrol1.1623:BL"	 [cond="[]",
		lineno=None];
	"1787:NS" -> "Leaf_1784:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1523:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37d9f9b2d0>",
		fillcolor=turquoise,
		label="receivecontrol1.1523:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"receivecontrol1.1523:BL" -> "receivecontrol1.1524:IF"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.943:IF" -> "transmitcontrol1.944:NS"	 [cond="['TxReset']",
		label=TxReset,
		lineno=943];
	"transmitcontrol1.943:IF" -> "transmitcontrol1.946:IF"	 [cond="['TxReset']",
		label="!(TxReset)",
		lineno=943];
	"transmitcontrol1.964:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da457590>",
		fillcolor=springgreen,
		label="transmitcontrol1.964:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"transmitcontrol1.964:IF" -> "transmitcontrol1.965:NS"	 [cond="['TxDoneIn']",
		label=TxDoneIn,
		lineno=964];
	"transmitcontrol1.990:NS" -> "transmitcontrol1.Leaf_981:AL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.1074:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da751210>",
		fillcolor=springgreen,
		label="transmitcontrol1.1074:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"transmitcontrol1.1073:BL" -> "transmitcontrol1.1074:IF"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1461:NS" -> "receivecontrol1.Leaf_1440:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1583:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37d9fb7e90>",
		def_var="['ResetByteCnt']",
		fillcolor=deepskyblue,
		label="receivecontrol1.1583:AS
ResetByteCnt = RxEndFrm;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxEndFrm']"];
	"receivecontrol1.1589:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37d9fc1950>",
		clk_sens=False,
		fillcolor=gold,
		label="receivecontrol1.1589:AL",
		sens="['MRxClk', 'RxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['RxReset', 'ResetByteCnt', 'IncrementByteCnt', 'ByteCnt']"];
	"receivecontrol1.1583:AS" -> "receivecontrol1.1589:AL";
	"1815:AL" -> "1816:BL"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.1174:CA" -> "L2_UC_wrapper.1174:BL"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.1168:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da4a4f90>",
		fillcolor=turquoise,
		label="L2_UC_wrapper.1168:BL
TxData_wrapped_out[7:0] <= MAC[47:40];
read_fifo <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4a4ed0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f37da4ad0d0>]",
		style=filled,
		typ=Block];
	"L2_UC_wrapper.1168:CA" -> "L2_UC_wrapper.1168:BL"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.1132:BL" -> "L2_UC_wrapper.1145:CS"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.1132:BL" -> "L2_UC_wrapper.1140:CS"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1607:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37d9f9e490>",
		def_var="['ByteCntEq5']",
		fillcolor=deepskyblue,
		label="receivecontrol1.1607:AS
ByteCntEq5 = RxValid & (ByteCnt[4:0] == 5'h5);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxValid', 'ByteCnt']"];
	"receivecontrol1.1607:AS" -> "receivecontrol1.1440:AL";
	"receivecontrol1.1548:IF" -> "receivecontrol1.1549:NS"	 [cond="['ReceiveEnd']",
		label=ReceiveEnd,
		lineno=1548];
	"L2_UC_wrapper.1171:CA" -> "L2_UC_wrapper.1171:BL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.1068:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da747c90>",
		fillcolor=lightcyan,
		label="transmitcontrol1.1068:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"transmitcontrol1.1068:CA" -> "transmitcontrol1.1068:BS"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.1061:BS" -> "transmitcontrol1.Leaf_1044:AL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.1062:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da74d990>",
		fillcolor=cadetblue,
		label="transmitcontrol1.1062:BS
MuxedCtrlData[7:0] = 8'h88;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da74d990>]",
		style=filled,
		typ=BlockingSubstitution];
	"transmitcontrol1.1062:BS" -> "transmitcontrol1.Leaf_1044:AL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.1011:NS" -> "transmitcontrol1.Leaf_1005:AL"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.1125:AS" -> "1858:AS";
	"transmitcontrol1.900:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da437910>",
		fillcolor=springgreen,
		label="transmitcontrol1.900:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"transmitcontrol1.900:IF" -> "transmitcontrol1.903:IF"	 [cond="['TxReset']",
		label="!(TxReset)",
		lineno=900];
	"transmitcontrol1.900:IF" -> "transmitcontrol1.901:NS"	 [cond="['TxReset']",
		label=TxReset,
		lineno=900];
	"receivecontrol1.1702:BL" -> "receivecontrol1.1703:IF"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1516:NS" -> "receivecontrol1.Leaf_1507:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1442:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37d9fb55d0>",
		fillcolor=springgreen,
		label="receivecontrol1.1442:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"receivecontrol1.1442:IF" -> "receivecontrol1.1445:IF"	 [cond="['RxReset']",
		label="!(RxReset)",
		lineno=1442];
	"receivecontrol1.1443:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fb5590>",
		fillcolor=firebrick,
		label="receivecontrol1.1443:NS
AddressOK <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fb5590>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.1442:IF" -> "receivecontrol1.1443:NS"	 [cond="['RxReset']",
		label=RxReset,
		lineno=1442];
	"receivecontrol1.1602:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37d9fa1550>",
		def_var="['ByteCntEq0']",
		fillcolor=deepskyblue,
		label="receivecontrol1.1602:AS
ByteCntEq0 = RxValid & (ByteCnt[4:0] == 5'h0);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxValid', 'ByteCnt']"];
	"receivecontrol1.1602:AS" -> "receivecontrol1.1440:AL";
	"receivecontrol1.Leaf_1639:AL"	 [def_var="['PauseTimerEq0_sync1', 'PauseTimerEq0_sync2']",
		label="receivecontrol1.Leaf_1639:AL"];
	"receivecontrol1.1642:BL" -> "receivecontrol1.Leaf_1639:AL"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.L2_fifo.740:IF" -> "L2_UC_wrapper.L2_fifo.741:NS"	 [cond="['write', 'full']",
		label="(write & ~full)",
		lineno=740];
	"L2_UC_wrapper.1164:BL" -> "L2_UC_wrapper.Leaf_1154:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1513:NS" -> "receivecontrol1.Leaf_1507:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1481:IF" -> "receivecontrol1.1482:NS"	 [cond="['ReceiveEnd']",
		label=ReceiveEnd,
		lineno=1481];
	"transmitcontrol1.1022:AS" -> "transmitcontrol1.1024:AL";
	"receivecontrol1.1510:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fcfa50>",
		fillcolor=firebrick,
		label="receivecontrol1.1510:NS
ReceivedPauseFrmWAddr <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fcfa50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.1510:NS" -> "receivecontrol1.Leaf_1507:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1597:IF" -> "receivecontrol1.1598:NS"	 [cond="['IncrementByteCnt']",
		label=IncrementByteCnt,
		lineno=1597];
	"transmitcontrol1.1074:IF" -> "transmitcontrol1.1077:IF"	 [cond="['TxReset']",
		label="!(TxReset)",
		lineno=1074];
	"transmitcontrol1.1074:IF" -> "transmitcontrol1.1075:NS"	 [cond="['TxReset']",
		label=TxReset,
		lineno=1074];
	"transmitcontrol1.1005:AL" -> "transmitcontrol1.1006:BL"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.1192:BL" -> "L2_UC_wrapper.Leaf_1154:AL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.1062:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da74d910>",
		fillcolor=lightcyan,
		label="transmitcontrol1.1062:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"transmitcontrol1.1062:CA" -> "transmitcontrol1.1062:BS"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1441:BL" -> "receivecontrol1.1442:IF"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.969:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37da457750>",
		clk_sens=True,
		fillcolor=gold,
		label="transmitcontrol1.969:AL",
		sens="['MTxClk', 'TxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['TxUsedDataIn', 'TxReset']"];
	"transmitcontrol1.970:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da457790>",
		fillcolor=turquoise,
		label="transmitcontrol1.970:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"transmitcontrol1.969:AL" -> "transmitcontrol1.970:BL"	 [cond="[]",
		lineno=None];
	"1798:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37fba4b790>",
		clk_sens=True,
		fillcolor=gold,
		label="1798:AL",
		sens="['MTxClk', 'TxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['TxDoneIn', 'TxAbortIn', 'TxReset']"];
	"1798:AL" -> "1799:BL"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.L2_fifo.775:NS" -> "L2_UC_wrapper.L2_fifo.Leaf_772:AL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.1029:IF" -> "transmitcontrol1.1030:NS"	 [cond="['ResetByteCnt']",
		label=ResetByteCnt,
		lineno=1029];
	"transmitcontrol1.1032:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da455e50>",
		fillcolor=springgreen,
		label="transmitcontrol1.1032:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"transmitcontrol1.1029:IF" -> "transmitcontrol1.1032:IF"	 [cond="['ResetByteCnt']",
		label="!(ResetByteCnt)",
		lineno=1029];
	"L2_UC_wrapper.L2_fifo.704:AL" -> "L2_UC_wrapper.L2_fifo.705:BL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.1051:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da746350>",
		fillcolor=lightcyan,
		label="transmitcontrol1.1051:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"transmitcontrol1.1051:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da7463d0>",
		fillcolor=cadetblue,
		label="transmitcontrol1.1051:BS
MuxedCtrlData[7:0] = 8'h80;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f37da7463d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"transmitcontrol1.1051:CA" -> "transmitcontrol1.1051:BS"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.L2_fifo.707:NS" -> "L2_UC_wrapper.L2_fifo.Leaf_704:AL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.1067:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da747910>",
		fillcolor=lightcyan,
		label="transmitcontrol1.1067:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"transmitcontrol1.1067:CA" -> "transmitcontrol1.1067:BS"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.1054:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da746c10>",
		fillcolor=lightcyan,
		label="transmitcontrol1.1054:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"transmitcontrol1.1054:CA" -> "transmitcontrol1.1054:BS"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.962:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4573d0>",
		fillcolor=firebrick,
		label="transmitcontrol1.962:NS
SendingCtrlFrm <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4573d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"transmitcontrol1.962:NS" -> "transmitcontrol1.Leaf_956:AL"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.1172:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da4ab510>",
		fillcolor=turquoise,
		label="L2_UC_wrapper.1172:BL
TxData_wrapped_out[7:0] <= MAC[15:8];
read_fifo <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4ab450>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f37da4ab610>]",
		style=filled,
		typ=Block];
	"L2_UC_wrapper.1172:BL" -> "L2_UC_wrapper.Leaf_1154:AL"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.1166:BL" -> "L2_UC_wrapper.Leaf_1154:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1443:NS" -> "receivecontrol1.Leaf_1440:AL"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.L2_fifo.777:IF" -> "L2_UC_wrapper.L2_fifo.778:NS"	 [cond="['write', 'full']",
		label="(write & ~full)",
		lineno=777];
	"receivecontrol1.Leaf_1540:AL" -> "receivecontrol1.1614:AS";
	"receivecontrol1.Leaf_1540:AL" -> "receivecontrol1.1440:AL";
	"receivecontrol1.Leaf_1540:AL" -> "receivecontrol1.1555:AL";
	"receivecontrol1.Leaf_1540:AL" -> "receivecontrol1.1470:AL";
	"receivecontrol1.Leaf_1540:AL" -> "receivecontrol1.1488:AL";
	"receivecontrol1.Leaf_1540:AL" -> "receivecontrol1.1522:AL";
	"receivecontrol1.Leaf_1540:AL" -> "receivecontrol1.1584:AS";
	"Leaf_1798:AL" -> "1815:AL";
	"Leaf_1798:AL" -> "1829:AL";
	"L2_UC_wrapper.1157:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da4a7a50>",
		fillcolor=turquoise,
		label="L2_UC_wrapper.1157:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"L2_UC_wrapper.1157:BL" -> "L2_UC_wrapper.1158:CS"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1489:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37d9f99950>",
		fillcolor=turquoise,
		label="receivecontrol1.1489:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"receivecontrol1.1488:AL" -> "receivecontrol1.1489:BL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.Leaf_981:AL" -> "1843:AS";
	"transmitcontrol1.Leaf_981:AL" -> "1847:AS";
	"1829:AL" -> "1830:BL"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.1180:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da4b7310>",
		fillcolor=turquoise,
		label="L2_UC_wrapper.1180:BL
ByteCnt <= 0;
read_fifo <= 0;
TxData_wrapped_out <= 8'h0;
PreNib15State <= 9'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4b7050>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f37da4b71d0>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4b7350>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f37da4b74d0>]",
		style=filled,
		typ=Block];
	"L2_UC_wrapper.1180:BL" -> "L2_UC_wrapper.Leaf_1154:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1612:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37fba1d3d0>",
		def_var="['ByteCntEq16']",
		fillcolor=deepskyblue,
		label="receivecontrol1.1612:AS
ByteCntEq16 = RxValid & (ByteCnt[4:0] == 5'h10);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxValid', 'ByteCnt']"];
	"receivecontrol1.1612:AS" -> "receivecontrol1.1701:AL";
	"receivecontrol1.1612:AS" -> "receivecontrol1.1507:AL";
	"receivecontrol1.1612:AS" -> "receivecontrol1.1488:AL";
	"receivecontrol1.1612:AS" -> "receivecontrol1.1522:AL";
	"transmitcontrol1.1025:BL" -> "transmitcontrol1.1026:IF"	 [cond="[]",
		lineno=None];
	"receivecontrol1.Leaf_1639:AL" -> "receivecontrol1.1639:AL";
	"receivecontrol1.Leaf_1639:AL" -> "receivecontrol1.1655:AL";
	"receivecontrol1.1489:BL" -> "receivecontrol1.1490:IF"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.L2_fifo.Leaf_720:AL" -> "L2_UC_wrapper.L2_fifo.720:AL";
	"L2_UC_wrapper.L2_fifo.Leaf_720:AL" -> "L2_UC_wrapper.L2_fifo.782:AL";
	"L2_UC_wrapper.1163:BL" -> "L2_UC_wrapper.Leaf_1154:AL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.947:NS" -> "transmitcontrol1.Leaf_941:AL"	 [cond="[]",
		lineno=None];
	"Leaf_1829:AL" -> "1843:AS";
	"receivecontrol1.1522:AL" -> "receivecontrol1.1523:BL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1608:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37d9f9e790>",
		def_var="['ByteCntEq12']",
		fillcolor=deepskyblue,
		label="receivecontrol1.1608:AS
ByteCntEq12 = RxValid & (ByteCnt[4:0] == 5'h0C);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxValid', 'ByteCnt']"];
	"receivecontrol1.1608:AS" -> "receivecontrol1.1470:AL";
	"receivecontrol1.Leaf_1470:AL" -> "receivecontrol1.1701:AL";
	"receivecontrol1.Leaf_1470:AL" -> "receivecontrol1.1470:AL";
	"receivecontrol1.Leaf_1470:AL" -> "receivecontrol1.1507:AL";
	"transmitcontrol1.1060:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da74d190>",
		fillcolor=lightcyan,
		label="transmitcontrol1.1060:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"transmitcontrol1.1060:CA" -> "transmitcontrol1.1060:BS"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.1172:CA" -> "L2_UC_wrapper.1172:BL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.971:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da4579d0>",
		fillcolor=springgreen,
		label="transmitcontrol1.971:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"transmitcontrol1.971:IF" -> "transmitcontrol1.974:NS"	 [cond="['TxReset']",
		label="!(TxReset)",
		lineno=971];
	"transmitcontrol1.971:IF" -> "transmitcontrol1.972:NS"	 [cond="['TxReset']",
		label=TxReset,
		lineno=971];
	"transmitcontrol1.Leaf_912:AL" -> "1854:AS";
	"transmitcontrol1.Leaf_912:AL" -> "transmitcontrol1.956:AL";
	"transmitcontrol1.Leaf_912:AL" -> "transmitcontrol1.1020:AS";
	"transmitcontrol1.Leaf_912:AL" -> "transmitcontrol1.1019:AS";
	"transmitcontrol1.981:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f37da457d10>",
		clk_sens=True,
		fillcolor=gold,
		label="transmitcontrol1.981:AL",
		sens="['MTxClk', 'TxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['TxCtrlStartFrm', 'TxStartFrmIn', 'TxReset']"];
	"transmitcontrol1.Leaf_912:AL" -> "transmitcontrol1.981:AL";
	"transmitcontrol1.1018:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37da456790>",
		def_var="['ResetByteCnt']",
		fillcolor=deepskyblue,
		label="transmitcontrol1.1018:AS
ResetByteCnt = TxReset | ~TxCtrlStartFrm & (TxDoneIn | TxAbortIn);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['TxReset', 'TxCtrlStartFrm', 'TxDoneIn', 'TxAbortIn']"];
	"transmitcontrol1.Leaf_912:AL" -> "transmitcontrol1.1018:AS";
	"transmitcontrol1.Leaf_912:AL" -> "transmitcontrol1.994:AL";
	"L2_UC_wrapper.1155:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da4a7ad0>",
		fillcolor=turquoise,
		label="L2_UC_wrapper.1155:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"L2_UC_wrapper.1154:AL" -> "L2_UC_wrapper.1155:BL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.981:AL" -> "transmitcontrol1.982:BL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.1057:BS" -> "transmitcontrol1.Leaf_1044:AL"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.1155:BL" -> "L2_UC_wrapper.1191:IF"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.1187:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da4b7490>",
		fillcolor=springgreen,
		label="L2_UC_wrapper.1187:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"L2_UC_wrapper.1155:BL" -> "L2_UC_wrapper.1187:IF"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.1156:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da4a7910>",
		fillcolor=springgreen,
		label="L2_UC_wrapper.1156:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"L2_UC_wrapper.1155:BL" -> "L2_UC_wrapper.1156:IF"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.1141:NS" -> "L2_UC_wrapper.Leaf_1131:AL"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.1146:NS" -> "L2_UC_wrapper.Leaf_1131:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1575:IF" -> "receivecontrol1.1578:IF"	 [cond="['RxValid', 'RxEndFrm']",
		label="!((RxValid & RxEndFrm))",
		lineno=1575];
	"receivecontrol1.1575:IF" -> "receivecontrol1.1576:NS"	 [cond="['RxValid', 'RxEndFrm']",
		label="(RxValid & RxEndFrm)",
		lineno=1575];
	"L2_UC_wrapper.1162:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da4a7f90>",
		fillcolor=turquoise,
		label="L2_UC_wrapper.1162:BL
TxData_wrapped_out[7:0] <= DMAC[47:40];
read_fifo <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4a7ed0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f37da4bb0d0>]",
		style=filled,
		typ=Block];
	"L2_UC_wrapper.1162:CA" -> "L2_UC_wrapper.1162:BL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.1053:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da746910>",
		fillcolor=lightcyan,
		label="transmitcontrol1.1053:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"transmitcontrol1.1053:CA" -> "transmitcontrol1.1053:BS"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.L2_fifo.723:NS" -> "L2_UC_wrapper.L2_fifo.Leaf_720:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1457:IF" -> "receivecontrol1.1458:NS"	 [cond="['DetectionWindow', 'ByteCntEq4']",
		label="(DetectionWindow & ByteCntEq4)",
		lineno=1457];
	"receivecontrol1.1457:IF" -> "receivecontrol1.1460:IF"	 [cond="['DetectionWindow', 'ByteCntEq4']",
		label="!((DetectionWindow & ByteCntEq4))",
		lineno=1457];
	"receivecontrol1.1685:IF" -> "receivecontrol1.1686:NS"	 [cond="['RxReset']",
		label=RxReset,
		lineno=1685];
	"receivecontrol1.1685:IF" -> "receivecontrol1.1688:IF"	 [cond="['RxReset']",
		label="!(RxReset)",
		lineno=1685];
	"L2_UC_wrapper.L2_fifo.782:AL" -> "L2_UC_wrapper.L2_fifo.783:BL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1542:IF" -> "receivecontrol1.1545:IF"	 [cond="['RxReset']",
		label="!(RxReset)",
		lineno=1542];
	"receivecontrol1.1543:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fd14d0>",
		fillcolor=firebrick,
		label="receivecontrol1.1543:NS
DetectionWindow <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37d9fd14d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"receivecontrol1.1542:IF" -> "receivecontrol1.1543:NS"	 [cond="['RxReset']",
		label=RxReset,
		lineno=1542];
	"receivecontrol1.1527:IF" -> "receivecontrol1.1530:BL"	 [cond="['RxStartFrm']",
		label="!(RxStartFrm)",
		lineno=1527];
	"receivecontrol1.1527:IF" -> "receivecontrol1.1528:NS"	 [cond="['RxStartFrm']",
		label=RxStartFrm,
		lineno=1527];
	"transmitcontrol1.918:NS" -> "transmitcontrol1.Leaf_912:AL"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.1188:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da4b7750>",
		fillcolor=turquoise,
		label="L2_UC_wrapper.1188:BL
PreNib15State <= PreNib15State + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4b7790>]",
		style=filled,
		typ=Block];
	"L2_UC_wrapper.1187:IF" -> "L2_UC_wrapper.1188:BL"	 [cond="['StateCount']",
		label=StateCount,
		lineno=1187];
	"transmitcontrol1.1055:BS" -> "transmitcontrol1.Leaf_1044:AL"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.L2_fifo.712:IF" -> "L2_UC_wrapper.L2_fifo.713:IF"	 [cond="['read', 'write']",
		label="(read ^ write)",
		lineno=712];
	"transmitcontrol1.941:AL" -> "transmitcontrol1.942:BL"	 [cond="[]",
		lineno=None];
	"1823:IF" -> "1824:NS"	 [cond="['TxAbortIn', 'TxAbortInLatched', 'TxUsedDataOutDetected']",
		label="(TxAbortIn & ~TxAbortInLatched & TxUsedDataOutDetected)",
		lineno=1823];
	"transmitcontrol1.986:IF" -> "transmitcontrol1.989:IF"	 [cond="['TxCtrlStartFrm']",
		label="!(TxCtrlStartFrm)",
		lineno=986];
	"transmitcontrol1.986:IF" -> "transmitcontrol1.987:NS"	 [cond="['TxCtrlStartFrm']",
		label=TxCtrlStartFrm,
		lineno=986];
	"receivecontrol1.1624:IF" -> "receivecontrol1.1625:NS"	 [cond="['RxReset']",
		label=RxReset,
		lineno=1624];
	"receivecontrol1.1624:IF" -> "receivecontrol1.1627:IF"	 [cond="['RxReset']",
		label="!(RxReset)",
		lineno=1624];
	"receivecontrol1.1704:NS" -> "receivecontrol1.Leaf_1701:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1604:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f37d9fa1b50>",
		def_var="['ByteCntEq2']",
		fillcolor=deepskyblue,
		label="receivecontrol1.1604:AS
ByteCntEq2 = RxValid & (ByteCnt[4:0] == 5'h2);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxValid', 'ByteCnt']"];
	"receivecontrol1.1604:AS" -> "receivecontrol1.1440:AL";
	"L2_UC_wrapper.1147:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da4a75d0>",
		fillcolor=springgreen,
		label="L2_UC_wrapper.1147:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"L2_UC_wrapper.1147:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4a76d0>",
		fillcolor=firebrick,
		label="L2_UC_wrapper.1147:NS
StateLeftinQ <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da4a76d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"L2_UC_wrapper.1147:IF" -> "L2_UC_wrapper.1147:NS"	 [cond="['StateLeftinQ']",
		label="(StateLeftinQ == 1)",
		lineno=1147];
	"transmitcontrol1.1013:IF" -> "transmitcontrol1.1014:NS"	 [cond="['IncrementDlyCrcCnt']",
		label=IncrementDlyCrcCnt,
		lineno=1013];
	"transmitcontrol1.1027:NS" -> "transmitcontrol1.Leaf_1024:AL"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.1147:NS" -> "L2_UC_wrapper.Leaf_1131:AL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.899:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da437750>",
		fillcolor=turquoise,
		label="transmitcontrol1.899:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"transmitcontrol1.899:BL" -> "transmitcontrol1.900:IF"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1589:AL" -> "receivecontrol1.1590:BL"	 [cond="[]",
		lineno=None];
	"1821:NS" -> "Leaf_1815:AL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.1018:AS" -> "transmitcontrol1.1024:AL";
	"transmitcontrol1.1018:AS" -> "transmitcontrol1.1005:AL";
	"receivecontrol1.1509:IF" -> "receivecontrol1.1512:IF"	 [cond="['RxReset']",
		label="!(RxReset)",
		lineno=1509];
	"receivecontrol1.1509:IF" -> "receivecontrol1.1510:NS"	 [cond="['RxReset']",
		label=RxReset,
		lineno=1509];
	"transmitcontrol1.932:IF" -> "transmitcontrol1.935:NS"	 [cond="['ControlEnd', 'ControlEnd_q']",
		label="!((ControlEnd | ControlEnd_q))",
		lineno=932];
	"transmitcontrol1.932:IF" -> "transmitcontrol1.933:NS"	 [cond="['ControlEnd', 'ControlEnd_q']",
		label="(ControlEnd | ControlEnd_q)",
		lineno=932];
	"receivecontrol1.1706:IF" -> "receivecontrol1.1709:IF"	 [cond="['RxStatusWriteLatched_sync2', 'r_PassAll', 'ReceivedPauseFrm', 'r_PassAll']",
		label="!((RxStatusWriteLatched_sync2 & r_PassAll | ReceivedPauseFrm & ~r_PassAll))",
		lineno=1706];
	"receivecontrol1.1706:IF" -> "receivecontrol1.1707:NS"	 [cond="['RxStatusWriteLatched_sync2', 'r_PassAll', 'ReceivedPauseFrm', 'r_PassAll']",
		label="(RxStatusWriteLatched_sync2 & r_PassAll | ReceivedPauseFrm & ~r_PassAll)",
		lineno=1706];
	"receivecontrol1.Leaf_1589:AL" -> "receivecontrol1.1603:AS";
	"receivecontrol1.Leaf_1589:AL" -> "receivecontrol1.1613:AS";
	"receivecontrol1.Leaf_1589:AL" -> "receivecontrol1.1614:AS";
	"receivecontrol1.Leaf_1589:AL" -> "receivecontrol1.1609:AS";
	"receivecontrol1.Leaf_1589:AL" -> "receivecontrol1.1606:AS";
	"receivecontrol1.Leaf_1589:AL" -> "receivecontrol1.1610:AS";
	"receivecontrol1.Leaf_1589:AL" -> "receivecontrol1.1611:AS";
	"receivecontrol1.Leaf_1589:AL" -> "receivecontrol1.1605:AS";
	"receivecontrol1.Leaf_1589:AL" -> "receivecontrol1.1607:AS";
	"receivecontrol1.Leaf_1589:AL" -> "receivecontrol1.1602:AS";
	"receivecontrol1.Leaf_1589:AL" -> "receivecontrol1.1612:AS";
	"receivecontrol1.Leaf_1589:AL" -> "receivecontrol1.1608:AS";
	"receivecontrol1.Leaf_1589:AL" -> "receivecontrol1.1604:AS";
	"receivecontrol1.Leaf_1589:AL" -> "receivecontrol1.1589:AL";
	"L2_UC_wrapper.1168:BL" -> "L2_UC_wrapper.Leaf_1154:AL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.1056:BS" -> "transmitcontrol1.Leaf_1044:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1628:NS" -> "receivecontrol1.Leaf_1622:AL"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.L2_fifo.728:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f37da865190>",
		fillcolor=springgreen,
		label="L2_UC_wrapper.L2_fifo.728:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"L2_UC_wrapper.L2_fifo.728:IF" -> "L2_UC_wrapper.L2_fifo.729:NS"	 [cond="['read', 'empty']",
		label="(read & ~empty)",
		lineno=728];
	"L2_UC_wrapper.1170:BL" -> "L2_UC_wrapper.Leaf_1154:AL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.995:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37da453610>",
		fillcolor=turquoise,
		label="transmitcontrol1.995:BL
ControlEnd_q <= ControlEnd;
TxCtrlStartFrm_q <= TxCtrlStartFrm;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37da453550>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f37da453750>]",
		style=filled,
		typ=Block];
	"transmitcontrol1.994:AL" -> "transmitcontrol1.995:BL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1491:NS" -> "receivecontrol1.Leaf_1488:AL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.Leaf_994:AL"	 [def_var="['ControlEnd_q', 'TxCtrlStartFrm_q']",
		label="transmitcontrol1.Leaf_994:AL"];
	"transmitcontrol1.995:BL" -> "transmitcontrol1.Leaf_994:AL"	 [cond="[]",
		lineno=None];
	"1793:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba4b750>",
		fillcolor=firebrick,
		label="1793:NS
TxUsedDataOutDetected <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f37fba4b750>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1792:IF" -> "1793:NS"	 [cond="['TxUsedDataOut']",
		label=TxUsedDataOut,
		lineno=1792];
	"receivecontrol1.1639:AL" -> "receivecontrol1.1640:BL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1464:NS" -> "receivecontrol1.Leaf_1440:AL"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.1165:BL" -> "L2_UC_wrapper.Leaf_1154:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1679:AS" -> "receivecontrol1.1683:AL";
	"receivecontrol1.1679:AS" -> "receivecontrol1.1696:AS";
	"transmitcontrol1.1007:IF" -> "transmitcontrol1.1008:NS"	 [cond="['TxReset']",
		label=TxReset,
		lineno=1007];
	"transmitcontrol1.1007:IF" -> "transmitcontrol1.1010:IF"	 [cond="['TxReset']",
		label="!(TxReset)",
		lineno=1007];
	"receivecontrol1.1657:IF" -> "receivecontrol1.1660:IF"	 [cond="['TxReset']",
		label="!(TxReset)",
		lineno=1657];
	"receivecontrol1.1657:IF" -> "receivecontrol1.1658:NS"	 [cond="['TxReset']",
		label=TxReset,
		lineno=1657];
	"Leaf_1815:AL" -> "1847:AS";
	"transmitcontrol1.920:IF" -> "transmitcontrol1.921:NS"	 [cond="['WillSendControlFrame', 'TxUsedDataOut', 'TxDoneIn', 'TxAbortIn', 'TxStartFrmIn', 'TxUsedDataOutDetected']",
		label="(WillSendControlFrame & ~TxUsedDataOut & (TxDoneIn | TxAbortIn | TxStartFrmIn | ~TxUsedDataOutDetected))",
		lineno=920];
	"transmitcontrol1.928:BL" -> "transmitcontrol1.929:IF"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.1188:BL" -> "L2_UC_wrapper.Leaf_1154:AL"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.1162:BL" -> "L2_UC_wrapper.Leaf_1154:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1543:NS" -> "receivecontrol1.Leaf_1540:AL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.1046:CS" -> "transmitcontrol1.1061:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1046];
	"transmitcontrol1.1046:CS" -> "transmitcontrol1.1066:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1046];
	"transmitcontrol1.1046:CS" -> "transmitcontrol1.1059:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1046];
	"transmitcontrol1.1046:CS" -> "transmitcontrol1.1056:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1046];
	"transmitcontrol1.1046:CS" -> "transmitcontrol1.1064:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1046];
	"transmitcontrol1.1046:CS" -> "transmitcontrol1.1063:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1046];
	"transmitcontrol1.1046:CS" -> "transmitcontrol1.1057:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1046];
	"transmitcontrol1.1046:CS" -> "transmitcontrol1.1065:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1046];
	"transmitcontrol1.1046:CS" -> "transmitcontrol1.1058:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1046];
	"transmitcontrol1.1046:CS" -> "transmitcontrol1.1055:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1046];
	"transmitcontrol1.1046:CS" -> "transmitcontrol1.1052:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1046];
	"transmitcontrol1.1046:CS" -> "transmitcontrol1.1068:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1046];
	"transmitcontrol1.1046:CS" -> "transmitcontrol1.1062:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1046];
	"transmitcontrol1.1046:CS" -> "transmitcontrol1.1051:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1046];
	"transmitcontrol1.1046:CS" -> "transmitcontrol1.1067:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1046];
	"transmitcontrol1.1046:CS" -> "transmitcontrol1.1054:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1046];
	"transmitcontrol1.1046:CS" -> "transmitcontrol1.1060:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1046];
	"transmitcontrol1.1046:CS" -> "transmitcontrol1.1053:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1046];
	"transmitcontrol1.1047:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f37da73e650>",
		fillcolor=lightcyan,
		label="transmitcontrol1.1047:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"transmitcontrol1.1046:CS" -> "transmitcontrol1.1047:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=1046];
	"receivecontrol1.Leaf_1655:AL" -> "1854:AS";
	"receivecontrol1.Leaf_1655:AL" -> "receivecontrol1.1679:AS";
	"transmitcontrol1.961:IF" -> "transmitcontrol1.964:IF"	 [cond="['WillSendControlFrame', 'TxCtrlStartFrm']",
		label="!((WillSendControlFrame & TxCtrlStartFrm))",
		lineno=961];
	"transmitcontrol1.961:IF" -> "transmitcontrol1.962:NS"	 [cond="['WillSendControlFrame', 'TxCtrlStartFrm']",
		label="(WillSendControlFrame & TxCtrlStartFrm)",
		lineno=961];
	"receivecontrol1.1655:AL" -> "receivecontrol1.1656:BL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.1047:CA" -> "transmitcontrol1.1047:IF"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1533:IF" -> "receivecontrol1.1534:NS"	 [cond="['DetectionWindow', 'ByteCntEq17']",
		label="(DetectionWindow & ByteCntEq17)",
		lineno=1533];
	"transmitcontrol1.1051:BS" -> "transmitcontrol1.Leaf_1044:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1584:AS" -> "receivecontrol1.1589:AL";
	"L2_UC_wrapper.1147:CA" -> "L2_UC_wrapper.1147:IF"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.970:BL" -> "transmitcontrol1.971:IF"	 [cond="[]",
		lineno=None];
	"L2_UC_wrapper.1167:CA" -> "L2_UC_wrapper.1167:BL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.Leaf_994:AL" -> "transmitcontrol1.927:AL";
	"transmitcontrol1.Leaf_994:AL" -> "transmitcontrol1.1020:AS";
	"transmitcontrol1.Leaf_994:AL" -> "transmitcontrol1.1019:AS";
	"transmitcontrol1.898:AL" -> "transmitcontrol1.899:BL"	 [cond="[]",
		lineno=None];
	"1818:NS" -> "Leaf_1815:AL"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.1032:IF" -> "transmitcontrol1.1033:NS"	 [cond="['IncrementByteCntBy2', 'EnableCnt']",
		label="(IncrementByteCntBy2 & EnableCnt)",
		lineno=1032];
	"transmitcontrol1.1032:IF" -> "transmitcontrol1.1035:IF"	 [cond="['IncrementByteCntBy2', 'EnableCnt']",
		label="!((IncrementByteCntBy2 & EnableCnt))",
		lineno=1032];
	"L2_UC_wrapper.L2_fifo.725:IF" -> "L2_UC_wrapper.L2_fifo.726:NS"	 [cond="['clear']",
		label=clear,
		lineno=725];
	"L2_UC_wrapper.L2_fifo.725:IF" -> "L2_UC_wrapper.L2_fifo.728:IF"	 [cond="['clear']",
		label="!(clear)",
		lineno=725];
	"receivecontrol1.1647:BL" -> "receivecontrol1.Leaf_1639:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1475:IF" -> "receivecontrol1.1476:NS"	 [cond="['DetectionWindow', 'ByteCntEq12']",
		label="(DetectionWindow & ByteCntEq12)",
		lineno=1475];
	"receivecontrol1.1475:IF" -> "receivecontrol1.1478:IF"	 [cond="['DetectionWindow', 'ByteCntEq12']",
		label="!((DetectionWindow & ByteCntEq12))",
		lineno=1475];
	"L2_UC_wrapper.1156:IF" -> "L2_UC_wrapper.1157:BL"	 [cond="['StateCount', 'StateLeftinQ', 'TxStartFrmIn']",
		label="(StateCount | StateLeftinQ | TxStartFrmIn)",
		lineno=1156];
	"L2_UC_wrapper.1156:IF" -> "L2_UC_wrapper.1180:BL"	 [cond="['StateCount', 'StateLeftinQ', 'TxStartFrmIn']",
		label="!((StateCount | StateLeftinQ | TxStartFrmIn))",
		lineno=1156];
	"L2_UC_wrapper.L2_fifo.772:AL" -> "L2_UC_wrapper.L2_fifo.773:BL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1571:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f37d9fb7850>",
		fillcolor=turquoise,
		label="receivecontrol1.1571:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"receivecontrol1.1570:AL" -> "receivecontrol1.1571:BL"	 [cond="[]",
		lineno=None];
	"1793:NS" -> "Leaf_1784:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1571:BL" -> "receivecontrol1.1572:IF"	 [cond="[]",
		lineno=None];
	"transmitcontrol1.1078:NS" -> "transmitcontrol1.Leaf_1072:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.Leaf_1622:AL" -> "receivecontrol1.1618:AS";
	"receivecontrol1.Leaf_1622:AL" -> "receivecontrol1.1634:AS";
	"receivecontrol1.Leaf_1622:AL" -> "receivecontrol1.1666:AL";
	"receivecontrol1.Leaf_1622:AL" -> "receivecontrol1.1622:AL";
	"receivecontrol1.1689:NS" -> "receivecontrol1.Leaf_1683:AL"	 [cond="[]",
		lineno=None];
	"receivecontrol1.1451:IF" -> "receivecontrol1.1452:NS"	 [cond="['DetectionWindow', 'ByteCntEq2']",
		label="(DetectionWindow & ByteCntEq2)",
		lineno=1451];
	"receivecontrol1.1451:IF" -> "receivecontrol1.1454:IF"	 [cond="['DetectionWindow', 'ByteCntEq2']",
		label="!((DetectionWindow & ByteCntEq2))",
		lineno=1451];
}
