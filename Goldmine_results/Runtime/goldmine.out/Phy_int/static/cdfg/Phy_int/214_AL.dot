strict digraph "" {
	node [label="\N"];
	"219:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8896437150>",
		fillcolor=springgreen,
		label="219:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"221:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f88749d9990>",
		fillcolor=springgreen,
		label="221:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"219:IF" -> "221:IF"	 [cond="['Speed', 'Rx_dv_dl2']",
		label="!((Speed[2] && Rx_dv_dl2))",
		lineno=219];
	"220:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f88749d9850>",
		fillcolor=firebrick,
		label="220:NS
MRxD <= Rxd_dl2;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f88749d9850>]",
		style=filled,
		typ=NonblockingSubstitution];
	"219:IF" -> "220:NS"	 [cond="['Speed', 'Rx_dv_dl2']",
		label="(Speed[2] && Rx_dv_dl2)",
		lineno=219];
	"222:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f88749d99d0>",
		fillcolor=firebrick,
		label="222:NS
MRxD <= { Rxd_dl1[3:0], Rxd_dl2[3:0] };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f88749d99d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"221:IF" -> "222:NS"	 [cond="['Rx_dv_dl1', 'Rx_odd_data_ptr']",
		label="(Rx_dv_dl1 && Rx_odd_data_ptr)",
		lineno=221];
	"216:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f88749d9d90>",
		fillcolor=firebrick,
		label="216:NS
MRxD <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f88749d9d90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_214:AL"	 [def_var="['MRxD']",
		label="Leaf_214:AL"];
	"216:NS" -> "Leaf_214:AL"	 [cond="[]",
		lineno=None];
	"214:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f88749d9f10>",
		clk_sens=False,
		fillcolor=gold,
		label="214:AL",
		sens="['MAC_rx_clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Rxd_dl1', 'Rxd_dl2', 'Txd', 'Line_loop_en', 'Rx_odd_data_ptr', 'Speed', 'Rx_dv_dl2', 'Rx_dv_dl1']"];
	"215:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f88964370d0>",
		fillcolor=springgreen,
		label="215:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"214:AL" -> "215:IF"	 [cond="[]",
		lineno=None];
	"215:IF" -> "216:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=215];
	"217:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8896437110>",
		fillcolor=springgreen,
		label="217:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"215:IF" -> "217:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=215];
	"217:IF" -> "219:IF"	 [cond="['Line_loop_en']",
		label="!(Line_loop_en)",
		lineno=217];
	"218:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f88964372d0>",
		fillcolor=firebrick,
		label="218:NS
MRxD <= Txd;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f88964372d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"217:IF" -> "218:NS"	 [cond="['Line_loop_en']",
		label=Line_loop_en,
		lineno=217];
	"220:NS" -> "Leaf_214:AL"	 [cond="[]",
		lineno=None];
	"218:NS" -> "Leaf_214:AL"	 [cond="[]",
		lineno=None];
	"222:NS" -> "Leaf_214:AL"	 [cond="[]",
		lineno=None];
}
