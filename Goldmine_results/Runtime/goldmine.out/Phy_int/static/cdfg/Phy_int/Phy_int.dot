strict digraph "compose( ,  )" {
	node [label="\N"];
	"131:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8874e6c610>",
		fillcolor=turquoise,
		label="131:BL
MTxD_dl1 <= MTxD;
MTxEn_dl1 <= MTxEn;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8874e6c650>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f8874e6c790>]",
		style=filled,
		typ=Block];
	"Leaf_124:AL"	 [def_var="['MTxEn_dl1', 'MTxD_dl1']",
		label="Leaf_124:AL"];
	"131:BL" -> "Leaf_124:AL"	 [cond="[]",
		lineno=None];
	"165:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f88752784d0>",
		def_var="['Tx_er']",
		fillcolor=deepskyblue,
		label="165:AS
Tx_er = 0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="[]"];
	"216:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8875281090>",
		fillcolor=firebrick,
		label="216:NS
MRxD <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8875281090>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_214:AL"	 [def_var="['MRxD']",
		label="Leaf_214:AL"];
	"216:NS" -> "Leaf_214:AL"	 [cond="[]",
		lineno=None];
	"Leaf_171:AL"	 [def_var="['Rxd_dl1', 'Rxd_dl2', 'Col_dl1', 'Rx_er_dl1', 'Crs_dl1', 'Rx_dv_dl2', 'Rx_dv_dl1']",
		label="Leaf_171:AL"];
	"193:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f887527db50>",
		def_var="['MRxErr']",
		fillcolor=deepskyblue,
		label="193:AS
MRxErr = Rx_er_dl1;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Rx_er_dl1']"];
	"Leaf_171:AL" -> "193:AS";
	"214:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f8874e46f10>",
		clk_sens=False,
		fillcolor=gold,
		label="214:AL",
		sens="['MAC_rx_clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Rxd_dl1', 'Rxd_dl2', 'Txd', 'Line_loop_en', 'Rx_odd_data_ptr', 'Speed', 'Rx_dv_dl2', 'Rx_dv_dl1']"];
	"Leaf_171:AL" -> "214:AL";
	"196:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f887527ded0>",
		clk_sens=False,
		fillcolor=gold,
		label="196:AL",
		sens="['MAC_rx_clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Line_loop_en', 'Rx_dv_dl2', 'Tx_en']"];
	"Leaf_171:AL" -> "196:AL";
	"194:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f887527dc90>",
		def_var="['MCRS']",
		fillcolor=deepskyblue,
		label="194:AS
MCRS = Crs_dl1;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Crs_dl1']"];
	"Leaf_171:AL" -> "194:AS";
	"171:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f8875278810>",
		clk_sens=False,
		fillcolor=gold,
		label="171:AL",
		sens="['MAC_rx_clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Crs', 'Rx_dv', 'Rxd_dl1', 'Rxd', 'Rx_er', 'Col', 'Rx_dv_dl1']"];
	"Leaf_171:AL" -> "171:AL";
	"206:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f8874e466d0>",
		clk_sens=False,
		fillcolor=gold,
		label="206:AL",
		sens="['MAC_rx_clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Rx_dv_dl1', 'Rx_odd_data_ptr']"];
	"Leaf_171:AL" -> "206:AL";
	"Leaf_136:AL"	 [def_var="['Tx_odd_data_ptr']",
		label="Leaf_136:AL"];
	"136:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f8874e6c950>",
		clk_sens=True,
		fillcolor=gold,
		label="136:AL",
		sens="['MAC_tx_clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Tx_odd_data_ptr', 'MTxD_dl1']"];
	"Leaf_136:AL" -> "136:AL";
	"145:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f8874ea4150>",
		clk_sens=True,
		fillcolor=gold,
		label="145:AL",
		sens="['MAC_tx_clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'MTxEn_dl1', 'MTxD_dl1', 'Speed', 'Tx_odd_data_ptr']"];
	"Leaf_136:AL" -> "145:AL";
	"125:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8874e6c450>",
		fillcolor=springgreen,
		label="125:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"125:IF" -> "131:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=125];
	"126:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8874e6c310>",
		fillcolor=turquoise,
		label="126:BL
MTxD_dl1 <= 0;
MTxEn_dl1 <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8874e6c350>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f8874e6c490>]",
		style=filled,
		typ=Block];
	"125:IF" -> "126:BL"	 [cond="['Reset']",
		label=Reset,
		lineno=125];
	"140:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8874e6cdd0>",
		fillcolor=firebrick,
		label="140:NS
Tx_odd_data_ptr <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8874e6cdd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"140:NS" -> "Leaf_136:AL"	 [cond="[]",
		lineno=None];
	"149:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8874ea4610>",
		fillcolor=firebrick,
		label="149:NS
Txd <= MTxD_dl1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8874ea4610>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_145:AL"	 [def_var="['Txd']",
		label="Leaf_145:AL"];
	"149:NS" -> "Leaf_145:AL"	 [cond="[]",
		lineno=None];
	"126:BL" -> "Leaf_124:AL"	 [cond="[]",
		lineno=None];
	"152:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8874ea4f50>",
		fillcolor=springgreen,
		label="152:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"153:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8874ea4fd0>",
		fillcolor=firebrick,
		label="153:NS
Txd <= { 4'b0, MTxD_dl1[7:4] };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8874ea4fd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"152:IF" -> "153:NS"	 [cond="['MTxEn_dl1', 'Tx_odd_data_ptr']",
		label="(MTxEn_dl1 && Tx_odd_data_ptr)",
		lineno=152];
	"155:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8875278110>",
		fillcolor=firebrick,
		label="155:NS
Txd <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8875278110>]",
		style=filled,
		typ=NonblockingSubstitution];
	"152:IF" -> "155:NS"	 [cond="['MTxEn_dl1', 'Tx_odd_data_ptr']",
		label="!((MTxEn_dl1 && Tx_odd_data_ptr))",
		lineno=152];
	"204:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8874e46710>",
		fillcolor=firebrick,
		label="204:NS
MCrs_dv <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8874e46710>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_196:AL"	 [def_var="['MCrs_dv']",
		label="Leaf_196:AL"];
	"204:NS" -> "Leaf_196:AL"	 [cond="[]",
		lineno=None];
	"219:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8875281690>",
		fillcolor=springgreen,
		label="219:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"220:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f88752816d0>",
		fillcolor=firebrick,
		label="220:NS
MRxD <= Rxd_dl2;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f88752816d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"219:IF" -> "220:NS"	 [cond="['Speed', 'Rx_dv_dl2']",
		label="(Speed[2] && Rx_dv_dl2)",
		lineno=219];
	"221:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f88752818d0>",
		fillcolor=springgreen,
		label="221:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"219:IF" -> "221:IF"	 [cond="['Speed', 'Rx_dv_dl2']",
		label="!((Speed[2] && Rx_dv_dl2))",
		lineno=219];
	"153:NS" -> "Leaf_145:AL"	 [cond="[]",
		lineno=None];
	"222:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8875281c90>",
		fillcolor=firebrick,
		label="222:NS
MRxD <= { Rxd_dl1[3:0], Rxd_dl2[3:0] };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8875281c90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"222:NS" -> "Leaf_214:AL"	 [cond="[]",
		lineno=None];
	"Leaf_124:AL" -> "136:AL";
	"Leaf_124:AL" -> "145:AL";
	"157:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f8874ea4a10>",
		clk_sens=True,
		fillcolor=gold,
		label="157:AL",
		sens="['MAC_tx_clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'MTxEn_dl1']"];
	"Leaf_124:AL" -> "157:AL";
	"Leaf_145:AL" -> "214:AL";
	"197:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f887527dfd0>",
		fillcolor=springgreen,
		label="197:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"199:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8874e462d0>",
		fillcolor=springgreen,
		label="199:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"197:IF" -> "199:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=197];
	"198:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8874e46050>",
		fillcolor=firebrick,
		label="198:NS
MCrs_dv <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8874e46050>]",
		style=filled,
		typ=NonblockingSubstitution];
	"197:IF" -> "198:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=197];
	"215:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8875281050>",
		fillcolor=springgreen,
		label="215:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"215:IF" -> "216:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=215];
	"217:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8875281310>",
		fillcolor=springgreen,
		label="217:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"215:IF" -> "217:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=215];
	"212:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8874e46e10>",
		fillcolor=firebrick,
		label="212:NS
Rx_odd_data_ptr <= !Rx_odd_data_ptr;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8874e46e10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_206:AL"	 [def_var="['Rx_odd_data_ptr']",
		label="Leaf_206:AL"];
	"212:NS" -> "Leaf_206:AL"	 [cond="[]",
		lineno=None];
	"209:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8874e46c90>",
		fillcolor=springgreen,
		label="209:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"209:IF" -> "212:NS"	 [cond="['Rx_dv_dl1']",
		label="!((!Rx_dv_dl1))",
		lineno=209];
	"210:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8874e46bd0>",
		fillcolor=firebrick,
		label="210:NS
Rx_odd_data_ptr <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8874e46bd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"209:IF" -> "210:NS"	 [cond="['Rx_dv_dl1']",
		label="(!Rx_dv_dl1)",
		lineno=209];
	"Leaf_157:AL"	 [def_var="['Tx_en']",
		label="Leaf_157:AL"];
	"Leaf_157:AL" -> "196:AL";
	"Leaf_206:AL" -> "214:AL";
	"Leaf_206:AL" -> "206:AL";
	"137:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8874e6ca90>",
		fillcolor=springgreen,
		label="137:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"139:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8874e6ce90>",
		fillcolor=springgreen,
		label="139:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"137:IF" -> "139:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=137];
	"138:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8874e6cad0>",
		fillcolor=firebrick,
		label="138:NS
Tx_odd_data_ptr <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8874e6cad0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"137:IF" -> "138:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=137];
	"173:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8875278f90>",
		fillcolor=turquoise,
		label="173:BL
Rx_er_dl1 <= 0;
Rx_dv_dl1 <= 0;
Rx_dv_dl2 <= 0;
Rxd_dl1 <= 0;
Rxd_dl2 <= 0;
Crs_dl1 <= 0;
Col_dl1 <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8875278990>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f8875278ad0>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8875278c10>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f8875278d50>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8875278e90>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f8875278fd0>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f887527d150>]",
		style=filled,
		typ=Block];
	"173:BL" -> "Leaf_171:AL"	 [cond="[]",
		lineno=None];
	"146:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8874ea4250>",
		fillcolor=springgreen,
		label="146:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"147:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8874ea4290>",
		fillcolor=firebrick,
		label="147:NS
Txd <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8874ea4290>]",
		style=filled,
		typ=NonblockingSubstitution];
	"146:IF" -> "147:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=146];
	"148:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8874ea45d0>",
		fillcolor=springgreen,
		label="148:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"146:IF" -> "148:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=146];
	"136:AL" -> "137:IF"	 [cond="[]",
		lineno=None];
	"208:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8874e468d0>",
		fillcolor=firebrick,
		label="208:NS
Rx_odd_data_ptr <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8874e468d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"208:NS" -> "Leaf_206:AL"	 [cond="[]",
		lineno=None];
	"214:AL" -> "215:IF"	 [cond="[]",
		lineno=None];
	"150:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8874ea4ad0>",
		fillcolor=springgreen,
		label="150:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"150:IF" -> "152:IF"	 [cond="['MTxEn_dl1', 'Tx_odd_data_ptr']",
		label="!((MTxEn_dl1 && !Tx_odd_data_ptr))",
		lineno=150];
	"151:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8874ea4b50>",
		fillcolor=firebrick,
		label="151:NS
Txd <= { 4'b0, MTxD_dl1[3:0] };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8874ea4b50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"150:IF" -> "151:NS"	 [cond="['MTxEn_dl1', 'Tx_odd_data_ptr']",
		label="(MTxEn_dl1 && !Tx_odd_data_ptr)",
		lineno=150];
	"196:AL" -> "197:IF"	 [cond="[]",
		lineno=None];
	"207:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8874e46890>",
		fillcolor=springgreen,
		label="207:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"207:IF" -> "209:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=207];
	"207:IF" -> "208:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=207];
	"145:AL" -> "146:IF"	 [cond="[]",
		lineno=None];
	"201:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8874e46550>",
		fillcolor=springgreen,
		label="201:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"199:IF" -> "201:IF"	 [cond="['Line_loop_en']",
		label="!(Line_loop_en)",
		lineno=199];
	"200:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8874e46310>",
		fillcolor=firebrick,
		label="200:NS
MCrs_dv <= Tx_en;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8874e46310>]",
		style=filled,
		typ=NonblockingSubstitution];
	"199:IF" -> "200:NS"	 [cond="['Line_loop_en']",
		label=Line_loop_en,
		lineno=199];
	"139:IF" -> "140:NS"	 [cond="['MTxD_dl1']",
		label="(!MTxD_dl1)",
		lineno=139];
	"142:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8874ea4050>",
		fillcolor=firebrick,
		label="142:NS
Tx_odd_data_ptr <= !Tx_odd_data_ptr;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8874ea4050>]",
		style=filled,
		typ=NonblockingSubstitution];
	"139:IF" -> "142:NS"	 [cond="['MTxD_dl1']",
		label="!((!MTxD_dl1))",
		lineno=139];
	"151:NS" -> "Leaf_145:AL"	 [cond="[]",
		lineno=None];
	"163:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f88752785d0>",
		fillcolor=firebrick,
		label="163:NS
Tx_en <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f88752785d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"163:NS" -> "Leaf_157:AL"	 [cond="[]",
		lineno=None];
	"183:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f887527d910>",
		fillcolor=turquoise,
		label="183:BL
Rx_er_dl1 <= Rx_er;
Rx_dv_dl1 <= Rx_dv;
Rx_dv_dl2 <= Rx_dv_dl1;
Rxd_dl1 <= Rxd;
Rxd_dl2 <= Rxd_dl1;
Crs_dl1 <= Crs;
Col_dl1 <= \
Col;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f887527d310>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f887527d450>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f887527d590>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f887527d6d0>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f887527d810>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f887527d950>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f887527da90>]",
		style=filled,
		typ=Block];
	"183:BL" -> "Leaf_171:AL"	 [cond="[]",
		lineno=None];
	"220:NS" -> "Leaf_214:AL"	 [cond="[]",
		lineno=None];
	"142:NS" -> "Leaf_136:AL"	 [cond="[]",
		lineno=None];
	"138:NS" -> "Leaf_136:AL"	 [cond="[]",
		lineno=None];
	"201:IF" -> "204:NS"	 [cond="['Rx_dv_dl2']",
		label="!(Rx_dv_dl2)",
		lineno=201];
	"202:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8874e46590>",
		fillcolor=firebrick,
		label="202:NS
MCrs_dv <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8874e46590>]",
		style=filled,
		typ=NonblockingSubstitution];
	"201:IF" -> "202:NS"	 [cond="['Rx_dv_dl2']",
		label=Rx_dv_dl2,
		lineno=201];
	"221:IF" -> "222:NS"	 [cond="['Rx_dv_dl1', 'Rx_odd_data_ptr']",
		label="(Rx_dv_dl1 && Rx_odd_data_ptr)",
		lineno=221];
	"202:NS" -> "Leaf_196:AL"	 [cond="[]",
		lineno=None];
	"147:NS" -> "Leaf_145:AL"	 [cond="[]",
		lineno=None];
	"172:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f887527d110>",
		fillcolor=springgreen,
		label="172:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"172:IF" -> "173:BL"	 [cond="['Reset']",
		label=Reset,
		lineno=172];
	"172:IF" -> "183:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=172];
	"124:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f8874e6c1d0>",
		clk_sens=True,
		fillcolor=gold,
		label="124:AL",
		sens="['MAC_tx_clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'MTxEn', 'MTxD']"];
	"124:AL" -> "125:IF"	 [cond="[]",
		lineno=None];
	"159:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f88752781d0>",
		fillcolor=firebrick,
		label="159:NS
Tx_en <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f88752781d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"159:NS" -> "Leaf_157:AL"	 [cond="[]",
		lineno=None];
	"198:NS" -> "Leaf_196:AL"	 [cond="[]",
		lineno=None];
	"158:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8875278150>",
		fillcolor=springgreen,
		label="158:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"157:AL" -> "158:IF"	 [cond="[]",
		lineno=None];
	"171:AL" -> "172:IF"	 [cond="[]",
		lineno=None];
	"148:IF" -> "149:NS"	 [cond="['Speed', 'MTxEn_dl1']",
		label="(Speed[2] && MTxEn_dl1)",
		lineno=148];
	"148:IF" -> "150:IF"	 [cond="['Speed', 'MTxEn_dl1']",
		label="!((Speed[2] && MTxEn_dl1))",
		lineno=148];
	"155:NS" -> "Leaf_145:AL"	 [cond="[]",
		lineno=None];
	"218:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8875281350>",
		fillcolor=firebrick,
		label="218:NS
MRxD <= Txd;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8875281350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"218:NS" -> "Leaf_214:AL"	 [cond="[]",
		lineno=None];
	"161:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8875278450>",
		fillcolor=firebrick,
		label="161:NS
Tx_en <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8875278450>]",
		style=filled,
		typ=NonblockingSubstitution];
	"161:NS" -> "Leaf_157:AL"	 [cond="[]",
		lineno=None];
	"206:AL" -> "207:IF"	 [cond="[]",
		lineno=None];
	"210:NS" -> "Leaf_206:AL"	 [cond="[]",
		lineno=None];
	"158:IF" -> "159:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=158];
	"160:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8875278410>",
		fillcolor=springgreen,
		label="160:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"158:IF" -> "160:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=158];
	"160:IF" -> "163:NS"	 [cond="['MTxEn_dl1']",
		label="!(MTxEn_dl1)",
		lineno=160];
	"160:IF" -> "161:NS"	 [cond="['MTxEn_dl1']",
		label=MTxEn_dl1,
		lineno=160];
	"217:IF" -> "219:IF"	 [cond="['Line_loop_en']",
		label="!(Line_loop_en)",
		lineno=217];
	"217:IF" -> "218:NS"	 [cond="['Line_loop_en']",
		label=Line_loop_en,
		lineno=217];
	"200:NS" -> "Leaf_196:AL"	 [cond="[]",
		lineno=None];
}
