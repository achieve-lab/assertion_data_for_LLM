digraph "" {
	ENABLE -> key_derivation_en	 [weight=1.0];
	ENABLE -> bypass_rk	 [weight=4.0];
	ENABLE -> end_comp	 [weight=1.0];
	ENABLE -> iv_cnt_en	 [weight=1.0];
	ENABLE -> rd_count_en	 [weight=2.0];
	ENABLE -> bypass_key_en	 [weight=7.0];
	last_round -> iv_cnt_sel	 [weight=1.0];
	last_round -> next_state	 [weight=5.0];
	last_round -> rd_count	 [weight=2.0];
	last_round -> iv_cnt_en	 [weight=1.0];
	last_round -> col_sel	 [weight=22.0];
	last_round -> col_en	 [weight=2.0];
	last_round -> rk_sel	 [weight=18.0];
	KEY_HOST -> key_sel	 [weight=1.0];
	KEY_DERIVATION -> op_key_derivation	 [weight=1.0];
	KEY_DERIVATION -> key_derivation_en	 [weight=1.0];
	KEY_DERIVATION -> encrypt_decrypt	 [weight=1.0];
	COL_DIS -> col_en	 [weight=1.0];
	op_key_derivation -> next_state	 [weight=1.0];
	disable_core -> state	 [weight=2.0];
	KEY_DIS -> key_en	 [weight=1.0];
	next_state -> state	 [weight=1.0];
	first_round -> next_state	 [weight=2.0];
	KEY_OUT -> key_sel	 [weight=25.0];
	ROUND_KEY0 -> key_gen	 [weight=1.0];
	ROUND_KEY0 -> next_state	 [weight=4.0];
	mode_cbc -> col_sel	 [weight=10.0];
	state -> key_gen	 [weight=1.0];
	state -> iv_cnt_sel	 [weight=1.0];
	state -> next_state	 [weight=25.0];
	state -> key_out_sel	 [weight=25.0];
	state -> key_sel	 [weight=28.0];
	state -> key_derivation_en	 [weight=1.0];
	state -> bypass_rk	 [weight=4.0];
	state -> rd_count	 [weight=4.0];
	state -> key_en	 [weight=13.0];
	state -> end_comp	 [weight=1.0];
	state -> iv_cnt_en	 [weight=1.0];
	state -> col_sel	 [weight=14.0];
	state -> col_en	 [weight=16.0];
	state -> encrypt_decrypt	 [weight=1.0];
	state -> rd_count_en	 [weight=2.0];
	state -> sbox_sel	 [weight=27.0];
	state -> rk_sel	 [weight=25.0];
	state -> bypass_key_en	 [weight=7.0];
	EN_KEY_0 -> key_en	 [weight=2.0];
	EN_KEY_1 -> key_en	 [weight=4.0];
	EN_KEY_2 -> key_en	 [weight=4.0];
	KEY_3 -> key_out_sel	 [weight=2.0];
	ROUND0_COL2 -> next_state	 [weight=2.0];
	ROUND0_COL3 -> next_state	 [weight=3.0];
	ROUND0_COL0 -> next_state	 [weight=2.0];
	ROUND0_COL1 -> next_state	 [weight=2.0];
	READY -> next_state	 [weight=3.0];
	READY -> end_comp	 [weight=1.0];
	rd_count -> last_round	 [weight=1.0];
	rd_count -> first_round	 [weight=1.0];
	rd_count -> round	 [weight=1.0];
	rd_count -> rd_count	 [weight=1.0];
	INPUT -> col_sel	 [weight=5.0];
	G_FUNCTION -> sbox_sel	 [weight=2.0];
	CBC -> mode_cbc	 [weight=1.0];
	operation_mode -> op_mode	 [weight=1.0];
	COL_2 -> sbox_sel	 [weight=5.0];
	COL_3 -> sbox_sel	 [weight=2.0];
	COL_0 -> sbox_sel	 [weight=8.0];
	COL_1 -> sbox_sel	 [weight=2.0];
	NOP -> next_state	 [weight=1.0];
	EN_COL_3 -> col_en	 [weight=3.0];
	EN_COL_2 -> col_en	 [weight=5.0];
	EN_COL_1 -> col_en	 [weight=2.0];
	EN_COL_0 -> col_en	 [weight=3.0];
	CTR -> mode_ctr	 [weight=1.0];
	IV_BUS -> iv_cnt_sel	 [weight=1.0];
	COL -> rk_sel	 [weight=5.0];
	MIXCOL_OUT -> rk_sel	 [weight=18.0];
	start -> next_state	 [weight=6.0];
	start -> key_init	 [weight=1.0];
	IDLE -> next_state	 [weight=3.0];
	IDLE -> state	 [weight=2.0];
	IDLE -> rd_count	 [weight=2.0];
	DISABLE -> key_derivation_en	 [weight=1.0];
	DISABLE -> bypass_rk	 [weight=1.0];
	DISABLE -> end_comp	 [weight=1.0];
	DISABLE -> iv_cnt_en	 [weight=1.0];
	DISABLE -> rd_count_en	 [weight=1.0];
	DISABLE -> bypass_key_en	 [weight=1.0];
	IV_CNT -> iv_cnt_sel	 [weight=1.0];
	rst_n -> state	 [weight=3.0];
	rst_n -> rd_count	 [weight=3.0];
	ADD_RK_OUT -> col_sel	 [weight=10.0];
	ENCRYPTION -> encrypt_decrypt	 [weight=1.0];
	ENCRYPTION -> op_mode	 [weight=1.0];
	mode_ctr -> iv_cnt_sel	 [weight=1.0];
	mode_ctr -> iv_cnt_en	 [weight=1.0];
	mode_ctr -> col_sel	 [weight=10.0];
	mode_ctr -> enc_dec	 [weight=1.0];
	mode_ctr -> op_mode	 [weight=1.0];
	KEY_1 -> key_out_sel	 [weight=2.0];
	KEY_0 -> key_out_sel	 [weight=8.0];
	SHIFT_ROWS -> col_sel	 [weight=4.0];
	KEY_2 -> key_out_sel	 [weight=5.0];
	NUMBER_ROUND -> last_round	 [weight=1.0];
	GEN_KEY2 -> next_state	 [weight=1.0];
	GEN_KEY2 -> encrypt_decrypt	 [weight=1.0];
	GEN_KEY3 -> next_state	 [weight=1.0];
	GEN_KEY3 -> rd_count	 [weight=2.0];
	GEN_KEY3 -> encrypt_decrypt	 [weight=1.0];
	GEN_KEY0 -> next_state	 [weight=3.0];
	GEN_KEY0 -> encrypt_decrypt	 [weight=1.0];
	GEN_KEY1 -> next_state	 [weight=1.0];
	GEN_KEY1 -> encrypt_decrypt	 [weight=1.0];
	enc_dec -> next_state	 [weight=12.0];
	enc_dec -> key_sel	 [weight=3.0];
	enc_dec -> key_en	 [weight=9.0];
	enc_dec -> col_sel	 [weight=16.0];
	enc_dec -> col_en	 [weight=6.0];
	MIXCOL_IN -> rk_sel	 [weight=18.0];
	encrypt_decrypt -> enc_dec	 [weight=1.0];
	EN_KEY_3 -> key_en	 [weight=4.0];
	NUMBER_ROUND_INC -> last_round	 [weight=1.0];
	rd_count_en -> rd_count	 [weight=1.0];
	op_mode -> op_key_derivation	 [weight=1.0];
	op_mode -> next_state	 [weight=5.0];
	op_mode -> key_derivation_en	 [weight=1.0];
	op_mode -> encrypt_decrypt	 [weight=1.0];
	ROUND_COL3 -> next_state	 [weight=3.0];
	ROUND_COL2 -> next_state	 [weight=2.0];
	ROUND_COL1 -> next_state	 [weight=2.0];
	ROUND_COL0 -> next_state	 [weight=3.0];
	aes_mode -> mode_cbc	 [weight=1.0];
	aes_mode -> mode_ctr	 [weight=1.0];
	INITIAL_ROUND -> first_round	 [weight=1.0];
	INITIAL_ROUND -> rd_count	 [weight=2.0];
	COL_ALL -> col_en	 [weight=4.0];
}
