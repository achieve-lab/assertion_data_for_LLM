property a1;
@(posedge clk) (go_rx_crc_lim == 0 & ide == 1) |=> (id_ok == 0);
endproperty
assert_a1: assert property(a1);

property a25;
@(posedge clk) (match == 1 & go_rx_crc_lim == 1 & extended_mode == 0) |=> (id_ok == 1);
endproperty
assert_a25: assert property(a25);

property a23;
@(posedge clk) (match_sf_std == 1 & go_rx_crc_lim == 1) |=> (id_ok == 1);
endproperty
assert_a23: assert property(a23);

property a0;
@(posedge clk) (go_rx_crc_lim == 0 & go_rx_inter == 1) |=> (id_ok == 0);
endproperty
assert_a0: assert property(a0);

property a8;
@(posedge clk) (go_rx_crc_lim == 0 & reset_mode == 1) |=> (id_ok == 0);
endproperty
assert_a8: assert property(a8);

property a24;
@(posedge clk) (match == 1 & go_rx_crc_lim == 1 & match_df_ext == 1) |=> (id_ok == 1);
endproperty
assert_a24: assert property(a24);

property a14;
@(posedge clk) (go_rx_crc_lim == 0 & data0[3] == 1) |=> (id_ok == 0);
endproperty
assert_a14: assert property(a14);

property a16;
@(posedge clk) (go_rx_crc_lim == 0 & data0[4] == 0) |=> (id_ok == 0);
endproperty
assert_a16: assert property(a16);

property a11;
@(posedge clk) (go_rx_crc_lim == 0 & data0[1] == 1) |=> (id_ok == 0);
endproperty
assert_a11: assert property(a11);

property a10;
@(posedge clk) (go_rx_crc_lim == 0 & data0[0] == 0) |=> (id_ok == 0);
endproperty
assert_a10: assert property(a10);

property a5;
@(posedge clk) (go_rx_crc_lim == 0 & no_byte0 == 1) |=> (id_ok == 0);
endproperty
assert_a5: assert property(a5);

property a15;
@(posedge clk) (extended_mode == 1 & acceptance_code_3[0] == 1 & go_rx_inter == 0) |=> (id_ok == 0);
endproperty
assert_a15: assert property(a15);

property a19;
@(posedge clk) (extended_mode == 1 & id[13] == 1 & go_rx_inter == 1) |=> (id_ok == 0);
endproperty
assert_a19: assert property(a19);

property a12;
@(posedge clk) (extended_mode == 1 & acceptance_mask_0[0] == 0) |=> (id_ok == 0);
endproperty
assert_a12: assert property(a12);

property a17;
@(posedge clk) (match == 0 & rtr2 == 0) |=> (id_ok == 0);
endproperty
assert_a17: assert property(a17);

property a18;
@(posedge clk) (match == 0 & data1[5] == 0) |=> (id_ok == 0);
endproperty
assert_a18: assert property(a18);

property a26;
@(posedge clk) (match_df_ext == 1 & acceptance_mask_2[6] == 0) |=> (id_ok == 1);
endproperty
assert_a26: assert property(a26);

property a28;
@(posedge clk) (match_df_std == 1 & acceptance_code_0[6] == 0 & acceptance_mask_1[5] == 0 & go_rx_inter == 1) |=> (id_ok == 1);
endproperty
assert_a28: assert property(a28);

property a21;
@(posedge clk) (match == 0 & acceptance_code_3[0] == 1) |=> (id_ok == 0);
endproperty
assert_a21: assert property(a21);

property a13;
@(posedge clk) (match == 0 & acceptance_mask_1[2] == 0) |=> (id_ok == 0);
endproperty
assert_a13: assert property(a13);

property a3;
@(posedge clk) (match == 0 & data0[5] == 0) |=> (id_ok == 0);
endproperty
assert_a3: assert property(a3);

property a2;
@(posedge clk) (match == 0 & data0[2] == 0) |=> (id_ok == 0);
endproperty
assert_a2: assert property(a2);

property a4;
@(posedge clk) (match == 0 & acceptance_mask_2[1] == 0) |=> (id_ok == 0);
endproperty
assert_a4: assert property(a4);

property a7;
@(posedge clk) (match == 0 & acceptance_mask_0[0] == 0) |=> (id_ok == 0);
endproperty
assert_a7: assert property(a7);

property a6;
@(posedge clk) (match == 0 & acceptance_mask_3[6] == 0) |=> (id_ok == 0);
endproperty
assert_a6: assert property(a6);

property a9;
@(posedge clk) (match == 0 & acceptance_mask_1[0] == 0) |=> (id_ok == 0);
endproperty
assert_a9: assert property(a9);

property a27;
@(posedge clk) (match_df_ext == 1 & acceptance_mask_2[2] == 0 & no_byte0 == 1) |=> (id_ok == 1);
endproperty
assert_a27: assert property(a27);

property a29;
@(posedge clk) (id[27] == 0 & acceptance_code_3[6] == 0 & acceptance_code_2[6] == 0 & acceptance_code_1[4] == 0 & data1[3] == 0) |=> (id_ok == 1);
endproperty
assert_a29: assert property(a29);

property a20;
@(posedge clk) (id[27] == 0 & acceptance_mask_3[4] == 1) |=> (id_ok == 0);
endproperty
assert_a20: assert property(a20);

property a22;
@(posedge clk) (id[27] == 0 & data0[2] == 0 & no_byte0 == 1) |=> (id_ok == 0);
endproperty
assert_a22: assert property(a22);

