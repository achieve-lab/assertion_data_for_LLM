strict digraph "compose( ,  )" {
	node [label="\N"];
	"839:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0104d9a510>",
		def_var="['crc_init_mux']",
		fillcolor=deepskyblue,
		label="839:AS
crc_init_mux = (crc_init_sel_ff)? crc_out_ff : crc_init_ff;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_init_sel_ff', 'crc_out_ff', 'crc_init_ff']"];
	"CRC_UNIT.451:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0104d3ccd0>",
		def_var="['crc_init_justified']",
		fillcolor=deepskyblue,
		label="CRC_UNIT.451:AS
crc_init_justified[m] = |(crc_init & crc_init_sel[m]);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_init', 'crc_init_sel', 'm']"];
	"839:AS" -> "CRC_UNIT.451:AS";
	"CRC_UNIT.CRC_COMB.606:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f010502dd90>",
		def_var="['crc_in_masked']",
		fillcolor=deepskyblue,
		label="CRC_UNIT.CRC_COMB.606:AS
crc_in_masked = crc_in[CRC_SIZE-2:0] & ~(crc_poly_size_reversed[CRC_SIZE-2:0] & MASK_REVERSED);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_in', 'crc_poly_size_reversed', 'MASK_REVERSED']"];
	"CRC_UNIT.CRC_COMB.607:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0104dbd490>",
		def_var="['crc_out']",
		fillcolor=deepskyblue,
		label="CRC_UNIT.CRC_COMB.607:AS
crc_out = { crc_in_masked ^ feedback[CRC_SIZE-1:1], feedback[0] };",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_in_masked', 'feedback', 'feedback']"];
	"CRC_UNIT.CRC_COMB.606:AS" -> "CRC_UNIT.CRC_COMB.607:AS";
	"849:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0104d9af90>",
		fillcolor=cadetblue,
		label="849:BS
crc_poly_size_7 = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0104d9af90>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_842:AL"	 [def_var="['crc_poly_size_16', 'crc_poly_size_8', 'crc_poly_size_7', 'crc_poly_size_32']",
		label="Leaf_842:AL"];
	"849:BS" -> "Leaf_842:AL"	 [cond="[]",
		lineno=None];
	"794:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f0104db8750>",
		fillcolor=turquoise,
		label="794:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"795:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0104db8990>",
		fillcolor=springgreen,
		label="795:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"794:BL" -> "795:IF"	 [cond="[]",
		lineno=None];
	"CRC_UNIT.CRC_COMB.607:AS" -> "CRC_UNIT.CRC_COMB.606:AS";
	"CRC_UNIT.CRC_COMB.605:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f010502da90>",
		def_var="['feedback']",
		fillcolor=deepskyblue,
		label="CRC_UNIT.CRC_COMB.605:AS
feedback = crc_poly & { CRC_SIZE{ crc_in[CRC_SIZE - 1] ^ data_in } };",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_poly', 'crc_in', 'data_in']"];
	"CRC_UNIT.CRC_COMB.607:AS" -> "CRC_UNIT.CRC_COMB.605:AS";
	"820:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0104db28d0>",
		fillcolor=springgreen,
		label="820:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"821:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0104db2890>",
		fillcolor=firebrick,
		label="821:NS
crc_idr_ff <= RESET_CRC_IDR;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0104db2890>]",
		style=filled,
		typ=NonblockingSubstitution];
	"820:IF" -> "821:NS"	 [cond="['rst_n']",
		label="(!rst_n)",
		lineno=820];
	"823:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0104db29d0>",
		fillcolor=springgreen,
		label="823:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"820:IF" -> "823:IF"	 [cond="['rst_n']",
		label="!((!rst_n))",
		lineno=820];
	"CRC_UNIT.CRC_COMB.592:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f01050311d0>",
		def_var="['MASK_REVERSED']",
		fillcolor=deepskyblue,
		label="CRC_UNIT.CRC_COMB.592:AS
MASK_REVERSED[1] = MASK[CRC_SIZE - 2 - 1];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['CRC_SIZE']"];
	"CRC_UNIT.CRC_COMB.592:AS" -> "CRC_UNIT.CRC_COMB.606:AS";
	"764:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0104da4350>",
		fillcolor=cadetblue,
		label="764:BS
crc_data_in = byte0_mux_out;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0104da4350>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_760:AL"	 [def_var="['crc_data_in']",
		label="Leaf_760:AL"];
	"764:BS" -> "Leaf_760:AL"	 [cond="[]",
		lineno=None];
	"751:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0104dad5d0>",
		def_var="['byte1_in']",
		fillcolor=deepskyblue,
		label="751:AS
byte1_in = byte_ff[15:8];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['byte_ff']"];
	"760:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f0104dade90>",
		clk_sens=False,
		fillcolor=gold,
		label="760:AL",
		sens="['byte3_in', 'byte2_in', 'byte1_in', 'byte0_mux_out']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['byte3_in', 'byte2_in', 'byte1_in', 'byte0_mux_out', 'byte_sel']"];
	"751:AS" -> "760:AL";
	"904:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f01048873d0>",
		def_var="['crc_out_rev']",
		fillcolor=deepskyblue,
		label="904:AS
crc_out_rev[23] = crc_out_ff[31 - 23];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_out_ff']"];
	"915:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f01048a3c90>",
		def_var="['crc_out']",
		fillcolor=deepskyblue,
		label="915:AS
crc_out = (rev_out_type)? crc_out_rev : crc_out_ff;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['rev_out_type', 'crc_out_rev', 'crc_out_ff']"];
	"904:AS" -> "915:AS";
	"832:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0104d9a0d0>",
		fillcolor=firebrick,
		label="832:NS
crc_poly_ff <= RESET_CRC_POLY;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0104d9a0d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_829:AL"	 [def_var="['crc_poly_ff']",
		label="Leaf_829:AL"];
	"832:NS" -> "Leaf_829:AL"	 [cond="[]",
		lineno=None];
	"889:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f01048949d0>",
		def_var="['crc_out_rev']",
		fillcolor=deepskyblue,
		label="889:AS
crc_out_rev[8] = crc_out_ff[31 - 8];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_out_ff']"];
	"889:AS" -> "915:AS";
	"829:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f0104db2e50>",
		clk_sens=False,
		fillcolor=gold,
		label="829:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['crc_poly_en', 'bus_wr', 'RESET_CRC_POLY', 'rst_n']"];
	"830:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f0104db2e90>",
		fillcolor=turquoise,
		label="830:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"829:AL" -> "830:BL"	 [cond="[]",
		lineno=None];
	"CRC_UNIT.CRC_COMB.595:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0105031cd0>",
		def_var="['crc_poly_size_reversed']",
		fillcolor=deepskyblue,
		label="CRC_UNIT.CRC_COMB.595:AS
crc_poly_size_reversed[3] = crc_poly_size[CRC_SIZE - 2 - 3];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_poly_size']"];
	"CRC_UNIT.CRC_COMB.595:AS" -> "CRC_UNIT.CRC_COMB.606:AS";
	"CRC_UNIT.442:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0104d3ded0>",
		def_var="['crc_out']",
		fillcolor=deepskyblue,
		label="CRC_UNIT.442:AS
crc_out[l] = |(sel_out[l] & crc_comb_out[FRAME_SIZE]);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['sel_out', 'l', 'crc_comb_out']"];
	"806:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f0104db8e50>",
		clk_sens=False,
		fillcolor=gold,
		label="806:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst_n', 'RESET_CRC_OUT', 'crc_out_en', 'crc_unit_out']"];
	"CRC_UNIT.442:AS" -> "806:AL";
	"786:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0104db8410>",
		fillcolor=springgreen,
		label="786:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"787:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0104db8510>",
		fillcolor=firebrick,
		label="787:NS
crc_init_sel_ff <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0104db8510>]",
		style=filled,
		typ=NonblockingSubstitution];
	"786:IF" -> "787:NS"	 [cond="['set_crc_init_sel']",
		label=set_crc_init_sel,
		lineno=786];
	"REV_IN.186:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0104d74e50>",
		def_var="['data_reversed']",
		fillcolor=deepskyblue,
		label="REV_IN.186:AS
data_reversed[type][i] = data_in[DATA_SIZE / 4 * 2 ** (type - 1) * (i / (DATA_SIZE / 4 * 2 ** (type - 1)) + 1) - 1 \
- i % (DATA_SIZE / 4 * 2 ** (type - 1) * (i / (DATA_SIZE / 4 * 2 ** (type - 1))))];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['data_in', 'type', 'i', 'type', 'i', 'type', 'i', 'type']"];
	"REV_IN.191:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0104d71210>",
		def_var="['data_out']",
		fillcolor=deepskyblue,
		label="REV_IN.191:AS
data_out = data_reversed[rev_type];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['data_reversed', 'rev_type']"];
	"REV_IN.186:AS" -> "REV_IN.191:AS";
	"809:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0104db2150>",
		fillcolor=firebrick,
		label="809:NS
crc_out_ff <= RESET_CRC_OUT;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0104db2150>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_806:AL"	 [def_var="['crc_out_ff']",
		label="Leaf_806:AL"];
	"809:NS" -> "Leaf_806:AL"	 [cond="[]",
		lineno=None];
	"900:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f01048b3890>",
		def_var="['crc_out_rev']",
		fillcolor=deepskyblue,
		label="900:AS
crc_out_rev[19] = crc_out_ff[31 - 19];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_out_ff']"];
	"900:AS" -> "915:AS";
	"765:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f0104da4490>",
		fillcolor=lightcyan,
		label="765:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"765:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0104da4590>",
		fillcolor=cadetblue,
		label="765:BS
crc_data_in = byte1_in;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0104da4590>]",
		style=filled,
		typ=BlockingSubstitution];
	"765:CA" -> "765:BS"	 [cond="[]",
		lineno=None];
	"714:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0104d91250>",
		fillcolor=springgreen,
		label="714:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"715:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0104d913d0>",
		fillcolor=firebrick,
		label="715:NS
buffer_ff <= bus_reversed;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0104d913d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"714:IF" -> "715:NS"	 [cond="['buffer_en']",
		label=buffer_en,
		lineno=714];
	"807:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f0104db8ed0>",
		fillcolor=turquoise,
		label="807:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"808:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0104db2190>",
		fillcolor=springgreen,
		label="808:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"807:BL" -> "808:IF"	 [cond="[]",
		lineno=None];
	"901:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f01048b3b50>",
		def_var="['crc_out_rev']",
		fillcolor=deepskyblue,
		label="901:AS
crc_out_rev[20] = crc_out_ff[31 - 20];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_out_ff']"];
	"901:AS" -> "915:AS";
	"899:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f01048b35d0>",
		def_var="['crc_out_rev']",
		fillcolor=deepskyblue,
		label="899:AS
crc_out_rev[18] = crc_out_ff[31 - 18];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_out_ff']"];
	"899:AS" -> "915:AS";
	"817:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0104db2450>",
		def_var="['crc_idr_out']",
		fillcolor=deepskyblue,
		label="817:AS
crc_idr_out = crc_idr_ff;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_idr_ff']"];
	"Leaf_777:AL"	 [def_var="['crc_init_sel_ff']",
		label="Leaf_777:AL"];
	"787:NS" -> "Leaf_777:AL"	 [cond="[]",
		lineno=None];
	"727:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f0104d916d0>",
		fillcolor=turquoise,
		label="727:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"728:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0104d91a10>",
		fillcolor=springgreen,
		label="728:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"727:BL" -> "728:IF"	 [cond="[]",
		lineno=None];
	"849:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f0104d9ae90>",
		fillcolor=lightcyan,
		label="849:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"849:CA" -> "849:BS"	 [cond="[]",
		lineno=None];
	"883:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0104896910>",
		def_var="['crc_out_rev']",
		fillcolor=deepskyblue,
		label="883:AS
crc_out_rev[2] = crc_out_ff[31 - 2];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_out_ff']"];
	"883:AS" -> "915:AS";
	"888:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0104894710>",
		def_var="['crc_out_rev']",
		fillcolor=deepskyblue,
		label="888:AS
crc_out_rev[7] = crc_out_ff[31 - 7];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_out_ff']"];
	"888:AS" -> "915:AS";
	"834:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0104d9a210>",
		fillcolor=springgreen,
		label="834:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"835:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0104d9a350>",
		fillcolor=firebrick,
		label="835:NS
crc_poly_ff <= bus_wr;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0104d9a350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"834:IF" -> "835:NS"	 [cond="['crc_poly_en']",
		label=crc_poly_en,
		lineno=834];
	"812:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0104db2410>",
		fillcolor=firebrick,
		label="812:NS
crc_out_ff <= crc_unit_out;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0104db2410>]",
		style=filled,
		typ=NonblockingSubstitution];
	"812:NS" -> "Leaf_806:AL"	 [cond="[]",
		lineno=None];
	"CRC_UNIT.450:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0104d3c990>",
		def_var="['crc_init_sel']",
		fillcolor=deepskyblue,
		label="CRC_UNIT.450:AS
crc_init_sel[m] = crc_poly_size >> CRC_SIZE - 1 - m;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_poly_size', 'm']"];
	"CRC_UNIT.450:AS" -> "CRC_UNIT.451:AS";
	"CRC_UNIT.CRC_COMB.600:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f010503df10>",
		def_var="['MASK_REVERSED']",
		fillcolor=deepskyblue,
		label="CRC_UNIT.CRC_COMB.600:AS
MASK_REVERSED[5] = MASK[CRC_SIZE - 2 - 5];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['CRC_SIZE']"];
	"CRC_UNIT.CRC_COMB.600:AS" -> "CRC_UNIT.CRC_COMB.606:AS";
	"894:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f01048a67d0>",
		def_var="['crc_out_rev']",
		fillcolor=deepskyblue,
		label="894:AS
crc_out_rev[13] = crc_out_ff[31 - 13];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_out_ff']"];
	"894:AS" -> "915:AS";
	"707:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0104d91090>",
		fillcolor=springgreen,
		label="707:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"708:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f0104db6f50>",
		fillcolor=turquoise,
		label="708:BL
buffer_ff <= RESET_BUFFER;
byte_ff <= RESET_BYTE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0104db6f10>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f0104d910d0>]",
		style=filled,
		typ=Block];
	"707:IF" -> "708:BL"	 [cond="['rst_n']",
		label="(!rst_n)",
		lineno=707];
	"713:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f0104d91490>",
		fillcolor=turquoise,
		label="713:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"707:IF" -> "713:BL"	 [cond="['rst_n']",
		label="!((!rst_n))",
		lineno=707];
	"741:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0104d91cd0>",
		fillcolor=springgreen,
		label="741:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"742:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0104dad110>",
		fillcolor=firebrick,
		label="742:NS
size_ff <= bf_size_ff;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0104dad110>]",
		style=filled,
		typ=NonblockingSubstitution];
	"741:IF" -> "742:NS"	 [cond="['byte_en']",
		label=byte_en,
		lineno=741];
	"858:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f010489ab90>",
		def_var="['crc_poly_size_in']",
		fillcolor=deepskyblue,
		label="858:AS
crc_poly_size_in = { crc_poly_size_32, 15'h0, crc_poly_size_16, 7'h0, crc_poly_size_8, crc_poly_size_7, 6'h0 };",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_poly_size_32', 'crc_poly_size_16', 'crc_poly_size_8', 'crc_poly_size_7']"];
	"858:AS" -> "CRC_UNIT.450:AS";
	"CRC_UNIT.440:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0104d3d890>",
		def_var="['crc_poly_size_reversed']",
		fillcolor=deepskyblue,
		label="CRC_UNIT.440:AS
crc_poly_size_reversed[l] = crc_poly_size[CRC_SIZE - 1 - l];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_poly_size', 'l']"];
	"858:AS" -> "CRC_UNIT.440:AS";
	"CRC_UNIT.431:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0104d1db90>",
		def_var="['poly_sel']",
		fillcolor=deepskyblue,
		label="CRC_UNIT.431:AS
poly_sel[CRC_SIZE - k] = crc_poly_size >> k - 1;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_poly_size', 'k']"];
	"858:AS" -> "CRC_UNIT.431:AS";
	"764:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f0104da4210>",
		fillcolor=lightcyan,
		label="764:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"764:CA" -> "764:BS"	 [cond="[]",
		lineno=None];
	"CRC_UNIT.455:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0104d3ced0>",
		def_var="['crc_comb_out']",
		fillcolor=deepskyblue,
		label="CRC_UNIT.455:AS
crc_comb_out[0] = crc_init_justified;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_init_justified']"];
	"CRC_UNIT.451:AS" -> "CRC_UNIT.455:AS";
	"782:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f0104da4e50>",
		fillcolor=turquoise,
		label="782:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"783:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0104db8250>",
		fillcolor=springgreen,
		label="783:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"782:BL" -> "783:IF"	 [cond="[]",
		lineno=None];
	"799:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0104db8bd0>",
		fillcolor=firebrick,
		label="799:NS
crc_init_ff <= bus_wr;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0104db8bd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_793:AL"	 [def_var="['crc_init_ff']",
		label="Leaf_793:AL"];
	"799:NS" -> "Leaf_793:AL"	 [cond="[]",
		lineno=None];
	"766:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0104da4750>",
		fillcolor=cadetblue,
		label="766:BS
crc_data_in = byte2_in;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0104da4750>]",
		style=filled,
		typ=BlockingSubstitution];
	"766:BS" -> "Leaf_760:AL"	 [cond="[]",
		lineno=None];
	"796:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0104db8950>",
		fillcolor=firebrick,
		label="796:NS
crc_init_ff <= RESET_CRC_INIT;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0104db8950>]",
		style=filled,
		typ=NonblockingSubstitution];
	"795:IF" -> "796:NS"	 [cond="['rst_n']",
		label="(!rst_n)",
		lineno=795];
	"798:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0104db8c10>",
		fillcolor=springgreen,
		label="798:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"795:IF" -> "798:IF"	 [cond="['rst_n']",
		label="!((!rst_n))",
		lineno=795];
	"806:AL" -> "807:BL"	 [cond="[]",
		lineno=None];
	"REV_IN.176:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f010518f350>",
		def_var="['data_reversed']",
		fillcolor=deepskyblue,
		label="REV_IN.176:AS
data_reversed[NO_REVERSE] = data_in;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['data_in']"];
	"REV_IN.176:AS" -> "REV_IN.191:AS";
	"705:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f0104db6c90>",
		clk_sens=False,
		fillcolor=gold,
		label="705:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst_n', 'buffer_ff', 'buffer_en', 'bus_reversed', 'RESET_BUFFER', 'byte_en', 'RESET_BYTE']"];
	"706:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f0104db6d10>",
		fillcolor=turquoise,
		label="706:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"705:AL" -> "706:BL"	 [cond="[]",
		lineno=None];
	"896:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f01048a6d50>",
		def_var="['crc_out_rev']",
		fillcolor=deepskyblue,
		label="896:AS
crc_out_rev[15] = crc_out_ff[31 - 15];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_out_ff']"];
	"896:AS" -> "915:AS";
	"750:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0104dad3d0>",
		def_var="['byte0_in']",
		fillcolor=deepskyblue,
		label="750:AS
byte0_in = byte_ff[7:0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['byte_ff']"];
	"756:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0104dadd50>",
		def_var="['byte0_mux_out']",
		fillcolor=deepskyblue,
		label="756:AS
byte0_mux_out = (bypass_byte0)? buffer_ff[7:0] : byte0_in;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['bypass_byte0', 'buffer_ff', 'byte0_in']"];
	"750:AS" -> "756:AS";
	"908:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0104887ed0>",
		def_var="['crc_out_rev']",
		fillcolor=deepskyblue,
		label="908:AS
crc_out_rev[27] = crc_out_ff[31 - 27];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_out_ff']"];
	"908:AS" -> "915:AS";
	"CRC_UNIT.CRC_COMB.598:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f010503d7d0>",
		def_var="['MASK_REVERSED']",
		fillcolor=deepskyblue,
		label="CRC_UNIT.CRC_COMB.598:AS
MASK_REVERSED[4] = MASK[CRC_SIZE - 2 - 4];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['CRC_SIZE']"];
	"CRC_UNIT.CRC_COMB.598:AS" -> "CRC_UNIT.CRC_COMB.606:AS";
	"CRC_UNIT.CRC_COMB.605:AS" -> "CRC_UNIT.CRC_COMB.607:AS";
	"851:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f010489a490>",
		fillcolor=cadetblue,
		label="851:BS
crc_poly_size_16 = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f010489a490>]",
		style=filled,
		typ=BlockingSubstitution];
	"851:BS" -> "Leaf_842:AL"	 [cond="[]",
		lineno=None];
	"905:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0104887690>",
		def_var="['crc_out_rev']",
		fillcolor=deepskyblue,
		label="905:AS
crc_out_rev[24] = crc_out_ff[31 - 24];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_out_ff']"];
	"905:AS" -> "915:AS";
	"CRC_UNIT.441:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0104d3db50>",
		def_var="['sel_out']",
		fillcolor=deepskyblue,
		label="CRC_UNIT.441:AS
sel_out[l] = crc_poly_size_reversed << l;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_poly_size_reversed', 'l']"];
	"CRC_UNIT.441:AS" -> "CRC_UNIT.442:AS";
	"CRC_UNIT.455:AS" -> "CRC_UNIT.442:AS";
	"721:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0104d91590>",
		fillcolor=firebrick,
		label="721:NS
byte_ff <= buffer_ff;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0104d91590>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_705:AL"	 [def_var="['byte_ff', 'buffer_ff']",
		label="Leaf_705:AL"];
	"721:NS" -> "Leaf_705:AL"	 [cond="[]",
		lineno=None];
	"779:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0104da4ed0>",
		fillcolor=springgreen,
		label="779:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"779:IF" -> "782:BL"	 [cond="['rst_n']",
		label="!((!rst_n))",
		lineno=779];
	"780:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0104da4e90>",
		fillcolor=firebrick,
		label="780:NS
crc_init_sel_ff <= RESET_CRC_INIT_SEL;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0104da4e90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"779:IF" -> "780:NS"	 [cond="['rst_n']",
		label="(!rst_n)",
		lineno=779];
	"761:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f0104dadfd0>",
		fillcolor=turquoise,
		label="761:BL
crc_data_in = 32'h0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0104dadf50>]",
		style=filled,
		typ=Block];
	"763:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f0104da49d0>",
		fillcolor=linen,
		label="763:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"761:BL" -> "763:CS"	 [cond="[]",
		lineno=None];
	"911:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f01048a3750>",
		def_var="['crc_out_rev']",
		fillcolor=deepskyblue,
		label="911:AS
crc_out_rev[30] = crc_out_ff[31 - 30];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_out_ff']"];
	"911:AS" -> "915:AS";
	"CRC_UNIT.440:AS" -> "CRC_UNIT.441:AS";
	"887:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0104894450>",
		def_var="['crc_out_rev']",
		fillcolor=deepskyblue,
		label="887:AS
crc_out_rev[6] = crc_out_ff[31 - 6];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_out_ff']"];
	"887:AS" -> "915:AS";
	"780:NS" -> "Leaf_777:AL"	 [cond="[]",
		lineno=None];
	"CRC_UNIT.CRC_COMB.591:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0105026e10>",
		def_var="['crc_poly_size_reversed']",
		fillcolor=deepskyblue,
		label="CRC_UNIT.CRC_COMB.591:AS
crc_poly_size_reversed[1] = crc_poly_size[CRC_SIZE - 2 - 1];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_poly_size']"];
	"CRC_UNIT.CRC_COMB.591:AS" -> "CRC_UNIT.CRC_COMB.606:AS";
	"902:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f01048b3e10>",
		def_var="['crc_out_rev']",
		fillcolor=deepskyblue,
		label="902:AS
crc_out_rev[21] = crc_out_ff[31 - 21];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_out_ff']"];
	"902:AS" -> "915:AS";
	"886:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0104894190>",
		def_var="['crc_out_rev']",
		fillcolor=deepskyblue,
		label="886:AS
crc_out_rev[5] = crc_out_ff[31 - 5];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_out_ff']"];
	"886:AS" -> "915:AS";
	"909:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f01048a31d0>",
		def_var="['crc_out_rev']",
		fillcolor=deepskyblue,
		label="909:AS
crc_out_rev[28] = crc_out_ff[31 - 28];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_out_ff']"];
	"909:AS" -> "915:AS";
	"893:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f01048a6510>",
		def_var="['crc_out_rev']",
		fillcolor=deepskyblue,
		label="893:AS
crc_out_rev[12] = crc_out_ff[31 - 12];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_out_ff']"];
	"893:AS" -> "915:AS";
	"Leaf_818:AL"	 [def_var="['crc_idr_ff']",
		label="Leaf_818:AL"];
	"821:NS" -> "Leaf_818:AL"	 [cond="[]",
		lineno=None];
	"843:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f0104d9acd0>",
		fillcolor=turquoise,
		label="843:BL
crc_poly_size_7 = 1'b0;
crc_poly_size_8 = 1'b0;
crc_poly_size_16 = 1'b0;
crc_poly_size_32 = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0104d9a790>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0104d9a950>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0104d9aad0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0104d9ac50>]",
		style=filled,
		typ=Block];
	"848:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f010489a450>",
		fillcolor=linen,
		label="848:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"843:BL" -> "848:CS"	 [cond="[]",
		lineno=None];
	"734:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f0104d91ad0>",
		fillcolor=turquoise,
		label="734:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"728:IF" -> "734:BL"	 [cond="['rst_n']",
		label="!((!rst_n))",
		lineno=728];
	"729:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f0104d91910>",
		fillcolor=turquoise,
		label="729:BL
bf_size_ff <= RESET_BF_SIZE;
size_ff <= RESET_SIZE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0104d918d0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f0104d91a50>]",
		style=filled,
		typ=Block];
	"728:IF" -> "729:BL"	 [cond="['rst_n']",
		label="(!rst_n)",
		lineno=728];
	"828:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0104db2c90>",
		def_var="['crc_poly_out']",
		fillcolor=deepskyblue,
		label="828:AS
crc_poly_out = crc_poly_ff;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_poly_ff']"];
	"831:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0104d9a110>",
		fillcolor=springgreen,
		label="831:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"830:BL" -> "831:IF"	 [cond="[]",
		lineno=None];
	"706:BL" -> "707:IF"	 [cond="[]",
		lineno=None];
	"766:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f0104da4650>",
		fillcolor=lightcyan,
		label="766:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"766:CA" -> "766:BS"	 [cond="[]",
		lineno=None];
	"910:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f01048a3490>",
		def_var="['crc_out_rev']",
		fillcolor=deepskyblue,
		label="910:AS
crc_out_rev[29] = crc_out_ff[31 - 29];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_out_ff']"];
	"910:AS" -> "915:AS";
	"Leaf_806:AL" -> "839:AS";
	"Leaf_806:AL" -> "904:AS";
	"Leaf_806:AL" -> "889:AS";
	"Leaf_806:AL" -> "900:AS";
	"Leaf_806:AL" -> "901:AS";
	"Leaf_806:AL" -> "899:AS";
	"Leaf_806:AL" -> "883:AS";
	"Leaf_806:AL" -> "888:AS";
	"Leaf_806:AL" -> "894:AS";
	"Leaf_806:AL" -> "915:AS";
	"Leaf_806:AL" -> "896:AS";
	"Leaf_806:AL" -> "908:AS";
	"Leaf_806:AL" -> "905:AS";
	"Leaf_806:AL" -> "911:AS";
	"Leaf_806:AL" -> "887:AS";
	"Leaf_806:AL" -> "902:AS";
	"Leaf_806:AL" -> "886:AS";
	"Leaf_806:AL" -> "909:AS";
	"Leaf_806:AL" -> "893:AS";
	"Leaf_806:AL" -> "910:AS";
	"881:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0104896390>",
		def_var="['crc_out_rev']",
		fillcolor=deepskyblue,
		label="881:AS
crc_out_rev[0] = crc_out_ff[31 - 0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_out_ff']"];
	"Leaf_806:AL" -> "881:AS";
	"897:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f01048b3050>",
		def_var="['crc_out_rev']",
		fillcolor=deepskyblue,
		label="897:AS
crc_out_rev[16] = crc_out_ff[31 - 16];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_out_ff']"];
	"Leaf_806:AL" -> "897:AS";
	"891:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0104894f50>",
		def_var="['crc_out_rev']",
		fillcolor=deepskyblue,
		label="891:AS
crc_out_rev[10] = crc_out_ff[31 - 10];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_out_ff']"];
	"Leaf_806:AL" -> "891:AS";
	"890:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0104894c90>",
		def_var="['crc_out_rev']",
		fillcolor=deepskyblue,
		label="890:AS
crc_out_rev[9] = crc_out_ff[31 - 9];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_out_ff']"];
	"Leaf_806:AL" -> "890:AS";
	"907:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0104887c10>",
		def_var="['crc_out_rev']",
		fillcolor=deepskyblue,
		label="907:AS
crc_out_rev[26] = crc_out_ff[31 - 26];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_out_ff']"];
	"Leaf_806:AL" -> "907:AS";
	"903:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0104887110>",
		def_var="['crc_out_rev']",
		fillcolor=deepskyblue,
		label="903:AS
crc_out_rev[22] = crc_out_ff[31 - 22];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_out_ff']"];
	"Leaf_806:AL" -> "903:AS";
	"884:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0104896bd0>",
		def_var="['crc_out_rev']",
		fillcolor=deepskyblue,
		label="884:AS
crc_out_rev[3] = crc_out_ff[31 - 3];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_out_ff']"];
	"Leaf_806:AL" -> "884:AS";
	"895:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f01048a6a90>",
		def_var="['crc_out_rev']",
		fillcolor=deepskyblue,
		label="895:AS
crc_out_rev[14] = crc_out_ff[31 - 14];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_out_ff']"];
	"Leaf_806:AL" -> "895:AS";
	"906:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0104887950>",
		def_var="['crc_out_rev']",
		fillcolor=deepskyblue,
		label="906:AS
crc_out_rev[25] = crc_out_ff[31 - 25];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_out_ff']"];
	"Leaf_806:AL" -> "906:AS";
	"898:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f01048b3310>",
		def_var="['crc_out_rev']",
		fillcolor=deepskyblue,
		label="898:AS
crc_out_rev[17] = crc_out_ff[31 - 17];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_out_ff']"];
	"Leaf_806:AL" -> "898:AS";
	"892:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f01048a6250>",
		def_var="['crc_out_rev']",
		fillcolor=deepskyblue,
		label="892:AS
crc_out_rev[11] = crc_out_ff[31 - 11];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_out_ff']"];
	"Leaf_806:AL" -> "892:AS";
	"882:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0104896650>",
		def_var="['crc_out_rev']",
		fillcolor=deepskyblue,
		label="882:AS
crc_out_rev[1] = crc_out_ff[31 - 1];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_out_ff']"];
	"Leaf_806:AL" -> "882:AS";
	"885:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0104896e90>",
		def_var="['crc_out_rev']",
		fillcolor=deepskyblue,
		label="885:AS
crc_out_rev[4] = crc_out_ff[31 - 4];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_out_ff']"];
	"Leaf_806:AL" -> "885:AS";
	"912:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f01048a3a10>",
		def_var="['crc_out_rev']",
		fillcolor=deepskyblue,
		label="912:AS
crc_out_rev[31] = crc_out_ff[31 - 31];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_out_ff']"];
	"Leaf_806:AL" -> "912:AS";
	"REV_IN.184:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0104d74410>",
		def_var="['data_reversed']",
		fillcolor=deepskyblue,
		label="REV_IN.184:AS
data_reversed[type][i] = data_in[DATA_SIZE / 4 * 2 ** (type - 1) * (i / (DATA_SIZE / 4 * 2 ** (type - 1)) + 1) - 1 \
- i];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['data_in', 'type', 'i', 'type', 'i']"];
	"REV_IN.184:AS" -> "REV_IN.191:AS";
	"811:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0104db2290>",
		fillcolor=springgreen,
		label="811:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"811:IF" -> "812:NS"	 [cond="['crc_out_en']",
		label=crc_out_en,
		lineno=811];
	"736:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0104d91d10>",
		fillcolor=firebrick,
		label="736:NS
bf_size_ff <= size_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0104d91d10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_726:AL"	 [def_var="['bf_size_ff', 'size_ff']",
		label="Leaf_726:AL"];
	"736:NS" -> "Leaf_726:AL"	 [cond="[]",
		lineno=None];
	"708:BL" -> "Leaf_705:AL"	 [cond="[]",
		lineno=None];
	"881:AS" -> "915:AS";
	"CRC_UNIT.CRC_COMB.597:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f010503d450>",
		def_var="['crc_poly_size_reversed']",
		fillcolor=deepskyblue,
		label="CRC_UNIT.CRC_COMB.597:AS
crc_poly_size_reversed[4] = crc_poly_size[CRC_SIZE - 2 - 4];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_poly_size']"];
	"CRC_UNIT.CRC_COMB.597:AS" -> "CRC_UNIT.CRC_COMB.606:AS";
	"784:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0104db8210>",
		fillcolor=firebrick,
		label="784:NS
crc_init_sel_ff <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0104db8210>]",
		style=filled,
		typ=NonblockingSubstitution];
	"784:NS" -> "Leaf_777:AL"	 [cond="[]",
		lineno=None];
	"720:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0104d91410>",
		fillcolor=springgreen,
		label="720:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"720:IF" -> "721:NS"	 [cond="['byte_en']",
		label=byte_en,
		lineno=720];
	"734:BL" -> "741:IF"	 [cond="[]",
		lineno=None];
	"735:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0104d91d50>",
		fillcolor=springgreen,
		label="735:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"734:BL" -> "735:IF"	 [cond="[]",
		lineno=None];
	"897:AS" -> "915:AS";
	"831:IF" -> "832:NS"	 [cond="['rst_n']",
		label="(!rst_n)",
		lineno=831];
	"831:IF" -> "834:IF"	 [cond="['rst_n']",
		label="!((!rst_n))",
		lineno=831];
	"842:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f0104d9a650>",
		clk_sens=False,
		fillcolor=gold,
		label="842:AL",
		sens="[]",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['crc_poly_size']"];
	"842:AL" -> "843:BL"	 [cond="[]",
		lineno=None];
	"CRC_UNIT.CRC_COMB.599:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f010503db90>",
		def_var="['crc_poly_size_reversed']",
		fillcolor=deepskyblue,
		label="CRC_UNIT.CRC_COMB.599:AS
crc_poly_size_reversed[5] = crc_poly_size[CRC_SIZE - 2 - 5];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_poly_size']"];
	"CRC_UNIT.CRC_COMB.599:AS" -> "CRC_UNIT.CRC_COMB.606:AS";
	"767:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0104da4950>",
		fillcolor=cadetblue,
		label="767:BS
crc_data_in = byte3_in;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0104da4950>]",
		style=filled,
		typ=BlockingSubstitution];
	"767:BS" -> "Leaf_760:AL"	 [cond="[]",
		lineno=None];
	"891:AS" -> "915:AS";
	"Leaf_793:AL" -> "839:AS";
	"792:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0104db84d0>",
		def_var="['crc_init_out']",
		fillcolor=deepskyblue,
		label="792:AS
crc_init_out = crc_init_ff;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_init_ff']"];
	"Leaf_793:AL" -> "792:AS";
	"CRC_UNIT.CRC_COMB.594:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0105031910>",
		def_var="['MASK_REVERSED']",
		fillcolor=deepskyblue,
		label="CRC_UNIT.CRC_COMB.594:AS
MASK_REVERSED[2] = MASK[CRC_SIZE - 2 - 2];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['CRC_SIZE']"];
	"CRC_UNIT.CRC_COMB.594:AS" -> "CRC_UNIT.CRC_COMB.606:AS";
	"890:AS" -> "915:AS";
	"907:AS" -> "915:AS";
	"852:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f010489a710>",
		fillcolor=cadetblue,
		label="852:BS
crc_poly_size_32 = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f010489a710>]",
		style=filled,
		typ=BlockingSubstitution];
	"852:BS" -> "Leaf_842:AL"	 [cond="[]",
		lineno=None];
	"796:NS" -> "Leaf_793:AL"	 [cond="[]",
		lineno=None];
	"903:AS" -> "915:AS";
	"Leaf_842:AL" -> "858:AS";
	"729:BL" -> "Leaf_726:AL"	 [cond="[]",
		lineno=None];
	"Leaf_829:AL" -> "828:AS";
	"850:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f010489a250>",
		fillcolor=cadetblue,
		label="850:BS
crc_poly_size_8 = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f010489a250>]",
		style=filled,
		typ=BlockingSubstitution];
	"850:BS" -> "Leaf_842:AL"	 [cond="[]",
		lineno=None];
	"742:NS" -> "Leaf_726:AL"	 [cond="[]",
		lineno=None];
	"CRC_UNIT.CRC_COMB.602:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f010502d690>",
		def_var="['MASK_REVERSED']",
		fillcolor=deepskyblue,
		label="CRC_UNIT.CRC_COMB.602:AS
MASK_REVERSED[6] = MASK[CRC_SIZE - 2 - 6];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['CRC_SIZE']"];
	"CRC_UNIT.CRC_COMB.602:AS" -> "CRC_UNIT.CRC_COMB.606:AS";
	"884:AS" -> "915:AS";
	"824:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0104db2b90>",
		fillcolor=firebrick,
		label="824:NS
crc_idr_ff <= bus_wr[7:0];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0104db2b90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"824:NS" -> "Leaf_818:AL"	 [cond="[]",
		lineno=None];
	"715:NS" -> "Leaf_705:AL"	 [cond="[]",
		lineno=None];
	"851:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f010489a390>",
		fillcolor=lightcyan,
		label="851:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"851:CA" -> "851:BS"	 [cond="[]",
		lineno=None];
	"798:IF" -> "799:NS"	 [cond="['crc_init_en']",
		label=crc_init_en,
		lineno=798];
	"801:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0104db8d10>",
		fillcolor=springgreen,
		label="801:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"798:IF" -> "801:IF"	 [cond="['crc_init_en']",
		label="!(crc_init_en)",
		lineno=798];
	"CRC_UNIT.432:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0104d1de90>",
		def_var="['poly_mux']",
		fillcolor=deepskyblue,
		label="CRC_UNIT.432:AS
poly_mux[k] = |(crc_poly & poly_sel[k]);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_poly', 'poly_sel', 'k']"];
	"CRC_UNIT.432:AS" -> "CRC_UNIT.CRC_COMB.605:AS";
	"778:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f0104da4c50>",
		fillcolor=turquoise,
		label="778:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"778:BL" -> "779:IF"	 [cond="[]",
		lineno=None];
	"713:BL" -> "714:IF"	 [cond="[]",
		lineno=None];
	"713:BL" -> "720:IF"	 [cond="[]",
		lineno=None];
	"CRC_UNIT.CRC_COMB.589:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f01050266d0>",
		def_var="['crc_poly_size_reversed']",
		fillcolor=deepskyblue,
		label="CRC_UNIT.CRC_COMB.589:AS
crc_poly_size_reversed[0] = crc_poly_size[CRC_SIZE - 2 - 0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_poly_size']"];
	"CRC_UNIT.CRC_COMB.589:AS" -> "CRC_UNIT.CRC_COMB.606:AS";
	"808:IF" -> "809:NS"	 [cond="['rst_n']",
		label="(!rst_n)",
		lineno=808];
	"808:IF" -> "811:IF"	 [cond="['rst_n']",
		label="!((!rst_n))",
		lineno=808];
	"CRC_UNIT.CRC_COMB.590:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0105026a50>",
		def_var="['MASK_REVERSED']",
		fillcolor=deepskyblue,
		label="CRC_UNIT.CRC_COMB.590:AS
MASK_REVERSED[0] = MASK[CRC_SIZE - 2 - 0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['CRC_SIZE']"];
	"CRC_UNIT.CRC_COMB.590:AS" -> "CRC_UNIT.CRC_COMB.606:AS";
	"802:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0104db8e90>",
		fillcolor=firebrick,
		label="802:NS
crc_init_ff <= RESET_CRC_INIT;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0104db8e90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"801:IF" -> "802:NS"	 [cond="['buffer_rst']",
		label=buffer_rst,
		lineno=801];
	"726:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f0104d91650>",
		clk_sens=False,
		fillcolor=gold,
		label="726:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['size_in', 'rst_n', 'buffer_rst', 'RESET_SIZE', 'buffer_en', 'byte_en', 'bf_size_ff', 'RESET_BF_SIZE']"];
	"726:AL" -> "727:BL"	 [cond="[]",
		lineno=None];
	"852:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f010489a610>",
		fillcolor=lightcyan,
		label="852:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"852:CA" -> "852:BS"	 [cond="[]",
		lineno=None];
	"REV_IN.191:AS" -> "705:AL";
	"895:AS" -> "915:AS";
	"752:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0104dad7d0>",
		def_var="['byte2_in']",
		fillcolor=deepskyblue,
		label="752:AS
byte2_in = byte_ff[23:16];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['byte_ff']"];
	"752:AS" -> "760:AL";
	"906:AS" -> "915:AS";
	"Leaf_760:AL" -> "CRC_UNIT.450:AS";
	"Leaf_760:AL" -> "CRC_UNIT.440:AS";
	"Leaf_760:AL" -> "CRC_UNIT.431:AS";
	"763:CS" -> "765:CA"	 [cond="['byte_sel']",
		label=byte_sel,
		lineno=763];
	"763:CS" -> "764:CA"	 [cond="['byte_sel']",
		label=byte_sel,
		lineno=763];
	"763:CS" -> "766:CA"	 [cond="['byte_sel']",
		label=byte_sel,
		lineno=763];
	"767:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f0104da4850>",
		fillcolor=lightcyan,
		label="767:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"763:CS" -> "767:CA"	 [cond="['byte_sel']",
		label=byte_sel,
		lineno=763];
	"768:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f0104da4a10>",
		fillcolor=lightcyan,
		label="768:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"763:CS" -> "768:CA"	 [cond="['byte_sel']",
		label=byte_sel,
		lineno=763];
	"Leaf_705:AL" -> "751:AS";
	"Leaf_705:AL" -> "705:AL";
	"Leaf_705:AL" -> "750:AS";
	"Leaf_705:AL" -> "752:AS";
	"753:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0104dad9d0>",
		def_var="['byte3_in']",
		fillcolor=deepskyblue,
		label="753:AS
byte3_in = byte_ff[31:24];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['byte_ff']"];
	"Leaf_705:AL" -> "753:AS";
	"Leaf_705:AL" -> "756:AS";
	"753:AS" -> "760:AL";
	"CRC_UNIT.426:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0104d1d1d0>",
		def_var="['poly_mux']",
		fillcolor=deepskyblue,
		label="CRC_UNIT.426:AS
poly_mux[0] = crc_poly[0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_poly']"];
	"CRC_UNIT.426:AS" -> "CRC_UNIT.CRC_COMB.605:AS";
	"819:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f0104db2690>",
		fillcolor=turquoise,
		label="819:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"819:BL" -> "820:IF"	 [cond="[]",
		lineno=None];
	"898:AS" -> "915:AS";
	"Leaf_726:AL" -> "726:AL";
	"748:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0104dad210>",
		def_var="['size_out']",
		fillcolor=deepskyblue,
		label="748:AS
size_out = (bypass_size)? bf_size_ff : size_ff;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['bypass_size', 'bf_size_ff', 'size_ff']"];
	"Leaf_726:AL" -> "748:AS";
	"892:AS" -> "915:AS";
	"760:AL" -> "761:BL"	 [cond="[]",
		lineno=None];
	"768:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0104da4b10>",
		fillcolor=cadetblue,
		label="768:BS
crc_data_in = 32'h0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0104da4b10>]",
		style=filled,
		typ=BlockingSubstitution];
	"768:BS" -> "Leaf_760:AL"	 [cond="[]",
		lineno=None];
	"765:BS" -> "Leaf_760:AL"	 [cond="[]",
		lineno=None];
	"835:NS" -> "Leaf_829:AL"	 [cond="[]",
		lineno=None];
	"818:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f0104db2650>",
		clk_sens=False,
		fillcolor=gold,
		label="818:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['crc_idr_en', 'rst_n', 'bus_wr', 'RESET_CRC_IDR']"];
	"818:AL" -> "819:BL"	 [cond="[]",
		lineno=None];
	"777:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f0104da4c10>",
		clk_sens=False,
		fillcolor=gold,
		label="777:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['RESET_CRC_INIT_SEL', 'set_crc_init_sel', 'clear_crc_init_sel', 'rst_n']"];
	"777:AL" -> "778:BL"	 [cond="[]",
		lineno=None];
	"Leaf_777:AL" -> "839:AS";
	"CRC_UNIT.CRC_COMB.593:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0105031590>",
		def_var="['crc_poly_size_reversed']",
		fillcolor=deepskyblue,
		label="CRC_UNIT.CRC_COMB.593:AS
crc_poly_size_reversed[2] = crc_poly_size[CRC_SIZE - 2 - 2];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_poly_size']"];
	"CRC_UNIT.CRC_COMB.593:AS" -> "CRC_UNIT.CRC_COMB.606:AS";
	"882:AS" -> "915:AS";
	"CRC_UNIT.CRC_COMB.601:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f010502d310>",
		def_var="['crc_poly_size_reversed']",
		fillcolor=deepskyblue,
		label="CRC_UNIT.CRC_COMB.601:AS
crc_poly_size_reversed[6] = crc_poly_size[CRC_SIZE - 2 - 6];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_poly_size']"];
	"CRC_UNIT.CRC_COMB.601:AS" -> "CRC_UNIT.CRC_COMB.606:AS";
	"802:NS" -> "Leaf_793:AL"	 [cond="[]",
		lineno=None];
	"783:IF" -> "786:IF"	 [cond="['clear_crc_init_sel']",
		label="!(clear_crc_init_sel)",
		lineno=783];
	"783:IF" -> "784:NS"	 [cond="['clear_crc_init_sel']",
		label=clear_crc_init_sel,
		lineno=783];
	"823:IF" -> "824:NS"	 [cond="['crc_idr_en']",
		label=crc_idr_en,
		lineno=823];
	"850:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f010489a150>",
		fillcolor=lightcyan,
		label="850:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"850:CA" -> "850:BS"	 [cond="[]",
		lineno=None];
	"793:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f0104db8710>",
		clk_sens=False,
		fillcolor=gold,
		label="793:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['bus_wr', 'rst_n', 'buffer_rst', 'crc_init_en', 'RESET_CRC_INIT']"];
	"793:AL" -> "794:BL"	 [cond="[]",
		lineno=None];
	"885:AS" -> "915:AS";
	"912:AS" -> "915:AS";
	"848:CS" -> "849:CA"	 [cond="['crc_poly_size']",
		label=crc_poly_size,
		lineno=848];
	"848:CS" -> "851:CA"	 [cond="['crc_poly_size']",
		label=crc_poly_size,
		lineno=848];
	"848:CS" -> "852:CA"	 [cond="['crc_poly_size']",
		label=crc_poly_size,
		lineno=848];
	"848:CS" -> "850:CA"	 [cond="['crc_poly_size']",
		label=crc_poly_size,
		lineno=848];
	"739:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0104d91fd0>",
		fillcolor=firebrick,
		label="739:NS
bf_size_ff <= RESET_BF_SIZE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0104d91fd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"739:NS" -> "Leaf_726:AL"	 [cond="[]",
		lineno=None];
	"CRC_UNIT.CRC_COMB.596:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f010503d090>",
		def_var="['MASK_REVERSED']",
		fillcolor=deepskyblue,
		label="CRC_UNIT.CRC_COMB.596:AS
MASK_REVERSED[3] = MASK[CRC_SIZE - 2 - 3];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['CRC_SIZE']"];
	"CRC_UNIT.CRC_COMB.596:AS" -> "CRC_UNIT.CRC_COMB.606:AS";
	"767:CA" -> "767:BS"	 [cond="[]",
		lineno=None];
	"738:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0104d91e50>",
		fillcolor=springgreen,
		label="738:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"738:IF" -> "739:NS"	 [cond="['buffer_rst']",
		label=buffer_rst,
		lineno=738];
	"Leaf_818:AL" -> "817:AS";
	"CRC_UNIT.431:AS" -> "CRC_UNIT.432:AS";
	"735:IF" -> "736:NS"	 [cond="['buffer_en']",
		label=buffer_en,
		lineno=735];
	"735:IF" -> "738:IF"	 [cond="['buffer_en']",
		label="!(buffer_en)",
		lineno=735];
	"756:AS" -> "760:AL";
	"768:CA" -> "768:BS"	 [cond="[]",
		lineno=None];
}
