strict digraph "compose( ,  )" {
	node [label="\N"];
	"221:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f5e5aafec10>",
		fillcolor=turquoise,
		label="221:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"223:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5e5ab4d2d0>",
		fillcolor=springgreen,
		label="223:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"221:BL" -> "223:IF"	 [cond="[]",
		lineno=None];
	"220:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f5e5ab5b190>",
		clk_sens=False,
		fillcolor=gold,
		label="220:AL",
		sens="['byteIn', 'byteN']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['byteN', 'byteIn']"];
	"220:AL" -> "221:BL"	 [cond="[]",
		lineno=None];
	"224:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f5e5ab5b090>",
		fillcolor=turquoise,
		label="224:BL
byteOut = ~byteIn;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f5e5ab4dc50>]",
		style=filled,
		typ=Block];
	"223:IF" -> "224:BL"	 [cond="['byteN']",
		label=byteN,
		lineno=223];
	"228:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f5e5ab4de50>",
		fillcolor=turquoise,
		label="228:BL
byteOut = byteIn;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f5e5ab4da10>]",
		style=filled,
		typ=Block];
	"223:IF" -> "228:BL"	 [cond="['byteN']",
		label="!(byteN)",
		lineno=223];
	"Leaf_220:AL"	 [def_var="['byteOut']",
		label="Leaf_220:AL"];
	"224:BL" -> "Leaf_220:AL"	 [cond="[]",
		lineno=None];
	"228:BL" -> "Leaf_220:AL"	 [cond="[]",
		lineno=None];
}
