strict digraph "" {
	node [label="\N"];
	"399:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7882400cd0>",
		fillcolor=firebrick,
		label="399:NS
ReceivedPacketTooBig <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7882400cd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_396:AL"	 [def_var="['ReceivedPacketTooBig']",
		label="Leaf_396:AL"];
	"399:NS" -> "Leaf_396:AL"	 [cond="[]",
		lineno=None];
	"404:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7882400e50>",
		fillcolor=springgreen,
		label="404:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"405:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7882400e90>",
		fillcolor=firebrick,
		label="405:NS
ReceivedPacketTooBig <= ~r_HugEn & (RxByteCnt[15:0] > r_MaxFL[15:0]);",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7882400e90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"404:IF" -> "405:NS"	 [cond="['TakeSample']",
		label=TakeSample,
		lineno=404];
	"402:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7882385350>",
		fillcolor=firebrick,
		label="402:NS
ReceivedPacketTooBig <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7882385350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"402:NS" -> "Leaf_396:AL"	 [cond="[]",
		lineno=None];
	"405:NS" -> "Leaf_396:AL"	 [cond="[]",
		lineno=None];
	"396:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f7882385510>",
		clk_sens=True,
		fillcolor=gold,
		label="396:AL",
		sens="['MRxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'LoadRxStatus', 'RxByteCnt', 'TakeSample', 'r_HugEn', 'r_MaxFL']"];
	"397:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7882385690>",
		fillcolor=turquoise,
		label="397:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"396:AL" -> "397:BL"	 [cond="[]",
		lineno=None];
	"401:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7882385710>",
		fillcolor=springgreen,
		label="401:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"401:IF" -> "404:IF"	 [cond="['LoadRxStatus']",
		label="!(LoadRxStatus)",
		lineno=401];
	"401:IF" -> "402:NS"	 [cond="['LoadRxStatus']",
		label=LoadRxStatus,
		lineno=401];
	"398:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f78823856d0>",
		fillcolor=springgreen,
		label="398:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"397:BL" -> "398:IF"	 [cond="[]",
		lineno=None];
	"398:IF" -> "399:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=398];
	"398:IF" -> "401:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=398];
}
