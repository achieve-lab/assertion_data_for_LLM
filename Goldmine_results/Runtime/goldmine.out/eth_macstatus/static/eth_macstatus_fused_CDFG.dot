strict digraph "compose( ,  )" {
	node [label="\N"];
	"341:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860dc2dd0>",
		fillcolor=springgreen,
		label="341:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"342:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860dc2d90>",
		fillcolor=firebrick,
		label="342:NS
RxLateCollision <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860dc2d90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"341:IF" -> "342:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=341];
	"344:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860ddd110>",
		fillcolor=springgreen,
		label="344:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"341:IF" -> "344:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=341];
	"465:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860dfc850>",
		fillcolor=firebrick,
		label="465:NS
CarrierSenseLost <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860dfc850>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_459:AL"	 [def_var="['CarrierSenseLost']",
		label="Leaf_459:AL"];
	"465:NS" -> "Leaf_459:AL"	 [cond="[]",
		lineno=None];
	"428:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860de0e10>",
		fillcolor=firebrick,
		label="428:NS
RetryLimit <= MaxCollisionOccured;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860de0e10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_422:AL"	 [def_var="['RetryLimit']",
		label="Leaf_422:AL"];
	"428:NS" -> "Leaf_422:AL"	 [cond="[]",
		lineno=None];
	"353:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7860ddd650>",
		fillcolor=turquoise,
		label="353:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"354:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860ddd7d0>",
		fillcolor=springgreen,
		label="354:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"353:BL" -> "354:IF"	 [cond="[]",
		lineno=None];
	"348:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860ddd590>",
		fillcolor=firebrick,
		label="348:NS
RxLateCollision <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860ddd590>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_339:AL"	 [def_var="['RxLateCollision']",
		label="Leaf_339:AL"];
	"348:NS" -> "Leaf_339:AL"	 [cond="[]",
		lineno=None];
	"307:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f7860de2710>",
		clk_sens=True,
		fillcolor=gold,
		label="307:AL",
		sens="['MRxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'LoadRxStatus']"];
	"308:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7860de2750>",
		fillcolor=turquoise,
		label="308:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"307:AL" -> "308:BL"	 [cond="[]",
		lineno=None];
	"383:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7860dd5d10>",
		fillcolor=turquoise,
		label="383:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"384:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860dd5ed0>",
		fillcolor=springgreen,
		label="384:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"383:BL" -> "384:IF"	 [cond="[]",
		lineno=None];
	"254:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860e3b1d0>",
		fillcolor=springgreen,
		label="254:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"257:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860e3b490>",
		fillcolor=springgreen,
		label="257:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"254:IF" -> "257:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=254];
	"255:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860e3b190>",
		fillcolor=firebrick,
		label="255:NS
LatchedCrcError <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860e3b190>]",
		style=filled,
		typ=NonblockingSubstitution];
	"254:IF" -> "255:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=254];
	"404:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860dd8dd0>",
		fillcolor=springgreen,
		label="404:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"405:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860de0190>",
		fillcolor=firebrick,
		label="405:NS
ReceivedPacketTooBig <= ~r_HugEn & (RxByteCnt[15:0] > r_MaxFL[15:0]);",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860de0190>]",
		style=filled,
		typ=NonblockingSubstitution];
	"404:IF" -> "405:NS"	 [cond="['TakeSample']",
		label=TakeSample,
		lineno=404];
	"261:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860e3b890>",
		fillcolor=firebrick,
		label="261:NS
LatchedCrcError <= RxCrcError & ~RxByteCntEq0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860e3b890>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_252:AL"	 [def_var="['LatchedCrcError']",
		label="Leaf_252:AL"];
	"261:NS" -> "Leaf_252:AL"	 [cond="[]",
		lineno=None];
	"464:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860dfc890>",
		fillcolor=springgreen,
		label="464:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"464:IF" -> "465:NS"	 [cond="['StatePreamble', 'StateData', 'CarrierSense', 'Loopback', 'Collision', 'r_FullD']",
		label="((StatePreamble | |StateData) & ~CarrierSense & ~Loopback & ~Collision & ~r_FullD)",
		lineno=464];
	"467:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860dfca10>",
		fillcolor=springgreen,
		label="467:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"464:IF" -> "467:IF"	 [cond="['StatePreamble', 'StateData', 'CarrierSense', 'Loopback', 'Collision', 'r_FullD']",
		label="!(((StatePreamble | |StateData) & ~CarrierSense & ~Loopback & ~Collision & ~r_FullD))",
		lineno=464];
	"450:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860e00bd0>",
		fillcolor=springgreen,
		label="450:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"453:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860e00d90>",
		fillcolor=springgreen,
		label="453:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"450:IF" -> "453:IF"	 [cond="['DeferIndication']",
		label="!(DeferIndication)",
		lineno=450];
	"451:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860e00b90>",
		fillcolor=firebrick,
		label="451:NS
DeferLatched <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860e00b90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"450:IF" -> "451:NS"	 [cond="['DeferIndication']",
		label=DeferIndication,
		lineno=450];
	"309:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860de2850>",
		fillcolor=springgreen,
		label="309:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"310:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860de2890>",
		fillcolor=firebrick,
		label="310:NS
ReceiveEnd <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860de2890>]",
		style=filled,
		typ=NonblockingSubstitution];
	"309:IF" -> "310:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=309];
	"312:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860de2a50>",
		fillcolor=firebrick,
		label="312:NS
ReceiveEnd <= LoadRxStatus;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860de2a50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"309:IF" -> "312:NS"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=309];
	"372:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860dd56d0>",
		fillcolor=springgreen,
		label="372:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"375:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860dd57d0>",
		fillcolor=springgreen,
		label="375:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"372:IF" -> "375:IF"	 [cond="['LoadRxStatus']",
		label="!(LoadRxStatus)",
		lineno=372];
	"373:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860dd5690>",
		fillcolor=firebrick,
		label="373:NS
ShortFrame <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860dd5690>]",
		style=filled,
		typ=NonblockingSubstitution];
	"372:IF" -> "373:NS"	 [cond="['LoadRxStatus']",
		label=LoadRxStatus,
		lineno=372];
	"327:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860dc2610>",
		fillcolor=firebrick,
		label="327:NS
InvalidSymbol <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860dc2610>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_321:AL"	 [def_var="['InvalidSymbol']",
		label="Leaf_321:AL"];
	"327:NS" -> "Leaf_321:AL"	 [cond="[]",
		lineno=None];
	"355:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860ddd790>",
		fillcolor=firebrick,
		label="355:NS
RxColWindow <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860ddd790>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_352:AL"	 [def_var="['RxColWindow']",
		label="Leaf_352:AL"];
	"355:NS" -> "Leaf_352:AL"	 [cond="[]",
		lineno=None];
	"321:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f7860dc2050>",
		clk_sens=True,
		fillcolor=gold,
		label="321:AL",
		sens="['MRxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'SetInvalidSymbol', 'LoadRxStatus']"];
	"322:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7860de2fd0>",
		fillcolor=turquoise,
		label="322:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"321:AL" -> "322:BL"	 [cond="[]",
		lineno=None];
	"279:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f7861217450>",
		def_var="['ReceivedPacketGood']",
		fillcolor=deepskyblue,
		label="279:AS
ReceivedPacketGood = ~LatchedCrcError;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['LatchedCrcError']"];
	"Leaf_252:AL" -> "279:AS";
	"387:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860dd81d0>",
		fillcolor=springgreen,
		label="387:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"390:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860dd8490>",
		fillcolor=springgreen,
		label="390:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"387:IF" -> "390:IF"	 [cond="['RxStateSFD']",
		label="!(RxStateSFD)",
		lineno=387];
	"388:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860dd8190>",
		fillcolor=firebrick,
		label="388:NS
DribbleNibble <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860dd8190>]",
		style=filled,
		typ=NonblockingSubstitution];
	"387:IF" -> "388:NS"	 [cond="['RxStateSFD']",
		label=RxStateSFD,
		lineno=387];
	"446:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7860e00710>",
		fillcolor=turquoise,
		label="446:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"447:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860e008d0>",
		fillcolor=springgreen,
		label="447:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"446:BL" -> "447:IF"	 [cond="[]",
		lineno=None];
	"398:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860dd8950>",
		fillcolor=springgreen,
		label="398:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"401:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860dd8c50>",
		fillcolor=springgreen,
		label="401:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"398:IF" -> "401:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=398];
	"399:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860dd8910>",
		fillcolor=firebrick,
		label="399:NS
ReceivedPacketTooBig <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860dd8910>]",
		style=filled,
		typ=NonblockingSubstitution];
	"398:IF" -> "399:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=398];
	"340:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7860dc2c10>",
		fillcolor=turquoise,
		label="340:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"340:BL" -> "341:IF"	 [cond="[]",
		lineno=None];
	"385:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860dd5e90>",
		fillcolor=firebrick,
		label="385:NS
DribbleNibble <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860dd5e90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_382:AL"	 [def_var="['DribbleNibble']",
		label="Leaf_382:AL"];
	"385:NS" -> "Leaf_382:AL"	 [cond="[]",
		lineno=None];
	"258:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860e3b450>",
		fillcolor=firebrick,
		label="258:NS
LatchedCrcError <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860e3b450>]",
		style=filled,
		typ=NonblockingSubstitution];
	"258:NS" -> "Leaf_252:AL"	 [cond="[]",
		lineno=None];
	"323:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860dc2250>",
		fillcolor=springgreen,
		label="323:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"324:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860dc2210>",
		fillcolor=firebrick,
		label="324:NS
InvalidSymbol <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860dc2210>]",
		style=filled,
		typ=NonblockingSubstitution];
	"323:IF" -> "324:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=323];
	"326:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860dc2650>",
		fillcolor=springgreen,
		label="326:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"323:IF" -> "326:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=323];
	"297:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7860de21d0>",
		fillcolor=turquoise,
		label="297:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"298:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860de2410>",
		fillcolor=springgreen,
		label="298:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"297:BL" -> "298:IF"	 [cond="[]",
		lineno=None];
	"301:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860de2510>",
		fillcolor=firebrick,
		label="301:NS
LoadRxStatus <= TakeSample;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860de2510>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_296:AL"	 [def_var="['LoadRxStatus']",
		label="Leaf_296:AL"];
	"301:NS" -> "Leaf_296:AL"	 [cond="[]",
		lineno=None];
	"342:NS" -> "Leaf_339:AL"	 [cond="[]",
		lineno=None];
	"367:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f7860dd5250>",
		clk_sens=True,
		fillcolor=gold,
		label="367:AL",
		sens="['MRxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'TakeSample', 'r_MinFL', 'RxByteCnt', 'LoadRxStatus']"];
	"368:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7860dd5290>",
		fillcolor=turquoise,
		label="368:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"367:AL" -> "368:BL"	 [cond="[]",
		lineno=None];
	"425:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860de0a90>",
		fillcolor=firebrick,
		label="425:NS
RetryLimit <= 1'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860de0a90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"425:NS" -> "Leaf_422:AL"	 [cond="[]",
		lineno=None];
	"417:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860de0790>",
		fillcolor=firebrick,
		label="417:NS
RetryCntLatched <= RetryCnt;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860de0790>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_411:AL"	 [def_var="['RetryCntLatched']",
		label="Leaf_411:AL"];
	"417:NS" -> "Leaf_411:AL"	 [cond="[]",
		lineno=None];
	"345:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860ddd0d0>",
		fillcolor=firebrick,
		label="345:NS
RxLateCollision <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860ddd0d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"345:NS" -> "Leaf_339:AL"	 [cond="[]",
		lineno=None];
	"274:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7861217390>",
		fillcolor=firebrick,
		label="274:NS
LatchedMRxErr <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7861217390>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_266:AL"	 [def_var="['LatchedMRxErr']",
		label="Leaf_266:AL"];
	"274:NS" -> "Leaf_266:AL"	 [cond="[]",
		lineno=None];
	"454:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860e00e90>",
		fillcolor=firebrick,
		label="454:NS
DeferLatched <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860e00e90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"453:IF" -> "454:NS"	 [cond="['RstDeferLatched']",
		label=RstDeferLatched,
		lineno=453];
	"Leaf_367:AL"	 [def_var="['ShortFrame']",
		label="Leaf_367:AL"];
	"376:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860dd5ad0>",
		fillcolor=firebrick,
		label="376:NS
ShortFrame <= RxByteCnt[15:0] < r_MinFL[15:0];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860dd5ad0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"375:IF" -> "376:NS"	 [cond="['TakeSample']",
		label=TakeSample,
		lineno=375];
	"416:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860de0690>",
		fillcolor=springgreen,
		label="416:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"416:IF" -> "417:NS"	 [cond="['StartTxDone', 'StartTxAbort']",
		label="(StartTxDone | StartTxAbort)",
		lineno=416];
	"268:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860e3bb10>",
		fillcolor=springgreen,
		label="268:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"269:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860e3bad0>",
		fillcolor=firebrick,
		label="269:NS
LatchedMRxErr <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860e3bad0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"268:IF" -> "269:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=268];
	"271:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7861217290>",
		fillcolor=springgreen,
		label="271:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"268:IF" -> "271:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=268];
	"402:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860dd8c10>",
		fillcolor=firebrick,
		label="402:NS
ReceivedPacketTooBig <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860dd8c10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_396:AL"	 [def_var="['ReceivedPacketTooBig']",
		label="Leaf_396:AL"];
	"402:NS" -> "Leaf_396:AL"	 [cond="[]",
		lineno=None];
	"369:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860dd5410>",
		fillcolor=springgreen,
		label="369:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"369:IF" -> "372:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=369];
	"370:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860dd53d0>",
		fillcolor=firebrick,
		label="370:NS
ShortFrame <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860dd53d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"369:IF" -> "370:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=369];
	"Leaf_445:AL"	 [def_var="['DeferLatched']",
		label="Leaf_445:AL"];
	"454:NS" -> "Leaf_445:AL"	 [cond="[]",
		lineno=None];
	"448:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860e00890>",
		fillcolor=firebrick,
		label="448:NS
DeferLatched <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860e00890>]",
		style=filled,
		typ=NonblockingSubstitution];
	"448:NS" -> "Leaf_445:AL"	 [cond="[]",
		lineno=None];
	"468:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860dfcb10>",
		fillcolor=firebrick,
		label="468:NS
CarrierSenseLost <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860dfcb10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"468:NS" -> "Leaf_459:AL"	 [cond="[]",
		lineno=None];
	"257:IF" -> "258:NS"	 [cond="['RxStateSFD']",
		label=RxStateSFD,
		lineno=257];
	"260:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860e3b690>",
		fillcolor=springgreen,
		label="260:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"257:IF" -> "260:IF"	 [cond="['RxStateSFD']",
		label="!(RxStateSFD)",
		lineno=257];
	"445:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f7860e006d0>",
		clk_sens=False,
		fillcolor=gold,
		label="445:AL",
		sens="['MTxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'RstDeferLatched', 'DeferIndication']"];
	"445:AL" -> "446:BL"	 [cond="[]",
		lineno=None];
	"411:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f7860de01d0>",
		clk_sens=False,
		fillcolor=gold,
		label="411:AL",
		sens="['MTxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'RetryCnt', 'StartTxAbort', 'StartTxDone']"];
	"412:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7860de0290>",
		fillcolor=turquoise,
		label="412:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"411:AL" -> "412:BL"	 [cond="[]",
		lineno=None];
	"459:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f7860e00f50>",
		clk_sens=False,
		fillcolor=gold,
		label="459:AL",
		sens="['MTxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Loopback', 'TxStartFrm', 'Collision', 'StateData', 'r_FullD', 'CarrierSense', 'StatePreamble']"];
	"460:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7860e00f90>",
		fillcolor=turquoise,
		label="460:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"459:AL" -> "460:BL"	 [cond="[]",
		lineno=None];
	"423:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7860de0950>",
		fillcolor=turquoise,
		label="423:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"424:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860de0ad0>",
		fillcolor=springgreen,
		label="424:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"423:BL" -> "424:IF"	 [cond="[]",
		lineno=None];
	"424:IF" -> "425:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=424];
	"427:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860de0c90>",
		fillcolor=springgreen,
		label="427:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"424:IF" -> "427:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=424];
	"347:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860ddd2d0>",
		fillcolor=springgreen,
		label="347:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"347:IF" -> "348:NS"	 [cond="['Collision', 'r_FullD', 'RxColWindow', 'r_RecSmall']",
		label="(Collision & ~r_FullD & (~RxColWindow | r_RecSmall))",
		lineno=347];
	"357:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860ddde10>",
		fillcolor=springgreen,
		label="357:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"360:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860dddf10>",
		fillcolor=springgreen,
		label="360:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"357:IF" -> "360:IF"	 [cond="['Collision', 'RxByteCnt', 'CollValid', 'RxStateData']",
		label="!((~Collision & (RxByteCnt[5:0] == CollValid[5:0]) & RxStateData[1]))",
		lineno=357];
	"358:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860ddddd0>",
		fillcolor=firebrick,
		label="358:NS
RxColWindow <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860ddddd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"357:IF" -> "358:NS"	 [cond="['Collision', 'RxByteCnt', 'CollValid', 'RxStateData']",
		label="(~Collision & (RxByteCnt[5:0] == CollValid[5:0]) & RxStateData[1])",
		lineno=357];
	"272:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f78612171d0>",
		fillcolor=firebrick,
		label="272:NS
LatchedMRxErr <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f78612171d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"272:NS" -> "Leaf_266:AL"	 [cond="[]",
		lineno=None];
	"422:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f7860de0910>",
		clk_sens=False,
		fillcolor=gold,
		label="422:AL",
		sens="['MTxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'StartTxAbort', 'StartTxDone', 'MaxCollisionOccured']"];
	"422:AL" -> "423:BL"	 [cond="[]",
		lineno=None];
	"396:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f7860dd8750>",
		clk_sens=True,
		fillcolor=gold,
		label="396:AL",
		sens="['MRxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'LoadRxStatus', 'RxByteCnt', 'TakeSample', 'r_HugEn', 'r_MaxFL']"];
	"397:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7860dd8790>",
		fillcolor=turquoise,
		label="397:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"396:AL" -> "397:BL"	 [cond="[]",
		lineno=None];
	"324:NS" -> "Leaf_321:AL"	 [cond="[]",
		lineno=None];
	"267:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7860e3b950>",
		fillcolor=turquoise,
		label="267:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"267:BL" -> "268:IF"	 [cond="[]",
		lineno=None];
	"283:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f7861217a10>",
		def_var="['ReceivedLengthOK']",
		fillcolor=deepskyblue,
		label="283:AS
ReceivedLengthOK = (RxByteCnt[15:0] >= r_MinFL[15:0]) & (RxByteCnt[15:0] <= r_MaxFL[15:0]);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxByteCnt', 'r_MinFL', 'RxByteCnt', 'r_MaxFL']"];
	"382:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f7860dd5cd0>",
		clk_sens=True,
		fillcolor=gold,
		label="382:AL",
		sens="['MRxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'MRxDV', 'RxStateData', 'RxStateSFD']"];
	"382:AL" -> "383:BL"	 [cond="[]",
		lineno=None];
	"405:NS" -> "Leaf_396:AL"	 [cond="[]",
		lineno=None];
	"322:BL" -> "323:IF"	 [cond="[]",
		lineno=None];
	"253:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7860e38fd0>",
		fillcolor=turquoise,
		label="253:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"253:BL" -> "254:IF"	 [cond="[]",
		lineno=None];
	"291:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f7861217e10>",
		def_var="['TakeSample']",
		fillcolor=deepskyblue,
		label="291:AS
TakeSample = |RxStateData & ~MRxDV | RxStateData[0] & MRxDV & RxByteCntMaxFrame;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['RxStateData', 'MRxDV', 'RxStateData', 'MRxDV', 'RxByteCntMaxFrame']"];
	"291:AS" -> "367:AL";
	"291:AS" -> "396:AL";
	"296:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f7860de2190>",
		clk_sens=True,
		fillcolor=gold,
		label="296:AL",
		sens="['MRxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'TakeSample']"];
	"291:AS" -> "296:AL";
	"255:NS" -> "Leaf_252:AL"	 [cond="[]",
		lineno=None];
	"436:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860e00190>",
		fillcolor=firebrick,
		label="436:NS
LateCollLatched <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860e00190>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_433:AL"	 [def_var="['LateCollLatched']",
		label="Leaf_433:AL"];
	"436:NS" -> "Leaf_433:AL"	 [cond="[]",
		lineno=None];
	"384:IF" -> "387:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=384];
	"384:IF" -> "385:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=384];
	"Leaf_296:AL" -> "307:AL";
	"Leaf_296:AL" -> "321:AL";
	"Leaf_296:AL" -> "367:AL";
	"Leaf_296:AL" -> "396:AL";
	"339:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f7860dc2bd0>",
		clk_sens=True,
		fillcolor=gold,
		label="339:AL",
		sens="['MRxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'LoadRxStatus', 'RxColWindow', 'Collision', 'r_RecSmall', 'r_FullD']"];
	"Leaf_296:AL" -> "339:AL";
	"439:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860e00550>",
		fillcolor=firebrick,
		label="439:NS
LateCollLatched <= LateCollision;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860e00550>]",
		style=filled,
		typ=NonblockingSubstitution];
	"439:NS" -> "Leaf_433:AL"	 [cond="[]",
		lineno=None];
	"373:NS" -> "Leaf_367:AL"	 [cond="[]",
		lineno=None];
	"461:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860dfc190>",
		fillcolor=springgreen,
		label="461:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"461:IF" -> "464:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=461];
	"462:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860dfc150>",
		fillcolor=firebrick,
		label="462:NS
CarrierSenseLost <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860dfc150>]",
		style=filled,
		typ=NonblockingSubstitution];
	"461:IF" -> "462:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=461];
	"266:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f7860e3b8d0>",
		clk_sens=True,
		fillcolor=gold,
		label="266:AL",
		sens="['MRxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['MRxDV', 'Reset', 'RxStateIdle', 'Transmitting', 'MRxErr', 'RxStateData', 'RxStateSFD', 'RxStatePreamble']"];
	"266:AL" -> "267:BL"	 [cond="[]",
		lineno=None];
	"Leaf_307:AL"	 [def_var="['ReceiveEnd']",
		label="Leaf_307:AL"];
	"310:NS" -> "Leaf_307:AL"	 [cond="[]",
		lineno=None];
	"339:AL" -> "340:BL"	 [cond="[]",
		lineno=None];
	"330:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860dc2910>",
		fillcolor=firebrick,
		label="330:NS
InvalidSymbol <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860dc2910>]",
		style=filled,
		typ=NonblockingSubstitution];
	"330:NS" -> "Leaf_321:AL"	 [cond="[]",
		lineno=None];
	"401:IF" -> "404:IF"	 [cond="['LoadRxStatus']",
		label="!(LoadRxStatus)",
		lineno=401];
	"401:IF" -> "402:NS"	 [cond="['LoadRxStatus']",
		label=LoadRxStatus,
		lineno=401];
	"451:NS" -> "Leaf_445:AL"	 [cond="[]",
		lineno=None];
	"376:NS" -> "Leaf_367:AL"	 [cond="[]",
		lineno=None];
	"427:IF" -> "428:NS"	 [cond="['StartTxDone', 'StartTxAbort']",
		label="(StartTxDone | StartTxAbort)",
		lineno=427];
	"399:NS" -> "Leaf_396:AL"	 [cond="[]",
		lineno=None];
	"370:NS" -> "Leaf_367:AL"	 [cond="[]",
		lineno=None];
	"252:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f7860e38f90>",
		clk_sens=True,
		fillcolor=gold,
		label="252:AL",
		sens="['MRxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['RxStateSFD', 'Reset', 'RxCrcError', 'RxByteCntEq0', 'RxStateData']"];
	"252:AL" -> "253:BL"	 [cond="[]",
		lineno=None];
	"Leaf_352:AL" -> "339:AL";
	"368:BL" -> "369:IF"	 [cond="[]",
		lineno=None];
	"352:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f7860ddd5d0>",
		clk_sens=True,
		fillcolor=gold,
		label="352:AL",
		sens="['MRxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'RxStateIdle', 'CollValid', 'RxByteCnt', 'Collision', 'RxStateData']"];
	"352:AL" -> "353:BL"	 [cond="[]",
		lineno=None];
	"308:BL" -> "309:IF"	 [cond="[]",
		lineno=None];
	"354:IF" -> "355:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=354];
	"354:IF" -> "357:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=354];
	"438:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860e00410>",
		fillcolor=springgreen,
		label="438:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"438:IF" -> "439:NS"	 [cond="['StartTxDone', 'StartTxAbort']",
		label="(StartTxDone | StartTxAbort)",
		lineno=438];
	"326:IF" -> "327:NS"	 [cond="['LoadRxStatus', 'SetInvalidSymbol']",
		label="(LoadRxStatus & ~SetInvalidSymbol)",
		lineno=326];
	"329:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860dc2810>",
		fillcolor=springgreen,
		label="329:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"326:IF" -> "329:IF"	 [cond="['LoadRxStatus', 'SetInvalidSymbol']",
		label="!((LoadRxStatus & ~SetInvalidSymbol))",
		lineno=326];
	"391:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860dd8590>",
		fillcolor=firebrick,
		label="391:NS
DribbleNibble <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860dd8590>]",
		style=filled,
		typ=NonblockingSubstitution];
	"391:NS" -> "Leaf_382:AL"	 [cond="[]",
		lineno=None];
	"467:IF" -> "468:NS"	 [cond="['TxStartFrm']",
		label=TxStartFrm,
		lineno=467];
	"269:NS" -> "Leaf_266:AL"	 [cond="[]",
		lineno=None];
	"390:IF" -> "391:NS"	 [cond="['MRxDV', 'RxStateData']",
		label="(~MRxDV & RxStateData[1])",
		lineno=390];
	"433:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f7860de0f90>",
		clk_sens=False,
		fillcolor=gold,
		label="433:AL",
		sens="['MTxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'LateCollision', 'StartTxAbort', 'StartTxDone']"];
	"434:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7860de0fd0>",
		fillcolor=turquoise,
		label="434:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"433:AL" -> "434:BL"	 [cond="[]",
		lineno=None];
	"361:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860dd5090>",
		fillcolor=firebrick,
		label="361:NS
RxColWindow <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860dd5090>]",
		style=filled,
		typ=NonblockingSubstitution];
	"360:IF" -> "361:NS"	 [cond="['RxStateIdle']",
		label=RxStateIdle,
		lineno=360];
	"435:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860e001d0>",
		fillcolor=springgreen,
		label="435:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"434:BL" -> "435:IF"	 [cond="[]",
		lineno=None];
	"414:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860de0410>",
		fillcolor=firebrick,
		label="414:NS
RetryCntLatched <= 4'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860de0410>]",
		style=filled,
		typ=NonblockingSubstitution];
	"414:NS" -> "Leaf_411:AL"	 [cond="[]",
		lineno=None];
	"299:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860de2350>",
		fillcolor=firebrick,
		label="299:NS
LoadRxStatus <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860de2350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"299:NS" -> "Leaf_296:AL"	 [cond="[]",
		lineno=None];
	"447:IF" -> "450:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=447];
	"447:IF" -> "448:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=447];
	"462:NS" -> "Leaf_459:AL"	 [cond="[]",
		lineno=None];
	"296:AL" -> "297:BL"	 [cond="[]",
		lineno=None];
	"312:NS" -> "Leaf_307:AL"	 [cond="[]",
		lineno=None];
	"397:BL" -> "398:IF"	 [cond="[]",
		lineno=None];
	"358:NS" -> "Leaf_352:AL"	 [cond="[]",
		lineno=None];
	"435:IF" -> "436:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=435];
	"435:IF" -> "438:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=435];
	"344:IF" -> "345:NS"	 [cond="['LoadRxStatus']",
		label=LoadRxStatus,
		lineno=344];
	"344:IF" -> "347:IF"	 [cond="['LoadRxStatus']",
		label="!(LoadRxStatus)",
		lineno=344];
	"260:IF" -> "261:NS"	 [cond="['RxStateData']",
		label="RxStateData[0]",
		lineno=260];
	"271:IF" -> "274:NS"	 [cond="['MRxErr', 'MRxDV', 'RxStatePreamble', 'RxStateSFD', 'RxStateData', 'RxStateIdle', 'Transmitting']",
		label="!((MRxErr & MRxDV & (RxStatePreamble | RxStateSFD | |RxStateData | RxStateIdle & ~Transmitting)))",
		lineno=271];
	"271:IF" -> "272:NS"	 [cond="['MRxErr', 'MRxDV', 'RxStatePreamble', 'RxStateSFD', 'RxStateData', 'RxStateIdle', 'Transmitting']",
		label="(MRxErr & MRxDV & (RxStatePreamble | RxStateSFD | |RxStateData | RxStateIdle & ~Transmitting))",
		lineno=271];
	"413:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860de0450>",
		fillcolor=springgreen,
		label="413:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"412:BL" -> "413:IF"	 [cond="[]",
		lineno=None];
	"317:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f7860de2d90>",
		def_var="['SetInvalidSymbol']",
		fillcolor=deepskyblue,
		label="317:AS
SetInvalidSymbol = MRxDV & MRxErr & (MRxD[3:0] == 4'he);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['MRxDV', 'MRxErr', 'MRxD']"];
	"317:AS" -> "321:AL";
	"460:BL" -> "461:IF"	 [cond="[]",
		lineno=None];
	"413:IF" -> "416:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=413];
	"413:IF" -> "414:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=413];
	"298:IF" -> "301:NS"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=298];
	"298:IF" -> "299:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=298];
	"388:NS" -> "Leaf_382:AL"	 [cond="[]",
		lineno=None];
	"361:NS" -> "Leaf_352:AL"	 [cond="[]",
		lineno=None];
	"329:IF" -> "330:NS"	 [cond="['SetInvalidSymbol']",
		label=SetInvalidSymbol,
		lineno=329];
}
