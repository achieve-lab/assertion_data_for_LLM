strict digraph "compose( ,  )" {
	node [label="\N"];
	"U_0_033.28:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da17fc0d0>",
		fillcolor=springgreen,
		label="U_0_033.28:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_033.30:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da1ae1ad0>",
		fillcolor=springgreen,
		label="U_0_033.30:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_033.28:IF" -> "U_0_033.30:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=28];
	"U_0_033.29:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>",
		fillcolor=firebrick,
		label="U_0_033.29:NS
RegOut <= RegInit;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_033.28:IF" -> "U_0_033.29:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=28];
	"U_0_022.31:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>",
		fillcolor=firebrick,
		label="U_0_022.31:NS
RegOut <= CD_in_reg;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_022.Leaf_27:AL"	 [def_var="['RegOut']",
		label="U_0_022.Leaf_27:AL"];
	"U_0_022.31:NS" -> "U_0_022.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_016.29:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>",
		fillcolor=firebrick,
		label="U_0_016.29:NS
RegOut <= RegInit;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_016.Leaf_27:AL"	 [def_var="['RegOut']",
		label="U_0_016.Leaf_27:AL"];
	"U_0_016.29:NS" -> "U_0_016.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_017.29:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>",
		fillcolor=firebrick,
		label="U_0_017.29:NS
RegOut <= RegInit;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_017.Leaf_27:AL"	 [def_var="['RegOut']",
		label="U_0_017.Leaf_27:AL"];
	"U_0_017.29:NS" -> "U_0_017.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_003.31:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>",
		fillcolor=firebrick,
		label="U_0_003.31:NS
RegOut <= CD_in_reg;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_003.Leaf_27:AL"	 [def_var="['RegOut']",
		label="U_0_003.Leaf_27:AL"];
	"U_0_003.31:NS" -> "U_0_003.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_000.30:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da1ae1ad0>",
		fillcolor=springgreen,
		label="U_0_000.30:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_000.31:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>",
		fillcolor=firebrick,
		label="U_0_000.31:NS
RegOut <= CD_in_reg;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_000.30:IF" -> "U_0_000.31:NS"	 [cond="['CWR_pulse', 'CCSB', 'CA_reg', 'CA_reg_set']",
		label="(CWR_pulse && !CCSB && (CA_reg[7:1] == CA_reg_set[6:0]))",
		lineno=30];
	"165:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16ceb50>",
		fillcolor=firebrick,
		label="165:NS
CD_out <= xon_cpu;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16ceb50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_147:AL"	 [def_var="['CD_out']",
		label="Leaf_147:AL"];
	"165:NS" -> "Leaf_147:AL"	 [cond="[]",
		lineno=None];
	"160:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16ce0d0>",
		fillcolor=firebrick,
		label="160:NS
CD_out <= MAC_tx_add_prom_data;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16ce0d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"160:NS" -> "Leaf_147:AL"	 [cond="[]",
		lineno=None];
	"U_0_002.30:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da1ae1ad0>",
		fillcolor=springgreen,
		label="U_0_002.30:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_002.31:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>",
		fillcolor=firebrick,
		label="U_0_002.31:NS
RegOut <= CD_in_reg;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_002.30:IF" -> "U_0_002.31:NS"	 [cond="['CWR_pulse', 'CCSB', 'CA_reg', 'CA_reg_set']",
		label="(CWR_pulse && !CCSB && (CA_reg[7:1] == CA_reg_set[6:0]))",
		lineno=30];
	"U_0_026.28:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da17fc0d0>",
		fillcolor=springgreen,
		label="U_0_026.28:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_026.29:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>",
		fillcolor=firebrick,
		label="U_0_026.29:NS
RegOut <= RegInit;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_026.28:IF" -> "U_0_026.29:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=28];
	"U_0_026.30:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da1ae1ad0>",
		fillcolor=springgreen,
		label="U_0_026.30:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_026.28:IF" -> "U_0_026.30:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=28];
	"U_0_011.30:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da1ae1ad0>",
		fillcolor=springgreen,
		label="U_0_011.30:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_011.31:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>",
		fillcolor=firebrick,
		label="U_0_011.31:NS
RegOut <= CD_in_reg;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_011.30:IF" -> "U_0_011.31:NS"	 [cond="['CWR_pulse', 'CCSB', 'CA_reg', 'CA_reg_set']",
		label="(CWR_pulse && !CCSB && (CA_reg[7:1] == CA_reg_set[6:0]))",
		lineno=30];
	"147:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f5da16d0890>",
		clk_sens=True,
		fillcolor=gold,
		label="147:AL",
		sens="['Clk_reg', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['xoff_cpu', 'MAC_tx_add_prom_wr', 'MAC_rx_add_chk_en', 'RX_IFG_SET', 'RX_MAX_LENGTH', 'CPU_rd_grant', 'xon_cpu', 'RX_APPEND_CRC', '\
Tx_Hwmark', 'MAC_tx_add_en', 'MAC_rx_add_prom_data', 'broadcast_bucket_depth', 'Rx_Lwmark', 'tx_pause_en', 'CPU_rd_apply', 'MAC_\
rx_add_prom_add', 'IFGset', 'CRC_chk_en', 'broadcast_bucket_interval', 'Reset', 'MAC_rx_add_prom_wr', 'WRB', 'pause_frame_send_en', '\
CA', 'CSB', 'MaxRetry', 'MAC_tx_add_prom_data', 'Tx_Lwmark', 'broadcast_filter_en', 'CPU_rd_addr', 'FullDuplex', 'Rx_Hwmark', 'CPU_\
rd_dout', 'MAC_tx_add_prom_add', 'RX_MIN_LENGTH', 'pause_quanta_set', 'Line_loop_en', 'Speed']"];
	"U_0_022.Leaf_27:AL" -> "147:AL";
	"171:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f5da16c17d0>",
		fillcolor=lightcyan,
		label="171:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"171:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16c1910>",
		fillcolor=firebrick,
		label="171:NS
CD_out <= broadcast_bucket_depth;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16c1910>]",
		style=filled,
		typ=NonblockingSubstitution];
	"171:CA" -> "171:NS"	 [cond="[]",
		lineno=None];
	"174:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f5da16c1e90>",
		fillcolor=lightcyan,
		label="174:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"174:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16c1f90>",
		fillcolor=firebrick,
		label="174:NS
CD_out <= Rx_Hwmark;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16c1f90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"174:CA" -> "174:NS"	 [cond="[]",
		lineno=None];
	"U_0_003.Leaf_27:AL" -> "147:AL";
	"U_0_020.29:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>",
		fillcolor=firebrick,
		label="U_0_020.29:NS
RegOut <= RegInit;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_020.Leaf_27:AL"	 [def_var="['RegOut']",
		label="U_0_020.Leaf_27:AL"];
	"U_0_020.29:NS" -> "U_0_020.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"167:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16cefd0>",
		fillcolor=firebrick,
		label="167:NS
CD_out <= MAC_rx_add_prom_data;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16cefd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"167:NS" -> "Leaf_147:AL"	 [cond="[]",
		lineno=None];
	"U_0_008.Leaf_27:AL"	 [def_var="['RegOut']",
		label="U_0_008.Leaf_27:AL"];
	"U_0_008.Leaf_27:AL" -> "147:AL";
	"159:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f5da16bfd10>",
		fillcolor=lightcyan,
		label="159:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"159:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16bfe50>",
		fillcolor=firebrick,
		label="159:NS
CD_out <= MAC_tx_add_en;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16bfe50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"159:CA" -> "159:NS"	 [cond="[]",
		lineno=None];
	"166:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16ced90>",
		fillcolor=firebrick,
		label="166:NS
CD_out <= MAC_rx_add_chk_en;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16ced90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"166:NS" -> "Leaf_147:AL"	 [cond="[]",
		lineno=None];
	"U_0_013.Leaf_27:AL"	 [def_var="['RegOut']",
		label="U_0_013.Leaf_27:AL"];
	"U_0_013.Leaf_27:AL" -> "147:AL";
	"U_0_024.31:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>",
		fillcolor=firebrick,
		label="U_0_024.31:NS
RegOut <= CD_in_reg;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_024.Leaf_27:AL"	 [def_var="['RegOut']",
		label="U_0_024.Leaf_27:AL"];
	"U_0_024.31:NS" -> "U_0_024.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_023.29:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>",
		fillcolor=firebrick,
		label="U_0_023.29:NS
RegOut <= RegInit;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_023.Leaf_27:AL"	 [def_var="['RegOut']",
		label="U_0_023.Leaf_27:AL"];
	"U_0_023.29:NS" -> "U_0_023.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"163:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16ce750>",
		fillcolor=firebrick,
		label="163:NS
CD_out <= tx_pause_en;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16ce750>]",
		style=filled,
		typ=NonblockingSubstitution];
	"163:NS" -> "Leaf_147:AL"	 [cond="[]",
		lineno=None];
	"U_0_019.30:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da1ae1ad0>",
		fillcolor=springgreen,
		label="U_0_019.30:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_019.31:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>",
		fillcolor=firebrick,
		label="U_0_019.31:NS
RegOut <= CD_in_reg;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_019.30:IF" -> "U_0_019.31:NS"	 [cond="['CWR_pulse', 'CCSB', 'CA_reg', 'CA_reg_set']",
		label="(CWR_pulse && !CCSB && (CA_reg[7:1] == CA_reg_set[6:0]))",
		lineno=30];
	"U_0_007.27:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f5da17fced0>",
		clk_sens=False,
		fillcolor=gold,
		label="U_0_007.27:AL",
		sens="['Reset', 'Clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'CCSB', 'CA_reg_set', 'CD_in_reg', 'CA_reg', 'CWR_pulse', 'RegInit']"];
	"U_0_007.28:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da17fc0d0>",
		fillcolor=springgreen,
		label="U_0_007.28:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_007.27:AL" -> "U_0_007.28:IF"	 [cond="[]",
		lineno=None];
	"U_0_005.31:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>",
		fillcolor=firebrick,
		label="U_0_005.31:NS
RegOut <= CD_in_reg;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_005.Leaf_27:AL"	 [def_var="['RegOut']",
		label="U_0_005.Leaf_27:AL"];
	"U_0_005.31:NS" -> "U_0_005.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"168:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16c1250>",
		fillcolor=firebrick,
		label="168:NS
CD_out <= MAC_rx_add_prom_add;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16c1250>]",
		style=filled,
		typ=NonblockingSubstitution];
	"168:NS" -> "Leaf_147:AL"	 [cond="[]",
		lineno=None];
	"164:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16ce950>",
		fillcolor=firebrick,
		label="164:NS
CD_out <= xoff_cpu;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16ce950>]",
		style=filled,
		typ=NonblockingSubstitution];
	"164:NS" -> "Leaf_147:AL"	 [cond="[]",
		lineno=None];
	"U_0_029.Leaf_27:AL"	 [def_var="['RegOut']",
		label="U_0_029.Leaf_27:AL"];
	"U_0_029.Leaf_27:AL" -> "147:AL";
	"U_0_008.30:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da1ae1ad0>",
		fillcolor=springgreen,
		label="U_0_008.30:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_008.31:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>",
		fillcolor=firebrick,
		label="U_0_008.31:NS
RegOut <= CD_in_reg;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_008.30:IF" -> "U_0_008.31:NS"	 [cond="['CWR_pulse', 'CCSB', 'CA_reg', 'CA_reg_set']",
		label="(CWR_pulse && !CCSB && (CA_reg[7:1] == CA_reg_set[6:0]))",
		lineno=30];
	"U_0_004.27:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f5da17fced0>",
		clk_sens=False,
		fillcolor=gold,
		label="U_0_004.27:AL",
		sens="['Reset', 'Clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'CCSB', 'CA_reg_set', 'CD_in_reg', 'CA_reg', 'CWR_pulse', 'RegInit']"];
	"U_0_004.28:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da17fc0d0>",
		fillcolor=springgreen,
		label="U_0_004.28:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_004.27:AL" -> "U_0_004.28:IF"	 [cond="[]",
		lineno=None];
	"U_0_018.31:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>",
		fillcolor=firebrick,
		label="U_0_018.31:NS
RegOut <= CD_in_reg;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_018.Leaf_27:AL"	 [def_var="['RegOut']",
		label="U_0_018.Leaf_27:AL"];
	"U_0_018.31:NS" -> "U_0_018.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_025.31:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>",
		fillcolor=firebrick,
		label="U_0_025.31:NS
RegOut <= CD_in_reg;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_025.Leaf_27:AL"	 [def_var="['RegOut']",
		label="U_0_025.Leaf_27:AL"];
	"U_0_025.31:NS" -> "U_0_025.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_000.Leaf_27:AL"	 [def_var="['RegOut']",
		label="U_0_000.Leaf_27:AL"];
	"U_0_000.31:NS" -> "U_0_000.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_028.27:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f5da17fced0>",
		clk_sens=False,
		fillcolor=gold,
		label="U_0_028.27:AL",
		sens="['Reset', 'Clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'CCSB', 'CA_reg_set', 'CD_in_reg', 'CA_reg', 'CWR_pulse', 'RegInit']"];
	"U_0_028.28:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da17fc0d0>",
		fillcolor=springgreen,
		label="U_0_028.28:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_028.27:AL" -> "U_0_028.28:IF"	 [cond="[]",
		lineno=None];
	"U_0_004.31:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>",
		fillcolor=firebrick,
		label="U_0_004.31:NS
RegOut <= CD_in_reg;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_004.Leaf_27:AL"	 [def_var="['RegOut']",
		label="U_0_004.Leaf_27:AL"];
	"U_0_004.31:NS" -> "U_0_004.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_010.29:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>",
		fillcolor=firebrick,
		label="U_0_010.29:NS
RegOut <= RegInit;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_010.Leaf_27:AL"	 [def_var="['RegOut']",
		label="U_0_010.Leaf_27:AL"];
	"U_0_010.29:NS" -> "U_0_010.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_015.Leaf_27:AL"	 [def_var="['RegOut']",
		label="U_0_015.Leaf_27:AL"];
	"U_0_015.Leaf_27:AL" -> "147:AL";
	"U_0_006.29:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>",
		fillcolor=firebrick,
		label="U_0_006.29:NS
RegOut <= RegInit;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_006.Leaf_27:AL"	 [def_var="['RegOut']",
		label="U_0_006.Leaf_27:AL"];
	"U_0_006.29:NS" -> "U_0_006.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_026.Leaf_27:AL"	 [def_var="['RegOut']",
		label="U_0_026.Leaf_27:AL"];
	"U_0_026.Leaf_27:AL" -> "147:AL";
	"U_0_012.31:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>",
		fillcolor=firebrick,
		label="U_0_012.31:NS
RegOut <= CD_in_reg;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_012.Leaf_27:AL"	 [def_var="['RegOut']",
		label="U_0_012.Leaf_27:AL"];
	"U_0_012.31:NS" -> "U_0_012.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_005.30:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da1ae1ad0>",
		fillcolor=springgreen,
		label="U_0_005.30:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_005.30:IF" -> "U_0_005.31:NS"	 [cond="['CWR_pulse', 'CCSB', 'CA_reg', 'CA_reg_set']",
		label="(CWR_pulse && !CCSB && (CA_reg[7:1] == CA_reg_set[6:0]))",
		lineno=30];
	"182:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f5da16d7f90>",
		fillcolor=lightcyan,
		label="182:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"182:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16d2110>",
		fillcolor=firebrick,
		label="182:NS
CD_out <= CPU_rd_grant;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16d2110>]",
		style=filled,
		typ=NonblockingSubstitution];
	"182:CA" -> "182:NS"	 [cond="[]",
		lineno=None];
	"168:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f5da16c1110>",
		fillcolor=lightcyan,
		label="168:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"168:CA" -> "168:NS"	 [cond="[]",
		lineno=None];
	"U_0_009.27:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f5da17fced0>",
		clk_sens=False,
		fillcolor=gold,
		label="U_0_009.27:AL",
		sens="['Reset', 'Clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'CCSB', 'CA_reg_set', 'CD_in_reg', 'CA_reg', 'CWR_pulse', 'RegInit']"];
	"U_0_009.28:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da17fc0d0>",
		fillcolor=springgreen,
		label="U_0_009.28:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_009.27:AL" -> "U_0_009.28:IF"	 [cond="[]",
		lineno=None];
	"U_0_002.Leaf_27:AL"	 [def_var="['RegOut']",
		label="U_0_002.Leaf_27:AL"];
	"U_0_002.Leaf_27:AL" -> "147:AL";
	"U_0_014.27:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f5da17fced0>",
		clk_sens=False,
		fillcolor=gold,
		label="U_0_014.27:AL",
		sens="['Reset', 'Clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'CCSB', 'CA_reg_set', 'CD_in_reg', 'CA_reg', 'CWR_pulse', 'RegInit']"];
	"U_0_014.28:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da17fc0d0>",
		fillcolor=springgreen,
		label="U_0_014.28:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_014.27:AL" -> "U_0_014.28:IF"	 [cond="[]",
		lineno=None];
	"U_0_024.Leaf_27:AL" -> "147:AL";
	"U_0_014.30:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da1ae1ad0>",
		fillcolor=springgreen,
		label="U_0_014.30:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_014.28:IF" -> "U_0_014.30:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=28];
	"U_0_014.29:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>",
		fillcolor=firebrick,
		label="U_0_014.29:NS
RegOut <= RegInit;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_014.28:IF" -> "U_0_014.29:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=28];
	"U_0_015.29:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>",
		fillcolor=firebrick,
		label="U_0_015.29:NS
RegOut <= RegInit;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_015.29:NS" -> "U_0_015.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"180:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f5da16d7b50>",
		fillcolor=lightcyan,
		label="180:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"180:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16d7c50>",
		fillcolor=firebrick,
		label="180:NS
CD_out <= CPU_rd_addr;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16d7c50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"180:CA" -> "180:NS"	 [cond="[]",
		lineno=None];
	"U_0_007.Leaf_27:AL"	 [def_var="['RegOut']",
		label="U_0_007.Leaf_27:AL"];
	"U_0_007.Leaf_27:AL" -> "147:AL";
	"U_0_034.27:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f5da17fced0>",
		clk_sens=False,
		fillcolor=gold,
		label="U_0_034.27:AL",
		sens="['Reset', 'Clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'CCSB', 'CA_reg_set', 'CD_in_reg', 'CA_reg', 'CWR_pulse', 'RegInit']"];
	"U_0_034.28:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da17fc0d0>",
		fillcolor=springgreen,
		label="U_0_034.28:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_034.27:AL" -> "U_0_034.28:IF"	 [cond="[]",
		lineno=None];
	"167:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f5da16cee90>",
		fillcolor=lightcyan,
		label="167:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"167:CA" -> "167:NS"	 [cond="[]",
		lineno=None];
	"U_0_017.27:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f5da17fced0>",
		clk_sens=False,
		fillcolor=gold,
		label="U_0_017.27:AL",
		sens="['Reset', 'Clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'CCSB', 'CA_reg_set', 'CD_in_reg', 'CA_reg', 'CWR_pulse', 'RegInit']"];
	"U_0_017.28:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da17fc0d0>",
		fillcolor=springgreen,
		label="U_0_017.28:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_017.27:AL" -> "U_0_017.28:IF"	 [cond="[]",
		lineno=None];
	"185:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f5da16d2790>",
		fillcolor=lightcyan,
		label="185:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"185:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16d28d0>",
		fillcolor=firebrick,
		label="185:NS
CD_out <= Line_loop_en;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16d28d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"185:CA" -> "185:NS"	 [cond="[]",
		lineno=None];
	"174:NS" -> "Leaf_147:AL"	 [cond="[]",
		lineno=None];
	"173:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f5da16c1c50>",
		fillcolor=lightcyan,
		label="173:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"173:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16c1d90>",
		fillcolor=firebrick,
		label="173:NS
CD_out <= RX_APPEND_CRC;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16c1d90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"173:CA" -> "173:NS"	 [cond="[]",
		lineno=None];
	"U_0_005.28:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da17fc0d0>",
		fillcolor=springgreen,
		label="U_0_005.28:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_005.28:IF" -> "U_0_005.30:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=28];
	"U_0_005.29:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>",
		fillcolor=firebrick,
		label="U_0_005.29:NS
RegOut <= RegInit;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_005.28:IF" -> "U_0_005.29:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=28];
	"U_0_013.27:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f5da17fced0>",
		clk_sens=False,
		fillcolor=gold,
		label="U_0_013.27:AL",
		sens="['Reset', 'Clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'CCSB', 'CA_reg_set', 'CD_in_reg', 'CA_reg', 'CWR_pulse', 'RegInit']"];
	"U_0_013.28:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da17fc0d0>",
		fillcolor=springgreen,
		label="U_0_013.28:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_013.27:AL" -> "U_0_013.28:IF"	 [cond="[]",
		lineno=None];
	"U_0_004.Leaf_27:AL" -> "147:AL";
	"181:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16d7e90>",
		fillcolor=firebrick,
		label="181:NS
CD_out <= CPU_rd_apply;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16d7e90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"181:NS" -> "Leaf_147:AL"	 [cond="[]",
		lineno=None];
	"162:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16ce550>",
		fillcolor=firebrick,
		label="162:NS
CD_out <= MAC_tx_add_prom_wr;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16ce550>]",
		style=filled,
		typ=NonblockingSubstitution];
	"162:NS" -> "Leaf_147:AL"	 [cond="[]",
		lineno=None];
	"U_0_001.Leaf_27:AL"	 [def_var="['RegOut']",
		label="U_0_001.Leaf_27:AL"];
	"U_0_001.Leaf_27:AL" -> "147:AL";
	"U_0_017.30:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da1ae1ad0>",
		fillcolor=springgreen,
		label="U_0_017.30:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_017.31:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>",
		fillcolor=firebrick,
		label="U_0_017.31:NS
RegOut <= CD_in_reg;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_017.30:IF" -> "U_0_017.31:NS"	 [cond="['CWR_pulse', 'CCSB', 'CA_reg', 'CA_reg_set']",
		label="(CWR_pulse && !CCSB && (CA_reg[7:1] == CA_reg_set[6:0]))",
		lineno=30];
	"U_0_008.31:NS" -> "U_0_008.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_016.31:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>",
		fillcolor=firebrick,
		label="U_0_016.31:NS
RegOut <= CD_in_reg;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_016.31:NS" -> "U_0_016.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_006.Leaf_27:AL" -> "147:AL";
	"U_0_014.31:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>",
		fillcolor=firebrick,
		label="U_0_014.31:NS
RegOut <= CD_in_reg;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_014.30:IF" -> "U_0_014.31:NS"	 [cond="['CWR_pulse', 'CCSB', 'CA_reg', 'CA_reg_set']",
		label="(CWR_pulse && !CCSB && (CA_reg[7:1] == CA_reg_set[6:0]))",
		lineno=30];
	"180:NS" -> "Leaf_147:AL"	 [cond="[]",
		lineno=None];
	"U_0_014.Leaf_27:AL"	 [def_var="['RegOut']",
		label="U_0_014.Leaf_27:AL"];
	"U_0_014.Leaf_27:AL" -> "147:AL";
	"U_0_033.31:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>",
		fillcolor=firebrick,
		label="U_0_033.31:NS
RegOut <= CD_in_reg;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_033.Leaf_27:AL"	 [def_var="['RegOut']",
		label="U_0_033.Leaf_27:AL"];
	"U_0_033.31:NS" -> "U_0_033.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_010.Leaf_27:AL" -> "147:AL";
	"152:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f5da16d0e50>",
		fillcolor=lightcyan,
		label="152:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"152:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16d0f50>",
		fillcolor=firebrick,
		label="152:NS
CD_out <= Tx_Hwmark;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16d0f50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"152:CA" -> "152:NS"	 [cond="[]",
		lineno=None];
	"U_0_020.28:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da17fc0d0>",
		fillcolor=springgreen,
		label="U_0_020.28:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_020.28:IF" -> "U_0_020.29:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=28];
	"U_0_020.30:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da1ae1ad0>",
		fillcolor=springgreen,
		label="U_0_020.30:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_020.28:IF" -> "U_0_020.30:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=28];
	"U_0_019.28:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da17fc0d0>",
		fillcolor=springgreen,
		label="U_0_019.28:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_019.28:IF" -> "U_0_019.30:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=28];
	"U_0_019.29:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>",
		fillcolor=firebrick,
		label="U_0_019.29:NS
RegOut <= RegInit;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_019.28:IF" -> "U_0_019.29:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=28];
	"U_0_001.29:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>",
		fillcolor=firebrick,
		label="U_0_001.29:NS
RegOut <= RegInit;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_001.29:NS" -> "U_0_001.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_034.Leaf_27:AL"	 [def_var="['RegOut']",
		label="U_0_034.Leaf_27:AL"];
	"U_0_034.Leaf_27:AL" -> "147:AL";
	"U_0_011.Leaf_27:AL"	 [def_var="['RegOut']",
		label="U_0_011.Leaf_27:AL"];
	"U_0_011.31:NS" -> "U_0_011.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"176:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16d73d0>",
		fillcolor=firebrick,
		label="176:NS
CD_out <= CRC_chk_en;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16d73d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"176:NS" -> "Leaf_147:AL"	 [cond="[]",
		lineno=None];
	"U_0_010.27:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f5da17fced0>",
		clk_sens=False,
		fillcolor=gold,
		label="U_0_010.27:AL",
		sens="['Reset', 'Clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'CCSB', 'CA_reg_set', 'CD_in_reg', 'CA_reg', 'CWR_pulse', 'RegInit']"];
	"U_0_010.28:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da17fc0d0>",
		fillcolor=springgreen,
		label="U_0_010.28:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_010.27:AL" -> "U_0_010.28:IF"	 [cond="[]",
		lineno=None];
	"U_0_023.31:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>",
		fillcolor=firebrick,
		label="U_0_023.31:NS
RegOut <= CD_in_reg;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_023.31:NS" -> "U_0_023.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_005.29:NS" -> "U_0_005.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_019.Leaf_27:AL"	 [def_var="['RegOut']",
		label="U_0_019.Leaf_27:AL"];
	"U_0_019.31:NS" -> "U_0_019.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_015.31:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>",
		fillcolor=firebrick,
		label="U_0_015.31:NS
RegOut <= CD_in_reg;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_015.31:NS" -> "U_0_015.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_000.Leaf_27:AL" -> "147:AL";
	"U_0_027.Leaf_27:AL"	 [def_var="['RegOut']",
		label="U_0_027.Leaf_27:AL"];
	"U_0_027.Leaf_27:AL" -> "147:AL";
	"U_0_003.28:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da17fc0d0>",
		fillcolor=springgreen,
		label="U_0_003.28:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_003.30:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da1ae1ad0>",
		fillcolor=springgreen,
		label="U_0_003.30:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_003.28:IF" -> "U_0_003.30:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=28];
	"U_0_003.29:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>",
		fillcolor=firebrick,
		label="U_0_003.29:NS
RegOut <= RegInit;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_003.28:IF" -> "U_0_003.29:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=28];
	"U_0_002.29:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>",
		fillcolor=firebrick,
		label="U_0_002.29:NS
RegOut <= RegInit;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_002.29:NS" -> "U_0_002.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_033.Leaf_27:AL" -> "147:AL";
	"U_0_027.27:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f5da17fced0>",
		clk_sens=False,
		fillcolor=gold,
		label="U_0_027.27:AL",
		sens="['Reset', 'Clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'CCSB', 'CA_reg_set', 'CD_in_reg', 'CA_reg', 'CWR_pulse', 'RegInit']"];
	"U_0_027.28:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da17fc0d0>",
		fillcolor=springgreen,
		label="U_0_027.28:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_027.27:AL" -> "U_0_027.28:IF"	 [cond="[]",
		lineno=None];
	"177:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16d75d0>",
		fillcolor=firebrick,
		label="177:NS
CD_out <= RX_IFG_SET;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16d75d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"177:NS" -> "Leaf_147:AL"	 [cond="[]",
		lineno=None];
	"175:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16d71d0>",
		fillcolor=firebrick,
		label="175:NS
CD_out <= Rx_Lwmark;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16d71d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"175:NS" -> "Leaf_147:AL"	 [cond="[]",
		lineno=None];
	"187:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16d2c90>",
		fillcolor=firebrick,
		label="187:NS
CD_out <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16d2c90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"187:NS" -> "Leaf_147:AL"	 [cond="[]",
		lineno=None];
	"150:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da16d0c10>",
		fillcolor=springgreen,
		label="150:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"151:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f5da16d2b50>",
		fillcolor=linen,
		label="151:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"150:IF" -> "151:CS"	 [cond="['CSB', 'WRB']",
		label="(!CSB && WRB)",
		lineno=150];
	"U_0_017.31:NS" -> "U_0_017.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_005.Leaf_27:AL" -> "147:AL";
	"170:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16c16d0>",
		fillcolor=firebrick,
		label="170:NS
CD_out <= broadcast_filter_en;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16c16d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"170:NS" -> "Leaf_147:AL"	 [cond="[]",
		lineno=None];
	"182:NS" -> "Leaf_147:AL"	 [cond="[]",
		lineno=None];
	"185:NS" -> "Leaf_147:AL"	 [cond="[]",
		lineno=None];
	"U_0_015.27:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f5da17fced0>",
		clk_sens=False,
		fillcolor=gold,
		label="U_0_015.27:AL",
		sens="['Reset', 'Clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'CCSB', 'CA_reg_set', 'CD_in_reg', 'CA_reg', 'CWR_pulse', 'RegInit']"];
	"U_0_015.28:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da17fc0d0>",
		fillcolor=springgreen,
		label="U_0_015.28:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_015.27:AL" -> "U_0_015.28:IF"	 [cond="[]",
		lineno=None];
	"U_0_009.Leaf_27:AL"	 [def_var="['RegOut']",
		label="U_0_009.Leaf_27:AL"];
	"U_0_009.Leaf_27:AL" -> "147:AL";
	"U_0_018.30:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da1ae1ad0>",
		fillcolor=springgreen,
		label="U_0_018.30:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_018.30:IF" -> "U_0_018.31:NS"	 [cond="['CWR_pulse', 'CCSB', 'CA_reg', 'CA_reg_set']",
		label="(CWR_pulse && !CCSB && (CA_reg[7:1] == CA_reg_set[6:0]))",
		lineno=30];
	"U_0_029.31:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>",
		fillcolor=firebrick,
		label="U_0_029.31:NS
RegOut <= CD_in_reg;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_029.31:NS" -> "U_0_029.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_008.27:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f5da17fced0>",
		clk_sens=False,
		fillcolor=gold,
		label="U_0_008.27:AL",
		sens="['Reset', 'Clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'CCSB', 'CA_reg_set', 'CD_in_reg', 'CA_reg', 'CWR_pulse', 'RegInit']"];
	"U_0_008.28:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da17fc0d0>",
		fillcolor=springgreen,
		label="U_0_008.28:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_008.27:AL" -> "U_0_008.28:IF"	 [cond="[]",
		lineno=None];
	"U_0_012.30:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da1ae1ad0>",
		fillcolor=springgreen,
		label="U_0_012.30:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_012.30:IF" -> "U_0_012.31:NS"	 [cond="['CWR_pulse', 'CCSB', 'CA_reg', 'CA_reg_set']",
		label="(CWR_pulse && !CCSB && (CA_reg[7:1] == CA_reg_set[6:0]))",
		lineno=30];
	"U_0_004.29:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>",
		fillcolor=firebrick,
		label="U_0_004.29:NS
RegOut <= RegInit;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_004.29:NS" -> "U_0_004.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_018.29:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>",
		fillcolor=firebrick,
		label="U_0_018.29:NS
RegOut <= RegInit;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_018.29:NS" -> "U_0_018.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_026.27:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f5da17fced0>",
		clk_sens=False,
		fillcolor=gold,
		label="U_0_026.27:AL",
		sens="['Reset', 'Clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'CCSB', 'CA_reg_set', 'CD_in_reg', 'CA_reg', 'CWR_pulse', 'RegInit']"];
	"U_0_026.27:AL" -> "U_0_026.28:IF"	 [cond="[]",
		lineno=None];
	"171:NS" -> "Leaf_147:AL"	 [cond="[]",
		lineno=None];
	"U_0_025.30:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da1ae1ad0>",
		fillcolor=springgreen,
		label="U_0_025.30:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_025.30:IF" -> "U_0_025.31:NS"	 [cond="['CWR_pulse', 'CCSB', 'CA_reg', 'CA_reg_set']",
		label="(CWR_pulse && !CCSB && (CA_reg[7:1] == CA_reg_set[6:0]))",
		lineno=30];
	"U_0_006.27:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f5da17fced0>",
		clk_sens=False,
		fillcolor=gold,
		label="U_0_006.27:AL",
		sens="['Reset', 'Clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'CCSB', 'CA_reg_set', 'CD_in_reg', 'CA_reg', 'CWR_pulse', 'RegInit']"];
	"U_0_006.28:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da17fc0d0>",
		fillcolor=springgreen,
		label="U_0_006.28:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_006.27:AL" -> "U_0_006.28:IF"	 [cond="[]",
		lineno=None];
	"U_0_022.27:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f5da17fced0>",
		clk_sens=False,
		fillcolor=gold,
		label="U_0_022.27:AL",
		sens="['Reset', 'Clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'CCSB', 'CA_reg_set', 'CD_in_reg', 'CA_reg', 'CWR_pulse', 'RegInit']"];
	"U_0_022.28:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da17fc0d0>",
		fillcolor=springgreen,
		label="U_0_022.28:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_022.27:AL" -> "U_0_022.28:IF"	 [cond="[]",
		lineno=None];
	"U_0_021.30:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da1ae1ad0>",
		fillcolor=springgreen,
		label="U_0_021.30:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_021.31:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>",
		fillcolor=firebrick,
		label="U_0_021.31:NS
RegOut <= CD_in_reg;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_021.30:IF" -> "U_0_021.31:NS"	 [cond="['CWR_pulse', 'CCSB', 'CA_reg', 'CA_reg_set']",
		label="(CWR_pulse && !CCSB && (CA_reg[7:1] == CA_reg_set[6:0]))",
		lineno=30];
	"149:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16d09d0>",
		fillcolor=firebrick,
		label="149:NS
CD_out <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16d09d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"149:NS" -> "Leaf_147:AL"	 [cond="[]",
		lineno=None];
	"186:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16d2ad0>",
		fillcolor=firebrick,
		label="186:NS
CD_out <= Speed;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16d2ad0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"186:NS" -> "Leaf_147:AL"	 [cond="[]",
		lineno=None];
	"172:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f5da16c1a10>",
		fillcolor=lightcyan,
		label="172:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"172:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16c1b50>",
		fillcolor=firebrick,
		label="172:NS
CD_out <= broadcast_bucket_interval;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16c1b50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"172:CA" -> "172:NS"	 [cond="[]",
		lineno=None];
	"166:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f5da16cec50>",
		fillcolor=lightcyan,
		label="166:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"166:CA" -> "166:NS"	 [cond="[]",
		lineno=None];
	"U_0_014.29:NS" -> "U_0_014.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"169:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f5da16c1350>",
		fillcolor=lightcyan,
		label="169:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"169:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16c1490>",
		fillcolor=firebrick,
		label="169:NS
CD_out <= MAC_rx_add_prom_wr;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16c1490>]",
		style=filled,
		typ=NonblockingSubstitution];
	"169:CA" -> "169:NS"	 [cond="[]",
		lineno=None];
	"U_0_017.Leaf_27:AL" -> "147:AL";
	"U_0_007.31:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>",
		fillcolor=firebrick,
		label="U_0_007.31:NS
RegOut <= CD_in_reg;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_007.31:NS" -> "U_0_007.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_018.28:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da17fc0d0>",
		fillcolor=springgreen,
		label="U_0_018.28:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_018.28:IF" -> "U_0_018.30:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=28];
	"U_0_018.28:IF" -> "U_0_018.29:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=28];
	"U_0_007.29:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>",
		fillcolor=firebrick,
		label="U_0_007.29:NS
RegOut <= RegInit;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_007.29:NS" -> "U_0_007.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_021.27:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f5da17fced0>",
		clk_sens=False,
		fillcolor=gold,
		label="U_0_021.27:AL",
		sens="['Reset', 'Clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'CCSB', 'CA_reg_set', 'CD_in_reg', 'CA_reg', 'CWR_pulse', 'RegInit']"];
	"U_0_021.28:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da17fc0d0>",
		fillcolor=springgreen,
		label="U_0_021.28:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_021.27:AL" -> "U_0_021.28:IF"	 [cond="[]",
		lineno=None];
	"U_0_028.31:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>",
		fillcolor=firebrick,
		label="U_0_028.31:NS
RegOut <= CD_in_reg;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_028.Leaf_27:AL"	 [def_var="['RegOut']",
		label="U_0_028.Leaf_27:AL"];
	"U_0_028.31:NS" -> "U_0_028.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_025.29:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>",
		fillcolor=firebrick,
		label="U_0_025.29:NS
RegOut <= RegInit;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_025.29:NS" -> "U_0_025.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_012.28:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da17fc0d0>",
		fillcolor=springgreen,
		label="U_0_012.28:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_012.28:IF" -> "U_0_012.30:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=28];
	"U_0_012.29:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>",
		fillcolor=firebrick,
		label="U_0_012.29:NS
RegOut <= RegInit;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_012.28:IF" -> "U_0_012.29:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=28];
	"184:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16d2650>",
		fillcolor=firebrick,
		label="184:NS
CD_out <= CPU_rd_dout[31:16];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16d2650>]",
		style=filled,
		typ=NonblockingSubstitution];
	"184:NS" -> "Leaf_147:AL"	 [cond="[]",
		lineno=None];
	"U_0_015.28:IF" -> "U_0_015.29:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=28];
	"U_0_015.30:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da1ae1ad0>",
		fillcolor=springgreen,
		label="U_0_015.30:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_015.28:IF" -> "U_0_015.30:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=28];
	"164:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f5da16ce850>",
		fillcolor=lightcyan,
		label="164:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"164:CA" -> "164:NS"	 [cond="[]",
		lineno=None];
	"183:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16d2390>",
		fillcolor=firebrick,
		label="183:NS
CD_out <= CPU_rd_dout[15:0];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16d2390>]",
		style=filled,
		typ=NonblockingSubstitution];
	"183:NS" -> "Leaf_147:AL"	 [cond="[]",
		lineno=None];
	"U_0_021.Leaf_27:AL"	 [def_var="['RegOut']",
		label="U_0_021.Leaf_27:AL"];
	"U_0_021.Leaf_27:AL" -> "147:AL";
	"U_0_011.28:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da17fc0d0>",
		fillcolor=springgreen,
		label="U_0_011.28:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_011.28:IF" -> "U_0_011.30:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=28];
	"U_0_011.29:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>",
		fillcolor=firebrick,
		label="U_0_011.29:NS
RegOut <= RegInit;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_011.28:IF" -> "U_0_011.29:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=28];
	"U_0_006.31:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>",
		fillcolor=firebrick,
		label="U_0_006.31:NS
RegOut <= CD_in_reg;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_006.31:NS" -> "U_0_006.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_034.31:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>",
		fillcolor=firebrick,
		label="U_0_034.31:NS
RegOut <= CD_in_reg;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_034.31:NS" -> "U_0_034.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_013.29:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>",
		fillcolor=firebrick,
		label="U_0_013.29:NS
RegOut <= RegInit;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_013.29:NS" -> "U_0_013.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_009.30:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da1ae1ad0>",
		fillcolor=springgreen,
		label="U_0_009.30:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_009.28:IF" -> "U_0_009.30:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=28];
	"U_0_009.29:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>",
		fillcolor=firebrick,
		label="U_0_009.29:NS
RegOut <= RegInit;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_009.28:IF" -> "U_0_009.29:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=28];
	"U_0_000.27:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f5da17fced0>",
		clk_sens=False,
		fillcolor=gold,
		label="U_0_000.27:AL",
		sens="['Reset', 'Clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'CCSB', 'CA_reg_set', 'CD_in_reg', 'CA_reg', 'CWR_pulse', 'RegInit']"];
	"U_0_000.28:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da17fc0d0>",
		fillcolor=springgreen,
		label="U_0_000.28:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_000.27:AL" -> "U_0_000.28:IF"	 [cond="[]",
		lineno=None];
	"U_0_021.28:IF" -> "U_0_021.30:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=28];
	"U_0_021.29:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>",
		fillcolor=firebrick,
		label="U_0_021.29:NS
RegOut <= RegInit;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_021.28:IF" -> "U_0_021.29:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=28];
	"U_0_026.29:NS" -> "U_0_026.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_009.31:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>",
		fillcolor=firebrick,
		label="U_0_009.31:NS
RegOut <= CD_in_reg;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_009.30:IF" -> "U_0_009.31:NS"	 [cond="['CWR_pulse', 'CCSB', 'CA_reg', 'CA_reg_set']",
		label="(CWR_pulse && !CCSB && (CA_reg[7:1] == CA_reg_set[6:0]))",
		lineno=30];
	"U_0_010.31:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>",
		fillcolor=firebrick,
		label="U_0_010.31:NS
RegOut <= CD_in_reg;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_010.31:NS" -> "U_0_010.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"186:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f5da16d29d0>",
		fillcolor=lightcyan,
		label="186:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"186:CA" -> "186:NS"	 [cond="[]",
		lineno=None];
	"172:NS" -> "Leaf_147:AL"	 [cond="[]",
		lineno=None];
	"U_0_002.27:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f5da17fced0>",
		clk_sens=False,
		fillcolor=gold,
		label="U_0_002.27:AL",
		sens="['Reset', 'Clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'CCSB', 'CA_reg_set', 'CD_in_reg', 'CA_reg', 'CWR_pulse', 'RegInit']"];
	"U_0_002.28:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da17fc0d0>",
		fillcolor=springgreen,
		label="U_0_002.28:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_002.27:AL" -> "U_0_002.28:IF"	 [cond="[]",
		lineno=None];
	"U_0_013.30:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da1ae1ad0>",
		fillcolor=springgreen,
		label="U_0_013.30:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_013.31:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>",
		fillcolor=firebrick,
		label="U_0_013.31:NS
RegOut <= CD_in_reg;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_013.30:IF" -> "U_0_013.31:NS"	 [cond="['CWR_pulse', 'CCSB', 'CA_reg', 'CA_reg_set']",
		label="(CWR_pulse && !CCSB && (CA_reg[7:1] == CA_reg_set[6:0]))",
		lineno=30];
	"158:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f5da16bfb10>",
		fillcolor=lightcyan,
		label="158:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"158:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16bfc10>",
		fillcolor=firebrick,
		label="158:NS
CD_out <= MaxRetry;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16bfc10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"158:CA" -> "158:NS"	 [cond="[]",
		lineno=None];
	"U_0_028.29:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>",
		fillcolor=firebrick,
		label="U_0_028.29:NS
RegOut <= RegInit;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_028.29:NS" -> "U_0_028.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_012.29:NS" -> "U_0_012.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"184:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f5da16d24d0>",
		fillcolor=lightcyan,
		label="184:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"184:CA" -> "184:NS"	 [cond="[]",
		lineno=None];
	"U_0_001.31:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>",
		fillcolor=firebrick,
		label="U_0_001.31:NS
RegOut <= CD_in_reg;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_001.31:NS" -> "U_0_001.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_003.30:IF" -> "U_0_003.31:NS"	 [cond="['CWR_pulse', 'CCSB', 'CA_reg', 'CA_reg_set']",
		label="(CWR_pulse && !CCSB && (CA_reg[7:1] == CA_reg_set[6:0]))",
		lineno=30];
	"U_0_001.27:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f5da17fced0>",
		clk_sens=False,
		fillcolor=gold,
		label="U_0_001.27:AL",
		sens="['Reset', 'Clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'CCSB', 'CA_reg_set', 'CD_in_reg', 'CA_reg', 'CWR_pulse', 'RegInit']"];
	"U_0_001.28:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da17fc0d0>",
		fillcolor=springgreen,
		label="U_0_001.28:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_001.27:AL" -> "U_0_001.28:IF"	 [cond="[]",
		lineno=None];
	"U_0_034.30:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da1ae1ad0>",
		fillcolor=springgreen,
		label="U_0_034.30:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_034.28:IF" -> "U_0_034.30:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=28];
	"U_0_034.29:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>",
		fillcolor=firebrick,
		label="U_0_034.29:NS
RegOut <= RegInit;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_034.28:IF" -> "U_0_034.29:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=28];
	"U_0_008.28:IF" -> "U_0_008.30:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=28];
	"U_0_008.29:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>",
		fillcolor=firebrick,
		label="U_0_008.29:NS
RegOut <= RegInit;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_008.28:IF" -> "U_0_008.29:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=28];
	"163:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f5da16ce650>",
		fillcolor=lightcyan,
		label="163:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"163:CA" -> "163:NS"	 [cond="[]",
		lineno=None];
	"U_0_020.31:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>",
		fillcolor=firebrick,
		label="U_0_020.31:NS
RegOut <= CD_in_reg;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_020.31:NS" -> "U_0_020.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_017.28:IF" -> "U_0_017.29:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=28];
	"U_0_017.28:IF" -> "U_0_017.30:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=28];
	"U_0_024.29:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>",
		fillcolor=firebrick,
		label="U_0_024.29:NS
RegOut <= RegInit;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_024.29:NS" -> "U_0_024.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"154:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16bf3d0>",
		fillcolor=firebrick,
		label="154:NS
CD_out <= pause_frame_send_en;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16bf3d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"154:NS" -> "Leaf_147:AL"	 [cond="[]",
		lineno=None];
	"153:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f5da16bf0d0>",
		fillcolor=lightcyan,
		label="153:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"153:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16bf1d0>",
		fillcolor=firebrick,
		label="153:NS
CD_out <= Tx_Lwmark;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16bf1d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"153:CA" -> "153:NS"	 [cond="[]",
		lineno=None];
	"U_0_003.29:NS" -> "U_0_003.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"156:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f5da16bf710>",
		fillcolor=lightcyan,
		label="156:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"156:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16bf810>",
		fillcolor=firebrick,
		label="156:NS
CD_out <= IFGset;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16bf810>]",
		style=filled,
		typ=NonblockingSubstitution];
	"156:CA" -> "156:NS"	 [cond="[]",
		lineno=None];
	"158:NS" -> "Leaf_147:AL"	 [cond="[]",
		lineno=None];
	"U_0_002.28:IF" -> "U_0_002.30:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=28];
	"U_0_002.28:IF" -> "U_0_002.29:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=28];
	"U_0_002.31:NS" -> "U_0_002.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_034.30:IF" -> "U_0_034.31:NS"	 [cond="['CWR_pulse', 'CCSB', 'CA_reg', 'CA_reg_set']",
		label="(CWR_pulse && !CCSB && (CA_reg[7:1] == CA_reg_set[6:0]))",
		lineno=30];
	"151:CS" -> "171:CA"	 [cond="['CA']",
		label="CA[7:1]",
		lineno=151];
	"151:CS" -> "174:CA"	 [cond="['CA']",
		label="CA[7:1]",
		lineno=151];
	"151:CS" -> "159:CA"	 [cond="['CA']",
		label="CA[7:1]",
		lineno=151];
	"151:CS" -> "182:CA"	 [cond="['CA']",
		label="CA[7:1]",
		lineno=151];
	"151:CS" -> "168:CA"	 [cond="['CA']",
		label="CA[7:1]",
		lineno=151];
	"151:CS" -> "180:CA"	 [cond="['CA']",
		label="CA[7:1]",
		lineno=151];
	"151:CS" -> "167:CA"	 [cond="['CA']",
		label="CA[7:1]",
		lineno=151];
	"151:CS" -> "185:CA"	 [cond="['CA']",
		label="CA[7:1]",
		lineno=151];
	"151:CS" -> "173:CA"	 [cond="['CA']",
		label="CA[7:1]",
		lineno=151];
	"151:CS" -> "152:CA"	 [cond="['CA']",
		label="CA[7:1]",
		lineno=151];
	"151:CS" -> "172:CA"	 [cond="['CA']",
		label="CA[7:1]",
		lineno=151];
	"151:CS" -> "166:CA"	 [cond="['CA']",
		label="CA[7:1]",
		lineno=151];
	"151:CS" -> "169:CA"	 [cond="['CA']",
		label="CA[7:1]",
		lineno=151];
	"151:CS" -> "164:CA"	 [cond="['CA']",
		label="CA[7:1]",
		lineno=151];
	"151:CS" -> "186:CA"	 [cond="['CA']",
		label="CA[7:1]",
		lineno=151];
	"151:CS" -> "158:CA"	 [cond="['CA']",
		label="CA[7:1]",
		lineno=151];
	"151:CS" -> "184:CA"	 [cond="['CA']",
		label="CA[7:1]",
		lineno=151];
	"151:CS" -> "163:CA"	 [cond="['CA']",
		label="CA[7:1]",
		lineno=151];
	"151:CS" -> "153:CA"	 [cond="['CA']",
		label="CA[7:1]",
		lineno=151];
	"151:CS" -> "156:CA"	 [cond="['CA']",
		label="CA[7:1]",
		lineno=151];
	"183:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f5da16d2210>",
		fillcolor=lightcyan,
		label="183:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"151:CS" -> "183:CA"	 [cond="['CA']",
		label="CA[7:1]",
		lineno=151];
	"160:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f5da16bff50>",
		fillcolor=lightcyan,
		label="160:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"151:CS" -> "160:CA"	 [cond="['CA']",
		label="CA[7:1]",
		lineno=151];
	"175:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f5da16d70d0>",
		fillcolor=lightcyan,
		label="175:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"151:CS" -> "175:CA"	 [cond="['CA']",
		label="CA[7:1]",
		lineno=151];
	"162:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f5da16ce410>",
		fillcolor=lightcyan,
		label="162:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"151:CS" -> "162:CA"	 [cond="['CA']",
		label="CA[7:1]",
		lineno=151];
	"165:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f5da16cea50>",
		fillcolor=lightcyan,
		label="165:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"151:CS" -> "165:CA"	 [cond="['CA']",
		label="CA[7:1]",
		lineno=151];
	"170:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f5da16c1590>",
		fillcolor=lightcyan,
		label="170:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"151:CS" -> "170:CA"	 [cond="['CA']",
		label="CA[7:1]",
		lineno=151];
	"187:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f5da16d2b90>",
		fillcolor=lightcyan,
		label="187:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"151:CS" -> "187:CA"	 [cond="['CA']",
		label="CA[7:1]",
		lineno=151];
	"177:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f5da16d74d0>",
		fillcolor=lightcyan,
		label="177:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"151:CS" -> "177:CA"	 [cond="['CA']",
		label="CA[7:1]",
		lineno=151];
	"178:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f5da16d76d0>",
		fillcolor=lightcyan,
		label="178:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"151:CS" -> "178:CA"	 [cond="['CA']",
		label="CA[7:1]",
		lineno=151];
	"181:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f5da16d7d50>",
		fillcolor=lightcyan,
		label="181:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"151:CS" -> "181:CA"	 [cond="['CA']",
		label="CA[7:1]",
		lineno=151];
	"161:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f5da16ce1d0>",
		fillcolor=lightcyan,
		label="161:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"151:CS" -> "161:CA"	 [cond="['CA']",
		label="CA[7:1]",
		lineno=151];
	"155:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f5da16bf4d0>",
		fillcolor=lightcyan,
		label="155:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"151:CS" -> "155:CA"	 [cond="['CA']",
		label="CA[7:1]",
		lineno=151];
	"154:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f5da16bf290>",
		fillcolor=lightcyan,
		label="154:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"151:CS" -> "154:CA"	 [cond="['CA']",
		label="CA[7:1]",
		lineno=151];
	"157:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f5da16bf910>",
		fillcolor=lightcyan,
		label="157:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"151:CS" -> "157:CA"	 [cond="['CA']",
		label="CA[7:1]",
		lineno=151];
	"179:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f5da16d7910>",
		fillcolor=lightcyan,
		label="179:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"151:CS" -> "179:CA"	 [cond="['CA']",
		label="CA[7:1]",
		lineno=151];
	"176:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f5da16d72d0>",
		fillcolor=lightcyan,
		label="176:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"151:CS" -> "176:CA"	 [cond="['CA']",
		label="CA[7:1]",
		lineno=151];
	"U_0_011.27:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f5da17fced0>",
		clk_sens=False,
		fillcolor=gold,
		label="U_0_011.27:AL",
		sens="['Reset', 'Clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'CCSB', 'CA_reg_set', 'CD_in_reg', 'CA_reg', 'CWR_pulse', 'RegInit']"];
	"U_0_011.27:AL" -> "U_0_011.28:IF"	 [cond="[]",
		lineno=None];
	"152:NS" -> "Leaf_147:AL"	 [cond="[]",
		lineno=None];
	"U_0_033.27:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f5da17fced0>",
		clk_sens=False,
		fillcolor=gold,
		label="U_0_033.27:AL",
		sens="['Reset', 'Clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'CCSB', 'CA_reg_set', 'CD_in_reg', 'CA_reg', 'CWR_pulse', 'RegInit']"];
	"U_0_033.27:AL" -> "U_0_033.28:IF"	 [cond="[]",
		lineno=None];
	"U_0_029.27:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f5da17fced0>",
		clk_sens=False,
		fillcolor=gold,
		label="U_0_029.27:AL",
		sens="['Reset', 'Clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'CCSB', 'CA_reg_set', 'CD_in_reg', 'CA_reg', 'CWR_pulse', 'RegInit']"];
	"U_0_029.28:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da17fc0d0>",
		fillcolor=springgreen,
		label="U_0_029.28:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_029.27:AL" -> "U_0_029.28:IF"	 [cond="[]",
		lineno=None];
	"U_0_016.27:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f5da17fced0>",
		clk_sens=False,
		fillcolor=gold,
		label="U_0_016.27:AL",
		sens="['Reset', 'Clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'CCSB', 'CA_reg_set', 'CD_in_reg', 'CA_reg', 'CWR_pulse', 'RegInit']"];
	"U_0_016.28:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da17fc0d0>",
		fillcolor=springgreen,
		label="U_0_016.28:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_016.27:AL" -> "U_0_016.28:IF"	 [cond="[]",
		lineno=None];
	"U_0_029.30:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da1ae1ad0>",
		fillcolor=springgreen,
		label="U_0_029.30:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_029.28:IF" -> "U_0_029.30:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=28];
	"U_0_029.29:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>",
		fillcolor=firebrick,
		label="U_0_029.29:NS
RegOut <= RegInit;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_029.28:IF" -> "U_0_029.29:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=28];
	"148:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da16d0990>",
		fillcolor=springgreen,
		label="148:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"147:AL" -> "148:IF"	 [cond="[]",
		lineno=None];
	"U_0_028.30:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da1ae1ad0>",
		fillcolor=springgreen,
		label="U_0_028.30:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_028.30:IF" -> "U_0_028.31:NS"	 [cond="['CWR_pulse', 'CCSB', 'CA_reg', 'CA_reg_set']",
		label="(CWR_pulse && !CCSB && (CA_reg[7:1] == CA_reg_set[6:0]))",
		lineno=30];
	"153:NS" -> "Leaf_147:AL"	 [cond="[]",
		lineno=None];
	"U_0_034.29:NS" -> "U_0_034.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_026.31:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>",
		fillcolor=firebrick,
		label="U_0_026.31:NS
RegOut <= CD_in_reg;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_026.30:IF" -> "U_0_026.31:NS"	 [cond="['CWR_pulse', 'CCSB', 'CA_reg', 'CA_reg_set']",
		label="(CWR_pulse && !CCSB && (CA_reg[7:1] == CA_reg_set[6:0]))",
		lineno=30];
	"U_0_021.29:NS" -> "U_0_021.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_008.29:NS" -> "U_0_008.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"183:CA" -> "183:NS"	 [cond="[]",
		lineno=None];
	"U_0_007.30:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da1ae1ad0>",
		fillcolor=springgreen,
		label="U_0_007.30:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_007.30:IF" -> "U_0_007.31:NS"	 [cond="['CWR_pulse', 'CCSB', 'CA_reg', 'CA_reg_set']",
		label="(CWR_pulse && !CCSB && (CA_reg[7:1] == CA_reg_set[6:0]))",
		lineno=30];
	"173:NS" -> "Leaf_147:AL"	 [cond="[]",
		lineno=None];
	"160:CA" -> "160:NS"	 [cond="[]",
		lineno=None];
	"U_0_025.Leaf_27:AL" -> "147:AL";
	"175:CA" -> "175:NS"	 [cond="[]",
		lineno=None];
	"U_0_012.27:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f5da17fced0>",
		clk_sens=False,
		fillcolor=gold,
		label="U_0_012.27:AL",
		sens="['Reset', 'Clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'CCSB', 'CA_reg_set', 'CD_in_reg', 'CA_reg', 'CWR_pulse', 'RegInit']"];
	"U_0_012.27:AL" -> "U_0_012.28:IF"	 [cond="[]",
		lineno=None];
	"162:CA" -> "162:NS"	 [cond="[]",
		lineno=None];
	"U_0_033.30:IF" -> "U_0_033.31:NS"	 [cond="['CWR_pulse', 'CCSB', 'CA_reg', 'CA_reg_set']",
		label="(CWR_pulse && !CCSB && (CA_reg[7:1] == CA_reg_set[6:0]))",
		lineno=30];
	"156:NS" -> "Leaf_147:AL"	 [cond="[]",
		lineno=None];
	"U_0_027.30:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da1ae1ad0>",
		fillcolor=springgreen,
		label="U_0_027.30:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_027.28:IF" -> "U_0_027.30:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=28];
	"U_0_027.29:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>",
		fillcolor=firebrick,
		label="U_0_027.29:NS
RegOut <= RegInit;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_027.28:IF" -> "U_0_027.29:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=28];
	"U_0_012.Leaf_27:AL" -> "147:AL";
	"165:CA" -> "165:NS"	 [cond="[]",
		lineno=None];
	"170:CA" -> "170:NS"	 [cond="[]",
		lineno=None];
	"U_0_000.28:IF" -> "U_0_000.30:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=28];
	"U_0_000.29:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>",
		fillcolor=firebrick,
		label="U_0_000.29:NS
RegOut <= RegInit;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_000.28:IF" -> "U_0_000.29:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=28];
	"187:CA" -> "187:NS"	 [cond="[]",
		lineno=None];
	"U_0_001.28:IF" -> "U_0_001.29:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=28];
	"U_0_001.30:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da1ae1ad0>",
		fillcolor=springgreen,
		label="U_0_001.30:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_001.28:IF" -> "U_0_001.30:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=28];
	"177:CA" -> "177:NS"	 [cond="[]",
		lineno=None];
	"U_0_011.Leaf_27:AL" -> "147:AL";
	"U_0_013.28:IF" -> "U_0_013.29:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=28];
	"U_0_013.28:IF" -> "U_0_013.30:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=28];
	"159:NS" -> "Leaf_147:AL"	 [cond="[]",
		lineno=None];
	"U_0_019.Leaf_27:AL" -> "147:AL";
	"U_0_016.30:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da1ae1ad0>",
		fillcolor=springgreen,
		label="U_0_016.30:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_016.30:IF" -> "U_0_016.31:NS"	 [cond="['CWR_pulse', 'CCSB', 'CA_reg', 'CA_reg_set']",
		label="(CWR_pulse && !CCSB && (CA_reg[7:1] == CA_reg_set[6:0]))",
		lineno=30];
	"U_0_006.28:IF" -> "U_0_006.29:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=28];
	"U_0_006.30:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da1ae1ad0>",
		fillcolor=springgreen,
		label="U_0_006.30:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_006.28:IF" -> "U_0_006.30:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=28];
	"U_0_027.31:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>",
		fillcolor=firebrick,
		label="U_0_027.31:NS
RegOut <= CD_in_reg;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16adf90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_027.31:NS" -> "U_0_027.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_016.Leaf_27:AL" -> "147:AL";
	"U_0_023.28:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da17fc0d0>",
		fillcolor=springgreen,
		label="U_0_023.28:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_023.28:IF" -> "U_0_023.29:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=28];
	"U_0_023.30:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da1ae1ad0>",
		fillcolor=springgreen,
		label="U_0_023.30:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_023.28:IF" -> "U_0_023.30:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=28];
	"178:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16d7810>",
		fillcolor=firebrick,
		label="178:NS
CD_out <= RX_MAX_LENGTH;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16d7810>]",
		style=filled,
		typ=NonblockingSubstitution];
	"178:CA" -> "178:NS"	 [cond="[]",
		lineno=None];
	"U_0_019.27:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f5da17fced0>",
		clk_sens=False,
		fillcolor=gold,
		label="U_0_019.27:AL",
		sens="['Reset', 'Clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'CCSB', 'CA_reg_set', 'CD_in_reg', 'CA_reg', 'CWR_pulse', 'RegInit']"];
	"U_0_019.27:AL" -> "U_0_019.28:IF"	 [cond="[]",
		lineno=None];
	"U_0_027.30:IF" -> "U_0_027.31:NS"	 [cond="['CWR_pulse', 'CCSB', 'CA_reg', 'CA_reg_set']",
		label="(CWR_pulse && !CCSB && (CA_reg[7:1] == CA_reg_set[6:0]))",
		lineno=30];
	"U_0_033.29:NS" -> "U_0_033.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_019.29:NS" -> "U_0_019.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_010.30:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da1ae1ad0>",
		fillcolor=springgreen,
		label="U_0_010.30:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_010.30:IF" -> "U_0_010.31:NS"	 [cond="['CWR_pulse', 'CCSB', 'CA_reg', 'CA_reg_set']",
		label="(CWR_pulse && !CCSB && (CA_reg[7:1] == CA_reg_set[6:0]))",
		lineno=30];
	"U_0_028.28:IF" -> "U_0_028.29:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=28];
	"U_0_028.28:IF" -> "U_0_028.30:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=28];
	"U_0_029.30:IF" -> "U_0_029.31:NS"	 [cond="['CWR_pulse', 'CCSB', 'CA_reg', 'CA_reg_set']",
		label="(CWR_pulse && !CCSB && (CA_reg[7:1] == CA_reg_set[6:0]))",
		lineno=30];
	"U_0_020.27:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f5da17fced0>",
		clk_sens=False,
		fillcolor=gold,
		label="U_0_020.27:AL",
		sens="['Reset', 'Clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'CCSB', 'CA_reg_set', 'CD_in_reg', 'CA_reg', 'CWR_pulse', 'RegInit']"];
	"U_0_020.27:AL" -> "U_0_020.28:IF"	 [cond="[]",
		lineno=None];
	"157:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16bfa10>",
		fillcolor=firebrick,
		label="157:NS
CD_out <= FullDuplex;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16bfa10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"157:NS" -> "Leaf_147:AL"	 [cond="[]",
		lineno=None];
	"U_0_004.30:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da1ae1ad0>",
		fillcolor=springgreen,
		label="U_0_004.30:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_004.30:IF" -> "U_0_004.31:NS"	 [cond="['CWR_pulse', 'CCSB', 'CA_reg', 'CA_reg_set']",
		label="(CWR_pulse && !CCSB && (CA_reg[7:1] == CA_reg_set[6:0]))",
		lineno=30];
	"U_0_025.28:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da17fc0d0>",
		fillcolor=springgreen,
		label="U_0_025.28:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_025.28:IF" -> "U_0_025.30:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=28];
	"U_0_025.28:IF" -> "U_0_025.29:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=28];
	"U_0_023.30:IF" -> "U_0_023.31:NS"	 [cond="['CWR_pulse', 'CCSB', 'CA_reg', 'CA_reg_set']",
		label="(CWR_pulse && !CCSB && (CA_reg[7:1] == CA_reg_set[6:0]))",
		lineno=30];
	"U_0_027.29:NS" -> "U_0_027.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_007.28:IF" -> "U_0_007.29:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=28];
	"U_0_007.28:IF" -> "U_0_007.30:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=28];
	"U_0_024.30:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da1ae1ad0>",
		fillcolor=springgreen,
		label="U_0_024.30:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_024.30:IF" -> "U_0_024.31:NS"	 [cond="['CWR_pulse', 'CCSB', 'CA_reg', 'CA_reg_set']",
		label="(CWR_pulse && !CCSB && (CA_reg[7:1] == CA_reg_set[6:0]))",
		lineno=30];
	"181:CA" -> "181:NS"	 [cond="[]",
		lineno=None];
	"U_0_005.27:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f5da17fced0>",
		clk_sens=False,
		fillcolor=gold,
		label="U_0_005.27:AL",
		sens="['Reset', 'Clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'CCSB', 'CA_reg_set', 'CD_in_reg', 'CA_reg', 'CWR_pulse', 'RegInit']"];
	"U_0_005.27:AL" -> "U_0_005.28:IF"	 [cond="[]",
		lineno=None];
	"178:NS" -> "Leaf_147:AL"	 [cond="[]",
		lineno=None];
	"U_0_009.29:NS" -> "U_0_009.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_010.28:IF" -> "U_0_010.29:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=28];
	"U_0_010.28:IF" -> "U_0_010.30:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=28];
	"U_0_014.31:NS" -> "U_0_014.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"155:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16bf610>",
		fillcolor=firebrick,
		label="155:NS
CD_out <= pause_quanta_set;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16bf610>]",
		style=filled,
		typ=NonblockingSubstitution];
	"155:NS" -> "Leaf_147:AL"	 [cond="[]",
		lineno=None];
	"U_0_015.30:IF" -> "U_0_015.31:NS"	 [cond="['CWR_pulse', 'CCSB', 'CA_reg', 'CA_reg_set']",
		label="(CWR_pulse && !CCSB && (CA_reg[7:1] == CA_reg_set[6:0]))",
		lineno=30];
	"U_0_006.30:IF" -> "U_0_006.31:NS"	 [cond="['CWR_pulse', 'CCSB', 'CA_reg', 'CA_reg_set']",
		label="(CWR_pulse && !CCSB && (CA_reg[7:1] == CA_reg_set[6:0]))",
		lineno=30];
	"U_0_028.Leaf_27:AL" -> "147:AL";
	"161:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16ce310>",
		fillcolor=firebrick,
		label="161:NS
CD_out <= MAC_tx_add_prom_add;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16ce310>]",
		style=filled,
		typ=NonblockingSubstitution];
	"161:CA" -> "161:NS"	 [cond="[]",
		lineno=None];
	"U_0_018.27:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f5da17fced0>",
		clk_sens=False,
		fillcolor=gold,
		label="U_0_018.27:AL",
		sens="['Reset', 'Clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'CCSB', 'CA_reg_set', 'CD_in_reg', 'CA_reg', 'CWR_pulse', 'RegInit']"];
	"U_0_018.27:AL" -> "U_0_018.28:IF"	 [cond="[]",
		lineno=None];
	"U_0_023.Leaf_27:AL" -> "147:AL";
	"U_0_004.28:IF" -> "U_0_004.29:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=28];
	"U_0_004.28:IF" -> "U_0_004.30:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=28];
	"U_0_001.30:IF" -> "U_0_001.31:NS"	 [cond="['CWR_pulse', 'CCSB', 'CA_reg', 'CA_reg_set']",
		label="(CWR_pulse && !CCSB && (CA_reg[7:1] == CA_reg_set[6:0]))",
		lineno=30];
	"U_0_021.31:NS" -> "U_0_021.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_029.29:NS" -> "U_0_029.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_022.30:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da1ae1ad0>",
		fillcolor=springgreen,
		label="U_0_022.30:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_022.30:IF" -> "U_0_022.31:NS"	 [cond="['CWR_pulse', 'CCSB', 'CA_reg', 'CA_reg_set']",
		label="(CWR_pulse && !CCSB && (CA_reg[7:1] == CA_reg_set[6:0]))",
		lineno=30];
	"148:IF" -> "150:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=148];
	"148:IF" -> "149:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=148];
	"U_0_025.27:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f5da17fced0>",
		clk_sens=False,
		fillcolor=gold,
		label="U_0_025.27:AL",
		sens="['Reset', 'Clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'CCSB', 'CA_reg_set', 'CD_in_reg', 'CA_reg', 'CWR_pulse', 'RegInit']"];
	"U_0_025.27:AL" -> "U_0_025.28:IF"	 [cond="[]",
		lineno=None];
	"155:CA" -> "155:NS"	 [cond="[]",
		lineno=None];
	"154:CA" -> "154:NS"	 [cond="[]",
		lineno=None];
	"157:CA" -> "157:NS"	 [cond="[]",
		lineno=None];
	"179:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16d7a50>",
		fillcolor=firebrick,
		label="179:NS
CD_out <= RX_MIN_LENGTH;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da16d7a50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"179:NS" -> "Leaf_147:AL"	 [cond="[]",
		lineno=None];
	"U_0_000.29:NS" -> "U_0_000.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_022.29:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>",
		fillcolor=firebrick,
		label="U_0_022.29:NS
RegOut <= RegInit;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5da17fc350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"U_0_022.29:NS" -> "U_0_022.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_016.28:IF" -> "U_0_016.29:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=28];
	"U_0_016.28:IF" -> "U_0_016.30:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=28];
	"U_0_024.27:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f5da17fced0>",
		clk_sens=False,
		fillcolor=gold,
		label="U_0_024.27:AL",
		sens="['Reset', 'Clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'CCSB', 'CA_reg_set', 'CD_in_reg', 'CA_reg', 'CWR_pulse', 'RegInit']"];
	"U_0_024.28:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5da17fc0d0>",
		fillcolor=springgreen,
		label="U_0_024.28:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"U_0_024.27:AL" -> "U_0_024.28:IF"	 [cond="[]",
		lineno=None];
	"U_0_020.30:IF" -> "U_0_020.31:NS"	 [cond="['CWR_pulse', 'CCSB', 'CA_reg', 'CA_reg_set']",
		label="(CWR_pulse && !CCSB && (CA_reg[7:1] == CA_reg_set[6:0]))",
		lineno=30];
	"U_0_023.27:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f5da17fced0>",
		clk_sens=False,
		fillcolor=gold,
		label="U_0_023.27:AL",
		sens="['Reset', 'Clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'CCSB', 'CA_reg_set', 'CD_in_reg', 'CA_reg', 'CWR_pulse', 'RegInit']"];
	"U_0_023.27:AL" -> "U_0_023.28:IF"	 [cond="[]",
		lineno=None];
	"U_0_022.28:IF" -> "U_0_022.30:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=28];
	"U_0_022.28:IF" -> "U_0_022.29:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=28];
	"U_0_018.Leaf_27:AL" -> "147:AL";
	"U_0_003.27:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f5da17fced0>",
		clk_sens=False,
		fillcolor=gold,
		label="U_0_003.27:AL",
		sens="['Reset', 'Clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'CCSB', 'CA_reg_set', 'CD_in_reg', 'CA_reg', 'CWR_pulse', 'RegInit']"];
	"U_0_003.27:AL" -> "U_0_003.28:IF"	 [cond="[]",
		lineno=None];
	"179:CA" -> "179:NS"	 [cond="[]",
		lineno=None];
	"U_0_009.31:NS" -> "U_0_009.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_024.28:IF" -> "U_0_024.29:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=28];
	"U_0_024.28:IF" -> "U_0_024.30:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=28];
	"U_0_013.31:NS" -> "U_0_013.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"176:CA" -> "176:NS"	 [cond="[]",
		lineno=None];
	"161:NS" -> "Leaf_147:AL"	 [cond="[]",
		lineno=None];
	"U_0_011.29:NS" -> "U_0_011.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"169:NS" -> "Leaf_147:AL"	 [cond="[]",
		lineno=None];
	"U_0_026.31:NS" -> "U_0_026.Leaf_27:AL"	 [cond="[]",
		lineno=None];
	"U_0_020.Leaf_27:AL" -> "147:AL";
}
