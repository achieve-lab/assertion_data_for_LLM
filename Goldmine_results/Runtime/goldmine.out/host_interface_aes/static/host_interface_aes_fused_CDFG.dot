strict digraph "compose( ,  )" {
	node [label="\N"];
	"308:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fe9e4ae4e50>",
		clk_sens=False,
		fillcolor=gold,
		label="308:AL",
		sens="['key_deriv', 'write_completed', 'state', 'START', 'IDLE', 'read_completed', 'OUTPUT', 'INPUT', 'cnt_en', 'WAIT']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['enable', 'ccf_set', 'key_deriv', 'write_completed', 'IDLE', 'START', 'state', 'read_completed', 'OUTPUT', 'INPUT', 'cnt_en', '\
WAIT']"];
	"309:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe9e4ace090>",
		fillcolor=turquoise,
		label="309:BL
next_state = state;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe9e4ae4f10>]",
		style=filled,
		typ=Block];
	"308:AL" -> "309:BL"	 [cond="[]",
		lineno=None];
	"439:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe9e4b27290>",
		fillcolor=cadetblue,
		label="439:BS
bus_out_mux = key_bus;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe9e4b27290>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_424:AL"	 [def_var="['bus_out_mux']",
		label="Leaf_424:AL"];
	"439:BS" -> "Leaf_424:AL"	 [cond="[]",
		lineno=None];
	"353:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe9e4dd9890>",
		fillcolor=cadetblue,
		label="353:BS
cnt_en = ENABLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe9e4dd9890>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_334:AL"	 [def_var="['access_permission', 'first_block_clear', 'start_core', 'enable_clear', 'first_block_set', 'cnt_en']",
		label="Leaf_334:AL"];
	"353:BS" -> "Leaf_334:AL"	 [cond="[]",
		lineno=None];
	"334:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fe9e4dc8450>",
		clk_sens=False,
		fillcolor=gold,
		label="334:AL",
		sens="['DISABLE', 'ENABLE']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['ENABLE', 'ccf_set', 'key_deriv', 'read_en', 'PENABLE', 'state', 'enable', 'PADDR', 'AES_DINR', 'write_en', 'DISABLE', 'AES_DOUTR']"];
	"335:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe9e4dc8d10>",
		fillcolor=turquoise,
		label="335:BL
access_permission = DISABLE;
start_core = DISABLE;
cnt_en = DISABLE;
enable_clear = DISABLE;
first_block_set = DISABLE;
first_\
block_clear = DISABLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe9e4dc8550>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe9e4dc86d0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe9e4dc8810>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe9e4dc8990>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe9e4dc8b10>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe9e4dc8c90>]",
		style=filled,
		typ=Block];
	"334:AL" -> "335:BL"	 [cond="[]",
		lineno=None];
	"402:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe9e4dda5d0>",
		def_var="['col_addr']",
		fillcolor=deepskyblue,
		label="402:AS
col_addr = cnt;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cnt']"];
	"431:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe9e4b53890>",
		fillcolor=cadetblue,
		label="431:BS
bus_out_mux = { { 29{ 1'b0 } }, wr_err, rd_err, (ccf_set && ~PENABLE)? 1'b1 : 
              (ccfc && aes_cr_wr_en)? 1'b0 : \
ccf };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe9e4b53890>]",
		style=filled,
		typ=BlockingSubstitution];
	"431:BS" -> "Leaf_424:AL"	 [cond="[]",
		lineno=None];
	"348:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe9e4dd94d0>",
		fillcolor=cadetblue,
		label="348:BS
cnt_en = ENABLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe9e4dd94d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"348:BS" -> "Leaf_334:AL"	 [cond="[]",
		lineno=None];
	"429:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe9e4b532d0>",
		fillcolor=cadetblue,
		label="429:BS
bus_out_mux = { { 19{ 1'b0 } }, aes_cr[10:7], 2'b00, aes_cr[6:0] };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe9e4b532d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"429:BS" -> "Leaf_424:AL"	 [cond="[]",
		lineno=None];
	"398:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4dda910>",
		fillcolor=firebrick,
		label="398:NS
cnt <= cnt + 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4dda910>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_388:AL"	 [def_var="['cnt']",
		label="Leaf_388:AL"];
	"398:NS" -> "Leaf_388:AL"	 [cond="[]",
		lineno=None];
	"292:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fe9e4ae4250>",
		clk_sens=False,
		fillcolor=gold,
		label="292:AL",
		sens="['PCLK', 'PRESETn']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['IDLE', 'enable', 'PRESETn', 'next_state']"];
	"293:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe9e4ae4290>",
		fillcolor=turquoise,
		label="293:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"292:AL" -> "293:BL"	 [cond="[]",
		lineno=None];
	"223:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4ef1b90>",
		fillcolor=firebrick,
		label="223:NS
aes_cr <= AES_CR_RESET[10:0];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4ef1b90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_220:AL"	 [def_var="['aes_cr']",
		label="Leaf_220:AL"];
	"223:NS" -> "Leaf_220:AL"	 [cond="[]",
		lineno=None];
	"347:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe9e4dd9390>",
		fillcolor=springgreen,
		label="347:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"347:IF" -> "348:BS"	 [cond="['enable', 'key_deriv']",
		label="(enable && !key_deriv)",
		lineno=347];
	"404:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe9e4ddaf50>",
		def_var="['col_rd_en']",
		fillcolor=deepskyblue,
		label="404:AS
col_rd_en = (PADDR == AES_DOUTR) && read_en && (state == OUTPUT);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['PADDR', 'AES_DOUTR', 'read_en', 'state', 'OUTPUT']"];
	"262:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4ac3e10>",
		fillcolor=firebrick,
		label="262:NS
wr_err <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4ac3e10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_248:AL"	 [def_var="['ccf', 'rd_err', 'wr_err']",
		label="Leaf_248:AL"];
	"262:NS" -> "Leaf_248:AL"	 [cond="[]",
		lineno=None];
	"367:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe9e4dcd310>",
		fillcolor=turquoise,
		label="367:BL
first_block_clear = ENABLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe9e4dcd290>]",
		style=filled,
		typ=Block];
	"369:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe9e4dcd450>",
		fillcolor=springgreen,
		label="369:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"367:BL" -> "369:IF"	 [cond="[]",
		lineno=None];
	"212:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe9e4eeec10>",
		def_var="['mode']",
		fillcolor=deepskyblue,
		label="212:AS
mode = aes_cr[4:3];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['aes_cr']"];
	"305:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe9e4ae4d10>",
		def_var="['key_deriv']",
		fillcolor=deepskyblue,
		label="305:AS
key_deriv = mode == KEY_DERIVATION;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['mode', 'KEY_DERIVATION']"];
	"212:AS" -> "305:AS";
	"Leaf_388:AL" -> "402:AS";
	"409:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fe9e4dd4a90>",
		clk_sens=False,
		fillcolor=gold,
		label="409:AL",
		sens="['PCLK', 'PRESETn']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['cnt', 'PRESETn']"];
	"Leaf_388:AL" -> "409:AL";
	"418:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe9e4de4790>",
		def_var="['dma_req_rd']",
		fillcolor=deepskyblue,
		label="418:AS
dma_req_rd = dma_req ^ cnt[0] & dma_out_en & enable & (state == OUTPUT);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['dma_req', 'cnt', 'dma_out_en', 'enable', 'state', 'OUTPUT']"];
	"Leaf_388:AL" -> "418:AS";
	"303:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe9e4ae4910>",
		def_var="['write_completed']",
		fillcolor=deepskyblue,
		label="303:AS
write_completed = cnt == 2'b11;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cnt']"];
	"Leaf_388:AL" -> "303:AS";
	"417:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe9e4de4350>",
		def_var="['dma_req_wr']",
		fillcolor=deepskyblue,
		label="417:AS
dma_req_wr = dma_req ^ cnt[0] & dma_in_en & enable & ((state == INPUT) || (state == IDLE));",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['dma_req', 'cnt', 'dma_in_en', 'enable', 'state', 'INPUT', 'state', 'IDLE']"];
	"Leaf_388:AL" -> "417:AS";
	"388:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fe9e4dda050>",
		clk_sens=False,
		fillcolor=gold,
		label="388:AL",
		sens="['PCLK', 'PRESETn']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['cnt', 'enable', 'START', 'state', 'PRESETn', 'cnt_en']"];
	"Leaf_388:AL" -> "388:AL";
	"304:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe9e4ae4b10>",
		def_var="['read_completed']",
		fillcolor=deepskyblue,
		label="304:AS
read_completed = cnt == 2'b11;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cnt']"];
	"Leaf_388:AL" -> "304:AS";
	"412:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4dd4c50>",
		fillcolor=firebrick,
		label="412:NS
dma_req <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4dd4c50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_409:AL"	 [def_var="['dma_req']",
		label="Leaf_409:AL"];
	"412:NS" -> "Leaf_409:AL"	 [cond="[]",
		lineno=None];
	"213:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe9e4eeee10>",
		def_var="['data_type']",
		fillcolor=deepskyblue,
		label="213:AS
data_type = aes_cr[2:1];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['aes_cr']"];
	"235:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe9e4aa5d90>",
		fillcolor=springgreen,
		label="235:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"236:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4aa5bd0>",
		fillcolor=firebrick,
		label="236:NS
aes_cr[4:3] <= DECRYPTION;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4aa5bd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"235:IF" -> "236:NS"	 [cond="['mode_in', 'DECRYP_W_DERIV', 'chmod_in', 'CTR']",
		label="((mode_in == DECRYP_W_DERIV) && (chmod_in == CTR))",
		lineno=235];
	"238:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4aa5e10>",
		fillcolor=firebrick,
		label="238:NS
aes_cr[4:3] <= mode_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4aa5e10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"235:IF" -> "238:NS"	 [cond="['mode_in', 'DECRYP_W_DERIV', 'chmod_in', 'CTR']",
		label="!(((mode_in == DECRYP_W_DERIV) && (chmod_in == CTR)))",
		lineno=235];
	"236:NS" -> "Leaf_220:AL"	 [cond="[]",
		lineno=None];
	"322:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe9e4acead0>",
		fillcolor=turquoise,
		label="322:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"323:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe9e4acec10>",
		fillcolor=springgreen,
		label="323:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"322:BL" -> "323:IF"	 [cond="[]",
		lineno=None];
	"433:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe9e4b53b10>",
		fillcolor=turquoise,
		label="433:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"434:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe9e4b53dd0>",
		fillcolor=springgreen,
		label="434:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"433:BL" -> "434:IF"	 [cond="[]",
		lineno=None];
	"351:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe9e4dd9490>",
		fillcolor=turquoise,
		label="351:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"352:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe9e4dd96d0>",
		fillcolor=springgreen,
		label="352:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"351:BL" -> "352:IF"	 [cond="[]",
		lineno=None];
	"389:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe9e4dda090>",
		fillcolor=turquoise,
		label="389:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"390:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe9e4dda250>",
		fillcolor=springgreen,
		label="390:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"389:BL" -> "390:IF"	 [cond="[]",
		lineno=None];
	"208:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe9e4eee4d0>",
		def_var="['ccf_ie']",
		fillcolor=deepskyblue,
		label="208:AS
ccf_ie = aes_cr[7];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['aes_cr']"];
	"280:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe9e4abb650>",
		def_var="['int_ccf']",
		fillcolor=deepskyblue,
		label="280:AS
int_ccf = ccf_ie & ccf_set;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ccf_ie', 'ccf_set']"];
	"208:AS" -> "280:AS";
	"317:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fe9e4ace590>",
		fillcolor=lightcyan,
		label="317:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"318:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe9e4ace850>",
		fillcolor=cadetblue,
		label="318:BS
next_state = (write_completed && cnt_en)? START : INPUT;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe9e4ace850>]",
		style=filled,
		typ=BlockingSubstitution];
	"317:CA" -> "318:BS"	 [cond="[]",
		lineno=None];
	"385:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4dcdf50>",
		fillcolor=firebrick,
		label="385:NS
first_block <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4dcdf50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_376:AL"	 [def_var="['first_block']",
		label="Leaf_376:AL"];
	"385:NS" -> "Leaf_376:AL"	 [cond="[]",
		lineno=None];
	"232:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe9e4aa5450>",
		fillcolor=springgreen,
		label="232:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"233:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe9e4ac31d0>",
		fillcolor=turquoise,
		label="233:BL
aes_cr[2:1] <= PWDATA[2:1];
aes_cr[6:5] <= PWDATA[6:5];
aes_cr[10:7] <= PWDATA[12:9];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4aa56d0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7fe9e4aa5fd0>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4ac32d0>]",
		style=filled,
		typ=Block];
	"232:IF" -> "233:BL"	 [cond="['aes_cr_wr_en', 'access_permission']",
		label="(aes_cr_wr_en && access_permission)",
		lineno=232];
	"393:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe9e4dda2d0>",
		fillcolor=turquoise,
		label="393:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"394:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe9e4dda650>",
		fillcolor=springgreen,
		label="394:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"393:BL" -> "394:IF"	 [cond="[]",
		lineno=None];
	"435:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe9e4b53f10>",
		fillcolor=cadetblue,
		label="435:BS
bus_out_mux = col_bus;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe9e4b53f10>]",
		style=filled,
		typ=BlockingSubstitution];
	"434:IF" -> "435:BS"	 [cond="['PWRITE', 'PADDR', 'AES_DOUTR', 'ccf_set', 'ccf']",
		label="(~PWRITE && (PADDR == AES_DOUTR) && (ccf_set || ccf))",
		lineno=434];
	"370:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe9e4dcd690>",
		fillcolor=cadetblue,
		label="370:BS
cnt_en = ENABLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe9e4dcd690>]",
		style=filled,
		typ=BlockingSubstitution];
	"370:BS" -> "Leaf_334:AL"	 [cond="[]",
		lineno=None];
	"205:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe9e4b1bf50>",
		def_var="['dma_out_en']",
		fillcolor=deepskyblue,
		label="205:AS
dma_out_en = aes_cr[10];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['aes_cr']"];
	"205:AS" -> "418:AS";
	"421:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe9e4de48d0>",
		def_var="['PRDATA']",
		fillcolor=deepskyblue,
		label="421:AS
PRDATA = bus_out;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['bus_out']"];
	"410:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe9e4dd4ad0>",
		fillcolor=turquoise,
		label="410:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"409:AL" -> "410:BL"	 [cond="[]",
		lineno=None];
	"222:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe9e4ef1bd0>",
		fillcolor=springgreen,
		label="222:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"222:IF" -> "223:NS"	 [cond="['PRESETn']",
		label="(!PRESETn)",
		lineno=222];
	"225:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe9e4ef1c10>",
		fillcolor=turquoise,
		label="225:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"222:IF" -> "225:BL"	 [cond="['PRESETn']",
		label="!((!PRESETn))",
		lineno=222];
	"403:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe9e4ddac10>",
		def_var="['col_wr_en']",
		fillcolor=deepskyblue,
		label="403:AS
col_wr_en = (PADDR == AES_DINR) && write_en && (state == INPUT);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['PADDR', 'AES_DINR', 'write_en', 'state', 'INPUT']"];
	"214:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe9e4ef1050>",
		def_var="['enable']",
		fillcolor=deepskyblue,
		label="214:AS
enable = aes_cr[0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['aes_cr']"];
	"214:AS" -> "308:AL";
	"214:AS" -> "334:AL";
	"214:AS" -> "292:AL";
	"424:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fe9e4de4a10>",
		clk_sens=False,
		fillcolor=gold,
		label="424:AL",
		sens="['col_bus', 'ccf', 'ccf_set', 'aes_cr_wr_en', 'rd_err', 'key_bus', 'wr_err', 'aes_cr', 'PENABLE', 'iv_bus', 'ccfc']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['col_bus', 'enable', 'ccfc', 'ccf_set', 'aes_cr_wr_en', 'rd_err', 'key_bus', 'wr_err', 'aes_cr', 'PENABLE', 'PWRITE', 'PADDR', '\
iv_bus', 'ccf', 'AES_DOUTR']"];
	"214:AS" -> "424:AL";
	"214:AS" -> "418:AS";
	"214:AS" -> "417:AS";
	"214:AS" -> "388:AL";
	"332:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe9e4dc8310>",
		def_var="['disable_core']",
		fillcolor=deepskyblue,
		label="332:AS
disable_core = ~enable;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['enable']"];
	"214:AS" -> "332:AS";
	"432:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fe9e4b53ad0>",
		fillcolor=lightcyan,
		label="432:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"432:CA" -> "433:BL"	 [cond="[]",
		lineno=None];
	"381:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe9e4dcdcd0>",
		fillcolor=springgreen,
		label="381:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"384:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe9e4dcde10>",
		fillcolor=springgreen,
		label="384:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"381:IF" -> "384:IF"	 [cond="['first_block_set']",
		label="!(first_block_set)",
		lineno=381];
	"382:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4dcdc90>",
		fillcolor=firebrick,
		label="382:NS
first_block <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4dcdc90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"381:IF" -> "382:NS"	 [cond="['first_block_set']",
		label=first_block_set,
		lineno=381];
	"300:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4ae4850>",
		fillcolor=firebrick,
		label="300:NS
state <= next_state;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4ae4850>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_292:AL"	 [def_var="['state']",
		label="Leaf_292:AL"];
	"300:NS" -> "Leaf_292:AL"	 [cond="[]",
		lineno=None];
	"344:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe9e4dd9250>",
		fillcolor=turquoise,
		label="344:BL
access_permission = ENABLE;
first_block_set = ENABLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe9e4dc8fd0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe9e4dd91d0>]",
		style=filled,
		typ=Block];
	"344:BL" -> "347:IF"	 [cond="[]",
		lineno=None];
	"207:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe9e4eee310>",
		def_var="['err_ie']",
		fillcolor=deepskyblue,
		label="207:AS
err_ie = aes_cr[8];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['aes_cr']"];
	"281:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe9e4abb990>",
		def_var="['int_err']",
		fillcolor=deepskyblue,
		label="281:AS
int_err = (wr_err_en | rd_err_en) & err_ie;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['wr_err_en', 'rd_err_en', 'err_ie']"];
	"207:AS" -> "281:AS";
	"395:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4dda610>",
		fillcolor=firebrick,
		label="395:NS
cnt <= 2'b11;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4dda610>]",
		style=filled,
		typ=NonblockingSubstitution];
	"394:IF" -> "395:NS"	 [cond="['enable', 'state', 'START']",
		label="(!enable || (state == START))",
		lineno=394];
	"397:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe9e4dda750>",
		fillcolor=springgreen,
		label="397:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"394:IF" -> "397:IF"	 [cond="['enable', 'state', 'START']",
		label="!((!enable || (state == START)))",
		lineno=394];
	"343:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fe9e4dc8e50>",
		fillcolor=lightcyan,
		label="343:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"343:CA" -> "344:BL"	 [cond="[]",
		lineno=None];
	"218:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe9e4ef1690>",
		def_var="['chmod_in']",
		fillcolor=deepskyblue,
		label="218:AS
chmod_in = PWDATA[6:5];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['PWDATA']"];
	"220:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fe9e4ef1910>",
		clk_sens=False,
		fillcolor=gold,
		label="220:AL",
		sens="['PCLK', 'PRESETn']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['DECRYPTION', 'CTR', 'PWDATA', 'aes_cr_wr_en', 'mode_in', 'enable_clear', 'PRESETn', 'AES_CR_RESET', 'DECRYP_W_DERIV', 'access_\
permission', 'chmod_in']"];
	"218:AS" -> "220:AL";
	"256:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe9e4ac3890>",
		fillcolor=turquoise,
		label="256:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"265:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe9e4ac3f90>",
		fillcolor=springgreen,
		label="265:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"256:BL" -> "265:IF"	 [cond="[]",
		lineno=None];
	"258:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe9e4ac3a50>",
		fillcolor=springgreen,
		label="258:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"256:BL" -> "258:IF"	 [cond="[]",
		lineno=None];
	"272:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe9e4abb4d0>",
		fillcolor=springgreen,
		label="272:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"256:BL" -> "272:IF"	 [cond="[]",
		lineno=None];
	"268:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe9e4abb190>",
		fillcolor=springgreen,
		label="268:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"269:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4abb390>",
		fillcolor=firebrick,
		label="269:NS
rd_err <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4abb390>]",
		style=filled,
		typ=NonblockingSubstitution];
	"268:IF" -> "269:NS"	 [cond="['errc', 'aes_cr_wr_en', 'access_permission']",
		label="(errc && aes_cr_wr_en && access_permission)",
		lineno=268];
	"378:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe9e4dcda10>",
		fillcolor=springgreen,
		label="378:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"378:IF" -> "381:IF"	 [cond="['PRESETn']",
		label="!((!PRESETn))",
		lineno=378];
	"379:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4dcd9d0>",
		fillcolor=firebrick,
		label="379:NS
first_block <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4dcd9d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"378:IF" -> "379:NS"	 [cond="['PRESETn']",
		label="(!PRESETn)",
		lineno=378];
	"440:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fe9e4b273d0>",
		fillcolor=lightcyan,
		label="440:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"441:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe9e4b27150>",
		fillcolor=springgreen,
		label="441:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"440:CA" -> "441:IF"	 [cond="[]",
		lineno=None];
	"449:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe9e4b27710>",
		def_var="['bus_out']",
		fillcolor=deepskyblue,
		label="449:AS
bus_out = (read_en)? bus_out_mux : 32'd0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['read_en', 'bus_out_mux']"];
	"449:AS" -> "421:AS";
	"355:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fe9e4dd98d0>",
		fillcolor=lightcyan,
		label="355:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"356:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe9e4dd9a10>",
		fillcolor=turquoise,
		label="356:BL
start_core = ENABLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe9e4dd9a50>]",
		style=filled,
		typ=Block];
	"355:CA" -> "356:BL"	 [cond="[]",
		lineno=None];
	"369:IF" -> "370:BS"	 [cond="['PADDR', 'AES_DOUTR', 'read_en', 'PENABLE']",
		label="((PADDR == AES_DOUTR) && read_en && PENABLE)",
		lineno=369];
	"342:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fe9e4dd9c50>",
		fillcolor=linen,
		label="342:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"335:BL" -> "342:CS"	 [cond="[]",
		lineno=None];
	"311:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fe9e4acee90>",
		fillcolor=linen,
		label="311:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"311:CS" -> "317:CA"	 [cond="['state']",
		label=state,
		lineno=311];
	"312:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fe9e4ace1d0>",
		fillcolor=lightcyan,
		label="312:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"311:CS" -> "312:CA"	 [cond="['state']",
		label=state,
		lineno=311];
	"321:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fe9e4aceb10>",
		fillcolor=lightcyan,
		label="321:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"311:CS" -> "321:CA"	 [cond="['state']",
		label=state,
		lineno=311];
	"326:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fe9e4acee50>",
		fillcolor=lightcyan,
		label="326:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"311:CS" -> "326:CA"	 [cond="['state']",
		label=state,
		lineno=311];
	"319:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fe9e4ace890>",
		fillcolor=lightcyan,
		label="319:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"311:CS" -> "319:CA"	 [cond="['state']",
		label=state,
		lineno=311];
	"211:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe9e4eeea10>",
		def_var="['chmod']",
		fillcolor=deepskyblue,
		label="211:AS
chmod = aes_cr[6:5];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['aes_cr']"];
	"320:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe9e4acea10>",
		fillcolor=cadetblue,
		label="320:BS
next_state = WAIT;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe9e4acea10>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_308:AL"	 [def_var="['next_state']",
		label="Leaf_308:AL"];
	"320:BS" -> "Leaf_308:AL"	 [cond="[]",
		lineno=None];
	"411:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe9e4dd4c10>",
		fillcolor=springgreen,
		label="411:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"411:IF" -> "412:NS"	 [cond="['PRESETn']",
		label="(!PRESETn)",
		lineno=411];
	"414:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4dd4e50>",
		fillcolor=firebrick,
		label="414:NS
dma_req <= cnt[0];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4dd4e50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"411:IF" -> "414:NS"	 [cond="['PRESETn']",
		label="!((!PRESETn))",
		lineno=411];
	"221:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe9e4ef1950>",
		fillcolor=turquoise,
		label="221:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"221:BL" -> "222:IF"	 [cond="[]",
		lineno=None];
	"364:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe9e4dcd0d0>",
		fillcolor=cadetblue,
		label="364:BS
enable_clear = ENABLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe9e4dcd0d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"364:BS" -> "Leaf_334:AL"	 [cond="[]",
		lineno=None];
	"425:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe9e4de4b90>",
		fillcolor=turquoise,
		label="425:BL
bus_out_mux = 32'd0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe9e4de4ad0>]",
		style=filled,
		typ=Block];
	"424:AL" -> "425:BL"	 [cond="[]",
		lineno=None];
	"294:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe9e4ae4450>",
		fillcolor=springgreen,
		label="294:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"293:BL" -> "294:IF"	 [cond="[]",
		lineno=None];
	"265:IF" -> "268:IF"	 [cond="['rd_err_en']",
		label="!(rd_err_en)",
		lineno=265];
	"266:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4ac3f50>",
		fillcolor=firebrick,
		label="266:NS
rd_err <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4ac3f50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"265:IF" -> "266:NS"	 [cond="['rd_err_en']",
		label=rd_err_en,
		lineno=265];
	"363:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe9e4dd9f90>",
		fillcolor=springgreen,
		label="363:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"363:IF" -> "364:BS"	 [cond="['ccf_set', 'key_deriv']",
		label="(ccf_set && key_deriv)",
		lineno=363];
	"259:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4ac3a10>",
		fillcolor=firebrick,
		label="259:NS
wr_err <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4ac3a10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"259:NS" -> "Leaf_248:AL"	 [cond="[]",
		lineno=None];
	"366:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fe9e4dcd090>",
		fillcolor=lightcyan,
		label="366:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"366:CA" -> "367:BL"	 [cond="[]",
		lineno=None];
	"275:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe9e4abb690>",
		fillcolor=springgreen,
		label="275:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"276:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4abb7d0>",
		fillcolor=firebrick,
		label="276:NS
ccf <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4abb7d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"275:IF" -> "276:NS"	 [cond="['ccfc', 'aes_cr_wr_en']",
		label="(ccfc && aes_cr_wr_en)",
		lineno=275];
	"230:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4aa5350>",
		fillcolor=firebrick,
		label="230:NS
aes_cr[0] <= PWDATA[0];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4aa5350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"230:NS" -> "Leaf_220:AL"	 [cond="[]",
		lineno=None];
	"266:NS" -> "Leaf_248:AL"	 [cond="[]",
		lineno=None];
	"309:BL" -> "311:CS"	 [cond="[]",
		lineno=None];
	"391:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4dda210>",
		fillcolor=firebrick,
		label="391:NS
cnt <= 2'b11;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4dda210>]",
		style=filled,
		typ=NonblockingSubstitution];
	"391:NS" -> "Leaf_388:AL"	 [cond="[]",
		lineno=None];
	"220:AL" -> "221:BL"	 [cond="[]",
		lineno=None];
	"428:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fe9e4de4d10>",
		fillcolor=lightcyan,
		label="428:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"428:CA" -> "429:BS"	 [cond="[]",
		lineno=None];
	"295:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4ae4410>",
		fillcolor=firebrick,
		label="295:NS
state <= IDLE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4ae4410>]",
		style=filled,
		typ=NonblockingSubstitution];
	"294:IF" -> "295:NS"	 [cond="['PRESETn']",
		label="(!PRESETn)",
		lineno=294];
	"297:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe9e4ae4690>",
		fillcolor=springgreen,
		label="297:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"294:IF" -> "297:IF"	 [cond="['PRESETn']",
		label="!((!PRESETn))",
		lineno=294];
	"251:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe9e4ac35d0>",
		fillcolor=turquoise,
		label="251:BL
{ wr_err, rd_err, ccf } <= AES_SR_RESET;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4ac3750>]",
		style=filled,
		typ=Block];
	"251:BL" -> "Leaf_248:AL"	 [cond="[]",
		lineno=None];
	"361:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe9e4dd9c90>",
		fillcolor=springgreen,
		label="361:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"362:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe9e4dd9dd0>",
		fillcolor=cadetblue,
		label="362:BS
cnt_en = ENABLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe9e4dd9dd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"361:IF" -> "362:BS"	 [cond="['ccf_set']",
		label=ccf_set,
		lineno=361];
	"405:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe9e4dd4490>",
		def_var="['wr_err_en']",
		fillcolor=deepskyblue,
		label="405:AS
wr_err_en = (PADDR == AES_DINR) && write_en && ((state != INPUT) && (state != IDLE));",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['PADDR', 'AES_DINR', 'write_en', 'state', 'INPUT', 'state', 'IDLE']"];
	"405:AS" -> "281:AS";
	"248:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fe9e4ac3450>",
		clk_sens=False,
		fillcolor=gold,
		label="248:AL",
		sens="['PCLK', 'PRESETn']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['ccf_set', 'AES_SR_RESET', 'errc', 'aes_cr_wr_en', 'ccfc', 'rd_err_en', 'PRESETn', 'access_permission', 'wr_err_en']"];
	"405:AS" -> "248:AL";
	"206:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe9e4eee150>",
		def_var="['dma_in_en']",
		fillcolor=deepskyblue,
		label="206:AS
dma_in_en = aes_cr[9];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['aes_cr']"];
	"206:AS" -> "417:AS";
	"295:NS" -> "Leaf_292:AL"	 [cond="[]",
		lineno=None];
	"430:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fe9e4b53310>",
		fillcolor=lightcyan,
		label="430:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"430:CA" -> "431:BS"	 [cond="[]",
		lineno=None];
	"395:NS" -> "Leaf_388:AL"	 [cond="[]",
		lineno=None];
	"313:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe9e4ace190>",
		fillcolor=turquoise,
		label="313:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"312:CA" -> "313:BL"	 [cond="[]",
		lineno=None];
	"376:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fe9e4dcd810>",
		clk_sens=False,
		fillcolor=gold,
		label="376:AL",
		sens="['PCLK', 'PRESETn']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['first_block_set', 'first_block_clear', 'PRESETn']"];
	"377:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe9e4dcd850>",
		fillcolor=turquoise,
		label="377:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"376:AL" -> "377:BL"	 [cond="[]",
		lineno=None];
	"384:IF" -> "385:NS"	 [cond="['first_block_clear']",
		label=first_block_clear,
		lineno=384];
	"201:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe9e4b1ba50>",
		def_var="['write_en']",
		fillcolor=deepskyblue,
		label="201:AS
write_en = PSEL & PENABLE & PWRITE;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['PSEL', 'PENABLE', 'PWRITE']"];
	"201:AS" -> "334:AL";
	"201:AS" -> "403:AS";
	"201:AS" -> "405:AS";
	"284:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe9e4ab30d0>",
		def_var="['key_en']",
		fillcolor=deepskyblue,
		label="284:AS
key_en = (4'b1000 >> PADDR[1:0]) & { 4{ ~PADDR[3] & PADDR[2] & access_permission & write_en } };",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['PADDR', 'PADDR', 'PADDR', 'access_permission', 'write_en']"];
	"201:AS" -> "284:AS";
	"289:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe9e4ab3f90>",
		def_var="['iv_en']",
		fillcolor=deepskyblue,
		label="289:AS
iv_en = iv_sel & { 4{ write_en } };",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['iv_sel', 'write_en']"];
	"201:AS" -> "289:AS";
	"216:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe9e4ef1250>",
		def_var="['aes_cr_wr_en']",
		fillcolor=deepskyblue,
		label="216:AS
aes_cr_wr_en = (PADDR == AES_CR) & write_en;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['PADDR', 'AES_CR', 'write_en']"];
	"201:AS" -> "216:AS";
	"442:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe9e4b275d0>",
		fillcolor=cadetblue,
		label="442:BS
bus_out_mux = iv_bus;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe9e4b275d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"442:BS" -> "Leaf_424:AL"	 [cond="[]",
		lineno=None];
	"303:AS" -> "308:AL";
	"321:CA" -> "322:BL"	 [cond="[]",
		lineno=None];
	"360:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe9e4dd9e50>",
		fillcolor=turquoise,
		label="360:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"360:BL" -> "363:IF"	 [cond="[]",
		lineno=None];
	"360:BL" -> "361:IF"	 [cond="[]",
		lineno=None];
	"285:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe9e4ab3510>",
		def_var="['key_sel']",
		fillcolor=deepskyblue,
		label="285:AS
key_sel = ~PADDR[1:0] & { 2{ PADDR[2] & access_permission } };",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['PADDR', 'PADDR', 'access_permission']"];
	"359:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fe9e4dd9b90>",
		fillcolor=lightcyan,
		label="359:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"359:CA" -> "360:BL"	 [cond="[]",
		lineno=None];
	"314:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe9e4ace2d0>",
		fillcolor=springgreen,
		label="314:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"313:BL" -> "314:IF"	 [cond="[]",
		lineno=None];
	"258:IF" -> "259:NS"	 [cond="['wr_err_en']",
		label=wr_err_en,
		lineno=258];
	"261:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe9e4ac3c10>",
		fillcolor=springgreen,
		label="261:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"258:IF" -> "261:IF"	 [cond="['wr_err_en']",
		label="!(wr_err_en)",
		lineno=258];
	"352:IF" -> "353:BS"	 [cond="['PADDR', 'AES_DINR', 'write_en']",
		label="((PADDR == AES_DINR) && write_en)",
		lineno=352];
	"298:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4ae46d0>",
		fillcolor=firebrick,
		label="298:NS
state <= IDLE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4ae46d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"298:NS" -> "Leaf_292:AL"	 [cond="[]",
		lineno=None];
	"435:BS" -> "Leaf_424:AL"	 [cond="[]",
		lineno=None];
	"327:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe9e4dc8190>",
		fillcolor=cadetblue,
		label="327:BS
next_state = (read_completed && cnt_en)? INPUT : OUTPUT;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe9e4dc8190>]",
		style=filled,
		typ=BlockingSubstitution];
	"327:BS" -> "Leaf_308:AL"	 [cond="[]",
		lineno=None];
	"210:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe9e4eee850>",
		def_var="['ccfc']",
		fillcolor=deepskyblue,
		label="210:AS
ccfc = PWDATA[7];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['PWDATA']"];
	"210:AS" -> "424:AL";
	"210:AS" -> "248:AL";
	"342:CS" -> "343:CA"	 [cond="['state']",
		label=state,
		lineno=342];
	"342:CS" -> "355:CA"	 [cond="['state']",
		label=state,
		lineno=342];
	"342:CS" -> "366:CA"	 [cond="['state']",
		label=state,
		lineno=342];
	"342:CS" -> "359:CA"	 [cond="['state']",
		label=state,
		lineno=342];
	"350:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fe9e4dd9510>",
		fillcolor=lightcyan,
		label="350:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"342:CS" -> "350:CA"	 [cond="['state']",
		label=state,
		lineno=342];
	"233:BL" -> "235:IF"	 [cond="[]",
		lineno=None];
	"397:IF" -> "398:NS"	 [cond="['cnt_en']",
		label=cnt_en,
		lineno=397];
	"Leaf_248:AL" -> "424:AL";
	"377:BL" -> "378:IF"	 [cond="[]",
		lineno=None];
	"318:BS" -> "Leaf_308:AL"	 [cond="[]",
		lineno=None];
	"438:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe9e4b27110>",
		fillcolor=springgreen,
		label="438:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"438:IF" -> "439:BS"	 [cond="['enable']",
		label="(!enable)",
		lineno=438];
	"249:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe9e4ac3490>",
		fillcolor=turquoise,
		label="249:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"248:AL" -> "249:BL"	 [cond="[]",
		lineno=None];
	"227:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4ef1f50>",
		fillcolor=firebrick,
		label="227:NS
aes_cr[0] <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4ef1f50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"227:NS" -> "Leaf_220:AL"	 [cond="[]",
		lineno=None];
	"427:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fe9e4b27390>",
		fillcolor=linen,
		label="427:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"427:CS" -> "432:CA"	 [cond="['PADDR']",
		label=PADDR,
		lineno=427];
	"427:CS" -> "440:CA"	 [cond="['PADDR']",
		label=PADDR,
		lineno=427];
	"427:CS" -> "428:CA"	 [cond="['PADDR']",
		label=PADDR,
		lineno=427];
	"427:CS" -> "430:CA"	 [cond="['PADDR']",
		label=PADDR,
		lineno=427];
	"437:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fe9e4b53f50>",
		fillcolor=lightcyan,
		label="437:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"427:CS" -> "437:CA"	 [cond="['PADDR']",
		label=PADDR,
		lineno=427];
	"226:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe9e4ef1f90>",
		fillcolor=springgreen,
		label="226:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"226:IF" -> "227:NS"	 [cond="['enable_clear']",
		label=enable_clear,
		lineno=226];
	"229:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe9e4aa5190>",
		fillcolor=springgreen,
		label="229:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"226:IF" -> "229:IF"	 [cond="['enable_clear']",
		label="!(enable_clear)",
		lineno=226];
	"269:NS" -> "Leaf_248:AL"	 [cond="[]",
		lineno=None];
	"Leaf_424:AL" -> "449:AS";
	"390:IF" -> "393:BL"	 [cond="['PRESETn']",
		label="!((!PRESETn))",
		lineno=390];
	"390:IF" -> "391:NS"	 [cond="['PRESETn']",
		label="(!PRESETn)",
		lineno=390];
	"305:AS" -> "308:AL";
	"305:AS" -> "334:AL";
	"388:AL" -> "389:BL"	 [cond="[]",
		lineno=None];
	"238:NS" -> "Leaf_220:AL"	 [cond="[]",
		lineno=None];
	"250:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe9e4ac3710>",
		fillcolor=springgreen,
		label="250:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"250:IF" -> "256:BL"	 [cond="['PRESETn']",
		label="!((!PRESETn))",
		lineno=250];
	"250:IF" -> "251:BL"	 [cond="['PRESETn']",
		label="(!PRESETn)",
		lineno=250];
	"425:BL" -> "427:CS"	 [cond="[]",
		lineno=None];
	"362:BS" -> "Leaf_334:AL"	 [cond="[]",
		lineno=None];
	"324:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe9e4acee10>",
		fillcolor=cadetblue,
		label="324:BS
next_state = (key_deriv)? IDLE : OUTPUT;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe9e4acee10>]",
		style=filled,
		typ=BlockingSubstitution];
	"324:BS" -> "Leaf_308:AL"	 [cond="[]",
		lineno=None];
	"410:BL" -> "411:IF"	 [cond="[]",
		lineno=None];
	"202:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe9e4b1bd90>",
		def_var="['read_en']",
		fillcolor=deepskyblue,
		label="202:AS
read_en = (PSEL & ~PWRITE)? 1'b1 : 1'b0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['PSEL', 'PWRITE']"];
	"202:AS" -> "334:AL";
	"202:AS" -> "404:AS";
	"202:AS" -> "449:AS";
	"406:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe9e4dd48d0>",
		def_var="['rd_err_en']",
		fillcolor=deepskyblue,
		label="406:AS
rd_err_en = (PADDR == AES_DOUTR) && read_en && ((state != OUTPUT) && (state != IDLE));",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['PADDR', 'AES_DOUTR', 'read_en', 'state', 'OUTPUT', 'state', 'IDLE']"];
	"202:AS" -> "406:AS";
	"304:AS" -> "308:AL";
	"326:CA" -> "327:BS"	 [cond="[]",
		lineno=None];
	"297:IF" -> "300:NS"	 [cond="['enable']",
		label="!((!enable))",
		lineno=297];
	"297:IF" -> "298:NS"	 [cond="['enable']",
		label="(!enable)",
		lineno=297];
	"414:NS" -> "Leaf_409:AL"	 [cond="[]",
		lineno=None];
	"Leaf_334:AL" -> "308:AL";
	"Leaf_334:AL" -> "220:AL";
	"Leaf_334:AL" -> "376:AL";
	"Leaf_334:AL" -> "285:AS";
	"Leaf_334:AL" -> "284:AS";
	"Leaf_334:AL" -> "248:AL";
	"Leaf_334:AL" -> "388:AL";
	"288:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe9e4ab3b90>",
		def_var="['iv_sel']",
		fillcolor=deepskyblue,
		label="288:AS
iv_sel = (4'b1000 >> PADDR[1:0]) & { 4{ PADDR[3] & ~PADDR[2] & access_permission } };",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['PADDR', 'PADDR', 'PADDR', 'access_permission']"];
	"Leaf_334:AL" -> "288:AS";
	"209:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe9e4eee690>",
		def_var="['errc']",
		fillcolor=deepskyblue,
		label="209:AS
errc = PWDATA[8];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['PWDATA']"];
	"209:AS" -> "248:AL";
	"382:NS" -> "Leaf_376:AL"	 [cond="[]",
		lineno=None];
	"249:BL" -> "250:IF"	 [cond="[]",
		lineno=None];
	"272:IF" -> "275:IF"	 [cond="['ccf_set']",
		label="!(ccf_set)",
		lineno=272];
	"273:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4abb490>",
		fillcolor=firebrick,
		label="273:NS
ccf <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe9e4abb490>]",
		style=filled,
		typ=NonblockingSubstitution];
	"272:IF" -> "273:NS"	 [cond="['ccf_set']",
		label=ccf_set,
		lineno=272];
	"315:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe9e4ace4d0>",
		fillcolor=cadetblue,
		label="315:BS
next_state = (key_deriv)? START : INPUT;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe9e4ace4d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"314:IF" -> "315:BS"	 [cond="['enable']",
		label=enable,
		lineno=314];
	"437:CA" -> "438:IF"	 [cond="[]",
		lineno=None];
	"Leaf_308:AL" -> "292:AL";
	"379:NS" -> "Leaf_376:AL"	 [cond="[]",
		lineno=None];
	"Leaf_409:AL" -> "418:AS";
	"Leaf_409:AL" -> "417:AS";
	"319:CA" -> "320:BS"	 [cond="[]",
		lineno=None];
	"Leaf_220:AL" -> "212:AS";
	"Leaf_220:AL" -> "213:AS";
	"Leaf_220:AL" -> "208:AS";
	"Leaf_220:AL" -> "205:AS";
	"Leaf_220:AL" -> "214:AS";
	"Leaf_220:AL" -> "207:AS";
	"Leaf_220:AL" -> "211:AS";
	"Leaf_220:AL" -> "424:AL";
	"Leaf_220:AL" -> "206:AS";
	"217:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe9e4ef1490>",
		def_var="['mode_in']",
		fillcolor=deepskyblue,
		label="217:AS
mode_in = PWDATA[4:3];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['PWDATA']"];
	"217:AS" -> "220:AL";
	"229:IF" -> "230:NS"	 [cond="['aes_cr_wr_en']",
		label=aes_cr_wr_en,
		lineno=229];
	"350:CA" -> "351:BL"	 [cond="[]",
		lineno=None];
	"276:NS" -> "Leaf_248:AL"	 [cond="[]",
		lineno=None];
	"225:BL" -> "232:IF"	 [cond="[]",
		lineno=None];
	"225:BL" -> "226:IF"	 [cond="[]",
		lineno=None];
	"356:BL" -> "Leaf_334:AL"	 [cond="[]",
		lineno=None];
	"406:AS" -> "281:AS";
	"406:AS" -> "248:AL";
	"323:IF" -> "324:BS"	 [cond="['ccf_set']",
		label=ccf_set,
		lineno=323];
	"216:AS" -> "424:AL";
	"216:AS" -> "220:AL";
	"216:AS" -> "248:AL";
	"273:NS" -> "Leaf_248:AL"	 [cond="[]",
		lineno=None];
	"288:AS" -> "289:AS";
	"Leaf_292:AL" -> "308:AL";
	"Leaf_292:AL" -> "334:AL";
	"Leaf_292:AL" -> "404:AS";
	"Leaf_292:AL" -> "403:AS";
	"Leaf_292:AL" -> "418:AS";
	"Leaf_292:AL" -> "405:AS";
	"Leaf_292:AL" -> "417:AS";
	"Leaf_292:AL" -> "388:AL";
	"Leaf_292:AL" -> "406:AS";
	"261:IF" -> "262:NS"	 [cond="['errc', 'aes_cr_wr_en', 'access_permission']",
		label="(errc && aes_cr_wr_en && access_permission)",
		lineno=261];
	"315:BS" -> "Leaf_308:AL"	 [cond="[]",
		lineno=None];
	"441:IF" -> "442:BS"	 [cond="['enable']",
		label="(!enable)",
		lineno=441];
}
