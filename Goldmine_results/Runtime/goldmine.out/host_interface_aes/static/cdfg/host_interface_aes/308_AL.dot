strict digraph "" {
	node [label="\N"];
	"308:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fea06005b10>",
		clk_sens=False,
		fillcolor=gold,
		label="308:AL",
		sens="['key_deriv', 'write_completed', 'state', 'START', 'IDLE', 'read_completed', 'OUTPUT', 'INPUT', 'cnt_en', 'WAIT']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['enable', 'ccf_set', 'key_deriv', 'write_completed', 'IDLE', 'START', 'state', 'read_completed', 'OUTPUT', 'INPUT', 'cnt_en', '\
WAIT']"];
	"309:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fea06005bd0>",
		fillcolor=turquoise,
		label="309:BL
next_state = state;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fea06005c10>]",
		style=filled,
		typ=Block];
	"308:AL" -> "309:BL"	 [cond="[]",
		lineno=None];
	"327:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fea06006a50>",
		fillcolor=cadetblue,
		label="327:BS
next_state = (read_completed && cnt_en)? INPUT : OUTPUT;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fea06006a50>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_308:AL"	 [def_var="['next_state']",
		label="Leaf_308:AL"];
	"327:BS" -> "Leaf_308:AL"	 [cond="[]",
		lineno=None];
	"323:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fea060067d0>",
		fillcolor=springgreen,
		label="323:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"324:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fea06006810>",
		fillcolor=cadetblue,
		label="324:BS
next_state = (key_deriv)? IDLE : OUTPUT;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fea06006810>]",
		style=filled,
		typ=BlockingSubstitution];
	"323:IF" -> "324:BS"	 [cond="['ccf_set']",
		label=ccf_set,
		lineno=323];
	"311:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fea06005d90>",
		fillcolor=linen,
		label="311:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"309:BL" -> "311:CS"	 [cond="[]",
		lineno=None];
	"312:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fea06005e50>",
		fillcolor=lightcyan,
		label="312:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"313:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fea06005ed0>",
		fillcolor=turquoise,
		label="313:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"312:CA" -> "313:BL"	 [cond="[]",
		lineno=None];
	"322:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fea06006790>",
		fillcolor=turquoise,
		label="322:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"322:BL" -> "323:IF"	 [cond="[]",
		lineno=None];
	"326:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fea060069d0>",
		fillcolor=lightcyan,
		label="326:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"326:CA" -> "327:BS"	 [cond="[]",
		lineno=None];
	"321:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fea06006710>",
		fillcolor=lightcyan,
		label="321:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"321:CA" -> "322:BL"	 [cond="[]",
		lineno=None];
	"318:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fea060062d0>",
		fillcolor=cadetblue,
		label="318:BS
next_state = (write_completed && cnt_en)? START : INPUT;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fea060062d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"318:BS" -> "Leaf_308:AL"	 [cond="[]",
		lineno=None];
	"324:BS" -> "Leaf_308:AL"	 [cond="[]",
		lineno=None];
	"314:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fea06005f10>",
		fillcolor=springgreen,
		label="314:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"313:BL" -> "314:IF"	 [cond="[]",
		lineno=None];
	"317:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fea06006250>",
		fillcolor=lightcyan,
		label="317:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"317:CA" -> "318:BS"	 [cond="[]",
		lineno=None];
	"315:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fea06005fd0>",
		fillcolor=cadetblue,
		label="315:BS
next_state = (key_deriv)? START : INPUT;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fea06005fd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"314:IF" -> "315:BS"	 [cond="['enable']",
		label=enable,
		lineno=314];
	"319:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fea06006550>",
		fillcolor=lightcyan,
		label="319:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"320:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fea060065d0>",
		fillcolor=cadetblue,
		label="320:BS
next_state = WAIT;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fea060065d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"319:CA" -> "320:BS"	 [cond="[]",
		lineno=None];
	"315:BS" -> "Leaf_308:AL"	 [cond="[]",
		lineno=None];
	"320:BS" -> "Leaf_308:AL"	 [cond="[]",
		lineno=None];
	"311:CS" -> "312:CA"	 [cond="['state']",
		label=state,
		lineno=311];
	"311:CS" -> "326:CA"	 [cond="['state']",
		label=state,
		lineno=311];
	"311:CS" -> "321:CA"	 [cond="['state']",
		label=state,
		lineno=311];
	"311:CS" -> "317:CA"	 [cond="['state']",
		label=state,
		lineno=311];
	"311:CS" -> "319:CA"	 [cond="['state']",
		label=state,
		lineno=311];
}
