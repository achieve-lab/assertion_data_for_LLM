strict digraph "compose( ,  )" {
	node [label="\N"];
	"76:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f531d7e1c50>",
		fillcolor=firebrick,
		label="76:NS
ResetterCounter <= ResetterCounter + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f531d7e1c50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_71:AL"	 [def_var="['ResetterCounter']",
		label="Leaf_71:AL"];
	"76:NS" -> "Leaf_71:AL"	 [cond="[]",
		lineno=None];
	"inst_M_Filter.Leaf_17:AL"	 [def_var="['FilterCounter']",
		label="inst_M_Filter.Leaf_17:AL"];
	"inst_M_Filter.31:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f531da8c390>",
		clk_sens=False,
		fillcolor=gold,
		label="inst_M_Filter.31:AL",
		sens="['MainClock']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['FilterCounter']"];
	"inst_M_Filter.Leaf_17:AL" -> "inst_M_Filter.31:AL";
	"inst_M_Filter.17:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f531dc190d0>",
		clk_sens=False,
		fillcolor=gold,
		label="inst_M_Filter.17:AL",
		sens="['MainClock']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Lag', 'FilterMaxValue', 'FilterCounter', 'FilterMinValue', 'Lead']"];
	"inst_M_Filter.Leaf_17:AL" -> "inst_M_Filter.17:AL";
	"96:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f531dbbc8d0>",
		fillcolor=lightcyan,
		label="96:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"96:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f531dbbc9d0>",
		fillcolor=cadetblue,
		label="96:BS
ResetterValue = 4;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f531dbbc9d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"96:CA" -> "96:BS"	 [cond="[]",
		lineno=None];
	"inst_M_Filter.32:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f531da8c690>",
		fillcolor=turquoise,
		label="inst_M_Filter.32:BL
Positive <= FilterCounter == FilterMaxValue;
Negative <= FilterCounter == FilterMinValue;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f531da8c710>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f531da8ced0>]",
		style=filled,
		typ=Block];
	"inst_M_Filter.Leaf_31:AL"	 [def_var="['Positive', 'Negative']",
		label="inst_M_Filter.Leaf_31:AL"];
	"inst_M_Filter.32:BL" -> "inst_M_Filter.Leaf_31:AL"	 [cond="[]",
		lineno=None];
	"inst_M_Filter.23:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f531dc19490>",
		fillcolor=firebrick,
		label="inst_M_Filter.23:NS
FilterCounter <= FilterCounter + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f531dc19490>]",
		style=filled,
		typ=NonblockingSubstitution];
	"inst_M_Filter.23:NS" -> "inst_M_Filter.Leaf_17:AL"	 [cond="[]",
		lineno=None];
	"79:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f531d7e1d10>",
		fillcolor=turquoise,
		label="79:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"80:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f531dbba150>",
		fillcolor=springgreen,
		label="80:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"79:BL" -> "80:IF"	 [cond="[]",
		lineno=None];
	"inst_M_Filter.18:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f531dbeba50>",
		fillcolor=turquoise,
		label="inst_M_Filter.18:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"inst_M_Filter.19:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f531df22c50>",
		fillcolor=springgreen,
		label="inst_M_Filter.19:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"inst_M_Filter.18:BL" -> "inst_M_Filter.19:IF"	 [cond="[]",
		lineno=None];
	"99:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f531dbbe090>",
		fillcolor=cadetblue,
		label="99:BS
ResetterValue = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f531dbbe090>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_89:AL"	 [def_var="['ResetterValue']",
		label="Leaf_89:AL"];
	"99:BS" -> "Leaf_89:AL"	 [cond="[]",
		lineno=None];
	"inst_M_Filter.24:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f531da8c810>",
		fillcolor=springgreen,
		label="inst_M_Filter.24:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"inst_M_Filter.24:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f531da8c9d0>",
		fillcolor=firebrick,
		label="inst_M_Filter.24:NS
FilterCounter <= FilterCounter - 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f531da8c9d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"inst_M_Filter.24:IF" -> "inst_M_Filter.24:NS"	 [cond="['Lag']",
		label=Lag,
		lineno=24];
	"95:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f531dbbc790>",
		fillcolor=cadetblue,
		label="95:BS
ResetterValue = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f531dbbc790>]",
		style=filled,
		typ=BlockingSubstitution];
	"95:BS" -> "Leaf_89:AL"	 [cond="[]",
		lineno=None];
	"94:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f531dbbc550>",
		fillcolor=cadetblue,
		label="94:BS
ResetterValue = 256 - 4;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f531dbbc550>]",
		style=filled,
		typ=BlockingSubstitution];
	"94:BS" -> "Leaf_89:AL"	 [cond="[]",
		lineno=None];
	"92:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f531dbbad10>",
		fillcolor=lightcyan,
		label="92:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"92:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f531dbbae90>",
		fillcolor=cadetblue,
		label="92:BS
ResetterValue = 256 - 7;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f531dbbae90>]",
		style=filled,
		typ=BlockingSubstitution];
	"92:CA" -> "92:BS"	 [cond="[]",
		lineno=None];
	"inst_M_Filter.20:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f531f966c50>",
		fillcolor=firebrick,
		label="inst_M_Filter.20:NS
FilterCounter <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f531f966c50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"inst_M_Filter.20:NS" -> "inst_M_Filter.Leaf_17:AL"	 [cond="[]",
		lineno=None];
	"90:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f531dbbab50>",
		fillcolor=turquoise,
		label="90:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"91:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f531dbbced0>",
		fillcolor=linen,
		label="91:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"90:BL" -> "91:CS"	 [cond="[]",
		lineno=None];
	"112:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f531dbbed90>",
		fillcolor=firebrick,
		label="112:NS
N_FilterCounter <= N_FilterCounter - 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f531dbbed90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_105:AL"	 [def_var="['N_FilterCounter']",
		label="Leaf_105:AL"];
	"112:NS" -> "Leaf_105:AL"	 [cond="[]",
		lineno=None];
	"74:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f531d7e1590>",
		fillcolor=turquoise,
		label="74:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"75:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f531d7e1a50>",
		fillcolor=springgreen,
		label="75:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"74:BL" -> "75:IF"	 [cond="[]",
		lineno=None];
	"75:IF" -> "76:NS"	 [cond="['ResetterCounter', 'ResetterCounterMaxValue', 'ResetterCounter', 'ResetterCounterMinValue']",
		label="((ResetterCounter < ResetterCounterMaxValue) || (ResetterCounter >= ResetterCounterMinValue))",
		lineno=75];
	"89:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f531dbbaad0>",
		clk_sens=False,
		fillcolor=gold,
		label="89:AL",
		sens="[]",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['ResetterCounter']"];
	"89:AL" -> "90:BL"	 [cond="[]",
		lineno=None];
	"Leaf_71:AL" -> "89:AL";
	"71:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f531d7e15d0>",
		clk_sens=False,
		fillcolor=gold,
		label="71:AL",
		sens="['MainClock']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['ResetterCounterMaxValue', 'ResetterCounter', 'ResetterCounterMinValue', 'Down', 'Up']"];
	"Leaf_71:AL" -> "71:AL";
	"84:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f531dbba710>",
		fillcolor=firebrick,
		label="84:NS
ResetterCounter <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f531dbba710>]",
		style=filled,
		typ=NonblockingSubstitution];
	"84:NS" -> "Leaf_71:AL"	 [cond="[]",
		lineno=None];
	"111:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f531dbbe8d0>",
		fillcolor=springgreen,
		label="111:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"111:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f531dbbea90>",
		fillcolor=firebrick,
		label="111:NS
N_FilterCounter <= N_FilterCounter + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f531dbbea90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"111:IF" -> "111:NS"	 [cond="['Lead']",
		label=Lead,
		lineno=111];
	"81:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f531dbba350>",
		fillcolor=firebrick,
		label="81:NS
ResetterCounter <= ResetterCounter - 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f531dbba350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"80:IF" -> "81:NS"	 [cond="['ResetterCounter', 'ResetterCounterMaxValue', 'ResetterCounter', 'ResetterCounterMinValue']",
		label="((ResetterCounter <= ResetterCounterMaxValue) || (ResetterCounter > ResetterCounterMinValue))",
		lineno=80];
	"97:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f531dbbcb10>",
		fillcolor=lightcyan,
		label="97:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"97:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f531dbbcc10>",
		fillcolor=cadetblue,
		label="97:BS
ResetterValue = 6;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f531dbbcc10>]",
		style=filled,
		typ=BlockingSubstitution];
	"97:CA" -> "97:BS"	 [cond="[]",
		lineno=None];
	"94:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f531dbbc3d0>",
		fillcolor=lightcyan,
		label="94:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"94:CA" -> "94:BS"	 [cond="[]",
		lineno=None];
	"105:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f531dbbe210>",
		clk_sens=False,
		fillcolor=gold,
		label="105:AL",
		sens="['MainClock']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Lead', 'N_FilterMaxValue', 'Lag', 'ResetterValue', 'N_FilterMinValue', 'N_FilterCounter']"];
	"106:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f531dbbe290>",
		fillcolor=turquoise,
		label="106:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"105:AL" -> "106:BL"	 [cond="[]",
		lineno=None];
	"inst_M_Filter.23:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f531dc09290>",
		fillcolor=springgreen,
		label="inst_M_Filter.23:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"inst_M_Filter.23:IF" -> "inst_M_Filter.23:NS"	 [cond="['Lead']",
		label=Lead,
		lineno=23];
	"inst_M_Filter.31:AL" -> "inst_M_Filter.32:BL"	 [cond="[]",
		lineno=None];
	"72:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f531d7e16d0>",
		fillcolor=turquoise,
		label="72:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"73:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f531d7e1cd0>",
		fillcolor=springgreen,
		label="73:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"72:BL" -> "73:IF"	 [cond="[]",
		lineno=None];
	"83:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f531dbba5d0>",
		fillcolor=springgreen,
		label="83:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"72:BL" -> "83:IF"	 [cond="[]",
		lineno=None];
	"inst_M_Filter.24:NS" -> "inst_M_Filter.Leaf_17:AL"	 [cond="[]",
		lineno=None];
	"93:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f531dbbc0d0>",
		fillcolor=lightcyan,
		label="93:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"93:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f531dbbc250>",
		fillcolor=cadetblue,
		label="93:BS
ResetterValue = 256 - 6;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f531dbbc250>]",
		style=filled,
		typ=BlockingSubstitution];
	"93:CA" -> "93:BS"	 [cond="[]",
		lineno=None];
	"Leaf_105:AL" -> "105:AL";
	"119:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f531dbbef50>",
		clk_sens=False,
		fillcolor=gold,
		label="119:AL",
		sens="['MainClock']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['N_FilterCounter']"];
	"Leaf_105:AL" -> "119:AL";
	"81:NS" -> "Leaf_71:AL"	 [cond="[]",
		lineno=None];
	"91:CS" -> "96:CA"	 [cond="['ResetterCounter']",
		label=ResetterCounter,
		lineno=91];
	"91:CS" -> "92:CA"	 [cond="['ResetterCounter']",
		label=ResetterCounter,
		lineno=91];
	"91:CS" -> "97:CA"	 [cond="['ResetterCounter']",
		label=ResetterCounter,
		lineno=91];
	"91:CS" -> "94:CA"	 [cond="['ResetterCounter']",
		label=ResetterCounter,
		lineno=91];
	"91:CS" -> "93:CA"	 [cond="['ResetterCounter']",
		label=ResetterCounter,
		lineno=91];
	"98:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f531dbbcd50>",
		fillcolor=lightcyan,
		label="98:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"91:CS" -> "98:CA"	 [cond="['ResetterCounter']",
		label=ResetterCounter,
		lineno=91];
	"95:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f531dbbc690>",
		fillcolor=lightcyan,
		label="95:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"91:CS" -> "95:CA"	 [cond="['ResetterCounter']",
		label=ResetterCounter,
		lineno=91];
	"99:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f531dbbcf50>",
		fillcolor=lightcyan,
		label="99:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"91:CS" -> "99:CA"	 [cond="['ResetterCounter']",
		label=ResetterCounter,
		lineno=91];
	"111:NS" -> "Leaf_105:AL"	 [cond="[]",
		lineno=None];
	"97:BS" -> "Leaf_89:AL"	 [cond="[]",
		lineno=None];
	"112:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f531dbbebd0>",
		fillcolor=springgreen,
		label="112:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"112:IF" -> "112:NS"	 [cond="['Lag']",
		label=Lag,
		lineno=112];
	"120:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f531d76e1d0>",
		fillcolor=turquoise,
		label="120:BL
Positive <= N_FilterCounter == N_FilterMaxValue;
Negative <= N_FilterCounter == N_FilterMinValue;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f531d76e150>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f531d76e390>]",
		style=filled,
		typ=Block];
	"119:AL" -> "120:BL"	 [cond="[]",
		lineno=None];
	"73:IF" -> "74:BL"	 [cond="['Up']",
		label=Up,
		lineno=73];
	"78:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f531d7e1d50>",
		fillcolor=springgreen,
		label="78:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"73:IF" -> "78:IF"	 [cond="['Up']",
		label="!(Up)",
		lineno=73];
	"inst_M_Filter.17:AL" -> "inst_M_Filter.18:BL"	 [cond="[]",
		lineno=None];
	"inst_M_Filter.Leaf_31:AL" -> "71:AL";
	"108:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f531dbbe6d0>",
		fillcolor=firebrick,
		label="108:NS
N_FilterCounter <= ResetterValue;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f531dbbe6d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"108:NS" -> "Leaf_105:AL"	 [cond="[]",
		lineno=None];
	"Leaf_119:AL"	 [def_var="['Positive', 'Negative']",
		label="Leaf_119:AL"];
	"120:BL" -> "Leaf_119:AL"	 [cond="[]",
		lineno=None];
	"107:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f531dbbe710>",
		fillcolor=springgreen,
		label="107:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"106:BL" -> "107:IF"	 [cond="[]",
		lineno=None];
	"71:AL" -> "72:BL"	 [cond="[]",
		lineno=None];
	"110:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f531dbbeb10>",
		fillcolor=turquoise,
		label="110:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"110:BL" -> "111:IF"	 [cond="[]",
		lineno=None];
	"110:BL" -> "112:IF"	 [cond="[]",
		lineno=None];
	"98:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f531dbbce50>",
		fillcolor=cadetblue,
		label="98:BS
ResetterValue = 7;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f531dbbce50>]",
		style=filled,
		typ=BlockingSubstitution];
	"98:BS" -> "Leaf_89:AL"	 [cond="[]",
		lineno=None];
	"inst_M_Filter.22:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f5320016890>",
		fillcolor=turquoise,
		label="inst_M_Filter.22:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"inst_M_Filter.22:BL" -> "inst_M_Filter.24:IF"	 [cond="[]",
		lineno=None];
	"inst_M_Filter.22:BL" -> "inst_M_Filter.23:IF"	 [cond="[]",
		lineno=None];
	"Leaf_89:AL" -> "105:AL";
	"inst_M_Filter.19:IF" -> "inst_M_Filter.20:NS"	 [cond="['FilterCounter', 'FilterMaxValue', 'FilterCounter', 'FilterMinValue']",
		label="((FilterCounter == FilterMaxValue) || (FilterCounter == FilterMinValue))",
		lineno=19];
	"inst_M_Filter.19:IF" -> "inst_M_Filter.22:BL"	 [cond="['FilterCounter', 'FilterMaxValue', 'FilterCounter', 'FilterMinValue']",
		label="!(((FilterCounter == FilterMaxValue) || (FilterCounter == FilterMinValue)))",
		lineno=19];
	"96:BS" -> "Leaf_89:AL"	 [cond="[]",
		lineno=None];
	"98:CA" -> "98:BS"	 [cond="[]",
		lineno=None];
	"83:IF" -> "84:NS"	 [cond="['ResetterCounter', 'ResetterCounterMaxValue', 'ResetterCounter', 'ResetterCounterMinValue']",
		label="((ResetterCounter > ResetterCounterMaxValue) && (ResetterCounter < ResetterCounterMinValue))",
		lineno=83];
	"92:BS" -> "Leaf_89:AL"	 [cond="[]",
		lineno=None];
	"95:CA" -> "95:BS"	 [cond="[]",
		lineno=None];
	"99:CA" -> "99:BS"	 [cond="[]",
		lineno=None];
	"78:IF" -> "79:BL"	 [cond="['Down']",
		label=Down,
		lineno=78];
	"107:IF" -> "108:NS"	 [cond="['N_FilterCounter', 'N_FilterMaxValue', 'N_FilterCounter', 'N_FilterMinValue']",
		label="((N_FilterCounter == N_FilterMaxValue) || (N_FilterCounter == N_FilterMinValue))",
		lineno=107];
	"107:IF" -> "110:BL"	 [cond="['N_FilterCounter', 'N_FilterMaxValue', 'N_FilterCounter', 'N_FilterMinValue']",
		label="!(((N_FilterCounter == N_FilterMaxValue) || (N_FilterCounter == N_FilterMinValue)))",
		lineno=107];
	"93:BS" -> "Leaf_89:AL"	 [cond="[]",
		lineno=None];
}
