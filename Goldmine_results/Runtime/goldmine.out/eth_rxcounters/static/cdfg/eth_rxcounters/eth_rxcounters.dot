strict digraph "compose( ,  )" {
	node [label="\N"];
	"234:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f9a1b8518d0>",
		fillcolor=turquoise,
		label="234:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"235:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f9a1b851c10>",
		fillcolor=springgreen,
		label="235:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"234:BL" -> "235:IF"	 [cond="[]",
		lineno=None];
	"196:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f9a1b474850>",
		fillcolor=springgreen,
		label="196:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"197:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9a1b474810>",
		fillcolor=firebrick,
		label="197:NS
ByteCnt[15:0] <= 16'd0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9a1b474810>]",
		style=filled,
		typ=NonblockingSubstitution];
	"196:IF" -> "197:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=196];
	"199:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f9a1b4748d0>",
		fillcolor=turquoise,
		label="199:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"196:IF" -> "199:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=196];
	"253:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f9a1b41e810>",
		fillcolor=turquoise,
		label="253:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"254:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f9a1b41ec50>",
		fillcolor=springgreen,
		label="254:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"253:BL" -> "254:IF"	 [cond="[]",
		lineno=None];
	"Leaf_194:AL"	 [def_var="['ByteCnt']",
		label="Leaf_194:AL"];
	"197:NS" -> "Leaf_194:AL"	 [cond="[]",
		lineno=None];
	"188:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f9a1b474490>",
		def_var="['IncrementByteCounter']",
		fillcolor=deepskyblue,
		label="188:AS
IncrementByteCounter = ~ResetByteCounter & MRxDV & (StatePreamble | StateSFD | StateIdle & ~Transmitting | StateData[1] & ~\
ByteCntMax & ~(DlyCrcEn & |DlyCrcCnt));",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ResetByteCounter', 'MRxDV', 'StatePreamble', 'StateSFD', 'StateIdle', 'Transmitting', 'StateData', 'ByteCntMax', 'DlyCrcEn', '\
DlyCrcCnt']"];
	"194:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f9a1b4745d0>",
		clk_sens=True,
		fillcolor=gold,
		label="194:AL",
		sens="['MRxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'ResetByteCounter', 'ByteCnt', 'IncrementByteCounter']"];
	"188:AS" -> "194:AL";
	"227:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f9a1b851290>",
		def_var="['IncrementIFGCounter']",
		fillcolor=deepskyblue,
		label="227:AS
IncrementIFGCounter = ~ResetIFGCounter & (StateDrop | StateIdle | StatePreamble | StateSFD) & ~IFGCounterEq24;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ResetIFGCounter', 'StateDrop', 'StateIdle', 'StatePreamble', 'StateSFD', 'IFGCounterEq24']"];
	"229:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f9a1b8515d0>",
		clk_sens=True,
		fillcolor=gold,
		label="229:AL",
		sens="['MRxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'ResetIFGCounter', 'IncrementIFGCounter', 'IFGCounter']"];
	"227:AS" -> "229:AL";
	"261:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9a1b420610>",
		fillcolor=firebrick,
		label="261:NS
DlyCrcCnt[3:0] <= DlyCrcCnt[3:0] + 4'd1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9a1b420610>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_248:AL"	 [def_var="['DlyCrcCnt']",
		label="Leaf_248:AL"];
	"261:NS" -> "Leaf_248:AL"	 [cond="[]",
		lineno=None];
	"212:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f9a1b84a6d0>",
		def_var="['ByteCntEq1']",
		fillcolor=deepskyblue,
		label="212:AS
ByteCntEq1 = ByteCnt == 16'd1;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ByteCnt']"];
	"195:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f9a1b474610>",
		fillcolor=turquoise,
		label="195:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"195:BL" -> "196:IF"	 [cond="[]",
		lineno=None];
	"204:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9a1b84a0d0>",
		fillcolor=firebrick,
		label="204:NS
ByteCnt[15:0] <= ByteCnt[15:0] + 16'd1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9a1b84a0d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"204:NS" -> "Leaf_194:AL"	 [cond="[]",
		lineno=None];
	"231:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f9a1b851850>",
		fillcolor=springgreen,
		label="231:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"231:IF" -> "234:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=231];
	"232:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9a1b851810>",
		fillcolor=firebrick,
		label="232:NS
IFGCounter[4:0] <= 5'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9a1b851810>]",
		style=filled,
		typ=NonblockingSubstitution];
	"231:IF" -> "232:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=231];
	"213:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f9a1b84a890>",
		def_var="['ByteCntEq2']",
		fillcolor=deepskyblue,
		label="213:AS
ByteCntEq2 = ByteCnt == 16'd2;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ByteCnt']"];
	"236:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9a1b851bd0>",
		fillcolor=firebrick,
		label="236:NS
IFGCounter[4:0] <= 5'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9a1b851bd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"235:IF" -> "236:NS"	 [cond="['ResetIFGCounter']",
		label=ResetIFGCounter,
		lineno=235];
	"238:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f9a1b851ed0>",
		fillcolor=springgreen,
		label="238:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"235:IF" -> "238:IF"	 [cond="['ResetIFGCounter']",
		label="!(ResetIFGCounter)",
		lineno=235];
	"Leaf_229:AL"	 [def_var="['IFGCounter']",
		label="Leaf_229:AL"];
	"236:NS" -> "Leaf_229:AL"	 [cond="[]",
		lineno=None];
	"200:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f9a1b474c10>",
		fillcolor=springgreen,
		label="200:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"201:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9a1b474bd0>",
		fillcolor=firebrick,
		label="201:NS
ByteCnt[15:0] <= 16'd0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9a1b474bd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"200:IF" -> "201:NS"	 [cond="['ResetByteCounter']",
		label=ResetByteCounter,
		lineno=200];
	"203:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f9a1b474ed0>",
		fillcolor=springgreen,
		label="203:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"200:IF" -> "203:IF"	 [cond="['ResetByteCounter']",
		label="!(ResetByteCounter)",
		lineno=200];
	"201:NS" -> "Leaf_194:AL"	 [cond="[]",
		lineno=None];
	"208:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f9a1b84a050>",
		def_var="['ByteCntDelayed']",
		fillcolor=deepskyblue,
		label="208:AS
ByteCntDelayed = ByteCnt + 16'd4;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ByteCnt']"];
	"209:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f9a1b84a2d0>",
		def_var="['ByteCntOut']",
		fillcolor=deepskyblue,
		label="209:AS
ByteCntOut = (DlyCrcEn)? ByteCntDelayed : ByteCnt;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['DlyCrcEn', 'ByteCntDelayed', 'ByteCnt']"];
	"208:AS" -> "209:AS";
	"232:NS" -> "Leaf_229:AL"	 [cond="[]",
		lineno=None];
	"215:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f9a1b84ac10>",
		def_var="['ByteCntEq4']",
		fillcolor=deepskyblue,
		label="215:AS
ByteCntEq4 = ByteCnt == 16'd4;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ByteCnt']"];
	"239:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9a1b41e0d0>",
		fillcolor=firebrick,
		label="239:NS
IFGCounter[4:0] <= IFGCounter[4:0] + 5'd1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9a1b41e0d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"238:IF" -> "239:NS"	 [cond="['IncrementIFGCounter']",
		label=IncrementIFGCounter,
		lineno=238];
	"Leaf_248:AL" -> "188:AS";
	"248:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f9a1b41e510>",
		clk_sens=True,
		fillcolor=gold,
		label="248:AL",
		sens="['MRxClk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'DlyCrcEn', 'StateSFD', 'DlyCrcCnt']"];
	"Leaf_248:AL" -> "248:AL";
	"258:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9a1b41efd0>",
		fillcolor=firebrick,
		label="258:NS
DlyCrcCnt[3:0] <= 4'h1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9a1b41efd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"258:NS" -> "Leaf_248:AL"	 [cond="[]",
		lineno=None];
	"214:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f9a1b84aa50>",
		def_var="['ByteCntEq3']",
		fillcolor=deepskyblue,
		label="214:AS
ByteCntEq3 = ByteCnt == 16'd3;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ByteCnt']"];
	"222:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f9a1b8559d0>",
		def_var="['ByteCntMaxFrame']",
		fillcolor=deepskyblue,
		label="222:AS
ByteCntMaxFrame = (ByteCnt == MaxFL[15:0]) & ~HugEn;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ByteCnt', 'MaxFL', 'HugEn']"];
	"186:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f9a1b440ad0>",
		def_var="['ResetByteCounter']",
		fillcolor=deepskyblue,
		label="186:AS
ResetByteCounter = MRxDV & (StateSFD & MRxDEqD | StateData[0] & ByteCntMaxFrame);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['MRxDV', 'StateSFD', 'MRxDEqD', 'StateData', 'ByteCntMaxFrame']"];
	"222:AS" -> "186:AS";
	"186:AS" -> "188:AS";
	"186:AS" -> "194:AL";
	"221:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f9a1b855750>",
		def_var="['ByteCntMax']",
		fillcolor=deepskyblue,
		label="221:AS
ByteCntMax = ByteCnt == 16'hffff;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ByteCnt']"];
	"221:AS" -> "188:AS";
	"194:AL" -> "195:BL"	 [cond="[]",
		lineno=None];
	"250:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f9a1b41e790>",
		fillcolor=springgreen,
		label="250:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"250:IF" -> "253:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=250];
	"251:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9a1b41e750>",
		fillcolor=firebrick,
		label="251:NS
DlyCrcCnt[3:0] <= 4'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9a1b41e750>]",
		style=filled,
		typ=NonblockingSubstitution];
	"250:IF" -> "251:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=250];
	"218:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f9a1b855190>",
		def_var="['ByteCntEq7']",
		fillcolor=deepskyblue,
		label="218:AS
ByteCntEq7 = ByteCnt == 16'd7;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ByteCnt']"];
	"251:NS" -> "Leaf_248:AL"	 [cond="[]",
		lineno=None];
	"225:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f9a1b855cd0>",
		def_var="['ResetIFGCounter']",
		fillcolor=deepskyblue,
		label="225:AS
ResetIFGCounter = StateSFD & MRxDV & MRxDEqD | StateDrop;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['StateSFD', 'MRxDV', 'MRxDEqD', 'StateDrop']"];
	"225:AS" -> "227:AS";
	"225:AS" -> "229:AL";
	"203:IF" -> "204:NS"	 [cond="['IncrementByteCounter']",
		label=IncrementByteCounter,
		lineno=203];
	"239:NS" -> "Leaf_229:AL"	 [cond="[]",
		lineno=None];
	"249:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f9a1b41e4d0>",
		fillcolor=turquoise,
		label="249:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"249:BL" -> "250:IF"	 [cond="[]",
		lineno=None];
	"257:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f9a1b41ef90>",
		fillcolor=springgreen,
		label="257:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"257:IF" -> "258:NS"	 [cond="['DlyCrcEn', 'StateSFD']",
		label="(DlyCrcEn & StateSFD)",
		lineno=257];
	"260:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f9a1b420450>",
		fillcolor=springgreen,
		label="260:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"257:IF" -> "260:IF"	 [cond="['DlyCrcEn', 'StateSFD']",
		label="!((DlyCrcEn & StateSFD))",
		lineno=257];
	"211:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f9a1b84a510>",
		def_var="['ByteCntEq0']",
		fillcolor=deepskyblue,
		label="211:AS
ByteCntEq0 = ByteCnt == 16'd0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ByteCnt']"];
	"219:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f9a1b855390>",
		def_var="['ByteCntGreat2']",
		fillcolor=deepskyblue,
		label="219:AS
ByteCntGreat2 = ByteCnt > 16'd2;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ByteCnt']"];
	"260:IF" -> "261:NS"	 [cond="['DlyCrcEn', 'DlyCrcCnt']",
		label="(DlyCrcEn & |DlyCrcCnt[3:0])",
		lineno=260];
	"217:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f9a1b84af90>",
		def_var="['ByteCntEq6']",
		fillcolor=deepskyblue,
		label="217:AS
ByteCntEq6 = ByteCnt == 16'd6;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ByteCnt']"];
	"245:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f9a1b41e1d0>",
		def_var="['IFGCounterEq24']",
		fillcolor=deepskyblue,
		label="245:AS
IFGCounterEq24 = (IFGCounter[4:0] == 5'h18) | r_IFG;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['IFGCounter', 'r_IFG']"];
	"245:AS" -> "227:AS";
	"Leaf_194:AL" -> "212:AS";
	"Leaf_194:AL" -> "213:AS";
	"Leaf_194:AL" -> "208:AS";
	"Leaf_194:AL" -> "215:AS";
	"Leaf_194:AL" -> "214:AS";
	"Leaf_194:AL" -> "222:AS";
	"Leaf_194:AL" -> "221:AS";
	"Leaf_194:AL" -> "194:AL";
	"Leaf_194:AL" -> "218:AS";
	"Leaf_194:AL" -> "209:AS";
	"Leaf_194:AL" -> "211:AS";
	"Leaf_194:AL" -> "219:AS";
	"Leaf_194:AL" -> "217:AS";
	"216:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f9a1b84add0>",
		def_var="['ByteCntEq5']",
		fillcolor=deepskyblue,
		label="216:AS
ByteCntEq5 = ByteCnt == 16'd5;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ByteCnt']"];
	"Leaf_194:AL" -> "216:AS";
	"220:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f9a1b855590>",
		def_var="['ByteCntSmall7']",
		fillcolor=deepskyblue,
		label="220:AS
ByteCntSmall7 = ByteCnt < 16'd7;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ByteCnt']"];
	"Leaf_194:AL" -> "220:AS";
	"255:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9a1b41ec10>",
		fillcolor=firebrick,
		label="255:NS
DlyCrcCnt[3:0] <= 4'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9a1b41ec10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"255:NS" -> "Leaf_248:AL"	 [cond="[]",
		lineno=None];
	"230:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f9a1b851590>",
		fillcolor=turquoise,
		label="230:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"229:AL" -> "230:BL"	 [cond="[]",
		lineno=None];
	"199:BL" -> "200:IF"	 [cond="[]",
		lineno=None];
	"248:AL" -> "249:BL"	 [cond="[]",
		lineno=None];
	"254:IF" -> "257:IF"	 [cond="['DlyCrcCnt']",
		label="!((DlyCrcCnt[3:0] == 4'h9))",
		lineno=254];
	"254:IF" -> "255:NS"	 [cond="['DlyCrcCnt']",
		label="(DlyCrcCnt[3:0] == 4'h9)",
		lineno=254];
	"Leaf_229:AL" -> "245:AS";
	"Leaf_229:AL" -> "229:AL";
	"230:BL" -> "231:IF"	 [cond="[]",
		lineno=None];
}
