strict digraph "compose( ,  )" {
	node [label="\N"];
	"Leaf_357:AL"	 [def_var="['rx_frame_cnt', 'check_end_R_R_K28_5_cnt', 'check_end_R_R_R_cnt', 'check_end_T_R_K28_5_cnt', 'check_end_T_R_R_cnt', 'early_end_\
cnt', 'rx_data_cnt', 'check_end_R_R_S_cnt']",
		label="Leaf_357:AL"];
	"357:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f700930ce10>",
		clk_sens=True,
		fillcolor=gold,
		label="357:AL",
		sens="['ck', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'rx_frame_cnt', 'check_end_R_R_S_cnt', 'check_end_R_R_R_cnt', 'check_end_T_R_K28_5_cnt', 'check_end_T_R_R_cnt', 'rx_data_\
cnt', 'check_end_R_R_K28_5_cnt', 'early_end_cnt', 'ge_x_pcs_rx_stats_inc']"];
	"Leaf_357:AL" -> "357:AL";
	"839:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f7009360bd0>",
		def_var="['xmit_DATA_CD']",
		fillcolor=deepskyblue,
		label="839:AS
xmit_DATA_CD = xmit_DATA & carrier_detect_d3;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['xmit_DATA', 'carrier_detect_d3']"];
	"845:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f7009354290>",
		def_var="['xmit_DATA_CD_SPD']",
		fillcolor=deepskyblue,
		label="845:AS
xmit_DATA_CD_SPD = xmit_DATA_CD & SPD_match;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['xmit_DATA_CD', 'SPD_match']"];
	"839:AS" -> "845:AS";
	"847:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f7009354510>",
		def_var="['xmit_DATA_CD_nSPD']",
		fillcolor=deepskyblue,
		label="847:AS
xmit_DATA_CD_nSPD = xmit_DATA_CD & ~SPD_match;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['xmit_DATA_CD', 'SPD_match']"];
	"839:AS" -> "847:AS";
	"864:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f7009354c50>",
		clk_sens=False,
		fillcolor=gold,
		label="864:AL",
		sens="['rx_even_d3', 'xmit', 'xmit_DATA_CD_SPD', 'pcs_rx_present', 'S_PCS_RX_TRI_RRI', 'K28_5_match', 'S_PCS_RX_IDLE_D', 'S_PCS_RX_EARLY_\
END', 'SPD_match', 'S_PCS_RX_CONFIG_CD', 'S_PCS_RX_TRR_EXTEND', 'ebi_K_d3', 'S_PCS_RX_FALSE_CARRIER', 'xmit_DATA_CD_nSPD', 'D21_\
5_match', 'S_PCS_RX_INVALID', 'check_end_R_R_K28_5', 'S_PCS_RX_EXTEND_ERR', 'D2_2_match', 'xmit_DATA_nCD', 'xmit_nDATA', 'xmit_DATA', '\
check_end_R_R_R', 'check_end_R_R_S', 'S_PCS_RX_PACKET_BURST_RRS', 'S_PCS_RX_LINK_FAILED', 'S_PCS_RX_WAIT_K', 'S_PCS_RX_CONFIG_CB', '\
S_PCS_RX_CONFIG_CC', 'S_PCS_RX_RECEIVE', 'rx_config_cnt_done', 'S_PCS_RX_START_OF_PACKET', 'S_PCS_RX_K', 'S_PCS_RX_EPD2_CHECK_END', '\
idle_match']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rx_even_d3', 'xmit', 'xmit_DATA_CD_SPD', 'pcs_rx_present', 'early_end', 'xmit_DATA_CD', 'S_PCS_RX_TRI_RRI', 'K28_5_match', 'S_\
PCS_RX_IDLE_D', 'S_PCS_RX_EARLY_END', 'check_end_T_R_K28_5', 'ebi_K_d3', 'S_PCS_RX_CONFIG_CD', 'signal_detect', 'rx_config_cnt_done', '\
S_PCS_RX_TRR_EXTEND', 'SPD_match', 'S_PCS_RX_FALSE_CARRIER', 'D21_5_match', 'S_PCS_RX_CONFIG_CC', 'check_end_R_R_K28_5', 'S_PCS_\
RX_EXTEND_ERR', 'D2_2_match', 'receiving', 'xmit_DATA_nCD', 'S_PCS_RX_CONFIG_CB', 'xmit_nDATA', 'xmit_DATA', 'check_end_R_R_R', '\
check_end_R_R_S', 'S_PCS_RX_PACKET_BURST_RRS', 'S_PCS_RX_LINK_FAILED', 'S_PCS_RX_WAIT_K', 'xmit_DATA_CD_nSPD', 'S_PCS_RX_INVALID', '\
xmit_DATA_CD_nSPD_nK28_5', 'S_PCS_RX_RECEIVE', 'check_end_T_R_R', 'soft_reset', 'sync_status_d3', 'S_PCS_RX_START_OF_PACKET', 'S_\
PCS_RX_K', 'S_PCS_RX_EPD2_CHECK_END', 'idle_match']"];
	"839:AS" -> "864:AL";
	"1070:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7008e4e210>",
		fillcolor=lightcyan,
		label="1070:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1071:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7008e6fb50>",
		fillcolor=turquoise,
		label="1071:BL
pcs_rx_next = (D21_5_match | D2_2_match)? S_PCS_RX_CONFIG_CB : S_PCS_RX_IDLE_D;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e6fad0>]",
		style=filled,
		typ=Block];
	"1070:CA" -> "1071:BL"	 [cond="[]",
		lineno=None];
	"502:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70092eb450>",
		fillcolor=firebrick,
		label="502:NS
check_end_R_R_R <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70092eb450>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_500:AL"	 [def_var="['check_end_R_R_R']",
		label="Leaf_500:AL"];
	"502:NS" -> "Leaf_500:AL"	 [cond="[]",
		lineno=None];
	"1066:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e6fb10>",
		fillcolor=cadetblue,
		label="1066:BS
gmii_rx_er_m_set = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e6fb10>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_864:AL"	 [def_var="['receiving_m_set', 'gmii_rxd_ext_err_m_set', 'receiving_m_clr', 'gmii_rxd_trr_extend_m_set', 'rudi_INVALID_m_set', 'rudi_IDLE_m_\
set', 'pcs_rx_next', 'gmii_rx_er_m_clr', 'gmii_rxd_packet_burst_m_set', 'rx_config_cnt_m_inc', 'gmii_rx_dv_m_set', 'idle_cnt_m_inc', '\
gmii_rx_er_m_set', 'gmii_rxd_false_carrier_m_set', 'ge_x_pcs_rx_stats_inc', 'gmii_rx_dv_m_clr', 'rudi_CONF_m_set', 'rx_config_cnt_\
m_rst', 'gmii_rxd_preamble_m_set', 'gmii_rxd_m_set', 'rx_config_lo_read', 'idle_cnt_m_clr', 'rx_config_hi_read']",
		label="Leaf_864:AL"];
	"1066:BS" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"515:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f70092ebf10>",
		fillcolor=springgreen,
		label="515:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"516:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70092ebe50>",
		fillcolor=firebrick,
		label="516:NS
check_end_R_R_K28_5 <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70092ebe50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"515:IF" -> "516:NS"	 [cond="['reset']",
		label=reset,
		lineno=515];
	"518:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70092df4d0>",
		fillcolor=firebrick,
		label="518:NS
check_end_R_R_K28_5 <= ebi_K_d2 & (ebi_rxd_d2 == 8'hf7) & (ebi_K_d1 & (ebi_rxd_d1 == 8'hf7)) & (ebi_K & (ebi_rxd == 8'hbc)) & \
rx_even;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70092df4d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"515:IF" -> "518:NS"	 [cond="['reset']",
		label="!(reset)",
		lineno=515];
	"1117:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7008e6d290>",
		fillcolor=turquoise,
		label="1117:BL
gmii_rx_dv_m_clr = 1;
gmii_rxd_packet_burst_m_set = 1;
pcs_rx_next = (SPD_match)? S_PCS_RX_START_OF_PACKET : S_PCS_RX_PACKET_\
BURST_RRS;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e6d110>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e6d2d0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e6d510>]",
		style=filled,
		typ=Block];
	"1117:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"374:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7009716850>",
		fillcolor=springgreen,
		label="374:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"375:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7009716b10>",
		fillcolor=springgreen,
		label="375:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"374:IF" -> "375:IF"	 [cond="['ge_x_pcs_rx_stats_inc']",
		label="!(ge_x_pcs_rx_stats_inc[6])",
		lineno=374];
	"374:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009716890>",
		fillcolor=firebrick,
		label="374:NS
check_end_R_R_R_cnt <= check_end_R_R_R_cnt + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009716890>]",
		style=filled,
		typ=NonblockingSubstitution];
	"374:IF" -> "374:NS"	 [cond="['ge_x_pcs_rx_stats_inc']",
		label="ge_x_pcs_rx_stats_inc[6]",
		lineno=374];
	"1156:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7008e555d0>",
		fillcolor=springgreen,
		label="1156:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1156:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e55710>",
		fillcolor=cadetblue,
		label="1156:BS
pcs_rx_next = S_PCS_RX_WAIT_K;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e55710>]",
		style=filled,
		typ=BlockingSubstitution];
	"1156:IF" -> "1156:BS"	 [cond="['soft_reset']",
		label=soft_reset,
		lineno=1156];
	"604:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f70095f95d0>",
		fillcolor=turquoise,
		label="604:BL
rx_config <= 0;
rx_config_set <= 0;
rx_config_lo <= 0;
rx_config_d1 <= 0;
rx_config_d2 <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70095f9190>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f70095f9310>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70095f9490>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f70095f9610>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70095f9790>]",
		style=filled,
		typ=Block];
	"Leaf_602:AL"	 [def_var="['rx_config_d2', 'rx_config_d1', 'rx_config_lo', 'rx_config', 'rx_config_set']",
		label="Leaf_602:AL"];
	"604:BL" -> "Leaf_602:AL"	 [cond="[]",
		lineno=None];
	"610:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f70095f9c90>",
		fillcolor=turquoise,
		label="610:BL
rx_config_d2 <= rx_config_d1;
rx_config_d1 <= rx_config;
rx_config_lo <= ebi_rxd_d3;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70095f9b50>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f70095f9cd0>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70095f9e50>]",
		style=filled,
		typ=Block];
	"610:BL" -> "Leaf_602:AL"	 [cond="[]",
		lineno=None];
	"662:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70096081d0>",
		fillcolor=firebrick,
		label="662:NS
ability_matched_reg <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70096081d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_660:AL"	 [def_var="['ability_match', 'ability_matched_reg']",
		label="Leaf_660:AL"];
	"662:NS" -> "Leaf_660:AL"	 [cond="[]",
		lineno=None];
	"367:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7009342b50>",
		fillcolor=turquoise,
		label="367:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"368:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7009342ed0>",
		fillcolor=springgreen,
		label="368:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"367:BL" -> "368:IF"	 [cond="[]",
		lineno=None];
	"742:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f700935da10>",
		fillcolor=turquoise,
		label="742:BL
gmii_rxd <= (gmii_rxd_m_set)? ebi_rxd_d3 : 
            (gmii_rxd_false_carrier_m_set)? 8'b00001110 : 
            (gmii_\
rxd_preamble_m_set)? 8'b01010101 : 
            (gmii_rxd_ext_err_m_set)? 8'b00011111 : 
            (gmii_rxd_trr_extend_m_set)? \
8'b00001111 : 
            (gmii_rxd_packet_burst_m_set)? 8'b00001111 : 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f700935dd10>]",
		style=filled,
		typ=Block];
	"Leaf_737:AL"	 [def_var="['gmii_rxd']",
		label="Leaf_737:AL"];
	"742:BL" -> "Leaf_737:AL"	 [cond="[]",
		lineno=None];
	"763:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009386c50>",
		fillcolor=firebrick,
		label="763:NS
receiving <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009386c50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_757:AL"	 [def_var="['receiving']",
		label="Leaf_757:AL"];
	"763:NS" -> "Leaf_757:AL"	 [cond="[]",
		lineno=None];
	"837:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f7009360990>",
		def_var="['xmit_nDATA']",
		fillcolor=deepskyblue,
		label="837:AS
xmit_nDATA = xmit != 2;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['xmit']"];
	"837:AS" -> "864:AL";
	"991:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e5c850>",
		fillcolor=cadetblue,
		label="991:BS
receiving_m_clr = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e5c850>]",
		style=filled,
		typ=BlockingSubstitution];
	"991:BS" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"981:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e5c050>",
		fillcolor=cadetblue,
		label="981:BS
gmii_rx_er_m_clr = 1;
gmii_rx_er_m_clr = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e5c050>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e5c050>]",
		style=filled,
		typ=BlockingSubstitution];
	"981:BS" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"Leaf_486:AL"	 [def_var="['check_end_T_R_R']",
		label="Leaf_486:AL"];
	"Leaf_486:AL" -> "864:AL";
	"809:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7009387790>",
		fillcolor=turquoise,
		label="809:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"810:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7009387990>",
		fillcolor=springgreen,
		label="810:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"809:BL" -> "810:IF"	 [cond="[]",
		lineno=None];
	"845:AS" -> "864:AL";
	"Leaf_856:AL"	 [def_var="['pcs_rx_present']",
		label="Leaf_856:AL"];
	"Leaf_856:AL" -> "864:AL";
	"Leaf_805:AL"	 [def_var="['gmii_rx_er']",
		label="Leaf_805:AL"];
	"1058:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7008e6f990>",
		fillcolor=springgreen,
		label="1058:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1058:IF" -> "1066:BS"	 [cond="['ebi_K_d3']",
		label="!((~ebi_K_d3))",
		lineno=1058];
	"1059:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7008e6f790>",
		fillcolor=turquoise,
		label="1059:BL
ge_x_pcs_rx_stats_inc[1] = 1;
gmii_rx_er_m_clr = 1;
gmii_rxd_m_set = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e6f650>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e6f7d0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e6f950>]",
		style=filled,
		typ=Block];
	"1058:IF" -> "1059:BL"	 [cond="['ebi_K_d3']",
		label="(~ebi_K_d3)",
		lineno=1058];
	"1030:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7008e4e250>",
		fillcolor=springgreen,
		label="1030:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1040:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7008e4ec10>",
		fillcolor=springgreen,
		label="1040:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1030:IF" -> "1040:IF"	 [cond="['check_end_T_R_K28_5']",
		label="!(check_end_T_R_K28_5)",
		lineno=1030];
	"1031:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7008e50fd0>",
		fillcolor=turquoise,
		label="1031:BL
ge_x_pcs_rx_stats_inc[3] = 1;
receiving_m_clr = 1;
gmii_rx_dv_m_clr = 1;
gmii_rx_er_m_clr = 1;
pcs_rx_next = S_PCS_RX_TRI_\
RRI;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e50b90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e50d10>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e50e90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e4e050>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e4e1d0>]",
		style=filled,
		typ=Block];
	"1030:IF" -> "1031:BL"	 [cond="['check_end_T_R_K28_5']",
		label=check_end_T_R_K28_5,
		lineno=1030];
	"Leaf_460:AL"	 [def_var="['early_end']",
		label="Leaf_460:AL"];
	"Leaf_460:AL" -> "864:AL";
	"865:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f700936fed0>",
		fillcolor=turquoise,
		label="865:BL
pcs_rx_next = pcs_rx_present;
rx_config_lo_read = 0;
rx_config_hi_read = 0;
receiving_m_set = 0;
receiving_m_clr = 0;
gmii_\
rxd_false_carrier_m_set = 0;
gmii_rxd_preamble_m_set = 0;
gmii_rxd_ext_err_m_set = 0;
gmii_rxd_packet_burst_m_set = 0;
gmii_rxd_\
trr_extend_m_set = 0;
gmii_rxd_m_set = 0;
idle_cnt_m_clr = 0;
idle_cnt_m_inc = 0;
gmii_rx_er_m_set = 0;
gmii_rx_er_m_clr = 0;
gmii_\
rx_dv_m_set = 0;
gmii_rx_dv_m_clr = 0;
rudi_INVALID_m_set = 0;
rudi_IDLE_m_set = 0;
rudi_CONF_m_set = 0;
rx_config_cnt_m_inc = 0;
\
rx_config_cnt_m_rst = 0;
ge_x_pcs_rx_stats_inc = 16'h0000;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7009354dd0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7009354f50>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f700936e110>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f700936e290>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f700936e410>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f700936e550>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f700936e6d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f700936e850>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f700936e9d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f700936eb50>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f700936ecd0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f700936ee50>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f700936efd0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f700936f190>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f700936f310>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f700936f490>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f700936f610>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f700936f790>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f700936f910>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f700936fa90>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f700936fc10>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f700936fd90>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f700936ff10>]",
		style=filled,
		typ=Block];
	"1154:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7008e550d0>",
		fillcolor=springgreen,
		label="1154:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"865:BL" -> "1154:IF"	 [cond="[]",
		lineno=None];
	"888:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f7008e7b910>",
		fillcolor=linen,
		label="888:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"865:BL" -> "888:CS"	 [cond="[]",
		lineno=None];
	"371:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7009724b50>",
		fillcolor=springgreen,
		label="371:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"372:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7009724f90>",
		fillcolor=springgreen,
		label="372:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"371:IF" -> "372:IF"	 [cond="['ge_x_pcs_rx_stats_inc']",
		label="!(ge_x_pcs_rx_stats_inc[3])",
		lineno=371];
	"371:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009724b90>",
		fillcolor=firebrick,
		label="371:NS
check_end_T_R_K28_5_cnt <= check_end_T_R_K28_5_cnt + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009724b90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"371:IF" -> "371:NS"	 [cond="['ge_x_pcs_rx_stats_inc']",
		label="ge_x_pcs_rx_stats_inc[3]",
		lineno=371];
	"487:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f70092e2ad0>",
		fillcolor=springgreen,
		label="487:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"488:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70092e2a10>",
		fillcolor=firebrick,
		label="488:NS
check_end_T_R_R <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70092e2a10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"487:IF" -> "488:NS"	 [cond="['reset']",
		label=reset,
		lineno=487];
	"490:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70092e2f10>",
		fillcolor=firebrick,
		label="490:NS
check_end_T_R_R <= ebi_K_d2 & (ebi_rxd_d2 == 8'hfd) & (ebi_K_d1 & (ebi_rxd_d1 == 8'hf7)) & (ebi_K & (ebi_rxd == 8'hf7));",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70092e2f10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"487:IF" -> "490:NS"	 [cond="['reset']",
		label="!(reset)",
		lineno=487];
	"486:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f70092e2890>",
		clk_sens=True,
		fillcolor=gold,
		label="486:AL",
		sens="['ck', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'ebi_rxd_d2', 'ebi_K', 'ebi_rxd_d1', 'ebi_rxd', 'ebi_K_d2', 'ebi_K_d1']"];
	"486:AL" -> "487:IF"	 [cond="[]",
		lineno=None];
	"1076:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7008e6ff50>",
		fillcolor=turquoise,
		label="1076:BL
pcs_rx_next = (K28_5_match)? S_PCS_RX_K : S_PCS_RX_TRI_RRI;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e6ff10>]",
		style=filled,
		typ=Block];
	"1076:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"501:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f70092eb510>",
		fillcolor=springgreen,
		label="501:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"501:IF" -> "502:NS"	 [cond="['reset']",
		label=reset,
		lineno=501];
	"504:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70092ebad0>",
		fillcolor=firebrick,
		label="504:NS
check_end_R_R_R <= ebi_K_d2 & (ebi_rxd_d2 == 8'hf7) & (ebi_K_d1 & (ebi_rxd_d1 == 8'hf7)) & (ebi_K & (ebi_rxd == 8'hf7));",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70092ebad0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"501:IF" -> "504:NS"	 [cond="['reset']",
		label="!(reset)",
		lineno=501];
	"656:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f70095f5b50>",
		def_var="['ability_matched']",
		fillcolor=deepskyblue,
		label="656:AS
ability_matched = rx_config_cnt_done & ability_matched1 & ability_matched2;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['rx_config_cnt_done', 'ability_matched1', 'ability_matched2']"];
	"660:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f70095f5fd0>",
		clk_sens=True,
		fillcolor=gold,
		label="660:AL",
		sens="['ck', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'ability_matched', 'ability']"];
	"656:AS" -> "660:AL";
	"369:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f70097242d0>",
		fillcolor=springgreen,
		label="369:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"370:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7009724710>",
		fillcolor=springgreen,
		label="370:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"369:IF" -> "370:IF"	 [cond="['ge_x_pcs_rx_stats_inc']",
		label="!(ge_x_pcs_rx_stats_inc[1])",
		lineno=369];
	"369:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009724310>",
		fillcolor=firebrick,
		label="369:NS
rx_data_cnt <= rx_data_cnt + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009724310>]",
		style=filled,
		typ=NonblockingSubstitution];
	"369:IF" -> "369:NS"	 [cond="['ge_x_pcs_rx_stats_inc']",
		label="ge_x_pcs_rx_stats_inc[1]",
		lineno=369];
	"474:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70092ccf50>",
		fillcolor=firebrick,
		label="474:NS
check_end_T_R_K28_5 <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70092ccf50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_472:AL"	 [def_var="['check_end_T_R_K28_5']",
		label="Leaf_472:AL"];
	"474:NS" -> "Leaf_472:AL"	 [cond="[]",
		lineno=None];
	"635:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70095f6d10>",
		fillcolor=firebrick,
		label="635:NS
rx_config_cnt <= rx_config_cnt + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70095f6d10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_630:AL"	 [def_var="['rx_config_cnt']",
		label="Leaf_630:AL"];
	"635:NS" -> "Leaf_630:AL"	 [cond="[]",
		lineno=None];
	"Leaf_514:AL"	 [def_var="['check_end_R_R_K28_5']",
		label="Leaf_514:AL"];
	"516:NS" -> "Leaf_514:AL"	 [cond="[]",
		lineno=None];
	"849:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f7009354790>",
		def_var="['xmit_DATA_CD_nSPD_nK28_5']",
		fillcolor=deepskyblue,
		label="849:AS
xmit_DATA_CD_nSPD_nK28_5 = xmit_DATA_CD_nSPD & ~K28_5_match;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['xmit_DATA_CD_nSPD', 'K28_5_match']"];
	"847:AS" -> "849:AS";
	"847:AS" -> "864:AL";
	"615:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f70095f6190>",
		fillcolor=turquoise,
		label="615:BL
rx_config <= rx_config_tmp;
rx_config_set <= |rx_config_tmp;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70095f61d0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f70095f63d0>]",
		style=filled,
		typ=Block];
	"615:BL" -> "Leaf_602:AL"	 [cond="[]",
		lineno=None];
	"375:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009716cd0>",
		fillcolor=firebrick,
		label="375:NS
check_end_R_R_S_cnt <= check_end_R_R_S_cnt + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009716cd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"375:NS" -> "Leaf_357:AL"	 [cond="[]",
		lineno=None];
	"952:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7008e647d0>",
		fillcolor=turquoise,
		label="952:BL
pcs_rx_next = (K28_5_match & rx_even_d3)? S_PCS_RX_K : S_PCS_RX_INVALID;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e64790>]",
		style=filled,
		typ=Block];
	"952:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"906:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7009371650>",
		fillcolor=turquoise,
		label="906:BL
rx_config_cnt_m_rst = 1;
receiving_m_clr = 1;
gmii_rx_dv_m_clr = 1;
gmii_rx_er_m_clr = 1;
pcs_rx_next = (K28_5_match & rx_\
even_d3)? S_PCS_RX_K : S_PCS_RX_WAIT_K;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7009371210>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7009371390>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7009371510>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7009371690>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7009371910>]",
		style=filled,
		typ=Block];
	"906:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"1107:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7008e8b990>",
		fillcolor=turquoise,
		label="1107:BL
ge_x_pcs_rx_stats_inc[7] = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e8bad0>]",
		style=filled,
		typ=Block];
	"1107:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"500:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f70092eb2d0>",
		clk_sens=True,
		fillcolor=gold,
		label="500:AL",
		sens="['ck', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'ebi_rxd_d2', 'ebi_K', 'ebi_rxd_d1', 'ebi_rxd', 'ebi_K_d2', 'ebi_K_d1']"];
	"500:AL" -> "501:IF"	 [cond="[]",
		lineno=None];
	"810:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70093879d0>",
		fillcolor=firebrick,
		label="810:NS
gmii_rx_er <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70093879d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"810:NS" -> "Leaf_805:AL"	 [cond="[]",
		lineno=None];
	"978:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7008e61b50>",
		fillcolor=springgreen,
		label="978:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"978:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e61c50>",
		fillcolor=cadetblue,
		label="978:BS
gmii_rx_dv_m_clr = 1;
gmii_rx_dv_m_clr = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e61c50>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e61c50>]",
		style=filled,
		typ=BlockingSubstitution];
	"978:IF" -> "978:BS"	 [cond="['xmit_DATA_CD_SPD']",
		label="!(xmit_DATA_CD_SPD)",
		lineno=978];
	"896:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f70093776d0>",
		fillcolor=turquoise,
		label="896:BL
rudi_INVALID_m_set = xmit_nDATA;
pcs_rx_next = S_PCS_RX_WAIT_K;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7009377650>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7009377f50>]",
		style=filled,
		typ=Block];
	"899:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7009377b50>",
		fillcolor=springgreen,
		label="899:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"896:BL" -> "899:IF"	 [cond="[]",
		lineno=None];
	"650:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f70095fdfd0>",
		def_var="['ability_d1']",
		fillcolor=deepskyblue,
		label="650:AS
ability_d1 = { rx_config_d1[15], rx_config_d1[13:12], rx_config_d1[8:5] };",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['rx_config_d1', 'rx_config_d1', 'rx_config_d1']"];
	"653:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f70095f5690>",
		def_var="['ability_matched1']",
		fillcolor=deepskyblue,
		label="653:AS
ability_matched1 = ~|(ability ^ ability_d1);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ability', 'ability_d1']"];
	"650:AS" -> "653:AS";
	"453:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f70092cc490>",
		def_var="['early_end_config']",
		fillcolor=deepskyblue,
		label="453:AS
early_end_config = ebi_K_d2 & (ebi_rxd_d2 == 8'hbc) & (~ebi_K_d1 & ((ebi_rxd_d1 == 8'hb5) | (ebi_rxd_d1 == 8'h42))) & (~ebi_\
K & (ebi_rxd == 8'h00));",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ebi_K_d2', 'ebi_rxd_d2', 'ebi_K_d1', 'ebi_rxd_d1', 'ebi_rxd_d1', 'ebi_K', 'ebi_rxd']"];
	"460:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f70092cc6d0>",
		clk_sens=True,
		fillcolor=gold,
		label="460:AL",
		sens="['ck', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'early_end_config', 'early_end_idle', 'rx_even']"];
	"453:AS" -> "460:AL";
	"609:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f70095f9ed0>",
		fillcolor=springgreen,
		label="609:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"609:IF" -> "610:BL"	 [cond="['rx_config_lo_read']",
		label=rx_config_lo_read,
		lineno=609];
	"615:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f70095f9fd0>",
		fillcolor=springgreen,
		label="615:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"609:IF" -> "615:IF"	 [cond="['rx_config_lo_read']",
		label="!(rx_config_lo_read)",
		lineno=609];
	"1154:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e55110>",
		fillcolor=cadetblue,
		label="1154:BS
pcs_rx_next = S_PCS_RX_LINK_FAILED;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e55110>]",
		style=filled,
		typ=BlockingSubstitution];
	"1154:BS" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"1041:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7008e4e9d0>",
		fillcolor=turquoise,
		label="1041:BL
ge_x_pcs_rx_stats_inc[5] = 1;
gmii_rx_dv_m_clr = 1;
gmii_rx_er_m_set = 1;
gmii_rxd_trr_extend_m_set = 1;
pcs_rx_next = S_\
PCS_RX_EPD2_CHECK_END;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e4e590>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e4e710>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e4e890>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e4ea10>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e4eb90>]",
		style=filled,
		typ=Block];
	"1040:IF" -> "1041:BL"	 [cond="['check_end_T_R_R']",
		label=check_end_T_R_R,
		lineno=1040];
	"1050:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7008e6f310>",
		fillcolor=springgreen,
		label="1050:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1040:IF" -> "1050:IF"	 [cond="['check_end_T_R_R']",
		label="!(check_end_T_R_R)",
		lineno=1040];
	"373:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7009716410>",
		fillcolor=springgreen,
		label="373:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"373:IF" -> "374:IF"	 [cond="['ge_x_pcs_rx_stats_inc']",
		label="!(ge_x_pcs_rx_stats_inc[5])",
		lineno=373];
	"373:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009716450>",
		fillcolor=firebrick,
		label="373:NS
check_end_T_R_R_cnt <= check_end_T_R_R_cnt + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009716450>]",
		style=filled,
		typ=NonblockingSubstitution];
	"373:IF" -> "373:NS"	 [cond="['ge_x_pcs_rx_stats_inc']",
		label="ge_x_pcs_rx_stats_inc[5]",
		lineno=373];
	"983:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7008e5c890>",
		fillcolor=springgreen,
		label="983:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"983:IF" -> "991:BS"	 [cond="['xmit_DATA_CD']",
		label="!(xmit_DATA_CD)",
		lineno=983];
	"984:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7008e5c150>",
		fillcolor=turquoise,
		label="984:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"983:IF" -> "984:BL"	 [cond="['xmit_DATA_CD']",
		label=xmit_DATA_CD,
		lineno=983];
	"359:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7009342a50>",
		fillcolor=springgreen,
		label="359:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"357:AL" -> "359:IF"	 [cond="[]",
		lineno=None];
	"1139:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7008e7b550>",
		fillcolor=lightcyan,
		label="1139:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1140:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7008e7b750>",
		fillcolor=turquoise,
		label="1140:BL
gmii_rx_er_m_set = 1;
pcs_rx_next = S_PCS_RX_RECEIVE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e7b6d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e7b890>]",
		style=filled,
		typ=Block];
	"1139:CA" -> "1140:BL"	 [cond="[]",
		lineno=None];
	"810:IF" -> "810:NS"	 [cond="['gmii_rx_er_m_set']",
		label=gmii_rx_er_m_set,
		lineno=810];
	"811:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7009387b90>",
		fillcolor=springgreen,
		label="811:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"810:IF" -> "811:IF"	 [cond="['gmii_rx_er_m_set']",
		label="!(gmii_rx_er_m_set)",
		lineno=810];
	"928:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7009367fd0>",
		fillcolor=lightcyan,
		label="928:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"929:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7008e76850>",
		fillcolor=turquoise,
		label="929:BL
rx_config_cnt_m_inc = ~rx_config_cnt_done;
rx_config_lo_read = ~ebi_K_d3;
receiving_m_clr = 1;
gmii_rx_dv_m_clr = 1;
gmii_\
rx_er_m_clr = 1;
pcs_rx_next = (ebi_K_d3)? S_PCS_RX_INVALID : S_PCS_RX_CONFIG_CC;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e76210>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e76410>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e76590>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e76710>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e76890>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e76ad0>]",
		style=filled,
		typ=Block];
	"928:CA" -> "929:BL"	 [cond="[]",
		lineno=None];
	"488:NS" -> "Leaf_486:AL"	 [cond="[]",
		lineno=None];
	"762:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7009386950>",
		fillcolor=springgreen,
		label="762:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"762:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009386990>",
		fillcolor=firebrick,
		label="762:NS
receiving <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009386990>]",
		style=filled,
		typ=NonblockingSubstitution];
	"762:IF" -> "762:NS"	 [cond="['receiving_m_set']",
		label=receiving_m_set,
		lineno=762];
	"763:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7009386b50>",
		fillcolor=springgreen,
		label="763:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"762:IF" -> "763:IF"	 [cond="['receiving_m_set']",
		label="!(receiving_m_set)",
		lineno=762];
	"707:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f700935c2d0>",
		fillcolor=springgreen,
		label="707:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"707:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f700935c310>",
		fillcolor=firebrick,
		label="707:NS
idle_cnt <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f700935c310>]",
		style=filled,
		typ=NonblockingSubstitution];
	"707:IF" -> "707:NS"	 [cond="['idle_cnt_m_clr']",
		label=idle_cnt_m_clr,
		lineno=707];
	"708:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f700935c4d0>",
		fillcolor=springgreen,
		label="708:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"707:IF" -> "708:IF"	 [cond="['idle_cnt_m_clr']",
		label="!(idle_cnt_m_clr)",
		lineno=707];
	"653:AS" -> "656:AS";
	"674:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f70096089d0>",
		def_var="['rx_config_match1']",
		fillcolor=deepskyblue,
		label="674:AS
rx_config_match1 = ability_matched1 & ~(rx_config[14] ^ rx_config_d1[14]);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ability_matched1', 'rx_config', 'rx_config_d1']"];
	"653:AS" -> "674:AS";
	"Leaf_500:AL" -> "864:AL";
	"1003:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7008e83310>",
		fillcolor=lightcyan,
		label="1003:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1004:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7008e835d0>",
		fillcolor=turquoise,
		label="1004:BL
gmii_rx_er_m_set = 1;
gmii_rxd_false_carrier_m_set = 1;
pcs_rx_next = (K28_5_match & rx_even_d3)? S_PCS_RX_K : S_PCS_RX_\
FALSE_CARRIER;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e83490>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e83610>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e83890>]",
		style=filled,
		typ=Block];
	"1003:CA" -> "1004:BL"	 [cond="[]",
		lineno=None];
	"841:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f7009360e50>",
		def_var="['xmit_DATA_nCD']",
		fillcolor=deepskyblue,
		label="841:AS
xmit_DATA_nCD = xmit_DATA & ~carrier_detect_d3;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['xmit_DATA', 'carrier_detect_d3']"];
	"841:AS" -> "864:AL";
	"568:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7009308b10>",
		fillcolor=turquoise,
		label="568:BL
CE_match <= 0;
SPD_match <= 0;
EPD_match <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009308a10>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f7009308b50>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009308c90>]",
		style=filled,
		typ=Block];
	"Leaf_566:AL"	 [def_var="['SPD_match', 'EPD_match', 'CE_match']",
		label="Leaf_566:AL"];
	"568:BL" -> "Leaf_566:AL"	 [cond="[]",
		lineno=None];
	"461:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f70092cc7d0>",
		fillcolor=springgreen,
		label="461:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"462:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70092cc810>",
		fillcolor=firebrick,
		label="462:NS
early_end <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70092cc810>]",
		style=filled,
		typ=NonblockingSubstitution];
	"461:IF" -> "462:NS"	 [cond="['reset']",
		label=reset,
		lineno=461];
	"464:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70092cca90>",
		fillcolor=firebrick,
		label="464:NS
early_end <= (early_end_idle | early_end_config) & rx_even;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70092cca90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"461:IF" -> "464:NS"	 [cond="['reset']",
		label="!(reset)",
		lineno=461];
	"360:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f70093428d0>",
		fillcolor=turquoise,
		label="360:BL
rx_frame_cnt <= 0;
rx_data_cnt <= 0;
early_end_cnt <= 0;
check_end_T_R_K28_5_cnt <= 0;
check_end_R_R_K28_5_cnt <= 0;
check_\
end_T_R_R_cnt <= 0;
check_end_R_R_R_cnt <= 0;
check_end_R_R_S_cnt <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009342050>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f7009342190>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009342310>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f7009342490>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009342610>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f7009342790>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009342910>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f7009342a90>]",
		style=filled,
		typ=Block];
	"360:BL" -> "Leaf_357:AL"	 [cond="[]",
		lineno=None];
	"473:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f70092e2050>",
		fillcolor=springgreen,
		label="473:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"473:IF" -> "474:NS"	 [cond="['reset']",
		label=reset,
		lineno=473];
	"476:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70092e25d0>",
		fillcolor=firebrick,
		label="476:NS
check_end_T_R_K28_5 <= ebi_K_d2 & (ebi_rxd_d2 == 8'hfd) & (ebi_K_d1 & (ebi_rxd_d1 == 8'hf7)) & (ebi_K & (ebi_rxd == 8'hbc)) & \
rx_even;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70092e25d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"473:IF" -> "476:NS"	 [cond="['reset']",
		label="!(reset)",
		lineno=473];
	"Leaf_701:AL"	 [def_var="['idle_cnt']",
		label="Leaf_701:AL"];
	"707:NS" -> "Leaf_701:AL"	 [cond="[]",
		lineno=None];
	"649:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f70095fdb10>",
		def_var="['ability']",
		fillcolor=deepskyblue,
		label="649:AS
ability = { rx_config[15], rx_config[13:12], rx_config[8:5] };",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['rx_config', 'rx_config', 'rx_config']"];
	"649:AS" -> "653:AS";
	"691:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f7009368990>",
		def_var="['consistency_match']",
		fillcolor=deepskyblue,
		label="691:AS
consistency_match = ability_match & ~|(ability_matched_reg ^ ability);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ability_match', 'ability_matched_reg', 'ability']"];
	"649:AS" -> "691:AS";
	"654:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f70095f58d0>",
		def_var="['ability_matched2']",
		fillcolor=deepskyblue,
		label="654:AS
ability_matched2 = ~|(ability ^ ability_d2);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ability', 'ability_d2']"];
	"649:AS" -> "654:AS";
	"649:AS" -> "660:AL";
	"890:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7009377190>",
		fillcolor=lightcyan,
		label="890:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"891:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f70093772d0>",
		fillcolor=turquoise,
		label="891:BL
pcs_rx_next = S_PCS_RX_LINK_FAILED;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7009377310>]",
		style=filled,
		typ=Block];
	"890:CA" -> "891:BL"	 [cond="[]",
		lineno=None];
	"969:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7008e612d0>",
		fillcolor=lightcyan,
		label="969:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"970:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7008e83050>",
		fillcolor=turquoise,
		label="970:BL
rx_config_cnt_m_rst = 1;
idle_cnt_m_inc = ~idle_match;
rudi_IDLE_m_set = 1;
pcs_rx_next = (~K28_5_match & ~xmit_DATA)? S_\
PCS_RX_INVALID : 
              (xmit_DATA_CD_SPD)? S_PCS_RX_RECEIVE : 
              (xmit_DATA_nCD | K28_5_match)? S_PCS_RX_K : 
              (\
xmit_DATA_CD_nSPD)? S_PCS_RX_FALSE_CARRIER : S_PCS_RX_IDLE_D;
ge_x_pcs_rx_stats_inc[0] = xmit_DATA_CD_SPD;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e61450>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e61650>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e617d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e5cb10>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e831d0>]",
		style=filled,
		typ=Block];
	"969:CA" -> "970:BL"	 [cond="[]",
		lineno=None];
	"394:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009716f10>",
		fillcolor=firebrick,
		label="394:NS
soft_reset <= mr_main_reset;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009716f10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_390:AL"	 [def_var="['soft_reset']",
		label="Leaf_390:AL"];
	"394:NS" -> "Leaf_390:AL"	 [cond="[]",
		lineno=None];
	"762:NS" -> "Leaf_757:AL"	 [cond="[]",
		lineno=None];
	"1004:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"1123:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7008e6d650>",
		fillcolor=lightcyan,
		label="1123:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1124:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7008e6d950>",
		fillcolor=turquoise,
		label="1124:BL
gmii_rx_dv_m_clr = 1;
gmii_rxd_ext_err_m_set = 1;
pcs_rx_next = (SPD_match)? S_PCS_RX_START_OF_PACKET : 
              (\
K28_5_match & rx_even_d3)? S_PCS_RX_K : 
              (~SPD_match & ~K28_5_match & rx_even_d3)? S_PCS_RX_EPD2_CHECK_END : S_PCS_\
RX_EXTEND_ERR;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e6d7d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e6d990>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e6dbd0>]",
		style=filled,
		typ=Block];
	"1123:CA" -> "1124:BL"	 [cond="[]",
		lineno=None];
	"1071:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"1023:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7008e50850>",
		fillcolor=springgreen,
		label="1023:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1023:IF" -> "1030:IF"	 [cond="['early_end']",
		label="!(early_end)",
		lineno=1023];
	"1024:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7008e50610>",
		fillcolor=turquoise,
		label="1024:BL
ge_x_pcs_rx_stats_inc[2] = 1;
gmii_rx_er_m_set = 1;
pcs_rx_next = S_PCS_RX_EARLY_END;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e50490>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e50650>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e507d0>]",
		style=filled,
		typ=Block];
	"1023:IF" -> "1024:BL"	 [cond="['early_end']",
		label=early_end,
		lineno=1023];
	"711:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f700935c450>",
		def_var="['idle_match']",
		fillcolor=deepskyblue,
		label="711:AS
idle_match = idle_cnt == 3;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['idle_cnt']"];
	"711:AS" -> "864:AL";
	"1154:IF" -> "1154:BS"	 [cond="['signal_detect']",
		label="(~signal_detect)",
		lineno=1154];
	"1155:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7008e55410>",
		fillcolor=springgreen,
		label="1155:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1154:IF" -> "1155:IF"	 [cond="['signal_detect']",
		label="!((~signal_detect))",
		lineno=1154];
	"1020:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7008e50150>",
		fillcolor=lightcyan,
		label="1020:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1021:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7008e50110>",
		fillcolor=turquoise,
		label="1021:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1020:CA" -> "1021:BL"	 [cond="[]",
		lineno=None];
	"759:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009386690>",
		fillcolor=firebrick,
		label="759:NS
receiving <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009386690>]",
		style=filled,
		typ=NonblockingSubstitution];
	"759:NS" -> "Leaf_757:AL"	 [cond="[]",
		lineno=None];
	"1092:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7008e5bcd0>",
		fillcolor=turquoise,
		label="1092:BL
gmii_rx_dv_m_clr = 1;
gmii_rx_er_m_set = 1;
gmii_rxd_trr_extend_m_set = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e5bb50>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e5bd10>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e5be90>]",
		style=filled,
		typ=Block];
	"1092:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"476:NS" -> "Leaf_472:AL"	 [cond="[]",
		lineno=None];
	"372:IF" -> "373:IF"	 [cond="['ge_x_pcs_rx_stats_inc']",
		label="!(ge_x_pcs_rx_stats_inc[4])",
		lineno=372];
	"372:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009724fd0>",
		fillcolor=firebrick,
		label="372:NS
check_end_R_R_K28_5_cnt <= check_end_R_R_K28_5_cnt + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009724fd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"372:IF" -> "372:NS"	 [cond="['ge_x_pcs_rx_stats_inc']",
		label="ge_x_pcs_rx_stats_inc[4]",
		lineno=372];
	"615:IF" -> "615:BL"	 [cond="['rx_config_hi_read']",
		label=rx_config_hi_read,
		lineno=615];
	"Leaf_864:AL" -> "357:AL";
	"820:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f7009387e90>",
		clk_sens=True,
		fillcolor=gold,
		label="820:AL",
		sens="['ck', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'gmii_rx_dv_m_clr', 'gmii_rx_dv_m_set']"];
	"Leaf_864:AL" -> "820:AL";
	"719:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f700935cbd0>",
		clk_sens=True,
		fillcolor=gold,
		label="719:AL",
		sens="['ck', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'rudi_IDLE_m_set', 'rudi_INVALID_m_set', 'rudi_CONF_m_set']"];
	"Leaf_864:AL" -> "719:AL";
	"856:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f7009354750>",
		clk_sens=True,
		fillcolor=gold,
		label="856:AL",
		sens="['ck', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'pcs_rx_next', 'S_PCS_RX_START']"];
	"Leaf_864:AL" -> "856:AL";
	"630:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f70095f6790>",
		clk_sens=True,
		fillcolor=gold,
		label="630:AL",
		sens="['ck', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'rx_config_cnt', 'rx_config_cnt_m_inc', 'rx_config_cnt_m_rst']"];
	"Leaf_864:AL" -> "630:AL";
	"737:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f700935d8d0>",
		clk_sens=True,
		fillcolor=gold,
		label="737:AL",
		sens="['ck', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'gmii_rxd_preamble_m_set', 'gmii_rxd_packet_burst_m_set', 'gmii_rxd_ext_err_m_set', 'ebi_rxd_d3', 'gmii_rxd_trr_extend_\
m_set', 'gmii_rxd_false_carrier_m_set', 'gmii_rxd_m_set']"];
	"Leaf_864:AL" -> "737:AL";
	"602:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f70095f1fd0>",
		clk_sens=True,
		fillcolor=gold,
		label="602:AL",
		sens="['ck', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'rx_config', 'rx_config_d1', 'ebi_rxd_d3', 'rx_config_lo_read', 'rx_config_tmp', 'rx_config_hi_read']"];
	"Leaf_864:AL" -> "602:AL";
	"701:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f7009368e90>",
		clk_sens=True,
		fillcolor=gold,
		label="701:AL",
		sens="['ck', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'idle_cnt_m_inc', 'idle_cnt', 'idle_cnt_m_clr']"];
	"Leaf_864:AL" -> "701:AL";
	"757:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f7009386550>",
		clk_sens=True,
		fillcolor=gold,
		label="757:AL",
		sens="['ck', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['receiving_m_set', 'reset', 'receiving_m_clr']"];
	"Leaf_864:AL" -> "757:AL";
	"382:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f7009724490>",
		def_var="['rx_frame_pulse']",
		fillcolor=deepskyblue,
		label="382:AS
rx_frame_pulse = ge_x_pcs_rx_stats_inc[0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ge_x_pcs_rx_stats_inc']"];
	"Leaf_864:AL" -> "382:AS";
	"805:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f7009387590>",
		clk_sens=True,
		fillcolor=gold,
		label="805:AL",
		sens="['ck', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'gmii_rx_er_m_set', 'gmii_rx_er_m_clr']"];
	"Leaf_864:AL" -> "805:AL";
	"Leaf_683:AL"	 [def_var="['acknowledge_match']",
		label="Leaf_683:AL"];
	"Leaf_820:AL"	 [def_var="['gmii_rx_dv']",
		label="Leaf_820:AL"];
	"725:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f700935d310>",
		fillcolor=firebrick,
		label="725:NS
rudi <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f700935d310>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_719:AL"	 [def_var="['rudi']",
		label="Leaf_719:AL"];
	"725:NS" -> "Leaf_719:AL"	 [cond="[]",
		lineno=None];
	"446:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f70092e7b90>",
		def_var="['early_end_idle']",
		fillcolor=deepskyblue,
		label="446:AS
early_end_idle = ebi_K_d2 & (ebi_rxd_d2 == 8'hbc) & ~ebi_K_d1 & (ebi_K & (ebi_rxd == 8'hbc));",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ebi_K_d2', 'ebi_rxd_d2', 'ebi_K_d1', 'ebi_K', 'ebi_rxd']"];
	"446:AS" -> "460:AL";
	"708:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f700935c650>",
		fillcolor=firebrick,
		label="708:NS
idle_cnt <= idle_cnt + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f700935c650>]",
		style=filled,
		typ=NonblockingSubstitution];
	"708:IF" -> "708:NS"	 [cond="['idle_cnt_m_inc']",
		label=idle_cnt_m_inc,
		lineno=708];
	"825:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009360310>",
		fillcolor=firebrick,
		label="825:NS
gmii_rx_dv <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009360310>]",
		style=filled,
		typ=NonblockingSubstitution];
	"825:NS" -> "Leaf_820:AL"	 [cond="[]",
		lineno=None];
	"916:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7009367510>",
		fillcolor=turquoise,
		label="916:BL
receiving_m_clr = 1;
gmii_rx_dv_m_clr = 1;
gmii_rx_er_m_clr = 1;
rudi_IDLE_m_set = xmit_nDATA & ~ebi_K_d3 & ~D21_5_match & ~\
D2_2_match | xmit_DATA & ~D21_5_match & ~D2_2_match;
pcs_rx_next = (D21_5_match | D2_2_match)? S_PCS_RX_CONFIG_CB : 
              (\
xmit_nDATA & ~ebi_K_d3 & ~D21_5_match & ~D2_2_match)? S_PCS_RX_IDLE_D : 
              (xmit_DATA & ~D21_5_match & ~D2_2_match)? \
S_PCS_RX_IDLE_D : 
              (xmit_nDATA & ebi_K_d3)? S_PCS_RX_INVALID : S_PCS_RX_INVALID;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7009371b90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7009371d10>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7009371e90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f70093674d0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7009367750>]",
		style=filled,
		typ=Block];
	"916:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"390:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f70097165d0>",
		clk_sens=True,
		fillcolor=gold,
		label="390:AL",
		sens="['ck', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'mr_main_reset']"];
	"391:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7009716c90>",
		fillcolor=springgreen,
		label="391:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"390:AL" -> "391:IF"	 [cond="[]",
		lineno=None];
	"1021:BL" -> "1023:IF"	 [cond="[]",
		lineno=None];
	"370:IF" -> "371:IF"	 [cond="['ge_x_pcs_rx_stats_inc']",
		label="!(ge_x_pcs_rx_stats_inc[2])",
		lineno=370];
	"370:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009724750>",
		fillcolor=firebrick,
		label="370:NS
early_end_cnt <= early_end_cnt + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009724750>]",
		style=filled,
		typ=NonblockingSubstitution];
	"370:IF" -> "370:NS"	 [cond="['ge_x_pcs_rx_stats_inc']",
		label="ge_x_pcs_rx_stats_inc[2]",
		lineno=370];
	"677:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f7009368110>",
		def_var="['rx_config_match']",
		fillcolor=deepskyblue,
		label="677:AS
rx_config_match = rx_config_match1 & rx_config_match2;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['rx_config_match1', 'rx_config_match2']"];
	"683:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f70093680d0>",
		clk_sens=True,
		fillcolor=gold,
		label="683:AL",
		sens="['ck', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'rx_config_d2', 'rx_config_match']"];
	"677:AS" -> "683:AL";
	"957:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7008e64950>",
		fillcolor=lightcyan,
		label="957:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"958:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7008e64d50>",
		fillcolor=turquoise,
		label="958:BL
rudi_INVALID_m_set = xmit == 1;
receiving_m_set = xmit_DATA;
pcs_rx_next = (K28_5_match & rx_even_d3)? S_PCS_RX_K : 
              (~\
K28_5_match & rx_even_d3)? S_PCS_RX_WAIT_K : S_PCS_RX_INVALID;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e64b50>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e64d10>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e64f90>]",
		style=filled,
		typ=Block];
	"957:CA" -> "958:BL"	 [cond="[]",
		lineno=None];
	"462:NS" -> "Leaf_460:AL"	 [cond="[]",
		lineno=None];
	"720:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f700935cd50>",
		fillcolor=springgreen,
		label="720:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"721:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f700935cd10>",
		fillcolor=firebrick,
		label="721:NS
rudi <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f700935cd10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"720:IF" -> "721:NS"	 [cond="['reset']",
		label=reset,
		lineno=720];
	"723:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f700935cdd0>",
		fillcolor=turquoise,
		label="723:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"720:IF" -> "723:BL"	 [cond="['reset']",
		label="!(reset)",
		lineno=720];
	"899:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7009377a10>",
		fillcolor=turquoise,
		label="899:BL
receiving_m_clr = 1;
gmii_rx_er_m_set = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7009377950>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7009377b10>]",
		style=filled,
		typ=Block];
	"899:IF" -> "899:BL"	 [cond="['receiving']",
		label=receiving,
		lineno=899];
	"900:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7009377cd0>",
		fillcolor=turquoise,
		label="900:BL
gmii_rx_dv_m_clr = 1;
gmii_rx_er_m_clr = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7009377d10>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7009377e90>]",
		style=filled,
		typ=Block];
	"899:IF" -> "900:BL"	 [cond="['receiving']",
		label="!(receiving)",
		lineno=899];
	"985:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7008e5c290>",
		fillcolor=springgreen,
		label="985:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"984:BL" -> "985:IF"	 [cond="[]",
		lineno=None];
	"391:IF" -> "394:NS"	 [cond="['reset']",
		label="!(reset)",
		lineno=391];
	"392:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009716d10>",
		fillcolor=firebrick,
		label="392:NS
soft_reset <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009716d10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"391:IF" -> "392:NS"	 [cond="['reset']",
		label=reset,
		lineno=391];
	"631:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f70095f6950>",
		fillcolor=springgreen,
		label="631:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"634:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f70095f69d0>",
		fillcolor=turquoise,
		label="634:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"631:IF" -> "634:BL"	 [cond="['reset']",
		label="!(reset)",
		lineno=631];
	"632:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70095f6910>",
		fillcolor=firebrick,
		label="632:NS
rx_config_cnt <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70095f6910>]",
		style=filled,
		typ=NonblockingSubstitution];
	"631:IF" -> "632:NS"	 [cond="['reset']",
		label=reset,
		lineno=631];
	"603:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f70095f9750>",
		fillcolor=springgreen,
		label="603:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"603:IF" -> "604:BL"	 [cond="['reset']",
		label=reset,
		lineno=603];
	"608:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f70095f9850>",
		fillcolor=turquoise,
		label="608:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"603:IF" -> "608:BL"	 [cond="['reset']",
		label="!(reset)",
		lineno=603];
	"Leaf_701:AL" -> "711:AS";
	"Leaf_701:AL" -> "701:AL";
	"958:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"849:AS" -> "864:AL";
	"412:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f700971de10>",
		fillcolor=turquoise,
		label="412:BL
ebi_K_d1 <= 0;
ebi_K_d2 <= 0;
ebi_K_d3 <= 0;
rx_even_d1 <= 0;
rx_even_d2 <= 0;
rx_even_d3 <= 0;
ebi_rxd_d1 <= 0;
ebi_rxd_\
d2 <= 0;
ebi_rxd_d3 <= 0;
sync_status_d1 <= 0;
sync_status_d2 <= 0;
sync_status_d3 <= 0;
carrier_detect_d1 <= 0;
carrier_detect_\
d2 <= 0;
carrier_detect_d3 <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f700971bc90>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f700971bdd0>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f700971bf10>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f700971d090>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f700971d1d0>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f700971d310>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f700971d450>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f700971d590>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f700971d6d0>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f700971d850>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f700971d9d0>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f700971db50>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f700971dcd0>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f700971de50>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f700971dfd0>]",
		style=filled,
		typ=Block];
	"Leaf_410:AL"	 [def_var="['rx_even_d2', 'rx_even_d3', 'rx_even_d1', 'carrier_detect_d1', 'carrier_detect_d2', 'sync_status_d2', 'carrier_detect_d3', 'ebi_\
rxd_d2', 'ebi_rxd_d3', 'sync_status_d1', 'ebi_rxd_d1', 'sync_status_d3', 'ebi_K_d3', 'ebi_K_d2', 'ebi_K_d1']",
		label="Leaf_410:AL"];
	"412:BL" -> "Leaf_410:AL"	 [cond="[]",
		lineno=None];
	"675:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f7009608e10>",
		def_var="['rx_config_match2']",
		fillcolor=deepskyblue,
		label="675:AS
rx_config_match2 = ability_matched2 & ~(rx_config[14] ^ rx_config_d2[14]);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ability_matched2', 'rx_config', 'rx_config_d2']"];
	"675:AS" -> "677:AS";
	"635:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f70095f6cd0>",
		fillcolor=springgreen,
		label="635:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"635:IF" -> "635:NS"	 [cond="['rx_config_cnt_m_inc']",
		label=rx_config_cnt_m_inc,
		lineno=635];
	"636:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f70095f6f10>",
		fillcolor=springgreen,
		label="636:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"635:IF" -> "636:IF"	 [cond="['rx_config_cnt_m_inc']",
		label="!(rx_config_cnt_m_inc)",
		lineno=635];
	"Leaf_602:AL" -> "650:AS";
	"Leaf_602:AL" -> "649:AS";
	"Leaf_602:AL" -> "675:AS";
	"651:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f70095f54d0>",
		def_var="['ability_d2']",
		fillcolor=deepskyblue,
		label="651:AS
ability_d2 = { rx_config_d2[15], rx_config_d2[13:12], rx_config_d2[8:5] };",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['rx_config_d2', 'rx_config_d2', 'rx_config_d2']"];
	"Leaf_602:AL" -> "651:AS";
	"Leaf_602:AL" -> "683:AL";
	"600:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f70095f1d10>",
		def_var="['rx_config_tmp']",
		fillcolor=deepskyblue,
		label="600:AS
rx_config_tmp = { ebi_rxd_d3, rx_config_lo };",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ebi_rxd_d3', 'rx_config_lo']"];
	"Leaf_602:AL" -> "600:AS";
	"Leaf_602:AL" -> "602:AL";
	"Leaf_602:AL" -> "674:AS";
	"835:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f70093607d0>",
		def_var="['xmit_DATA']",
		fillcolor=deepskyblue,
		label="835:AS
xmit_DATA = xmit == 2;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['xmit']"];
	"835:AS" -> "839:AS";
	"835:AS" -> "841:AS";
	"835:AS" -> "864:AL";
	"725:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f700935d2d0>",
		fillcolor=springgreen,
		label="725:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"725:IF" -> "725:NS"	 [cond="['rudi_IDLE_m_set']",
		label=rudi_IDLE_m_set,
		lineno=725];
	"726:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f700935d4d0>",
		fillcolor=springgreen,
		label="726:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"725:IF" -> "726:IF"	 [cond="['rudi_IDLE_m_set']",
		label="!(rudi_IDLE_m_set)",
		lineno=725];
	"543:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f70092f5950>",
		fillcolor=springgreen,
		label="543:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"544:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f70092f5750>",
		fillcolor=turquoise,
		label="544:BL
K28_5_match <= 0;
D2_2_match <= 0;
D21_5_match <= 0;
D5_6_match <= 0;
D16_2_match <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70092f53d0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f70092f5510>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70092f5650>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f70092f5790>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70092f58d0>]",
		style=filled,
		typ=Block];
	"543:IF" -> "544:BL"	 [cond="['reset']",
		label=reset,
		lineno=543];
	"551:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f70093083d0>",
		fillcolor=turquoise,
		label="551:BL
K28_5_match <= ebi_K_d2 & (ebi_rxd_d2 == 8'hbc);
D2_2_match <= ~ebi_K_d2 & (ebi_rxd_d2 == 8'h42);
D21_5_match <= ~ebi_K_d2 & (\
ebi_rxd_d2 == 8'hb5);
D5_6_match <= ~ebi_K_d2 & (ebi_rxd_d2 == 8'hc5);
D16_2_match <= ~ebi_K_d2 & (ebi_rxd_d2 == 8'h50);",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70092f5b90>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f70092f5e10>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70093080d0>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f7009308350>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70093085d0>]",
		style=filled,
		typ=Block];
	"543:IF" -> "551:BL"	 [cond="['reset']",
		label="!(reset)",
		lineno=543];
	"641:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f70095fd210>",
		def_var="['rx_config_cnt_done']",
		fillcolor=deepskyblue,
		label="641:AS
rx_config_cnt_done = rx_config_cnt == 3;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['rx_config_cnt']"];
	"641:AS" -> "656:AS";
	"641:AS" -> "864:AL";
	"826:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70093605d0>",
		fillcolor=firebrick,
		label="826:NS
gmii_rx_dv <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70093605d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"826:NS" -> "Leaf_820:AL"	 [cond="[]",
		lineno=None];
	"464:NS" -> "Leaf_460:AL"	 [cond="[]",
		lineno=None];
	"1075:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7008e6fd10>",
		fillcolor=lightcyan,
		label="1075:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1075:CA" -> "1076:BL"	 [cond="[]",
		lineno=None];
	"895:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f70093774d0>",
		fillcolor=lightcyan,
		label="895:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"895:CA" -> "896:BL"	 [cond="[]",
		lineno=None];
	"858:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009354b50>",
		fillcolor=firebrick,
		label="858:NS
pcs_rx_present <= (reset)? S_PCS_RX_START : pcs_rx_next;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009354b50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"858:NS" -> "Leaf_856:AL"	 [cond="[]",
		lineno=None];
	"888:CS" -> "1070:CA"	 [cond="['pcs_rx_present']",
		label=pcs_rx_present,
		lineno=888];
	"888:CS" -> "1139:CA"	 [cond="['pcs_rx_present']",
		label=pcs_rx_present,
		lineno=888];
	"888:CS" -> "928:CA"	 [cond="['pcs_rx_present']",
		label=pcs_rx_present,
		lineno=888];
	"888:CS" -> "1003:CA"	 [cond="['pcs_rx_present']",
		label=pcs_rx_present,
		lineno=888];
	"888:CS" -> "890:CA"	 [cond="['pcs_rx_present']",
		label=pcs_rx_present,
		lineno=888];
	"888:CS" -> "969:CA"	 [cond="['pcs_rx_present']",
		label=pcs_rx_present,
		lineno=888];
	"888:CS" -> "1123:CA"	 [cond="['pcs_rx_present']",
		label=pcs_rx_present,
		lineno=888];
	"888:CS" -> "1020:CA"	 [cond="['pcs_rx_present']",
		label=pcs_rx_present,
		lineno=888];
	"888:CS" -> "957:CA"	 [cond="['pcs_rx_present']",
		label=pcs_rx_present,
		lineno=888];
	"888:CS" -> "1075:CA"	 [cond="['pcs_rx_present']",
		label=pcs_rx_present,
		lineno=888];
	"888:CS" -> "895:CA"	 [cond="['pcs_rx_present']",
		label=pcs_rx_present,
		lineno=888];
	"905:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7009371090>",
		fillcolor=lightcyan,
		label="905:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"888:CS" -> "905:CA"	 [cond="['pcs_rx_present']",
		label=pcs_rx_present,
		lineno=888];
	"941:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7008e76c10>",
		fillcolor=lightcyan,
		label="941:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"888:CS" -> "941:CA"	 [cond="['pcs_rx_present']",
		label=pcs_rx_present,
		lineno=888];
	"1013:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7008e839d0>",
		fillcolor=lightcyan,
		label="1013:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"888:CS" -> "1013:CA"	 [cond="['pcs_rx_present']",
		label=pcs_rx_present,
		lineno=888];
	"1116:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7008e8bf50>",
		fillcolor=lightcyan,
		label="1116:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"888:CS" -> "1116:CA"	 [cond="['pcs_rx_present']",
		label=pcs_rx_present,
		lineno=888];
	"915:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7009371a10>",
		fillcolor=lightcyan,
		label="915:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"888:CS" -> "915:CA"	 [cond="['pcs_rx_present']",
		label=pcs_rx_present,
		lineno=888];
	"951:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7008e64510>",
		fillcolor=lightcyan,
		label="951:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"888:CS" -> "951:CA"	 [cond="['pcs_rx_present']",
		label=pcs_rx_present,
		lineno=888];
	"1088:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7008e5b850>",
		fillcolor=lightcyan,
		label="1088:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"888:CS" -> "1088:CA"	 [cond="['pcs_rx_present']",
		label=pcs_rx_present,
		lineno=888];
	"1132:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7008e7b110>",
		fillcolor=lightcyan,
		label="1132:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"888:CS" -> "1132:CA"	 [cond="['pcs_rx_present']",
		label=pcs_rx_present,
		lineno=888];
	"1146:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7008e7b990>",
		fillcolor=lightcyan,
		label="1146:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"888:CS" -> "1146:CA"	 [cond="['pcs_rx_present']",
		label=pcs_rx_present,
		lineno=888];
	"1080:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7008e5b110>",
		fillcolor=lightcyan,
		label="1080:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"888:CS" -> "1080:CA"	 [cond="['pcs_rx_present']",
		label=pcs_rx_present,
		lineno=888];
	"654:AS" -> "656:AS";
	"654:AS" -> "675:AS";
	"899:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"905:CA" -> "906:BL"	 [cond="[]",
		lineno=None];
	"821:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7009360050>",
		fillcolor=springgreen,
		label="821:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"820:AL" -> "821:IF"	 [cond="[]",
		lineno=None];
	"970:BL" -> "978:IF"	 [cond="[]",
		lineno=None];
	"970:BL" -> "983:IF"	 [cond="[]",
		lineno=None];
	"981:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7008e61f10>",
		fillcolor=springgreen,
		label="981:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"970:BL" -> "981:IF"	 [cond="[]",
		lineno=None];
	"651:AS" -> "654:AS";
	"719:AL" -> "720:IF"	 [cond="[]",
		lineno=None];
	"856:AL" -> "858:NS"	 [cond="[]",
		lineno=None];
	"392:NS" -> "Leaf_390:AL"	 [cond="[]",
		lineno=None];
	"685:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009368490>",
		fillcolor=firebrick,
		label="685:NS
acknowledge_match <= (reset)? 0 : rx_config_match & rx_config_d2[14];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009368490>]",
		style=filled,
		typ=NonblockingSubstitution];
	"685:NS" -> "Leaf_683:AL"	 [cond="[]",
		lineno=None];
	"986:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7008e5c490>",
		fillcolor=turquoise,
		label="986:BL
receiving_m_set = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e5c410>]",
		style=filled,
		typ=Block];
	"988:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7008e5c710>",
		fillcolor=springgreen,
		label="988:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"986:BL" -> "988:IF"	 [cond="[]",
		lineno=None];
	"Leaf_566:AL" -> "845:AS";
	"Leaf_566:AL" -> "847:AS";
	"Leaf_566:AL" -> "864:AL";
	"1124:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"420:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f70092e7450>",
		fillcolor=turquoise,
		label="420:BL
ebi_K_d3 <= ebi_K_d2;
ebi_K_d2 <= ebi_K_d1;
ebi_K_d1 <= ebi_K;
rx_even_d3 <= rx_even_d2;
rx_even_d2 <= rx_even_d1;
rx_even_\
d1 <= rx_even;
ebi_rxd_d3 <= ebi_rxd_d2;
ebi_rxd_d2 <= ebi_rxd_d1;
ebi_rxd_d1 <= ebi_rxd;
sync_status_d3 <= sync_status_d2;
sync_\
status_d2 <= sync_status_d1;
sync_status_d1 <= sync_status;
carrier_detect_d3 <= carrier_detect_d2;
carrier_detect_d2 <= carrier_\
detect_d1;
carrier_detect_d1 <= carrier_detect;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70097211d0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f7009721310>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009721450>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f7009721590>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70097216d0>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f7009721810>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009721950>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f7009721a90>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009721bd0>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f7009721d90>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009721f50>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f70092e7110>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70092e72d0>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f70092e7490>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70092e7650>]",
		style=filled,
		typ=Block];
	"420:BL" -> "Leaf_410:AL"	 [cond="[]",
		lineno=None];
	"Leaf_472:AL" -> "864:AL";
	"826:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f70093604d0>",
		fillcolor=springgreen,
		label="826:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"826:IF" -> "826:NS"	 [cond="['gmii_rx_dv_m_clr']",
		label=gmii_rx_dv_m_clr,
		lineno=826];
	"566:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f7009308890>",
		clk_sens=True,
		fillcolor=gold,
		label="566:AL",
		sens="['ck', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'ebi_rxd_d2', 'ebi_K_d2']"];
	"567:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7009308c50>",
		fillcolor=springgreen,
		label="567:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"566:AL" -> "567:IF"	 [cond="[]",
		lineno=None];
	"359:IF" -> "367:BL"	 [cond="['reset']",
		label="!(reset)",
		lineno=359];
	"359:IF" -> "360:BL"	 [cond="['reset']",
		label=reset,
		lineno=359];
	"Leaf_630:AL" -> "641:AS";
	"Leaf_630:AL" -> "630:AL";
	"630:AL" -> "631:IF"	 [cond="[]",
		lineno=None];
	"981:IF" -> "981:BS"	 [cond="['xmit_DATA_CD_nSPD_nK28_5']",
		label="!(xmit_DATA_CD_nSPD_nK28_5)",
		lineno=981];
	"683:AL" -> "685:NS"	 [cond="[]",
		lineno=None];
	"825:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f70093602d0>",
		fillcolor=springgreen,
		label="825:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"825:IF" -> "825:NS"	 [cond="['gmii_rx_dv_m_set']",
		label=gmii_rx_dv_m_set,
		lineno=825];
	"825:IF" -> "826:IF"	 [cond="['gmii_rx_dv_m_set']",
		label="!(gmii_rx_dv_m_set)",
		lineno=825];
	"1059:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"985:IF" -> "986:BL"	 [cond="['K28_5_match']",
		label="(~K28_5_match)",
		lineno=985];
	"1155:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e55450>",
		fillcolor=cadetblue,
		label="1155:BS
pcs_rx_next = S_PCS_RX_LINK_FAILED;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e55450>]",
		style=filled,
		typ=BlockingSubstitution];
	"1155:BS" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"490:NS" -> "Leaf_486:AL"	 [cond="[]",
		lineno=None];
	"Leaf_660:AL" -> "691:AS";
	"824:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7009387f90>",
		fillcolor=turquoise,
		label="824:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"824:BL" -> "825:IF"	 [cond="[]",
		lineno=None];
	"Leaf_542:AL"	 [def_var="['D2_2_match', 'D16_2_match', 'K28_5_match', 'D5_6_match', 'D21_5_match']",
		label="Leaf_542:AL"];
	"544:BL" -> "Leaf_542:AL"	 [cond="[]",
		lineno=None];
	"574:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f70095f1250>",
		fillcolor=turquoise,
		label="574:BL
CE_match <= ebi_K_d2 & (ebi_rxd_d2 == 8'hf7);
SPD_match <= ebi_K_d2 & (ebi_rxd_d2 == 8'hfb);
EPD_match <= ebi_K_d2 & (ebi_\
rxd_d2 == 8'hfd);",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009308f50>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f70095f11d0>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70095f1410>]",
		style=filled,
		typ=Block];
	"574:BL" -> "Leaf_566:AL"	 [cond="[]",
		lineno=None];
	"821:IF" -> "824:BL"	 [cond="['reset']",
		label="!(reset)",
		lineno=821];
	"822:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009387fd0>",
		fillcolor=firebrick,
		label="822:NS
gmii_rx_dv <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009387fd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"821:IF" -> "822:NS"	 [cond="['reset']",
		label=reset,
		lineno=821];
	"661:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7009608190>",
		fillcolor=springgreen,
		label="661:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"661:IF" -> "662:NS"	 [cond="['reset']",
		label=reset,
		lineno=661];
	"663:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7009608450>",
		fillcolor=turquoise,
		label="663:BL
ability_match <= ability_matched;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009608410>]",
		style=filled,
		typ=Block];
	"661:IF" -> "663:BL"	 [cond="['reset']",
		label="!(reset)",
		lineno=661];
	"806:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7009387710>",
		fillcolor=springgreen,
		label="806:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"806:IF" -> "809:BL"	 [cond="['reset']",
		label="!(reset)",
		lineno=806];
	"807:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70093876d0>",
		fillcolor=firebrick,
		label="807:NS
gmii_rx_er <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70093876d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"806:IF" -> "807:NS"	 [cond="['reset']",
		label=reset,
		lineno=806];
	"667:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f70096085d0>",
		fillcolor=springgreen,
		label="667:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"663:BL" -> "667:IF"	 [cond="[]",
		lineno=None];
	"726:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f700935d5d0>",
		fillcolor=firebrick,
		label="726:NS
rudi <= 2;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f700935d5d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"726:NS" -> "Leaf_719:AL"	 [cond="[]",
		lineno=None];
	"721:NS" -> "Leaf_719:AL"	 [cond="[]",
		lineno=None];
	"761:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7009386750>",
		fillcolor=turquoise,
		label="761:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"761:BL" -> "762:IF"	 [cond="[]",
		lineno=None];
	"Leaf_514:AL" -> "864:AL";
	"942:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7008e64150>",
		fillcolor=turquoise,
		label="942:BL
rx_config_hi_read = ~ebi_K_d3;
idle_cnt_m_clr = 1;
rudi_CONF_m_set = ~ebi_K_d3;
pcs_rx_next = (ebi_K_d3)? S_PCS_RX_INVALID : \
S_PCS_RX_CONFIG_CD;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e76dd0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e76f90>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e64190>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e643d0>]",
		style=filled,
		typ=Block];
	"941:CA" -> "942:BL"	 [cond="[]",
		lineno=None];
	"1014:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7008e83e50>",
		fillcolor=turquoise,
		label="1014:BL
gmii_rx_dv_m_set = 1;
gmii_rx_er_m_clr = 1;
gmii_rxd_preamble_m_set = 1;
pcs_rx_next = S_PCS_RX_RECEIVE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e83b50>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e83d10>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e83e90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e50050>]",
		style=filled,
		typ=Block];
	"1013:CA" -> "1014:BL"	 [cond="[]",
		lineno=None];
	"368:IF" -> "369:IF"	 [cond="['ge_x_pcs_rx_stats_inc']",
		label="!(ge_x_pcs_rx_stats_inc[0])",
		lineno=368];
	"368:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009342f10>",
		fillcolor=firebrick,
		label="368:NS
rx_frame_cnt <= rx_frame_cnt + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009342f10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"368:IF" -> "368:NS"	 [cond="['ge_x_pcs_rx_stats_inc']",
		label="ge_x_pcs_rx_stats_inc[0]",
		lineno=368];
	"528:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f70092df790>",
		clk_sens=True,
		fillcolor=gold,
		label="528:AL",
		sens="['ck', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'ebi_rxd_d2', 'ebi_K', 'ebi_rxd_d1', 'ebi_rxd', 'ebi_K_d2', 'ebi_K_d1']"];
	"529:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f70092df9d0>",
		fillcolor=springgreen,
		label="529:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"528:AL" -> "529:IF"	 [cond="[]",
		lineno=None];
	"1116:CA" -> "1117:BL"	 [cond="[]",
		lineno=None];
	"864:AL" -> "865:BL"	 [cond="[]",
		lineno=None];
	"1051:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7008e6f0d0>",
		fillcolor=turquoise,
		label="1051:BL
ge_x_pcs_rx_stats_inc[6] = 1;
gmii_rx_er_m_set = 1;
pcs_rx_next = S_PCS_RX_EPD2_CHECK_END;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e4ef50>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e6f110>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e6f290>]",
		style=filled,
		typ=Block];
	"1051:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"600:AS" -> "602:AL";
	"739:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f700935da90>",
		fillcolor=springgreen,
		label="739:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"737:AL" -> "739:IF"	 [cond="[]",
		lineno=None];
	"411:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7009721090>",
		fillcolor=springgreen,
		label="411:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"411:IF" -> "412:BL"	 [cond="['reset']",
		label=reset,
		lineno=411];
	"411:IF" -> "420:BL"	 [cond="['reset']",
		label="!(reset)",
		lineno=411];
	"1041:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"704:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009368fd0>",
		fillcolor=firebrick,
		label="704:NS
idle_cnt <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009368fd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"704:NS" -> "Leaf_701:AL"	 [cond="[]",
		lineno=None];
	"724:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f700935d050>",
		fillcolor=firebrick,
		label="724:NS
rudi <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f700935d050>]",
		style=filled,
		typ=NonblockingSubstitution];
	"724:NS" -> "Leaf_719:AL"	 [cond="[]",
		lineno=None];
	"1156:BS" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"1097:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7008e8b790>",
		fillcolor=springgreen,
		label="1097:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1106:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7008e8b8d0>",
		fillcolor=springgreen,
		label="1106:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1097:IF" -> "1106:IF"	 [cond="['check_end_R_R_K28_5']",
		label="!(check_end_R_R_K28_5)",
		lineno=1097];
	"1098:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7008e8b550>",
		fillcolor=turquoise,
		label="1098:BL
ge_x_pcs_rx_stats_inc[4] = 1;
receiving_m_clr = 1;
gmii_rx_dv_m_clr = 1;
gmii_rx_er_m_clr = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e8b290>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e8b410>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e8b590>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e8b710>]",
		style=filled,
		typ=Block];
	"1097:IF" -> "1098:BL"	 [cond="['check_end_R_R_K28_5']",
		label=check_end_R_R_K28_5,
		lineno=1097];
	"602:AL" -> "603:IF"	 [cond="[]",
		lineno=None];
	"703:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f700935c050>",
		fillcolor=springgreen,
		label="703:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"701:AL" -> "703:IF"	 [cond="[]",
		lineno=None];
	"660:AL" -> "661:IF"	 [cond="[]",
		lineno=None];
	"811:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009387c90>",
		fillcolor=firebrick,
		label="811:NS
gmii_rx_er <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7009387c90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"811:IF" -> "811:NS"	 [cond="['gmii_rx_er_m_clr']",
		label=gmii_rx_er_m_clr,
		lineno=811];
	"1050:IF" -> "1058:IF"	 [cond="['check_end_R_R_R']",
		label="!(check_end_R_R_R)",
		lineno=1050];
	"1050:IF" -> "1051:BL"	 [cond="['check_end_R_R_R']",
		label=check_end_R_R_R,
		lineno=1050];
	"915:CA" -> "916:BL"	 [cond="[]",
		lineno=None];
	"1140:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"1091:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7008e5bf10>",
		fillcolor=springgreen,
		label="1091:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1091:IF" -> "1092:BL"	 [cond="['check_end_R_R_R']",
		label=check_end_R_R_R,
		lineno=1091];
	"1091:IF" -> "1097:IF"	 [cond="['check_end_R_R_R']",
		label="!(check_end_R_R_R)",
		lineno=1091];
	"758:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f70093866d0>",
		fillcolor=springgreen,
		label="758:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"757:AL" -> "758:IF"	 [cond="[]",
		lineno=None];
	"1106:IF" -> "1107:BL"	 [cond="['check_end_R_R_S']",
		label=check_end_R_R_S,
		lineno=1106];
	"472:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f70092ccdd0>",
		clk_sens=True,
		fillcolor=gold,
		label="472:AL",
		sens="['ck', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'rx_even', 'ebi_rxd_d2', 'ebi_K', 'ebi_rxd_d1', 'ebi_rxd', 'ebi_K_d2', 'ebi_K_d1']"];
	"472:AL" -> "473:IF"	 [cond="[]",
		lineno=None];
	"1014:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"1155:IF" -> "1156:IF"	 [cond="['sync_status_d3']",
		label="!((~sync_status_d3))",
		lineno=1155];
	"1155:IF" -> "1155:BS"	 [cond="['sync_status_d3']",
		label="(~sync_status_d3)",
		lineno=1155];
	"Leaf_542:AL" -> "849:AS";
	"Leaf_542:AL" -> "864:AL";
	"372:NS" -> "Leaf_357:AL"	 [cond="[]",
		lineno=None];
	"636:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70095fd050>",
		fillcolor=firebrick,
		label="636:NS
rx_config_cnt <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70095fd050>]",
		style=filled,
		typ=NonblockingSubstitution];
	"636:IF" -> "636:NS"	 [cond="['rx_config_cnt_m_rst']",
		label=rx_config_cnt_m_rst,
		lineno=636];
	"667:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70096086d0>",
		fillcolor=firebrick,
		label="667:NS
ability_matched_reg <= ability;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70096086d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"667:IF" -> "667:NS"	 [cond="['ability_matched']",
		label=ability_matched,
		lineno=667];
	"1031:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"951:CA" -> "952:BL"	 [cond="[]",
		lineno=None];
	"460:AL" -> "461:IF"	 [cond="[]",
		lineno=None];
	"551:BL" -> "Leaf_542:AL"	 [cond="[]",
		lineno=None];
	"373:NS" -> "Leaf_357:AL"	 [cond="[]",
		lineno=None];
	"674:AS" -> "677:AS";
	"634:BL" -> "635:IF"	 [cond="[]",
		lineno=None];
	"1081:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7008e5b590>",
		fillcolor=turquoise,
		label="1081:BL
gmii_rx_dv_m_clr = 1;
gmii_rx_er_m_set = 1;
gmii_rxd_trr_extend_m_set = 1;
pcs_rx_next = S_PCS_RX_EPD2_CHECK_END;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e5b290>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e5b450>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e5b5d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e5b750>]",
		style=filled,
		typ=Block];
	"1081:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"988:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e5c810>",
		fillcolor=cadetblue,
		label="988:BS
gmii_rxd_false_carrier_m_set = 1;
gmii_rxd_false_carrier_m_set = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e5c810>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e5c810>]",
		style=filled,
		typ=BlockingSubstitution];
	"988:BS" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"Leaf_410:AL" -> "839:AS";
	"Leaf_410:AL" -> "486:AL";
	"Leaf_410:AL" -> "500:AL";
	"Leaf_410:AL" -> "453:AS";
	"Leaf_410:AL" -> "841:AS";
	"Leaf_410:AL" -> "446:AS";
	"Leaf_410:AL" -> "566:AL";
	"Leaf_410:AL" -> "528:AL";
	"Leaf_410:AL" -> "864:AL";
	"Leaf_410:AL" -> "600:AS";
	"Leaf_410:AL" -> "737:AL";
	"Leaf_410:AL" -> "602:AL";
	"Leaf_410:AL" -> "472:AL";
	"410:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f700971bb10>",
		clk_sens=True,
		fillcolor=gold,
		label="410:AL",
		sens="['ck', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'rx_even_d2', 'rx_even_d1', 'carrier_detect_d1', 'carrier_detect_d2', 'ebi_K', 'sync_status', 'rx_even', 'ebi_rxd_d2', '\
sync_status_d2', 'sync_status_d1', 'ebi_rxd_d1', 'carrier_detect', 'ebi_rxd', 'ebi_K_d2', 'ebi_K_d1']"];
	"Leaf_410:AL" -> "410:AL";
	"514:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f70092ebcd0>",
		clk_sens=True,
		fillcolor=gold,
		label="514:AL",
		sens="['ck', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'rx_even', 'ebi_rxd_d2', 'ebi_K', 'ebi_rxd_d1', 'ebi_rxd', 'ebi_K_d2', 'ebi_K_d1']"];
	"Leaf_410:AL" -> "514:AL";
	"542:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f70092f5250>",
		clk_sens=True,
		fillcolor=gold,
		label="542:AL",
		sens="['ck', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'ebi_rxd_d2', 'ebi_K_d2']"];
	"Leaf_410:AL" -> "542:AL";
	"822:NS" -> "Leaf_820:AL"	 [cond="[]",
		lineno=None];
	"1089:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7008e5b950>",
		fillcolor=turquoise,
		label="1089:BL
pcs_rx_next = (check_end_R_R_R)? S_PCS_RX_TRR_EXTEND : 
              (check_end_R_R_K28_5)? S_PCS_RX_TRI_RRI : 
              (\
check_end_R_R_S)? S_PCS_RX_PACKET_BURST_RRS : S_PCS_RX_EXTEND_ERR;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e8bb90>]",
		style=filled,
		typ=Block];
	"1089:BL" -> "1091:IF"	 [cond="[]",
		lineno=None];
	"370:NS" -> "Leaf_357:AL"	 [cond="[]",
		lineno=None];
	"807:NS" -> "Leaf_805:AL"	 [cond="[]",
		lineno=None];
	"667:NS" -> "Leaf_660:AL"	 [cond="[]",
		lineno=None];
	"758:IF" -> "759:NS"	 [cond="['reset']",
		label=reset,
		lineno=758];
	"758:IF" -> "761:BL"	 [cond="['reset']",
		label="!(reset)",
		lineno=758];
	"929:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"410:AL" -> "411:IF"	 [cond="[]",
		lineno=None];
	"726:IF" -> "726:NS"	 [cond="['rudi_CONF_m_set']",
		label=rudi_CONF_m_set,
		lineno=726];
	"369:NS" -> "Leaf_357:AL"	 [cond="[]",
		lineno=None];
	"504:NS" -> "Leaf_500:AL"	 [cond="[]",
		lineno=None];
	"532:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70092dff90>",
		fillcolor=firebrick,
		label="532:NS
check_end_R_R_S <= ebi_K_d2 & (ebi_rxd_d2 == 8'hf7) & (ebi_K_d1 & (ebi_rxd_d1 == 8'hf7)) & (ebi_K & (ebi_rxd == 8'hfb));",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70092dff90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"529:IF" -> "532:NS"	 [cond="['reset']",
		label="!(reset)",
		lineno=529];
	"530:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70092df910>",
		fillcolor=firebrick,
		label="530:NS
check_end_R_R_S <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f70092df910>]",
		style=filled,
		typ=NonblockingSubstitution];
	"529:IF" -> "530:NS"	 [cond="['reset']",
		label=reset,
		lineno=529];
	"1098:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"706:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7009368f90>",
		fillcolor=turquoise,
		label="706:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"706:BL" -> "707:IF"	 [cond="[]",
		lineno=None];
	"763:IF" -> "763:NS"	 [cond="['receiving_m_clr']",
		label=receiving_m_clr,
		lineno=763];
	"1088:CA" -> "1089:BL"	 [cond="[]",
		lineno=None];
	"375:IF" -> "375:NS"	 [cond="['ge_x_pcs_rx_stats_inc']",
		label="ge_x_pcs_rx_stats_inc[7]",
		lineno=375];
	"632:NS" -> "Leaf_630:AL"	 [cond="[]",
		lineno=None];
	"811:NS" -> "Leaf_805:AL"	 [cond="[]",
		lineno=None];
	"Leaf_528:AL"	 [def_var="['check_end_R_R_S']",
		label="Leaf_528:AL"];
	"532:NS" -> "Leaf_528:AL"	 [cond="[]",
		lineno=None];
	"514:AL" -> "515:IF"	 [cond="[]",
		lineno=None];
	"740:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f700935da50>",
		fillcolor=firebrick,
		label="740:NS
gmii_rxd <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f700935da50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"740:NS" -> "Leaf_737:AL"	 [cond="[]",
		lineno=None];
	"900:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"Leaf_390:AL" -> "864:AL";
	"724:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f700935cfd0>",
		fillcolor=springgreen,
		label="724:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"723:BL" -> "724:IF"	 [cond="[]",
		lineno=None];
	"724:IF" -> "725:IF"	 [cond="['rudi_INVALID_m_set']",
		label="!(rudi_INVALID_m_set)",
		lineno=724];
	"724:IF" -> "724:NS"	 [cond="['rudi_INVALID_m_set']",
		label=rudi_INVALID_m_set,
		lineno=724];
	"371:NS" -> "Leaf_357:AL"	 [cond="[]",
		lineno=None];
	"608:BL" -> "609:IF"	 [cond="[]",
		lineno=None];
	"530:NS" -> "Leaf_528:AL"	 [cond="[]",
		lineno=None];
	"636:NS" -> "Leaf_630:AL"	 [cond="[]",
		lineno=None];
	"1147:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7008e7bc90>",
		fillcolor=turquoise,
		label="1147:BL
gmii_rx_er_m_clr = 1;
gmii_rxd_m_set = 1;
pcs_rx_next = S_PCS_RX_RECEIVE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e7bb10>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e7bcd0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e7be50>]",
		style=filled,
		typ=Block];
	"1147:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"542:AL" -> "543:IF"	 [cond="[]",
		lineno=None];
	"805:AL" -> "806:IF"	 [cond="[]",
		lineno=None];
	"703:IF" -> "704:NS"	 [cond="['reset']",
		label=reset,
		lineno=703];
	"703:IF" -> "706:BL"	 [cond="['reset']",
		label="!(reset)",
		lineno=703];
	"1133:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7008e7b310>",
		fillcolor=turquoise,
		label="1133:BL
gmii_rx_er_m_set = 1;
pcs_rx_next = S_PCS_RX_EPD2_CHECK_END;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e7b290>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7008e7b450>]",
		style=filled,
		typ=Block];
	"1132:CA" -> "1133:BL"	 [cond="[]",
		lineno=None];
	"Leaf_757:AL" -> "864:AL";
	"978:BS" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"1146:CA" -> "1147:BL"	 [cond="[]",
		lineno=None];
	"1133:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"1080:CA" -> "1081:BL"	 [cond="[]",
		lineno=None];
	"518:NS" -> "Leaf_514:AL"	 [cond="[]",
		lineno=None];
	"Leaf_528:AL" -> "864:AL";
	"567:IF" -> "568:BL"	 [cond="['reset']",
		label=reset,
		lineno=567];
	"567:IF" -> "574:BL"	 [cond="['reset']",
		label="!(reset)",
		lineno=567];
	"708:NS" -> "Leaf_701:AL"	 [cond="[]",
		lineno=None];
	"988:IF" -> "988:BS"	 [cond="['SPD_match']",
		label="!(SPD_match)",
		lineno=988];
	"891:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"368:NS" -> "Leaf_357:AL"	 [cond="[]",
		lineno=None];
	"739:IF" -> "742:BL"	 [cond="['reset']",
		label="!(reset)",
		lineno=739];
	"739:IF" -> "740:NS"	 [cond="['reset']",
		label=reset,
		lineno=739];
	"942:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"1024:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"374:NS" -> "Leaf_357:AL"	 [cond="[]",
		lineno=None];
}
