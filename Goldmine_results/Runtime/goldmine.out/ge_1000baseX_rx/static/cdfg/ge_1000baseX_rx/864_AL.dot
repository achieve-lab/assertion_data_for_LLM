strict digraph "" {
	node [label="\N"];
	"899:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f702a65d6d0>",
		fillcolor=turquoise,
		label="899:BL
receiving_m_clr = 1;
gmii_rx_er_m_set = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a65d390>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a65d550>]",
		style=filled,
		typ=Block];
	"Leaf_864:AL"	 [def_var="['receiving_m_set', 'gmii_rxd_ext_err_m_set', 'receiving_m_clr', 'gmii_rxd_trr_extend_m_set', 'rudi_INVALID_m_set', 'rudi_IDLE_m_\
set', 'pcs_rx_next', 'gmii_rx_er_m_clr', 'gmii_rxd_packet_burst_m_set', 'rx_config_cnt_m_inc', 'gmii_rx_dv_m_set', 'idle_cnt_m_inc', '\
gmii_rx_er_m_set', 'gmii_rxd_false_carrier_m_set', 'ge_x_pcs_rx_stats_inc', 'gmii_rx_dv_m_clr', 'rudi_CONF_m_set', 'rx_config_cnt_\
m_rst', 'gmii_rxd_preamble_m_set', 'gmii_rxd_m_set', 'rx_config_lo_read', 'idle_cnt_m_clr', 'rx_config_hi_read']",
		label="Leaf_864:AL"];
	"899:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"1154:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6b6810>",
		fillcolor=cadetblue,
		label="1154:BS
pcs_rx_next = S_PCS_RX_LINK_FAILED;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6b6810>]",
		style=filled,
		typ=BlockingSubstitution];
	"1154:BS" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"905:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f702a65dc50>",
		fillcolor=lightcyan,
		label="905:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"906:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f702a65dd10>",
		fillcolor=turquoise,
		label="906:BL
rx_config_cnt_m_rst = 1;
receiving_m_clr = 1;
gmii_rx_dv_m_clr = 1;
gmii_rx_er_m_clr = 1;
pcs_rx_next = (K28_5_match & rx_\
even_d3)? S_PCS_RX_K : S_PCS_RX_WAIT_K;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a65dd50>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a65ded0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a667090>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a667210>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a667390>]",
		style=filled,
		typ=Block];
	"905:CA" -> "906:BL"	 [cond="[]",
		lineno=None];
	"1156:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6ea150>",
		fillcolor=cadetblue,
		label="1156:BS
pcs_rx_next = S_PCS_RX_WAIT_K;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6ea150>]",
		style=filled,
		typ=BlockingSubstitution];
	"1156:BS" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"890:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f702a667d90>",
		fillcolor=lightcyan,
		label="890:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"891:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f702a667e50>",
		fillcolor=turquoise,
		label="891:BL
pcs_rx_next = S_PCS_RX_LINK_FAILED;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a667e90>]",
		style=filled,
		typ=Block];
	"890:CA" -> "891:BL"	 [cond="[]",
		lineno=None];
	"970:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f702a670ed0>",
		fillcolor=turquoise,
		label="970:BL
rx_config_cnt_m_rst = 1;
idle_cnt_m_inc = ~idle_match;
rudi_IDLE_m_set = 1;
pcs_rx_next = (~K28_5_match & ~xmit_DATA)? S_\
PCS_RX_INVALID : 
              (xmit_DATA_CD_SPD)? S_PCS_RX_RECEIVE : 
              (xmit_DATA_nCD | K28_5_match)? S_PCS_RX_K : 
              (\
xmit_DATA_CD_nSPD)? S_PCS_RX_FALSE_CARRIER : S_PCS_RX_IDLE_D;
ge_x_pcs_rx_stats_inc[0] = xmit_DATA_CD_SPD;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a670050>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6701d0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a670390>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a670510>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a670c90>]",
		style=filled,
		typ=Block];
	"981:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f702a678310>",
		fillcolor=springgreen,
		label="981:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"970:BL" -> "981:IF"	 [cond="[]",
		lineno=None];
	"978:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f702a670f10>",
		fillcolor=springgreen,
		label="978:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"970:BL" -> "978:IF"	 [cond="[]",
		lineno=None];
	"983:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f702a678550>",
		fillcolor=springgreen,
		label="983:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"970:BL" -> "983:IF"	 [cond="[]",
		lineno=None];
	"1066:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a683310>",
		fillcolor=cadetblue,
		label="1066:BS
gmii_rx_er_m_set = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a683310>]",
		style=filled,
		typ=BlockingSubstitution];
	"1066:BS" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"1031:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f702a683c90>",
		fillcolor=turquoise,
		label="1031:BL
ge_x_pcs_rx_stats_inc[3] = 1;
receiving_m_clr = 1;
gmii_rx_dv_m_clr = 1;
gmii_rx_er_m_clr = 1;
pcs_rx_next = S_PCS_RX_TRI_\
RRI;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a683490>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a683690>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a683810>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a683990>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a683b10>]",
		style=filled,
		typ=Block];
	"1031:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"1021:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f702a69e190>",
		fillcolor=turquoise,
		label="1021:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1023:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f702a69e1d0>",
		fillcolor=springgreen,
		label="1023:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1021:BL" -> "1023:IF"	 [cond="[]",
		lineno=None];
	"951:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f702a683cd0>",
		fillcolor=lightcyan,
		label="951:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"952:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f702a683d90>",
		fillcolor=turquoise,
		label="952:BL
pcs_rx_next = (K28_5_match & rx_even_d3)? S_PCS_RX_K : S_PCS_RX_INVALID;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a683dd0>]",
		style=filled,
		typ=Block];
	"951:CA" -> "952:BL"	 [cond="[]",
		lineno=None];
	"916:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f702a6d7590>",
		fillcolor=turquoise,
		label="916:BL
receiving_m_clr = 1;
gmii_rx_dv_m_clr = 1;
gmii_rx_er_m_clr = 1;
rudi_IDLE_m_set = xmit_nDATA & ~ebi_K_d3 & ~D21_5_match & ~\
D2_2_match | xmit_DATA & ~D21_5_match & ~D2_2_match;
pcs_rx_next = (D21_5_match | D2_2_match)? S_PCS_RX_CONFIG_CB : 
              (\
xmit_nDATA & ~ebi_K_d3 & ~D21_5_match & ~D2_2_match)? S_PCS_RX_IDLE_D : 
              (xmit_DATA & ~D21_5_match & ~D2_2_match)? \
S_PCS_RX_IDLE_D : 
              (xmit_nDATA & ebi_K_d3)? S_PCS_RX_INVALID : S_PCS_RX_INVALID;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6cf0d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6cf250>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6cf3d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6cf550>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6cfb10>]",
		style=filled,
		typ=Block];
	"916:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"1003:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f702a6d7b90>",
		fillcolor=lightcyan,
		label="1003:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1004:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f702a6d7c50>",
		fillcolor=turquoise,
		label="1004:BL
gmii_rx_er_m_set = 1;
gmii_rxd_false_carrier_m_set = 1;
pcs_rx_next = (K28_5_match & rx_even_d3)? S_PCS_RX_K : S_PCS_RX_\
FALSE_CARRIER;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6d7c90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6d7e10>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6d7f50>]",
		style=filled,
		typ=Block];
	"1003:CA" -> "1004:BL"	 [cond="[]",
		lineno=None];
	"1117:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f702a6d7b50>",
		fillcolor=turquoise,
		label="1117:BL
gmii_rx_dv_m_clr = 1;
gmii_rxd_packet_burst_m_set = 1;
pcs_rx_next = (SPD_match)? S_PCS_RX_START_OF_PACKET : S_PCS_RX_PACKET_\
BURST_RRS;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6d75d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6d7750>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6d78d0>]",
		style=filled,
		typ=Block];
	"1117:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"957:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f702a6e0250>",
		fillcolor=lightcyan,
		label="957:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"958:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f702a6e0310>",
		fillcolor=turquoise,
		label="958:BL
rudi_INVALID_m_set = xmit == 1;
receiving_m_set = xmit_DATA;
pcs_rx_next = (K28_5_match & rx_even_d3)? S_PCS_RX_K : 
              (~\
K28_5_match & rx_even_d3)? S_PCS_RX_WAIT_K : S_PCS_RX_INVALID;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6e0350>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6e0550>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6e06d0>]",
		style=filled,
		typ=Block];
	"957:CA" -> "958:BL"	 [cond="[]",
		lineno=None];
	"929:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f702a68dd50>",
		fillcolor=turquoise,
		label="929:BL
rx_config_cnt_m_inc = ~rx_config_cnt_done;
rx_config_lo_read = ~ebi_K_d3;
receiving_m_clr = 1;
gmii_rx_dv_m_clr = 1;
gmii_\
rx_er_m_clr = 1;
pcs_rx_next = (ebi_K_d3)? S_PCS_RX_INVALID : S_PCS_RX_CONFIG_CC;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a68dd90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a68df90>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a695190>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a695310>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a695490>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a695610>]",
		style=filled,
		typ=Block];
	"929:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"865:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f702a6fcc50>",
		fillcolor=turquoise,
		label="865:BL
pcs_rx_next = pcs_rx_present;
rx_config_lo_read = 0;
rx_config_hi_read = 0;
receiving_m_set = 0;
receiving_m_clr = 0;
gmii_\
rxd_false_carrier_m_set = 0;
gmii_rxd_preamble_m_set = 0;
gmii_rxd_ext_err_m_set = 0;
gmii_rxd_packet_burst_m_set = 0;
gmii_rxd_\
trr_extend_m_set = 0;
gmii_rxd_m_set = 0;
idle_cnt_m_clr = 0;
idle_cnt_m_inc = 0;
gmii_rx_er_m_set = 0;
gmii_rx_er_m_clr = 0;
gmii_\
rx_dv_m_set = 0;
gmii_rx_dv_m_clr = 0;
rudi_INVALID_m_set = 0;
rudi_IDLE_m_set = 0;
rudi_CONF_m_set = 0;
rx_config_cnt_m_inc = 0;
\
rx_config_cnt_m_rst = 0;
ge_x_pcs_rx_stats_inc = 16'h0000;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6fcc90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6fcdd0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6fcf10>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a703090>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a7031d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a703310>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a703450>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a703590>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a7036d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a703810>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a703950>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a703a90>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a703bd0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a703d10>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a703e50>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a703f90>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a68d110>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a68d250>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a68d390>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a68d4d0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a68d610>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a68d750>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a68d890>]",
		style=filled,
		typ=Block];
	"1154:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f702a6b6590>",
		fillcolor=springgreen,
		label="1154:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"865:BL" -> "1154:IF"	 [cond="[]",
		lineno=None];
	"888:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f702a68d9d0>",
		fillcolor=linen,
		label="888:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"865:BL" -> "888:CS"	 [cond="[]",
		lineno=None];
	"986:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f702a678790>",
		fillcolor=turquoise,
		label="986:BL
receiving_m_set = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6787d0>]",
		style=filled,
		typ=Block];
	"988:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f702a678950>",
		fillcolor=springgreen,
		label="988:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"986:BL" -> "988:IF"	 [cond="[]",
		lineno=None];
	"1088:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f702a6a6950>",
		fillcolor=lightcyan,
		label="1088:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1089:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f702a6a6a10>",
		fillcolor=turquoise,
		label="1089:BL
pcs_rx_next = (check_end_R_R_R)? S_PCS_RX_TRR_EXTEND : 
              (check_end_R_R_K28_5)? S_PCS_RX_TRI_RRI : 
              (\
check_end_R_R_S)? S_PCS_RX_PACKET_BURST_RRS : S_PCS_RX_EXTEND_ERR;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6ae790>]",
		style=filled,
		typ=Block];
	"1088:CA" -> "1089:BL"	 [cond="[]",
		lineno=None];
	"1076:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f702a6ea0d0>",
		fillcolor=turquoise,
		label="1076:BL
pcs_rx_next = (K28_5_match)? S_PCS_RX_K : S_PCS_RX_TRI_RRI;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6e0e50>]",
		style=filled,
		typ=Block];
	"1076:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"1156:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f702a6ea110>",
		fillcolor=springgreen,
		label="1156:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1156:IF" -> "1156:BS"	 [cond="['soft_reset']",
		label=soft_reset,
		lineno=1156];
	"1124:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f702a6eac50>",
		fillcolor=turquoise,
		label="1124:BL
gmii_rx_dv_m_clr = 1;
gmii_rxd_ext_err_m_set = 1;
pcs_rx_next = (SPD_match)? S_PCS_RX_START_OF_PACKET : 
              (\
K28_5_match & rx_even_d3)? S_PCS_RX_K : 
              (~SPD_match & ~K28_5_match & rx_even_d3)? S_PCS_RX_EPD2_CHECK_END : S_PCS_\
RX_EXTEND_ERR;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6ea310>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6ea490>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6ea610>]",
		style=filled,
		typ=Block];
	"1124:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"1081:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f702a6f32d0>",
		fillcolor=turquoise,
		label="1081:BL
gmii_rx_dv_m_clr = 1;
gmii_rx_er_m_set = 1;
gmii_rxd_trr_extend_m_set = 1;
pcs_rx_next = S_PCS_RX_EPD2_CHECK_END;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6eac90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6eae10>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6eaf90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6f3150>]",
		style=filled,
		typ=Block];
	"1081:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"1070:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f702a6f3310>",
		fillcolor=lightcyan,
		label="1070:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1071:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f702a6f33d0>",
		fillcolor=turquoise,
		label="1071:BL
pcs_rx_next = (D21_5_match | D2_2_match)? S_PCS_RX_CONFIG_CB : S_PCS_RX_IDLE_D;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6f3410>]",
		style=filled,
		typ=Block];
	"1070:CA" -> "1071:BL"	 [cond="[]",
		lineno=None];
	"941:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f702a6f3710>",
		fillcolor=lightcyan,
		label="941:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"942:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f702a6f37d0>",
		fillcolor=turquoise,
		label="942:BL
rx_config_hi_read = ~ebi_K_d3;
idle_cnt_m_clr = 1;
rudi_CONF_m_set = ~ebi_K_d3;
pcs_rx_next = (ebi_K_d3)? S_PCS_RX_INVALID : \
S_PCS_RX_CONFIG_CD;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6f3810>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6f39d0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6f3b50>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6f3d10>]",
		style=filled,
		typ=Block];
	"941:CA" -> "942:BL"	 [cond="[]",
		lineno=None];
	"1013:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f702a695950>",
		fillcolor=lightcyan,
		label="1013:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1014:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f702a695a10>",
		fillcolor=turquoise,
		label="1014:BL
gmii_rx_dv_m_set = 1;
gmii_rx_er_m_clr = 1;
gmii_rxd_preamble_m_set = 1;
pcs_rx_next = S_PCS_RX_RECEIVE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a695a50>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a695c10>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a695d90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a695f10>]",
		style=filled,
		typ=Block];
	"1013:CA" -> "1014:BL"	 [cond="[]",
		lineno=None];
	"988:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a678990>",
		fillcolor=cadetblue,
		label="988:BS
gmii_rxd_false_carrier_m_set = 1;
gmii_rxd_false_carrier_m_set = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a678990>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a678990>]",
		style=filled,
		typ=BlockingSubstitution];
	"988:BS" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"899:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f702a6fc310>",
		fillcolor=springgreen,
		label="899:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"899:IF" -> "899:BL"	 [cond="['receiving']",
		label=receiving,
		lineno=899];
	"900:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f702a6fc350>",
		fillcolor=turquoise,
		label="900:BL
gmii_rx_dv_m_clr = 1;
gmii_rx_er_m_clr = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6fc390>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6fc510>]",
		style=filled,
		typ=Block];
	"899:IF" -> "900:BL"	 [cond="['receiving']",
		label="!(receiving)",
		lineno=899];
	"1147:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f702a6678d0>",
		fillcolor=turquoise,
		label="1147:BL
gmii_rx_er_m_clr = 1;
gmii_rxd_m_set = 1;
pcs_rx_next = S_PCS_RX_RECEIVE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a667910>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a667a90>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a667c10>]",
		style=filled,
		typ=Block];
	"1147:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"1080:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f702a6a6850>",
		fillcolor=lightcyan,
		label="1080:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1080:CA" -> "1081:BL"	 [cond="[]",
		lineno=None];
	"984:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f702a6786d0>",
		fillcolor=turquoise,
		label="984:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"985:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f702a678750>",
		fillcolor=springgreen,
		label="985:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"984:BL" -> "985:IF"	 [cond="[]",
		lineno=None];
	"1116:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f702a6fc6d0>",
		fillcolor=lightcyan,
		label="1116:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1116:CA" -> "1117:BL"	 [cond="[]",
		lineno=None];
	"981:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a667650>",
		fillcolor=cadetblue,
		label="981:BS
gmii_rx_er_m_clr = 1;
gmii_rx_er_m_clr = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a667650>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a667650>]",
		style=filled,
		typ=BlockingSubstitution];
	"981:BS" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"1132:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f702a6aed50>",
		fillcolor=lightcyan,
		label="1132:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1133:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f702a6aee10>",
		fillcolor=turquoise,
		label="1133:BL
gmii_rx_er_m_set = 1;
pcs_rx_next = S_PCS_RX_EPD2_CHECK_END;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6aee50>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6b6050>]",
		style=filled,
		typ=Block];
	"1132:CA" -> "1133:BL"	 [cond="[]",
		lineno=None];
	"1051:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f702a69e3d0>",
		fillcolor=turquoise,
		label="1051:BL
ge_x_pcs_rx_stats_inc[6] = 1;
gmii_rx_er_m_set = 1;
pcs_rx_next = S_PCS_RX_EPD2_CHECK_END;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a69e410>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a69e610>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a69e790>]",
		style=filled,
		typ=Block];
	"1051:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"978:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a670f50>",
		fillcolor=cadetblue,
		label="978:BS
gmii_rx_dv_m_clr = 1;
gmii_rx_dv_m_clr = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a670f50>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a670f50>]",
		style=filled,
		typ=BlockingSubstitution];
	"978:BS" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"969:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f702a695850>",
		fillcolor=lightcyan,
		label="969:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"969:CA" -> "970:BL"	 [cond="[]",
		lineno=None];
	"1146:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f702a667810>",
		fillcolor=lightcyan,
		label="1146:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1146:CA" -> "1147:BL"	 [cond="[]",
		lineno=None];
	"1133:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"1041:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f702a69e950>",
		fillcolor=turquoise,
		label="1041:BL
ge_x_pcs_rx_stats_inc[5] = 1;
gmii_rx_dv_m_clr = 1;
gmii_rx_er_m_set = 1;
gmii_rxd_trr_extend_m_set = 1;
pcs_rx_next = S_\
PCS_RX_EPD2_CHECK_END;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a69e990>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a69eb90>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a69ed10>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a69ee90>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6a6050>]",
		style=filled,
		typ=Block];
	"1041:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"952:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"906:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"958:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"1107:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f702a6e0b90>",
		fillcolor=turquoise,
		label="1107:BL
ge_x_pcs_rx_stats_inc[7] = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6e0bd0>]",
		style=filled,
		typ=Block];
	"1107:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"1097:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f702a6a6a90>",
		fillcolor=springgreen,
		label="1097:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1098:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f702a6a6ad0>",
		fillcolor=turquoise,
		label="1098:BL
ge_x_pcs_rx_stats_inc[4] = 1;
receiving_m_clr = 1;
gmii_rx_dv_m_clr = 1;
gmii_rx_er_m_clr = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6a6b10>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6a6d50>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6a6ed0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6ae090>]",
		style=filled,
		typ=Block];
	"1097:IF" -> "1098:BL"	 [cond="['check_end_R_R_K28_5']",
		label=check_end_R_R_K28_5,
		lineno=1097];
	"1106:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f702a6e0b50>",
		fillcolor=springgreen,
		label="1106:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1097:IF" -> "1106:IF"	 [cond="['check_end_R_R_K28_5']",
		label="!(check_end_R_R_K28_5)",
		lineno=1097];
	"1004:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"981:IF" -> "981:BS"	 [cond="['xmit_DATA_CD_nSPD_nK28_5']",
		label="!(xmit_DATA_CD_nSPD_nK28_5)",
		lineno=981];
	"991:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a678590>",
		fillcolor=cadetblue,
		label="991:BS
receiving_m_clr = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a678590>]",
		style=filled,
		typ=BlockingSubstitution];
	"991:BS" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"1071:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"1059:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f702a65dc10>",
		fillcolor=turquoise,
		label="1059:BL
ge_x_pcs_rx_stats_inc[1] = 1;
gmii_rx_er_m_clr = 1;
gmii_rxd_m_set = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a65d710>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a65d910>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a65da90>]",
		style=filled,
		typ=Block];
	"1059:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"1030:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f702a69e210>",
		fillcolor=springgreen,
		label="1030:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1023:IF" -> "1030:IF"	 [cond="['early_end']",
		label="!(early_end)",
		lineno=1023];
	"1024:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f702a6a6250>",
		fillcolor=turquoise,
		label="1024:BL
ge_x_pcs_rx_stats_inc[2] = 1;
gmii_rx_er_m_set = 1;
pcs_rx_next = S_PCS_RX_EARLY_END;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6a6290>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6a6490>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6a6610>]",
		style=filled,
		typ=Block];
	"1023:IF" -> "1024:BL"	 [cond="['early_end']",
		label=early_end,
		lineno=1023];
	"864:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f702a6fcb50>",
		clk_sens=False,
		fillcolor=gold,
		label="864:AL",
		sens="['rx_even_d3', 'xmit', 'xmit_DATA_CD_SPD', 'pcs_rx_present', 'S_PCS_RX_TRI_RRI', 'K28_5_match', 'S_PCS_RX_IDLE_D', 'S_PCS_RX_EARLY_\
END', 'SPD_match', 'S_PCS_RX_CONFIG_CD', 'S_PCS_RX_TRR_EXTEND', 'ebi_K_d3', 'S_PCS_RX_FALSE_CARRIER', 'xmit_DATA_CD_nSPD', 'D21_\
5_match', 'S_PCS_RX_INVALID', 'check_end_R_R_K28_5', 'S_PCS_RX_EXTEND_ERR', 'D2_2_match', 'xmit_DATA_nCD', 'xmit_nDATA', 'xmit_DATA', '\
check_end_R_R_R', 'check_end_R_R_S', 'S_PCS_RX_PACKET_BURST_RRS', 'S_PCS_RX_LINK_FAILED', 'S_PCS_RX_WAIT_K', 'S_PCS_RX_CONFIG_CB', '\
S_PCS_RX_CONFIG_CC', 'S_PCS_RX_RECEIVE', 'rx_config_cnt_done', 'S_PCS_RX_START_OF_PACKET', 'S_PCS_RX_K', 'S_PCS_RX_EPD2_CHECK_END', '\
idle_match']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rx_even_d3', 'xmit', 'xmit_DATA_CD_SPD', 'pcs_rx_present', 'early_end', 'xmit_DATA_CD', 'S_PCS_RX_TRI_RRI', 'K28_5_match', 'S_\
PCS_RX_IDLE_D', 'S_PCS_RX_EARLY_END', 'check_end_T_R_K28_5', 'ebi_K_d3', 'S_PCS_RX_CONFIG_CD', 'signal_detect', 'rx_config_cnt_done', '\
S_PCS_RX_TRR_EXTEND', 'SPD_match', 'S_PCS_RX_FALSE_CARRIER', 'D21_5_match', 'S_PCS_RX_CONFIG_CC', 'check_end_R_R_K28_5', 'S_PCS_\
RX_EXTEND_ERR', 'D2_2_match', 'receiving', 'xmit_DATA_nCD', 'S_PCS_RX_CONFIG_CB', 'xmit_nDATA', 'xmit_DATA', 'check_end_R_R_R', '\
check_end_R_R_S', 'S_PCS_RX_PACKET_BURST_RRS', 'S_PCS_RX_LINK_FAILED', 'S_PCS_RX_WAIT_K', 'xmit_DATA_CD_nSPD', 'S_PCS_RX_INVALID', '\
xmit_DATA_CD_nSPD_nK28_5', 'S_PCS_RX_RECEIVE', 'check_end_T_R_R', 'soft_reset', 'sync_status_d3', 'S_PCS_RX_START_OF_PACKET', 'S_\
PCS_RX_K', 'S_PCS_RX_EPD2_CHECK_END', 'idle_match']"];
	"864:AL" -> "865:BL"	 [cond="[]",
		lineno=None];
	"1058:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f702a69e2d0>",
		fillcolor=springgreen,
		label="1058:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1058:IF" -> "1066:BS"	 [cond="['ebi_K_d3']",
		label="!((~ebi_K_d3))",
		lineno=1058];
	"1058:IF" -> "1059:BL"	 [cond="['ebi_K_d3']",
		label="(~ebi_K_d3)",
		lineno=1058];
	"978:IF" -> "978:BS"	 [cond="['xmit_DATA_CD_SPD']",
		label="!(xmit_DATA_CD_SPD)",
		lineno=978];
	"1030:IF" -> "1031:BL"	 [cond="['check_end_T_R_K28_5']",
		label=check_end_T_R_K28_5,
		lineno=1030];
	"1040:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f702a69e250>",
		fillcolor=springgreen,
		label="1040:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1030:IF" -> "1040:IF"	 [cond="['check_end_T_R_K28_5']",
		label="!(check_end_T_R_K28_5)",
		lineno=1030];
	"1154:IF" -> "1154:BS"	 [cond="['signal_detect']",
		label="(~signal_detect)",
		lineno=1154];
	"1155:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f702a6b65d0>",
		fillcolor=springgreen,
		label="1155:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1154:IF" -> "1155:IF"	 [cond="['signal_detect']",
		label="!((~signal_detect))",
		lineno=1154];
	"1155:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6b6610>",
		fillcolor=cadetblue,
		label="1155:BS
pcs_rx_next = S_PCS_RX_LINK_FAILED;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6b6610>]",
		style=filled,
		typ=BlockingSubstitution];
	"1155:BS" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"896:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f702a6fc2d0>",
		fillcolor=turquoise,
		label="896:BL
rudi_INVALID_m_set = xmit_nDATA;
pcs_rx_next = S_PCS_RX_WAIT_K;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6f3f90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6fc150>]",
		style=filled,
		typ=Block];
	"896:BL" -> "899:IF"	 [cond="[]",
		lineno=None];
	"1020:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f702a69e0d0>",
		fillcolor=lightcyan,
		label="1020:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1020:CA" -> "1021:BL"	 [cond="[]",
		lineno=None];
	"1050:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f702a69e290>",
		fillcolor=springgreen,
		label="1050:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1050:IF" -> "1051:BL"	 [cond="['check_end_R_R_R']",
		label=check_end_R_R_R,
		lineno=1050];
	"1050:IF" -> "1058:IF"	 [cond="['check_end_R_R_R']",
		label="!(check_end_R_R_R)",
		lineno=1050];
	"915:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f702a68dbd0>",
		fillcolor=lightcyan,
		label="915:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"915:CA" -> "916:BL"	 [cond="[]",
		lineno=None];
	"1140:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f702a6b6250>",
		fillcolor=turquoise,
		label="1140:BL
gmii_rx_er_m_set = 1;
pcs_rx_next = S_PCS_RX_RECEIVE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6b6290>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6b6450>]",
		style=filled,
		typ=Block];
	"1140:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"988:IF" -> "988:BS"	 [cond="['SPD_match']",
		label="!(SPD_match)",
		lineno=988];
	"900:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"891:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"1092:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f702a6ae250>",
		fillcolor=turquoise,
		label="1092:BL
gmii_rx_dv_m_clr = 1;
gmii_rx_er_m_set = 1;
gmii_rxd_trr_extend_m_set = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6ae290>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6ae410>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f702a6ae590>]",
		style=filled,
		typ=Block];
	"1092:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"1098:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"1040:IF" -> "1041:BL"	 [cond="['check_end_T_R_R']",
		label=check_end_T_R_R,
		lineno=1040];
	"1040:IF" -> "1050:IF"	 [cond="['check_end_T_R_R']",
		label="!(check_end_T_R_R)",
		lineno=1040];
	"983:IF" -> "984:BL"	 [cond="['xmit_DATA_CD']",
		label=xmit_DATA_CD,
		lineno=983];
	"983:IF" -> "991:BS"	 [cond="['xmit_DATA_CD']",
		label="!(xmit_DATA_CD)",
		lineno=983];
	"1106:IF" -> "1107:BL"	 [cond="['check_end_R_R_S']",
		label=check_end_R_R_S,
		lineno=1106];
	"1091:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f702a6a6a50>",
		fillcolor=springgreen,
		label="1091:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1091:IF" -> "1097:IF"	 [cond="['check_end_R_R_R']",
		label="!(check_end_R_R_R)",
		lineno=1091];
	"1091:IF" -> "1092:BL"	 [cond="['check_end_R_R_R']",
		label=check_end_R_R_R,
		lineno=1091];
	"888:CS" -> "905:CA"	 [cond="['pcs_rx_present']",
		label=pcs_rx_present,
		lineno=888];
	"888:CS" -> "890:CA"	 [cond="['pcs_rx_present']",
		label=pcs_rx_present,
		lineno=888];
	"888:CS" -> "951:CA"	 [cond="['pcs_rx_present']",
		label=pcs_rx_present,
		lineno=888];
	"888:CS" -> "1003:CA"	 [cond="['pcs_rx_present']",
		label=pcs_rx_present,
		lineno=888];
	"888:CS" -> "957:CA"	 [cond="['pcs_rx_present']",
		label=pcs_rx_present,
		lineno=888];
	"888:CS" -> "1088:CA"	 [cond="['pcs_rx_present']",
		label=pcs_rx_present,
		lineno=888];
	"888:CS" -> "1070:CA"	 [cond="['pcs_rx_present']",
		label=pcs_rx_present,
		lineno=888];
	"888:CS" -> "941:CA"	 [cond="['pcs_rx_present']",
		label=pcs_rx_present,
		lineno=888];
	"888:CS" -> "1013:CA"	 [cond="['pcs_rx_present']",
		label=pcs_rx_present,
		lineno=888];
	"888:CS" -> "1080:CA"	 [cond="['pcs_rx_present']",
		label=pcs_rx_present,
		lineno=888];
	"888:CS" -> "1116:CA"	 [cond="['pcs_rx_present']",
		label=pcs_rx_present,
		lineno=888];
	"888:CS" -> "1132:CA"	 [cond="['pcs_rx_present']",
		label=pcs_rx_present,
		lineno=888];
	"888:CS" -> "969:CA"	 [cond="['pcs_rx_present']",
		label=pcs_rx_present,
		lineno=888];
	"888:CS" -> "1146:CA"	 [cond="['pcs_rx_present']",
		label=pcs_rx_present,
		lineno=888];
	"888:CS" -> "1020:CA"	 [cond="['pcs_rx_present']",
		label=pcs_rx_present,
		lineno=888];
	"888:CS" -> "915:CA"	 [cond="['pcs_rx_present']",
		label=pcs_rx_present,
		lineno=888];
	"1075:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f702a6a6750>",
		fillcolor=lightcyan,
		label="1075:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"888:CS" -> "1075:CA"	 [cond="['pcs_rx_present']",
		label=pcs_rx_present,
		lineno=888];
	"895:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f702a68dad0>",
		fillcolor=lightcyan,
		label="895:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"888:CS" -> "895:CA"	 [cond="['pcs_rx_present']",
		label=pcs_rx_present,
		lineno=888];
	"1139:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f702a6b6190>",
		fillcolor=lightcyan,
		label="1139:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"888:CS" -> "1139:CA"	 [cond="['pcs_rx_present']",
		label=pcs_rx_present,
		lineno=888];
	"1123:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f702a6aec50>",
		fillcolor=lightcyan,
		label="1123:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"888:CS" -> "1123:CA"	 [cond="['pcs_rx_present']",
		label=pcs_rx_present,
		lineno=888];
	"928:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f702a68dc90>",
		fillcolor=lightcyan,
		label="928:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"888:CS" -> "928:CA"	 [cond="['pcs_rx_present']",
		label=pcs_rx_present,
		lineno=888];
	"1014:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"1075:CA" -> "1076:BL"	 [cond="[]",
		lineno=None];
	"985:IF" -> "986:BL"	 [cond="['K28_5_match']",
		label="(~K28_5_match)",
		lineno=985];
	"895:CA" -> "896:BL"	 [cond="[]",
		lineno=None];
	"1139:CA" -> "1140:BL"	 [cond="[]",
		lineno=None];
	"1155:IF" -> "1156:IF"	 [cond="['sync_status_d3']",
		label="!((~sync_status_d3))",
		lineno=1155];
	"1155:IF" -> "1155:BS"	 [cond="['sync_status_d3']",
		label="(~sync_status_d3)",
		lineno=1155];
	"1123:CA" -> "1124:BL"	 [cond="[]",
		lineno=None];
	"928:CA" -> "929:BL"	 [cond="[]",
		lineno=None];
	"1024:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
	"1089:BL" -> "1091:IF"	 [cond="[]",
		lineno=None];
	"942:BL" -> "Leaf_864:AL"	 [cond="[]",
		lineno=None];
}
