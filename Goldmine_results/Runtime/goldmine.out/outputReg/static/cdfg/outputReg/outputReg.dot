strict digraph "compose( ,  )" {
	node [label="\N"];
	"253:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f14a202f650>",
		def_var="['outputs']",
		fillcolor=deepskyblue,
		label="253:AS
outputs = outputReg;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['outputReg']"];
	"227:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f14a204de50>",
		fillcolor=turquoise,
		label="227:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"229:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f14a232d9d0>",
		fillcolor=springgreen,
		label="229:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"227:BL" -> "229:IF"	 [cond="[]",
		lineno=None];
	"230:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f14a239abd0>",
		fillcolor=turquoise,
		label="230:BL
outputReadOut = 1'bz;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f14a44a0f10>]",
		style=filled,
		typ=Block];
	"Leaf_226:AL"	 [def_var="['outputReadOut', 'outputReg']",
		label="Leaf_226:AL"];
	"230:BL" -> "Leaf_226:AL"	 [cond="[]",
		lineno=None];
	"229:IF" -> "230:BL"	 [cond="['reset']",
		label=reset,
		lineno=229];
	"236:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f14a232dd50>",
		fillcolor=turquoise,
		label="236:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"229:IF" -> "236:BL"	 [cond="['reset']",
		label="!(reset)",
		lineno=229];
	"239:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f14a1ef9fd0>",
		fillcolor=turquoise,
		label="239:BL
outputReadOut = outputReg[outputRwAddr];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f14a202f110>]",
		style=filled,
		typ=Block];
	"239:BL" -> "Leaf_226:AL"	 [cond="[]",
		lineno=None];
	"222:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f14a2053c50>",
		def_var="['outputReg']",
		fillcolor=deepskyblue,
		label="222:AS
outputReg = 0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="[]"];
	"222:AS" -> "253:AS";
	"226:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f14a204db50>",
		clk_sens=False,
		fillcolor=gold,
		label="226:AL",
		sens="['reset', 'outputRw', 'outputRwAddr', 'outputWriteIn', 'outputReg']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'outputRw', 'outputRwAddr', 'outputWriteIn', 'outputReg']"];
	"222:AS" -> "226:AL";
	"Leaf_226:AL" -> "253:AS";
	"Leaf_226:AL" -> "226:AL";
	"244:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f14a202f590>",
		fillcolor=turquoise,
		label="244:BL
outputReg[outputRwAddr] = outputWriteIn;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f14a202f3d0>]",
		style=filled,
		typ=Block];
	"244:BL" -> "Leaf_226:AL"	 [cond="[]",
		lineno=None];
	"238:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f14a202f1d0>",
		fillcolor=springgreen,
		label="238:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"236:BL" -> "238:IF"	 [cond="[]",
		lineno=None];
	"238:IF" -> "239:BL"	 [cond="['outputRw']",
		label=outputRw,
		lineno=238];
	"238:IF" -> "244:BL"	 [cond="['outputRw']",
		label="!(outputRw)",
		lineno=238];
	"226:AL" -> "227:BL"	 [cond="[]",
		lineno=None];
}
