strict digraph "compose( ,  )" {
	node [label="\N"];
	"83:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8f18a17910>",
		fillcolor=turquoise,
		label="83:BL
raddr_a <= raddr_a + 1'b1;
raddr_b <= raddr_b - window_column_counter;
raddr_c <= raddr_c - window_column_counter;
window_\
line_counter = window_line_counter + 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8f18a17510>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f8f18a17750>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8f18a17950>, <pyverilog.vparser.ast.BlockingSubstitution \
object at 0x7f8f18a17b90>]",
		style=filled,
		typ=Block];
	"Leaf_64:AL"	 [def_var="['window_line_counter', 'valid', 'raddr_a', 'raddr_c', 'raddr_b', 'window_column_counter']",
		label="Leaf_64:AL"];
	"83:BL" -> "Leaf_64:AL"	 [cond="[]",
		lineno=None];
	"Leaf_55:AL"	 [def_var="['waddr']",
		label="Leaf_55:AL"];
	"55:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f8f193224d0>",
		clk_sens=True,
		fillcolor=gold,
		label="55:AL",
		sens="['clk', 'rst_n']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst_n', 'valid', 'waddr']"];
	"Leaf_55:AL" -> "55:AL";
	"57:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8f18a1a210>",
		fillcolor=turquoise,
		label="57:BL
waddr <= { LUT_ADDR_WIDTH{ 1'b0 } };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8f18a1a190>]",
		style=filled,
		typ=Block];
	"57:BL" -> "Leaf_55:AL"	 [cond="[]",
		lineno=None];
	"96:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f8f185c25d0>",
		fillcolor=lightcyan,
		label="96:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"97:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8f185c2b50>",
		fillcolor=turquoise,
		label="97:BL
raddr_b <= raddr_b - window_column_counter;
raddr_a <= raddr_a - window_column_counter;
raddr_c <= raddr_c + 1'b1;
window_\
line_counter = 2'b00;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8f185c27d0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f8f185c29d0>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8f185c2b90>, <pyverilog.vparser.ast.BlockingSubstitution \
object at 0x7f8f185c2d10>]",
		style=filled,
		typ=Block];
	"96:CA" -> "97:BL"	 [cond="[]",
		lineno=None];
	"79:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8f18a17190>",
		fillcolor=turquoise,
		label="79:BL
window_column_counter <= 10'd0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8f18a17110>]",
		style=filled,
		typ=Block];
	"81:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f8f185c2d50>",
		fillcolor=linen,
		label="81:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"79:BL" -> "81:CS"	 [cond="[]",
		lineno=None];
	"66:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8f18a13290>",
		fillcolor=springgreen,
		label="66:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"66:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8f18a1af10>",
		fillcolor=turquoise,
		label="66:BL
window_column_counter <= 10'd0;
window_line_counter <= 2'b00;
raddr_a <= { LUT_ADDR_WIDTH{ 1'b0 } };
raddr_b <= { LUT_ADDR_\
WIDTH{ 1'b0 } };
raddr_c <= { LUT_ADDR_WIDTH{ 1'b0 } };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8f18a1a950>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f8f18a1aad0>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8f18a1ad10>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f8f18a1af90>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8f18a13250>]",
		style=filled,
		typ=Block];
	"66:IF" -> "66:BL"	 [cond="['rst_n']",
		label="(~rst_n)",
		lineno=66];
	"72:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8f18a13310>",
		fillcolor=turquoise,
		label="72:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"66:IF" -> "72:BL"	 [cond="['rst_n']",
		label="!((~rst_n))",
		lineno=66];
	"56:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8f18d09f50>",
		fillcolor=turquoise,
		label="56:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"55:AL" -> "56:BL"	 [cond="[]",
		lineno=None];
	"103:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f8f185c2dd0>",
		fillcolor=lightcyan,
		label="103:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"104:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8f185d6390>",
		fillcolor=turquoise,
		label="104:BL
raddr_a <= { LUT_ADDR_WIDTH{ 1'b0 } };
raddr_b <= { LUT_ADDR_WIDTH{ 1'b0 } };
raddr_c <= { LUT_ADDR_WIDTH{ 1'b0 } };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8f185c2fd0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f8f185d6310>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8f185d6550>]",
		style=filled,
		typ=Block];
	"103:CA" -> "104:BL"	 [cond="[]",
		lineno=None];
	"73:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8f18a13f50>",
		fillcolor=springgreen,
		label="73:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"73:IF" -> "79:BL"	 [cond="['window_column_counter', 'IMG_WIDTH']",
		label="!((window_column_counter != IMG_WIDTH / 4 - 1))",
		lineno=73];
	"73:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8f18a13cd0>",
		fillcolor=turquoise,
		label="73:BL
window_column_counter <= window_column_counter + 1'b1;
valid <= 1'b1;
raddr_a <= raddr_a + 1'b1;
raddr_b <= raddr_b + 1'b1;
\
raddr_c <= raddr_c + 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8f18a13810>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f8f18a13990>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8f18a13b50>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f8f18a13d10>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8f18a13ed0>]",
		style=filled,
		typ=Block];
	"73:IF" -> "73:BL"	 [cond="['window_column_counter', 'IMG_WIDTH']",
		label="(window_column_counter != IMG_WIDTH / 4 - 1)",
		lineno=73];
	"65:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8f18a1a710>",
		fillcolor=turquoise,
		label="65:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"65:BL" -> "66:IF"	 [cond="[]",
		lineno=None];
	"66:BL" -> "Leaf_64:AL"	 [cond="[]",
		lineno=None];
	"90:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8f185c2290>",
		fillcolor=turquoise,
		label="90:BL
raddr_b <= raddr_b + 1'b1;
raddr_a <= raddr_a - window_column_counter;
raddr_c <= raddr_c - window_column_counter;
window_\
line_counter = window_line_counter + 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8f18a17e50>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f8f185c20d0>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8f185c22d0>, <pyverilog.vparser.ast.BlockingSubstitution \
object at 0x7f8f185c2510>]",
		style=filled,
		typ=Block];
	"90:BL" -> "Leaf_64:AL"	 [cond="[]",
		lineno=None];
	"104:BL" -> "Leaf_64:AL"	 [cond="[]",
		lineno=None];
	"59:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8f18a1a4d0>",
		fillcolor=turquoise,
		label="59:BL
waddr <= waddr + 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8f18a1a510>]",
		style=filled,
		typ=Block];
	"59:BL" -> "Leaf_55:AL"	 [cond="[]",
		lineno=None];
	"Leaf_64:AL" -> "55:AL";
	"64:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f8f18a1a650>",
		clk_sens=True,
		fillcolor=gold,
		label="64:AL",
		sens="['clk', 'rst_n']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst_n', 'raddr_b', 'IMG_WIDTH', 'raddr_a', 'raddr_c', 'window_line_counter', 'window_column_counter']"];
	"Leaf_64:AL" -> "64:AL";
	"57:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8f18a1a1d0>",
		fillcolor=springgreen,
		label="57:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"56:BL" -> "57:IF"	 [cond="[]",
		lineno=None];
	"89:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f8f18a17c90>",
		fillcolor=lightcyan,
		label="89:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"89:CA" -> "90:BL"	 [cond="[]",
		lineno=None];
	"82:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f8f18a17350>",
		fillcolor=lightcyan,
		label="82:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"82:CA" -> "83:BL"	 [cond="[]",
		lineno=None];
	"81:CS" -> "96:CA"	 [cond="['window_line_counter']",
		label=window_line_counter,
		lineno=81];
	"81:CS" -> "103:CA"	 [cond="['window_line_counter']",
		label=window_line_counter,
		lineno=81];
	"81:CS" -> "89:CA"	 [cond="['window_line_counter']",
		label=window_line_counter,
		lineno=81];
	"81:CS" -> "82:CA"	 [cond="['window_line_counter']",
		label=window_line_counter,
		lineno=81];
	"97:BL" -> "Leaf_64:AL"	 [cond="[]",
		lineno=None];
	"57:IF" -> "57:BL"	 [cond="['rst_n']",
		label="(~rst_n)",
		lineno=57];
	"59:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8f18a1a310>",
		fillcolor=springgreen,
		label="59:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"57:IF" -> "59:IF"	 [cond="['rst_n']",
		label="!((~rst_n))",
		lineno=57];
	"59:IF" -> "59:BL"	 [cond="['valid']",
		label=valid,
		lineno=59];
	"64:AL" -> "65:BL"	 [cond="[]",
		lineno=None];
	"72:BL" -> "73:IF"	 [cond="[]",
		lineno=None];
	"73:BL" -> "Leaf_64:AL"	 [cond="[]",
		lineno=None];
}
