strict digraph "compose( ,  )" {
	node [label="\N"];
	"187:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f05895e8b10>",
		fillcolor=springgreen,
		label="187:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"187:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f05895e8c50>",
		fillcolor=firebrick,
		label="187:NS
grand_dividend <= subtract_node;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f05895e8c50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"187:IF" -> "187:NS"	 [cond="['subtract_node', 'M_PP', 'N_PP', 'R_PP']",
		label="(~subtract_node[M_PP + N_PP + R_PP - 1])",
		lineno=187];
	"180:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f05895e8350>",
		fillcolor=firebrick,
		label="180:NS
quotient <= quotient_node;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f05895e8350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_154:AL"	 [def_var="['done_o', 'divide_count', 'quotient_reg', 'grand_divisor', 'grand_dividend', 'quotient']",
		label="Leaf_154:AL"];
	"180:NS" -> "Leaf_154:AL"	 [cond="[]",
		lineno=None];
	"178:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f05895e8710>",
		fillcolor=springgreen,
		label="178:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"185:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f05895e8ed0>",
		fillcolor=turquoise,
		label="185:BL
quotient <= quotient_node;
grand_divisor <= divisor_node;
divide_count <= divide_count + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f05895e8d50>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f05895e8f10>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f05895ec190>]",
		style=filled,
		typ=Block];
	"178:IF" -> "185:BL"	 [cond="['divide_count', 'M_PP', 'R_PP', 'S_PP']",
		label="!((divide_count == M_PP + R_PP - S_PP - 1))",
		lineno=178];
	"179:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f05895e80d0>",
		fillcolor=turquoise,
		label="179:BL
done_o <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f05895e8690>]",
		style=filled,
		typ=Block];
	"178:IF" -> "179:BL"	 [cond="['divide_count', 'M_PP', 'R_PP', 'S_PP']",
		label="(divide_count == M_PP + R_PP - S_PP - 1)",
		lineno=178];
	"164:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f05895e5190>",
		fillcolor=springgreen,
		label="164:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"165:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f05895e5350>",
		fillcolor=turquoise,
		label="165:BL
done_o <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f05895e52d0>]",
		style=filled,
		typ=Block];
	"164:IF" -> "165:BL"	 [cond="['clk_en_i']",
		label=clk_en_i,
		lineno=164];
	"167:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f05895e5bd0>",
		fillcolor=springgreen,
		label="167:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"167:IF" -> "178:IF"	 [cond="['divide_i']",
		label="!(divide_i)",
		lineno=167];
	"168:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f05895e58d0>",
		fillcolor=turquoise,
		label="168:BL
quotient <= 0;
divide_count <= 0;
grand_dividend <= dividend_i << R_PP;
grand_divisor <= divisor_i << N_PP + R_PP - S_PP \
- 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f05895e5550>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f05895e5710>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f05895e5910>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f05895e5cd0>]",
		style=filled,
		typ=Block];
	"167:IF" -> "168:BL"	 [cond="['divide_i']",
		label=divide_i,
		lineno=167];
	"154:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f0589210810>",
		clk_sens=True,
		fillcolor=gold,
		label="154:AL",
		sens="['clk_i']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['divide_i', 'done_o', 'divisor_node', 'rst_i', 'dividend_i', 'divisor_i', 'clk_en_i', 'divide_count', 'S_PP', 'quotient_node', '\
R_PP', 'subtract_node', 'N_PP', 'M_PP']"];
	"155:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f0589210890>",
		fillcolor=turquoise,
		label="155:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"154:AL" -> "155:BL"	 [cond="[]",
		lineno=None];
	"181:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f05895e8490>",
		fillcolor=springgreen,
		label="181:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"181:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f05895e85d0>",
		fillcolor=firebrick,
		label="181:NS
quotient_reg <= quotient_node;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f05895e85d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"181:IF" -> "181:NS"	 [cond="['done_o']",
		label="(~done_o)",
		lineno=181];
	"157:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f0589210e50>",
		fillcolor=turquoise,
		label="157:BL
grand_dividend <= 0;
grand_divisor <= 0;
divide_count <= 0;
quotient <= 0;
done_o <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0589210a50>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f0589210bd0>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0589210d50>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f0589210e90>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0589210fd0>]",
		style=filled,
		typ=Block];
	"157:BL" -> "Leaf_154:AL"	 [cond="[]",
		lineno=None];
	"199:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f05895ec290>",
		def_var="['subtract_node']",
		fillcolor=deepskyblue,
		label="199:AS
subtract_node = { 1'b0, grand_dividend } - { 1'b0, grand_divisor };",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['grand_dividend', 'grand_divisor']"];
	"199:AS" -> "154:AL";
	"200:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f05895ec9d0>",
		def_var="['quotient_node']",
		fillcolor=deepskyblue,
		label="200:AS
quotient_node = { quotient[M_PP+R_PP-S_PP-2:0], ~subtract_node[M_PP + N_PP + R_PP - 1] };",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['quotient', 'subtract_node', 'N_PP', 'R_PP']"];
	"199:AS" -> "200:AS";
	"200:AS" -> "154:AL";
	"156:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0589210f90>",
		fillcolor=springgreen,
		label="156:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"156:IF" -> "164:IF"	 [cond="['rst_i']",
		label="!(rst_i)",
		lineno=156];
	"156:IF" -> "157:BL"	 [cond="['rst_i']",
		label=rst_i,
		lineno=156];
	"Leaf_154:AL" -> "154:AL";
	"Leaf_154:AL" -> "199:AS";
	"Leaf_154:AL" -> "200:AS";
	"202:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f05895eccd0>",
		def_var="['divisor_node']",
		fillcolor=deepskyblue,
		label="202:AS
divisor_node = { 1'b0, grand_divisor[M_PP+N_PP+R_PP-2:1] };",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['grand_divisor', 'N_PP']"];
	"Leaf_154:AL" -> "202:AS";
	"204:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f058919b0d0>",
		def_var="['quotient_o']",
		fillcolor=deepskyblue,
		label="204:AS
quotient_o = (HELD_OUTPUT_PP == 0)? quotient : quotient_reg;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['quotient', 'quotient_reg']"];
	"Leaf_154:AL" -> "204:AS";
	"181:NS" -> "Leaf_154:AL"	 [cond="[]",
		lineno=None];
	"187:NS" -> "Leaf_154:AL"	 [cond="[]",
		lineno=None];
	"165:BL" -> "167:IF"	 [cond="[]",
		lineno=None];
	"202:AS" -> "154:AL";
	"180:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f05895e8210>",
		fillcolor=springgreen,
		label="180:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"180:IF" -> "180:NS"	 [cond="['done_o']",
		label="(~done_o)",
		lineno=180];
	"185:BL" -> "187:IF"	 [cond="[]",
		lineno=None];
	"155:BL" -> "156:IF"	 [cond="[]",
		lineno=None];
	"179:BL" -> "181:IF"	 [cond="[]",
		lineno=None];
	"179:BL" -> "180:IF"	 [cond="[]",
		lineno=None];
	"168:BL" -> "Leaf_154:AL"	 [cond="[]",
		lineno=None];
}
