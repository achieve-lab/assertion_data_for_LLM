strict digraph "compose( ,  )" {
	node [label="\N"];
	"367:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f4133f63450>",
		fillcolor=firebrick,
		label="367:NS
Counter[7:0] <= #Tp 8'h1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f4133f63450>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_364:AL"	 [def_var="['Counter']",
		label="Leaf_364:AL"];
	"367:NS" -> "Leaf_364:AL"	 [cond="[]",
		lineno=None];
	"366:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f4133f634d0>",
		fillcolor=springgreen,
		label="366:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"366:IF" -> "367:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=366];
	"369:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f4133f63550>",
		fillcolor=turquoise,
		label="369:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"366:IF" -> "369:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=366];
	"393:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f4133f56550>",
		def_var="['CountEq0']",
		fillcolor=deepskyblue,
		label="393:AS
CountEq0 = Counter == 8'h0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Counter']"];
	"Leaf_364:AL" -> "393:AS";
	"364:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f4133f631d0>",
		clk_sens=True,
		fillcolor=gold,
		label="364:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Counter', 'CounterPreset', 'CountEq0']"];
	"Leaf_364:AL" -> "364:AL";
	"393:AS" -> "364:AL";
	"395:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f4133f56910>",
		def_var="['MdcEn_n']",
		fillcolor=deepskyblue,
		label="395:AS
MdcEn_n = CountEq0 & Mdc;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['CountEq0', 'Mdc']"];
	"393:AS" -> "395:AS";
	"381:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f4133f63e90>",
		clk_sens=True,
		fillcolor=gold,
		label="381:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Mdc', 'CountEq0']"];
	"393:AS" -> "381:AL";
	"394:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f4133f56750>",
		def_var="['MdcEn']",
		fillcolor=deepskyblue,
		label="394:AS
MdcEn = CountEq0 & ~Mdc;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['CountEq0', 'Mdc']"];
	"393:AS" -> "394:AS";
	"Leaf_381:AL"	 [def_var="['Mdc']",
		label="Leaf_381:AL"];
	"Leaf_381:AL" -> "395:AS";
	"Leaf_381:AL" -> "381:AL";
	"Leaf_381:AL" -> "394:AS";
	"365:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f4133f63190>",
		fillcolor=turquoise,
		label="365:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"365:BL" -> "366:IF"	 [cond="[]",
		lineno=None];
	"364:AL" -> "365:BL"	 [cond="[]",
		lineno=None];
	"370:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f4133f63b90>",
		fillcolor=springgreen,
		label="370:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"375:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f4133f63d10>",
		fillcolor=firebrick,
		label="375:NS
Counter[7:0] <= #Tp Counter - 8'h1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f4133f63d10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"370:IF" -> "375:NS"	 [cond="['CountEq0']",
		label="!(CountEq0)",
		lineno=370];
	"371:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f4133f637d0>",
		fillcolor=turquoise,
		label="371:BL
Counter[7:0] <= #Tp CounterPreset[7:0];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f4133f63990>]",
		style=filled,
		typ=Block];
	"370:IF" -> "371:BL"	 [cond="['CountEq0']",
		label=CountEq0,
		lineno=370];
	"359:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f4133f5ea90>",
		def_var="['TempDivider']",
		fillcolor=deepskyblue,
		label="359:AS
TempDivider[7:0] = (Divider[7:0] < 2)? 8'h02 : Divider[7:0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Divider', 'Divider']"];
	"360:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f4133f5ee90>",
		def_var="['CounterPreset']",
		fillcolor=deepskyblue,
		label="360:AS
CounterPreset[7:0] = (TempDivider[7:0] >> 1) - 1;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['TempDivider']"];
	"359:AS" -> "360:AS";
	"386:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f4133f56190>",
		fillcolor=turquoise,
		label="386:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"387:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f4133f56250>",
		fillcolor=springgreen,
		label="387:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"386:BL" -> "387:IF"	 [cond="[]",
		lineno=None];
	"382:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f4133f63e50>",
		fillcolor=turquoise,
		label="382:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"383:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f4133f56110>",
		fillcolor=springgreen,
		label="383:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"382:BL" -> "383:IF"	 [cond="[]",
		lineno=None];
	"375:NS" -> "Leaf_364:AL"	 [cond="[]",
		lineno=None];
	"383:IF" -> "386:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=383];
	"384:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f4133f56090>",
		fillcolor=firebrick,
		label="384:NS
Mdc <= #Tp 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f4133f56090>]",
		style=filled,
		typ=NonblockingSubstitution];
	"383:IF" -> "384:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=383];
	"384:NS" -> "Leaf_381:AL"	 [cond="[]",
		lineno=None];
	"388:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f4133f563d0>",
		fillcolor=firebrick,
		label="388:NS
Mdc <= #Tp ~Mdc;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f4133f563d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"387:IF" -> "388:NS"	 [cond="['CountEq0']",
		label=CountEq0,
		lineno=387];
	"369:BL" -> "370:IF"	 [cond="[]",
		lineno=None];
	"371:BL" -> "Leaf_364:AL"	 [cond="[]",
		lineno=None];
	"381:AL" -> "382:BL"	 [cond="[]",
		lineno=None];
	"360:AS" -> "364:AL";
	"388:NS" -> "Leaf_381:AL"	 [cond="[]",
		lineno=None];
}
