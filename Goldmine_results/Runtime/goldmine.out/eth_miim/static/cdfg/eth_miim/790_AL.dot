strict digraph "" {
	node [label="\N"];
	"810:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f415540bcd0>",
		fillcolor=turquoise,
		label="810:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"811:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f415540bc10>",
		fillcolor=springgreen,
		label="811:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"810:BL" -> "811:IF"	 [cond="[]",
		lineno=None];
	"793:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f4155413d10>",
		fillcolor=turquoise,
		label="793:BL
WCtrlDataStart_q1 <= #Tp 1'b0;
WCtrlDataStart_q2 <= #Tp 1'b0;
RStatStart_q1 <= #Tp 1'b0;
RStatStart_q2 <= #Tp 1'b0;
InProgress_\
q1 <= #Tp 1'b0;
InProgress_q2 <= #Tp 1'b0;
InProgress_q3 <= #Tp 1'b0;
LatchByte0_d <= #Tp 1'b0;
LatchByte1_d <= #Tp 1'b0;
LatchByte <= #\
Tp 2'b00;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f4155412990>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f4155412b10>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f4155412d10>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f4155412f10>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f4155413150>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f4155413350>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f4155413550>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f4155413750>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f4155413950>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f4155413b50>]",
		style=filled,
		typ=Block];
	"Leaf_790:AL"	 [def_var="['WCtrlDataStart_q1', 'WCtrlDataStart_q2', 'InProgress_q1', 'InProgress_q3', 'InProgress_q2', 'LatchByte0_d', 'RStatStart_q1', '\
LatchByte', 'RStatStart_q2', 'LatchByte1_d']",
		label="Leaf_790:AL"];
	"793:BL" -> "Leaf_790:AL"	 [cond="[]",
		lineno=None];
	"791:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f4155413ed0>",
		fillcolor=turquoise,
		label="791:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"792:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f4155413f10>",
		fillcolor=springgreen,
		label="792:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"791:BL" -> "792:IF"	 [cond="[]",
		lineno=None];
	"792:IF" -> "810:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=792];
	"792:IF" -> "793:BL"	 [cond="['Reset']",
		label=Reset,
		lineno=792];
	"812:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f415540bd90>",
		fillcolor=turquoise,
		label="812:BL
WCtrlDataStart_q1 <= #Tp WCtrlDataStart;
WCtrlDataStart_q2 <= #Tp WCtrlDataStart_q1;
RStatStart_q1 <= #Tp RStatStart;
RStatStart_\
q2 <= #Tp RStatStart_q1;
LatchByte[0] <= #Tp LatchByte0_d;
LatchByte[1] <= #Tp LatchByte1_d;
LatchByte0_d <= #Tp LatchByte0_d2;
\
LatchByte1_d <= #Tp LatchByte1_d2;
InProgress_q1 <= #Tp InProgress;
InProgress_q2 <= #Tp InProgress_q1;
InProgress_q3 <= #Tp InProgress_\
q2;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f415540bdd0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f4155411290>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f41554114d0>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f41554116d0>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f4155411910>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f4155411b90>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f4155411e10>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f4155412090>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f41554122d0>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f41554124d0>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f4155412710>]",
		style=filled,
		typ=Block];
	"812:BL" -> "Leaf_790:AL"	 [cond="[]",
		lineno=None];
	"790:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f4155413d50>",
		clk_sens=True,
		fillcolor=gold,
		label="790:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'WCtrlDataStart_q1', 'InProgress_q1', 'RStatStart', 'InProgress_q2', 'WCtrlDataStart', 'LatchByte1_d2', 'LatchByte0_d2', '\
LatchByte0_d', 'RStatStart_q1', 'MdcEn', 'LatchByte1_d', 'InProgress']"];
	"790:AL" -> "791:BL"	 [cond="[]",
		lineno=None];
	"811:IF" -> "812:BL"	 [cond="['MdcEn']",
		label=MdcEn,
		lineno=811];
}
