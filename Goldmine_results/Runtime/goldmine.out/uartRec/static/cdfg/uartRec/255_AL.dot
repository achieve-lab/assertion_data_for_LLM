strict digraph "" {
	node [label="\N"];
	"301:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f544cd96710>",
		fillcolor=turquoise,
		label="301:BL
stateNext = idle;
rxDoneTick = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544cd96310>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544cd965d0>]",
		style=filled,
		typ=Block];
	"Leaf_255:AL"	 [def_var="['nNext', 'stateNext', 'rxDoneTick', 'bNext', 'sNext']",
		label="Leaf_255:AL"];
	"301:BL" -> "Leaf_255:AL"	 [cond="[]",
		lineno=None];
	"273:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f544cd96750>",
		fillcolor=springgreen,
		label="273:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"282:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544cd967d0>",
		fillcolor=cadetblue,
		label="282:BS
sNext = sReg + 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544cd967d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"273:IF" -> "282:BS"	 [cond="['sReg']",
		label="!((sReg == 7))",
		lineno=273];
	"274:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f544cd969d0>",
		fillcolor=turquoise,
		label="274:BL
stateNext = data;
sNext = 0;
nNext = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544cd96a10>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544cd96b50>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544cd96c90>]",
		style=filled,
		typ=Block];
	"273:IF" -> "274:BL"	 [cond="['sReg']",
		label="(sReg == 7)",
		lineno=273];
	"282:BS" -> "Leaf_255:AL"	 [cond="[]",
		lineno=None];
	"297:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544cdc9c50>",
		fillcolor=cadetblue,
		label="297:BS
sNext = sReg + 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544cdc9c50>]",
		style=filled,
		typ=BlockingSubstitution];
	"297:BS" -> "Leaf_255:AL"	 [cond="[]",
		lineno=None];
	"266:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f544cdc96d0>",
		fillcolor=springgreen,
		label="266:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"267:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f544cdc9710>",
		fillcolor=turquoise,
		label="267:BL
stateNext = start;
sNext = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544cdc9750>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544cdc9890>]",
		style=filled,
		typ=Block];
	"266:IF" -> "267:BL"	 [cond="['rx']",
		label="(~rx)",
		lineno=266];
	"264:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f544cdc9590>",
		fillcolor=linen,
		label="264:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"266:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f544cdc9650>",
		fillcolor=lightcyan,
		label="266:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"264:CS" -> "266:CA"	 [cond="['stateReg']",
		label=stateReg,
		lineno=264];
	"284:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f544cdc9b50>",
		fillcolor=lightcyan,
		label="284:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"264:CS" -> "284:CA"	 [cond="['stateReg']",
		label=stateReg,
		lineno=264];
	"272:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f544cdc9a50>",
		fillcolor=lightcyan,
		label="272:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"264:CS" -> "272:CA"	 [cond="['stateReg']",
		label=stateReg,
		lineno=264];
	"299:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f544cdce710>",
		fillcolor=lightcyan,
		label="299:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"264:CS" -> "299:CA"	 [cond="['stateReg']",
		label=stateReg,
		lineno=264];
	"255:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f544cdceb90>",
		clk_sens=False,
		fillcolor=gold,
		label="255:AL",
		sens="['nReg', 'bReg', 'rx', 'stop', 'sReg', 'start', 'idle', 'stateReg', 'data']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['nReg', 'start', 'dataBits', 'rx', 'stop', 'sReg', 'bReg', 'idle', 'sTick', 'stateReg', 'data', 'sbTick']"];
	"256:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f544cdc9550>",
		fillcolor=turquoise,
		label="256:BL
stateNext = stateReg;
sNext = sReg;
bNext = bReg;
nNext = nReg;
rxDoneTick = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544cd96ed0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544cdc9050>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544cdc9190>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544cdc92d0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544cdc9410>]",
		style=filled,
		typ=Block];
	"255:AL" -> "256:BL"	 [cond="[]",
		lineno=None];
	"291:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544cdce390>",
		fillcolor=cadetblue,
		label="291:BS
stateNext = stop;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544cdce390>]",
		style=filled,
		typ=BlockingSubstitution];
	"291:BS" -> "Leaf_255:AL"	 [cond="[]",
		lineno=None];
	"272:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f544cdc9ad0>",
		fillcolor=springgreen,
		label="272:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"272:IF" -> "273:IF"	 [cond="['sTick']",
		label=sTick,
		lineno=272];
	"274:BL" -> "Leaf_255:AL"	 [cond="[]",
		lineno=None];
	"266:CA" -> "266:IF"	 [cond="[]",
		lineno=None];
	"300:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f544cdce7d0>",
		fillcolor=springgreen,
		label="300:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"300:IF" -> "301:BL"	 [cond="['sReg', 'sbTick']",
		label="(sReg == sbTick - 1)",
		lineno=300];
	"307:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544cdce810>",
		fillcolor=cadetblue,
		label="307:BS
sNext = sReg + 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544cdce810>]",
		style=filled,
		typ=BlockingSubstitution];
	"300:IF" -> "307:BS"	 [cond="['sReg', 'sbTick']",
		label="!((sReg == sbTick - 1))",
		lineno=300];
	"290:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f544cdce190>",
		fillcolor=springgreen,
		label="290:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"290:IF" -> "291:BS"	 [cond="['nReg', 'dataBits']",
		label="(nReg == dataBits - 1)",
		lineno=290];
	"293:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544cdce1d0>",
		fillcolor=cadetblue,
		label="293:BS
nNext = nReg + 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544cdce1d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"290:IF" -> "293:BS"	 [cond="['nReg', 'dataBits']",
		label="!((nReg == dataBits - 1))",
		lineno=290];
	"284:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f544cdc9bd0>",
		fillcolor=springgreen,
		label="284:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"284:CA" -> "284:IF"	 [cond="[]",
		lineno=None];
	"272:CA" -> "272:IF"	 [cond="[]",
		lineno=None];
	"293:BS" -> "Leaf_255:AL"	 [cond="[]",
		lineno=None];
	"299:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f544cdce790>",
		fillcolor=springgreen,
		label="299:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"299:CA" -> "299:IF"	 [cond="[]",
		lineno=None];
	"285:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f544cdc9c10>",
		fillcolor=springgreen,
		label="285:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"284:IF" -> "285:IF"	 [cond="['sTick']",
		label=sTick,
		lineno=284];
	"307:BS" -> "Leaf_255:AL"	 [cond="[]",
		lineno=None];
	"256:BL" -> "264:CS"	 [cond="[]",
		lineno=None];
	"299:IF" -> "300:IF"	 [cond="['sTick']",
		label=sTick,
		lineno=299];
	"286:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f544cdc9d90>",
		fillcolor=turquoise,
		label="286:BL
sNext = 0;
bNext = { rx, bReg[7:1] };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544cdc9dd0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544cdc9f10>]",
		style=filled,
		typ=Block];
	"286:BL" -> "290:IF"	 [cond="[]",
		lineno=None];
	"267:BL" -> "Leaf_255:AL"	 [cond="[]",
		lineno=None];
	"285:IF" -> "297:BS"	 [cond="['sReg']",
		label="!((sReg == 15))",
		lineno=285];
	"285:IF" -> "286:BL"	 [cond="['sReg']",
		label="(sReg == 15)",
		lineno=285];
}
