strict digraph "compose( ,  )" {
	node [label="\N"];
	"301:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f544d662dd0>",
		fillcolor=turquoise,
		label="301:BL
stateNext = idle;
rxDoneTick = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544d662e10>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544d662f50>]",
		style=filled,
		typ=Block];
	"Leaf_255:AL"	 [def_var="['nNext', 'stateNext', 'rxDoneTick', 'bNext', 'sNext']",
		label="Leaf_255:AL"];
	"301:BL" -> "Leaf_255:AL"	 [cond="[]",
		lineno=None];
	"234:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f544d28b0d0>",
		fillcolor=turquoise,
		label="234:BL
stateReg <= idle;
sReg <= 1'b0;
bReg <= 1'b0;
nReg <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f544d95de10>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f544d52afd0>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f544d28b110>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f544d28b250>]",
		style=filled,
		typ=Block];
	"Leaf_231:AL"	 [def_var="['bReg', 'sReg', 'nReg', 'stateReg']",
		label="Leaf_231:AL"];
	"234:BL" -> "Leaf_231:AL"	 [cond="[]",
		lineno=None];
	"273:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f544d66ec10>",
		fillcolor=springgreen,
		label="273:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"282:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544d66ed90>",
		fillcolor=cadetblue,
		label="282:BS
sNext = sReg + 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544d66ed90>]",
		style=filled,
		typ=BlockingSubstitution];
	"273:IF" -> "282:BS"	 [cond="['sReg']",
		label="!((sReg == 7))",
		lineno=273];
	"274:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f544d66ea10>",
		fillcolor=turquoise,
		label="274:BL
stateNext = data;
sNext = 0;
nNext = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544d66e8d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544d66ea50>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544d66eb90>]",
		style=filled,
		typ=Block];
	"273:IF" -> "274:BL"	 [cond="['sReg']",
		label="(sReg == 7)",
		lineno=273];
	"282:BS" -> "Leaf_255:AL"	 [cond="[]",
		lineno=None];
	"256:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f544d28bed0>",
		fillcolor=turquoise,
		label="256:BL
stateNext = stateReg;
sNext = sReg;
bNext = bReg;
nNext = nReg;
rxDoneTick = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544d28b950>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544d28bad0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544d28bc10>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544d28bd50>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544d28be90>]",
		style=filled,
		typ=Block];
	"264:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f544d66e5d0>",
		fillcolor=linen,
		label="264:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"256:BL" -> "264:CS"	 [cond="[]",
		lineno=None];
	"232:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f544df77490>",
		fillcolor=turquoise,
		label="232:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"233:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f544d28b290>",
		fillcolor=springgreen,
		label="233:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"232:BL" -> "233:IF"	 [cond="[]",
		lineno=None];
	"266:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f544d66e1d0>",
		fillcolor=springgreen,
		label="266:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"267:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f544d66e350>",
		fillcolor=turquoise,
		label="267:BL
stateNext = start;
sNext = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544d66e310>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544d66e490>]",
		style=filled,
		typ=Block];
	"266:IF" -> "267:BL"	 [cond="['rx']",
		label="(~rx)",
		lineno=266];
	"266:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f544d66e050>",
		fillcolor=lightcyan,
		label="266:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"266:CA" -> "266:IF"	 [cond="[]",
		lineno=None];
	"264:CS" -> "266:CA"	 [cond="['stateReg']",
		label=stateReg,
		lineno=264];
	"284:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f544d66e590>",
		fillcolor=lightcyan,
		label="284:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"264:CS" -> "284:CA"	 [cond="['stateReg']",
		label=stateReg,
		lineno=264];
	"272:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f544d66e510>",
		fillcolor=lightcyan,
		label="272:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"264:CS" -> "272:CA"	 [cond="['stateReg']",
		label=stateReg,
		lineno=264];
	"299:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f544d66ed50>",
		fillcolor=lightcyan,
		label="299:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"264:CS" -> "299:CA"	 [cond="['stateReg']",
		label=stateReg,
		lineno=264];
	"231:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f544d95da50>",
		clk_sens=True,
		fillcolor=gold,
		label="231:AL",
		sens="['clk', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'stateNext', 'idle', 'nNext', 'sNext', 'bNext']"];
	"231:AL" -> "232:BL"	 [cond="[]",
		lineno=None];
	"255:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f544d66ef10>",
		clk_sens=False,
		fillcolor=gold,
		label="255:AL",
		sens="['nReg', 'bReg', 'rx', 'stop', 'sReg', 'start', 'idle', 'stateReg', 'data']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['nReg', 'start', 'dataBits', 'rx', 'stop', 'sReg', 'bReg', 'idle', 'sTick', 'stateReg', 'data', 'sbTick']"];
	"255:AL" -> "256:BL"	 [cond="[]",
		lineno=None];
	"291:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544d662710>",
		fillcolor=cadetblue,
		label="291:BS
stateNext = stop;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544d662710>]",
		style=filled,
		typ=BlockingSubstitution];
	"291:BS" -> "Leaf_255:AL"	 [cond="[]",
		lineno=None];
	"272:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f544d66e610>",
		fillcolor=springgreen,
		label="272:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"272:IF" -> "273:IF"	 [cond="['sTick']",
		label=sTick,
		lineno=272];
	"274:BL" -> "Leaf_255:AL"	 [cond="[]",
		lineno=None];
	"316:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f544d662f10>",
		def_var="['dOut']",
		fillcolor=deepskyblue,
		label="316:AS
dOut = bReg;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['bReg']"];
	"300:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f544d662fd0>",
		fillcolor=springgreen,
		label="300:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"300:IF" -> "301:BL"	 [cond="['sReg', 'sbTick']",
		label="(sReg == sbTick - 1)",
		lineno=300];
	"307:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544d667190>",
		fillcolor=cadetblue,
		label="307:BS
sNext = sReg + 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544d667190>]",
		style=filled,
		typ=BlockingSubstitution];
	"300:IF" -> "307:BS"	 [cond="['sReg', 'sbTick']",
		label="!((sReg == sbTick - 1))",
		lineno=300];
	"290:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f544d6626d0>",
		fillcolor=springgreen,
		label="290:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"290:IF" -> "291:BS"	 [cond="['nReg', 'dataBits']",
		label="(nReg == dataBits - 1)",
		lineno=290];
	"293:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544d662910>",
		fillcolor=cadetblue,
		label="293:BS
nNext = nReg + 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544d662910>]",
		style=filled,
		typ=BlockingSubstitution];
	"290:IF" -> "293:BS"	 [cond="['nReg', 'dataBits']",
		label="!((nReg == dataBits - 1))",
		lineno=290];
	"267:BL" -> "Leaf_255:AL"	 [cond="[]",
		lineno=None];
	"284:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f544d66ee10>",
		fillcolor=springgreen,
		label="284:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"284:CA" -> "284:IF"	 [cond="[]",
		lineno=None];
	"272:CA" -> "272:IF"	 [cond="[]",
		lineno=None];
	"233:IF" -> "234:BL"	 [cond="['reset']",
		label=reset,
		lineno=233];
	"242:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f544d28b650>",
		fillcolor=turquoise,
		label="242:BL
stateReg <= stateNext;
sReg <= sNext;
bReg <= bNext;
nReg <= nNext;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f544d28b410>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f544d28b550>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f544d28b690>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f544d28b7d0>]",
		style=filled,
		typ=Block];
	"233:IF" -> "242:BL"	 [cond="['reset']",
		label="!(reset)",
		lineno=233];
	"293:BS" -> "Leaf_255:AL"	 [cond="[]",
		lineno=None];
	"299:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f544d662ad0>",
		fillcolor=springgreen,
		label="299:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"299:CA" -> "299:IF"	 [cond="[]",
		lineno=None];
	"Leaf_255:AL" -> "231:AL";
	"285:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f544d662990>",
		fillcolor=springgreen,
		label="285:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"284:IF" -> "285:IF"	 [cond="['sTick']",
		label=sTick,
		lineno=284];
	"307:BS" -> "Leaf_255:AL"	 [cond="[]",
		lineno=None];
	"297:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544d662a50>",
		fillcolor=cadetblue,
		label="297:BS
sNext = sReg + 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544d662a50>]",
		style=filled,
		typ=BlockingSubstitution];
	"297:BS" -> "Leaf_255:AL"	 [cond="[]",
		lineno=None];
	"299:IF" -> "300:IF"	 [cond="['sTick']",
		label=sTick,
		lineno=299];
	"286:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f544d662410>",
		fillcolor=turquoise,
		label="286:BL
sNext = 0;
bNext = { rx, bReg[7:1] };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544d662110>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f544d662450>]",
		style=filled,
		typ=Block];
	"286:BL" -> "290:IF"	 [cond="[]",
		lineno=None];
	"Leaf_231:AL" -> "255:AL";
	"Leaf_231:AL" -> "316:AS";
	"285:IF" -> "297:BS"	 [cond="['sReg']",
		label="!((sReg == 15))",
		lineno=285];
	"285:IF" -> "286:BL"	 [cond="['sReg']",
		label="(sReg == 15)",
		lineno=285];
	"242:BL" -> "Leaf_231:AL"	 [cond="[]",
		lineno=None];
}
