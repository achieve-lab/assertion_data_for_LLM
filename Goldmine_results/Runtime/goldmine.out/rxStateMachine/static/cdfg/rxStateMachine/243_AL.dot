strict digraph "" {
	node [label="\N"];
	"264:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fcfe0276ed0>",
		fillcolor=firebrick,
		label="264:NS
rxstate_next <= #TP rxGetError;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fcfe0276ed0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_243:AL"	 [def_var="['rxstate_next']",
		label="Leaf_243:AL"];
	"264:NS" -> "Leaf_243:AL"	 [cond="[]",
		lineno=None];
	"280:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd001cf8350>",
		fillcolor=firebrick,
		label="280:NS
rxstate_next <= #TP IDLE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd001cf8350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"280:NS" -> "Leaf_243:AL"	 [cond="[]",
		lineno=None];
	"274:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd001cf8590>",
		fillcolor=firebrick,
		label="274:NS
rxstate_next <= #TP IDLE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd001cf8590>]",
		style=filled,
		typ=NonblockingSubstitution];
	"274:NS" -> "Leaf_243:AL"	 [cond="[]",
		lineno=None];
	"254:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd001cf8750>",
		fillcolor=firebrick,
		label="254:NS
rxstate_next <= #TP IDLE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd001cf8750>]",
		style=filled,
		typ=NonblockingSubstitution];
	"254:NS" -> "Leaf_243:AL"	 [cond="[]",
		lineno=None];
	"259:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd001cf8950>",
		fillcolor=lightcyan,
		label="259:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"259:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd001cf89d0>",
		fillcolor=turquoise,
		label="259:BL
rxstate_next <= #TP rxReceiveData;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd001cf8a10>]",
		style=filled,
		typ=Block];
	"259:CA" -> "259:BL"	 [cond="[]",
		lineno=None];
	"277:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd001cf8c50>",
		fillcolor=springgreen,
		label="277:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"277:IF" -> "280:NS"	 [cond="['get_sfd', 'recv_enable']",
		label="!((get_sfd && recv_enable))",
		lineno=277];
	"278:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd001cf8c90>",
		fillcolor=firebrick,
		label="278:NS
rxstate_next <= #TP rxReceiveDA;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd001cf8c90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"277:IF" -> "278:NS"	 [cond="['get_sfd', 'recv_enable']",
		label="(get_sfd && recv_enable)",
		lineno=277];
	"270:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd001cf8f50>",
		fillcolor=lightcyan,
		label="270:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"270:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd001cf8fd0>",
		fillcolor=turquoise,
		label="270:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"270:CA" -> "270:BL"	 [cond="[]",
		lineno=None];
	"252:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd001d00390>",
		fillcolor=firebrick,
		label="252:NS
rxstate_next <= #TP rxReceiveDA;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd001d00390>]",
		style=filled,
		typ=NonblockingSubstitution];
	"252:NS" -> "Leaf_243:AL"	 [cond="[]",
		lineno=None];
	"276:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd001d00510>",
		fillcolor=lightcyan,
		label="276:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"276:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd001d00590>",
		fillcolor=turquoise,
		label="276:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"276:CA" -> "276:BL"	 [cond="[]",
		lineno=None];
	"256:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd001d00650>",
		fillcolor=lightcyan,
		label="256:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"256:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd001d006d0>",
		fillcolor=turquoise,
		label="256:BL
rxstate_next <= #TP rxReceiveLT;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd001d00710>]",
		style=filled,
		typ=Block];
	"256:CA" -> "256:BL"	 [cond="[]",
		lineno=None];
	"245:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd001d00c90>",
		fillcolor=turquoise,
		label="245:BL
rxstate_next <= #TP IDLE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd001d00a90>]",
		style=filled,
		typ=Block];
	"245:BL" -> "Leaf_243:AL"	 [cond="[]",
		lineno=None];
	"248:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd001d00d10>",
		fillcolor=turquoise,
		label="248:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"249:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fd001d00d50>",
		fillcolor=linen,
		label="249:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"248:BL" -> "249:CS"	 [cond="[]",
		lineno=None];
	"268:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fcfe0276950>",
		fillcolor=firebrick,
		label="268:NS
rxstate_next <= #TP rxReceiveData;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fcfe0276950>]",
		style=filled,
		typ=NonblockingSubstitution];
	"268:NS" -> "Leaf_243:AL"	 [cond="[]",
		lineno=None];
	"278:NS" -> "Leaf_243:AL"	 [cond="[]",
		lineno=None];
	"250:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd001d00e90>",
		fillcolor=turquoise,
		label="250:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"251:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd001d00990>",
		fillcolor=springgreen,
		label="251:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"250:BL" -> "251:IF"	 [cond="[]",
		lineno=None];
	"263:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fcfe0276810>",
		fillcolor=springgreen,
		label="263:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"263:IF" -> "264:NS"	 [cond="['local_invalid', 'length_error', 'get_error_code']",
		label="(local_invalid | length_error | get_error_code)",
		lineno=263];
	"265:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fcfe0276910>",
		fillcolor=springgreen,
		label="265:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"263:IF" -> "265:IF"	 [cond="['local_invalid', 'length_error', 'get_error_code']",
		label="!((local_invalid | length_error | get_error_code))",
		lineno=263];
	"271:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd001d00050>",
		fillcolor=springgreen,
		label="271:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"271:IF" -> "274:NS"	 [cond="['get_sfd', 'recv_enable']",
		label="!((get_sfd && recv_enable))",
		lineno=271];
	"272:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd001d00090>",
		fillcolor=firebrick,
		label="272:NS
rxstate_next <= #TP rxReceiveDA;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd001d00090>]",
		style=filled,
		typ=NonblockingSubstitution];
	"271:IF" -> "272:NS"	 [cond="['get_sfd', 'recv_enable']",
		label="(get_sfd && recv_enable)",
		lineno=271];
	"250:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd001d00e10>",
		fillcolor=lightcyan,
		label="250:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"250:CA" -> "250:BL"	 [cond="[]",
		lineno=None];
	"262:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd001d09050>",
		fillcolor=turquoise,
		label="262:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"262:BL" -> "263:IF"	 [cond="[]",
		lineno=None];
	"265:IF" -> "268:NS"	 [cond="['get_terminator']",
		label="!(get_terminator)",
		lineno=265];
	"266:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fcfe0276c50>",
		fillcolor=firebrick,
		label="266:NS
rxstate_next <= #TP rxIFGWait;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fcfe0276c50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"265:IF" -> "266:NS"	 [cond="['get_terminator']",
		label=get_terminator,
		lineno=265];
	"251:IF" -> "254:NS"	 [cond="['get_sfd', 'recv_enable']",
		label="!((get_sfd && recv_enable))",
		lineno=251];
	"251:IF" -> "252:NS"	 [cond="['get_sfd', 'recv_enable']",
		label="(get_sfd && recv_enable)",
		lineno=251];
	"259:BL" -> "Leaf_243:AL"	 [cond="[]",
		lineno=None];
	"243:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fd001d09290>",
		clk_sens=False,
		fillcolor=gold,
		label="243:AL",
		sens="['rxstate', 'get_sfd', 'local_invalid', 'recv_enable', 'get_error_code', 'length_error', 'get_terminator', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'recv_enable', 'rxstate', 'length_error', 'get_error_code', 'get_sfd', 'get_terminator', 'local_invalid']"];
	"244:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fd001d09210>",
		fillcolor=turquoise,
		label="244:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"243:AL" -> "244:BL"	 [cond="[]",
		lineno=None];
	"266:NS" -> "Leaf_243:AL"	 [cond="[]",
		lineno=None];
	"272:NS" -> "Leaf_243:AL"	 [cond="[]",
		lineno=None];
	"270:BL" -> "271:IF"	 [cond="[]",
		lineno=None];
	"276:BL" -> "277:IF"	 [cond="[]",
		lineno=None];
	"256:BL" -> "Leaf_243:AL"	 [cond="[]",
		lineno=None];
	"262:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fd001d00f50>",
		fillcolor=lightcyan,
		label="262:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"262:CA" -> "262:BL"	 [cond="[]",
		lineno=None];
	"249:CS" -> "259:CA"	 [cond="['rxstate']",
		label=rxstate,
		lineno=249];
	"249:CS" -> "270:CA"	 [cond="['rxstate']",
		label=rxstate,
		lineno=249];
	"249:CS" -> "276:CA"	 [cond="['rxstate']",
		label=rxstate,
		lineno=249];
	"249:CS" -> "256:CA"	 [cond="['rxstate']",
		label=rxstate,
		lineno=249];
	"249:CS" -> "250:CA"	 [cond="['rxstate']",
		label=rxstate,
		lineno=249];
	"249:CS" -> "262:CA"	 [cond="['rxstate']",
		label=rxstate,
		lineno=249];
	"245:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd001d09150>",
		fillcolor=springgreen,
		label="245:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"244:BL" -> "245:IF"	 [cond="[]",
		lineno=None];
	"245:IF" -> "245:BL"	 [cond="['reset']",
		label=reset,
		lineno=245];
	"245:IF" -> "248:BL"	 [cond="['reset']",
		label="!(reset)",
		lineno=245];
}
