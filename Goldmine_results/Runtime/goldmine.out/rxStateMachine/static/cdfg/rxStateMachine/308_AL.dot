strict digraph "" {
	node [label="\N"];
	"308:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fcfe0276790>",
		clk_sens=True,
		fillcolor=gold,
		label="308:AL",
		sens="['rxclk', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'rxstate', 'length_error', 'crc_check_invalid', 'crc_check_valid', 'wait_crc_check']"];
	"308:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fcfe0276cd0>",
		fillcolor=turquoise,
		label="308:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"308:AL" -> "308:BL"	 [cond="[]",
		lineno=None];
	"313:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fcfe0276dd0>",
		fillcolor=springgreen,
		label="313:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"314:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd001cf8110>",
		fillcolor=firebrick,
		label="314:NS
wait_crc_check <= #TP 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd001cf8110>]",
		style=filled,
		typ=NonblockingSubstitution];
	"313:IF" -> "314:NS"	 [cond="['crc_check_valid', 'crc_check_invalid', 'length_error']",
		label="(crc_check_valid || crc_check_invalid || length_error)",
		lineno=313];
	"316:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fcfe0276e10>",
		fillcolor=firebrick,
		label="316:NS
wait_crc_check <= #TP wait_crc_check;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fcfe0276e10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"313:IF" -> "316:NS"	 [cond="['crc_check_valid', 'crc_check_invalid', 'length_error']",
		label="!((crc_check_valid || crc_check_invalid || length_error))",
		lineno=313];
	"Leaf_308:AL"	 [def_var="['wait_crc_check']",
		label="Leaf_308:AL"];
	"314:NS" -> "Leaf_308:AL"	 [cond="[]",
		lineno=None];
	"310:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd001cf8710>",
		fillcolor=firebrick,
		label="310:NS
wait_crc_check <= #TP 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd001cf8710>]",
		style=filled,
		typ=NonblockingSubstitution];
	"310:NS" -> "Leaf_308:AL"	 [cond="[]",
		lineno=None];
	"316:NS" -> "Leaf_308:AL"	 [cond="[]",
		lineno=None];
	"312:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd001cf8450>",
		fillcolor=firebrick,
		label="312:NS
wait_crc_check <= #TP 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd001cf8450>]",
		style=filled,
		typ=NonblockingSubstitution];
	"312:NS" -> "Leaf_308:AL"	 [cond="[]",
		lineno=None];
	"309:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fcfe0276d10>",
		fillcolor=springgreen,
		label="309:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"309:IF" -> "310:NS"	 [cond="['reset']",
		label=reset,
		lineno=309];
	"311:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fcfe0276d90>",
		fillcolor=springgreen,
		label="311:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"309:IF" -> "311:IF"	 [cond="['reset']",
		label="!(reset)",
		lineno=309];
	"308:BL" -> "309:IF"	 [cond="[]",
		lineno=None];
	"311:IF" -> "313:IF"	 [cond="['rxstate']",
		label="!(rxstate[4])",
		lineno=311];
	"311:IF" -> "312:NS"	 [cond="['rxstate']",
		label="rxstate[4]",
		lineno=311];
}
