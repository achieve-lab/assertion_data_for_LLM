strict digraph "compose( ,  )" {
	node [label="\N"];
	"232:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f3ed565ab90>",
		fillcolor=turquoise,
		label="232:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"234:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f3ed52fe2d0>",
		fillcolor=springgreen,
		label="234:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"232:BL" -> "234:IF"	 [cond="[]",
		lineno=None];
	"Leaf_222:AL"	 [def_var="['byteRamOut', 'byteRam']",
		label="Leaf_222:AL"];
	"222:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f3ed55ede50>",
		clk_sens=True,
		fillcolor=gold,
		label="222:AL",
		sens="['clk', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'byteRamAddr', 'byteRamEn', 'byteRam', 'byteRamIn', 'byteRamRw']"];
	"Leaf_222:AL" -> "222:AL";
	"225:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f3ed565aa50>",
		fillcolor=springgreen,
		label="225:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"225:IF" -> "232:BL"	 [cond="['reset']",
		label="!(reset)",
		lineno=225];
	"226:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f3ed5309990>",
		fillcolor=turquoise,
		label="226:BL
byteRamOut = 8'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f3ed5309d10>]",
		style=filled,
		typ=Block];
	"225:IF" -> "226:BL"	 [cond="['reset']",
		label=reset,
		lineno=225];
	"226:BL" -> "Leaf_222:AL"	 [cond="[]",
		lineno=None];
	"235:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f3ed55edd90>",
		fillcolor=turquoise,
		label="235:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"234:IF" -> "235:BL"	 [cond="['byteRamEn']",
		label=byteRamEn,
		lineno=234];
	"253:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f3ed52fe3d0>",
		fillcolor=turquoise,
		label="253:BL
byteRamOut = 8'bz;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f3ed52fe410>]",
		style=filled,
		typ=Block];
	"234:IF" -> "253:BL"	 [cond="['byteRamEn']",
		label="!(byteRamEn)",
		lineno=234];
	"237:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f3ed52fe110>",
		fillcolor=springgreen,
		label="237:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"245:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f3ed52fe250>",
		fillcolor=turquoise,
		label="245:BL
byteRam[byteRamAddr] = byteRamIn;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f3ed52fe290>]",
		style=filled,
		typ=Block];
	"237:IF" -> "245:BL"	 [cond="['byteRamRw']",
		label="!(byteRamRw)",
		lineno=237];
	"238:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f3ed55ede10>",
		fillcolor=turquoise,
		label="238:BL
byteRamOut = byteRam[byteRamAddr];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f3ed52fe050>]",
		style=filled,
		typ=Block];
	"237:IF" -> "238:BL"	 [cond="['byteRamRw']",
		label=byteRamRw,
		lineno=237];
	"235:BL" -> "237:IF"	 [cond="[]",
		lineno=None];
	"223:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f3ed55edf50>",
		fillcolor=turquoise,
		label="223:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"222:AL" -> "223:BL"	 [cond="[]",
		lineno=None];
	"245:BL" -> "Leaf_222:AL"	 [cond="[]",
		lineno=None];
	"223:BL" -> "225:IF"	 [cond="[]",
		lineno=None];
	"238:BL" -> "Leaf_222:AL"	 [cond="[]",
		lineno=None];
	"253:BL" -> "Leaf_222:AL"	 [cond="[]",
		lineno=None];
}
