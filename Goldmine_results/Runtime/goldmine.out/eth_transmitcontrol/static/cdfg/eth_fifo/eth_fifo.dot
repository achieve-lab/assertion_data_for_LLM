strict digraph "compose( ,  )" {
	node [label="\N"];
	"586:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f839232d6d0>",
		clk_sens=False,
		fillcolor=gold,
		label="586:AL",
		sens="['clk', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'read', 'clear', 'empty', 'read_pointer']"];
	"587:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f839232d810>",
		fillcolor=turquoise,
		label="587:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"586:AL" -> "587:BL"	 [cond="[]",
		lineno=None];
	"Leaf_648:AL"	 [def_var="['data_out']",
		label="Leaf_648:AL"];
	"644:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8392705e10>",
		fillcolor=firebrick,
		label="644:NS
fifo[write_pointer] <= data_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8392705e10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_638:AL"	 [def_var="['fifo']",
		label="Leaf_638:AL"];
	"644:NS" -> "Leaf_638:AL"	 [cond="[]",
		lineno=None];
	"643:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8392705c90>",
		fillcolor=springgreen,
		label="643:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"643:IF" -> "644:NS"	 [cond="['write', 'full']",
		label="(write & ~full)",
		lineno=643];
	"641:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8392705a10>",
		fillcolor=firebrick,
		label="641:NS
fifo[0] <= data_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8392705a10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"641:NS" -> "Leaf_638:AL"	 [cond="[]",
		lineno=None];
	"580:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f839232d650>",
		fillcolor=firebrick,
		label="580:NS
cnt <= cnt - 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f839232d650>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_570:AL"	 [def_var="['cnt']",
		label="Leaf_570:AL"];
	"580:NS" -> "Leaf_570:AL"	 [cond="[]",
		lineno=None];
	"640:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8392705a50>",
		fillcolor=springgreen,
		label="640:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"640:IF" -> "643:IF"	 [cond="['write', 'clear']",
		label="!((write & clear))",
		lineno=640];
	"640:IF" -> "641:NS"	 [cond="['write', 'clear']",
		label="(write & clear)",
		lineno=640];
	"589:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f839232da10>",
		fillcolor=firebrick,
		label="589:NS
read_pointer <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f839232da10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_586:AL"	 [def_var="['read_pointer']",
		label="Leaf_586:AL"];
	"589:NS" -> "Leaf_586:AL"	 [cond="[]",
		lineno=None];
	"576:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f839232d1d0>",
		fillcolor=firebrick,
		label="576:NS
cnt <= { { CNT_WIDTH - 1{ 1'b0 } }, read ^ write };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f839232d1d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"576:NS" -> "Leaf_570:AL"	 [cond="[]",
		lineno=None];
	"650:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f83922cf110>",
		fillcolor=springgreen,
		label="650:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"653:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922cf3d0>",
		fillcolor=firebrick,
		label="653:NS
data_out <= fifo[read_pointer];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922cf3d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"650:IF" -> "653:NS"	 [cond="['clear']",
		label="!(clear)",
		lineno=650];
	"651:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922cf190>",
		fillcolor=firebrick,
		label="651:NS
data_out <= fifo[0];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922cf190>]",
		style=filled,
		typ=NonblockingSubstitution];
	"650:IF" -> "651:NS"	 [cond="['clear']",
		label=clear,
		lineno=650];
	"599:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8392701450>",
		fillcolor=turquoise,
		label="599:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"600:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8392701610>",
		fillcolor=springgreen,
		label="600:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"599:BL" -> "600:IF"	 [cond="[]",
		lineno=None];
	"606:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8392701d10>",
		fillcolor=springgreen,
		label="606:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"607:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8392701ed0>",
		fillcolor=firebrick,
		label="607:NS
write_pointer <= write_pointer + 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8392701ed0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"606:IF" -> "607:NS"	 [cond="['write', 'full']",
		label="(write & ~full)",
		lineno=606];
	"638:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f8392705750>",
		clk_sens=False,
		fillcolor=gold,
		label="638:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['write', 'clear', 'full', 'data_in']"];
	"639:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8392705790>",
		fillcolor=turquoise,
		label="639:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"638:AL" -> "639:BL"	 [cond="[]",
		lineno=None];
	"604:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8392701910>",
		fillcolor=firebrick,
		label="604:NS
write_pointer <= { { CNT_WIDTH - 2{ 1'b0 } }, write };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8392701910>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_598:AL"	 [def_var="['write_pointer']",
		label="Leaf_598:AL"];
	"604:NS" -> "Leaf_598:AL"	 [cond="[]",
		lineno=None];
	"648:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f8392705f10>",
		clk_sens=False,
		fillcolor=gold,
		label="648:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['clear', 'fifo', 'read_pointer']"];
	"649:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8392705f50>",
		fillcolor=turquoise,
		label="649:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"648:AL" -> "649:BL"	 [cond="[]",
		lineno=None];
	"573:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922f4cd0>",
		fillcolor=firebrick,
		label="573:NS
cnt <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922f4cd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"573:NS" -> "Leaf_570:AL"	 [cond="[]",
		lineno=None];
	"613:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f8392705510>",
		def_var="['almost_full']",
		fillcolor=deepskyblue,
		label="613:AS
almost_full = &cnt[CNT_WIDTH-2:0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cnt']"];
	"607:NS" -> "Leaf_598:AL"	 [cond="[]",
		lineno=None];
	"649:BL" -> "650:IF"	 [cond="[]",
		lineno=None];
	"579:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f839232d610>",
		fillcolor=springgreen,
		label="579:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"579:IF" -> "580:NS"	 [cond="['read']",
		label=read,
		lineno=579];
	"582:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f839232d850>",
		fillcolor=firebrick,
		label="582:NS
cnt <= cnt + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f839232d850>]",
		style=filled,
		typ=NonblockingSubstitution];
	"579:IF" -> "582:NS"	 [cond="['read']",
		label="!(read)",
		lineno=579];
	"572:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f83922f4d10>",
		fillcolor=springgreen,
		label="572:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"572:IF" -> "573:NS"	 [cond="['reset']",
		label=reset,
		lineno=572];
	"575:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f839232d150>",
		fillcolor=springgreen,
		label="575:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"572:IF" -> "575:IF"	 [cond="['reset']",
		label="!(reset)",
		lineno=572];
	"594:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8392701190>",
		fillcolor=springgreen,
		label="594:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"595:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8392701350>",
		fillcolor=firebrick,
		label="595:NS
read_pointer <= read_pointer + 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8392701350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"594:IF" -> "595:NS"	 [cond="['read', 'empty']",
		label="(read & ~empty)",
		lineno=594];
	"Leaf_638:AL" -> "648:AL";
	"639:BL" -> "640:IF"	 [cond="[]",
		lineno=None];
	"601:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83927015d0>",
		fillcolor=firebrick,
		label="601:NS
write_pointer <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83927015d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"601:NS" -> "Leaf_598:AL"	 [cond="[]",
		lineno=None];
	"598:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f8392701410>",
		clk_sens=False,
		fillcolor=gold,
		label="598:AL",
		sens="['clk', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'write', 'clear', 'full', 'write_pointer']"];
	"598:AL" -> "599:BL"	 [cond="[]",
		lineno=None];
	"600:IF" -> "601:NS"	 [cond="['reset']",
		label=reset,
		lineno=600];
	"603:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8392701a50>",
		fillcolor=springgreen,
		label="603:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"600:IF" -> "603:IF"	 [cond="['reset']",
		label="!(reset)",
		lineno=600];
	"Leaf_570:AL" -> "613:AS";
	"612:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f83927052d0>",
		def_var="['full']",
		fillcolor=deepskyblue,
		label="612:AS
full = cnt == DEPTH;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cnt']"];
	"Leaf_570:AL" -> "612:AS";
	"611:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f8392705110>",
		def_var="['almost_empty']",
		fillcolor=deepskyblue,
		label="611:AS
almost_empty = cnt == 1;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cnt']"];
	"Leaf_570:AL" -> "611:AS";
	"610:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f8392701c50>",
		def_var="['empty']",
		fillcolor=deepskyblue,
		label="610:AS
empty = ~(|cnt);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cnt']"];
	"Leaf_570:AL" -> "610:AS";
	"570:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f83922f4b50>",
		clk_sens=False,
		fillcolor=gold,
		label="570:AL",
		sens="['clk', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'read', 'clear', 'write', 'cnt']"];
	"Leaf_570:AL" -> "570:AL";
	"575:IF" -> "576:NS"	 [cond="['clear']",
		label=clear,
		lineno=575];
	"578:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f839232d3d0>",
		fillcolor=springgreen,
		label="578:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"575:IF" -> "578:IF"	 [cond="['clear']",
		label="!(clear)",
		lineno=575];
	"582:NS" -> "Leaf_570:AL"	 [cond="[]",
		lineno=None];
	"612:AS" -> "638:AL";
	"612:AS" -> "598:AL";
	"Leaf_586:AL" -> "586:AL";
	"Leaf_586:AL" -> "648:AL";
	"591:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f839232de90>",
		fillcolor=springgreen,
		label="591:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"591:IF" -> "594:IF"	 [cond="['clear']",
		label="!(clear)",
		lineno=591];
	"592:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f839232dd50>",
		fillcolor=firebrick,
		label="592:NS
read_pointer <= { { CNT_WIDTH - 2{ 1'b0 } }, read };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f839232dd50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"591:IF" -> "592:NS"	 [cond="['clear']",
		label=clear,
		lineno=591];
	"578:IF" -> "579:IF"	 [cond="['read', 'write']",
		label="(read ^ write)",
		lineno=578];
	"603:IF" -> "606:IF"	 [cond="['clear']",
		label="!(clear)",
		lineno=603];
	"603:IF" -> "604:NS"	 [cond="['clear']",
		label=clear,
		lineno=603];
	"653:NS" -> "Leaf_648:AL"	 [cond="[]",
		lineno=None];
	"588:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f839232da50>",
		fillcolor=springgreen,
		label="588:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"588:IF" -> "589:NS"	 [cond="['reset']",
		label=reset,
		lineno=588];
	"588:IF" -> "591:IF"	 [cond="['reset']",
		label="!(reset)",
		lineno=588];
	"595:NS" -> "Leaf_586:AL"	 [cond="[]",
		lineno=None];
	"651:NS" -> "Leaf_648:AL"	 [cond="[]",
		lineno=None];
	"587:BL" -> "588:IF"	 [cond="[]",
		lineno=None];
	"571:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f83922f4b90>",
		fillcolor=turquoise,
		label="571:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"571:BL" -> "572:IF"	 [cond="[]",
		lineno=None];
	"Leaf_598:AL" -> "598:AL";
	"610:AS" -> "586:AL";
	"592:NS" -> "Leaf_586:AL"	 [cond="[]",
		lineno=None];
	"570:AL" -> "571:BL"	 [cond="[]",
		lineno=None];
}
