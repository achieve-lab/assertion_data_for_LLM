strict digraph "compose( ,  )" {
	node [label="\N"];
	"848:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f83922ddd50>",
		fillcolor=turquoise,
		label="848:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"849:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f83922dded0>",
		fillcolor=springgreen,
		label="849:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"848:BL" -> "849:IF"	 [cond="[]",
		lineno=None];
	"922:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f83925de350>",
		fillcolor=cadetblue,
		label="922:BS
MuxedCtrlData[7:0] = MAC[47:40];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f83925de350>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_910:AL"	 [def_var="['MuxedCtrlData']",
		label="Leaf_910:AL"];
	"922:BS" -> "Leaf_910:AL"	 [cond="[]",
		lineno=None];
	"836:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f83922dd790>",
		fillcolor=turquoise,
		label="836:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"837:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f83922dd9d0>",
		fillcolor=springgreen,
		label="837:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"836:BL" -> "837:IF"	 [cond="[]",
		lineno=None];
	"930:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f83925e6f90>",
		fillcolor=cadetblue,
		label="930:BS
MuxedCtrlData[7:0] = 8'h00;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f83925e6f90>]",
		style=filled,
		typ=BlockingSubstitution];
	"930:BS" -> "Leaf_910:AL"	 [cond="[]",
		lineno=None];
	"912:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f83925e8ad0>",
		fillcolor=linen,
		label="912:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"917:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f83925eb350>",
		fillcolor=lightcyan,
		label="917:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"912:CS" -> "917:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=912];
	"918:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f83925eb610>",
		fillcolor=lightcyan,
		label="918:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"912:CS" -> "918:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=912];
	"921:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f83925ebf10>",
		fillcolor=lightcyan,
		label="921:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"912:CS" -> "921:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=912];
	"922:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f83925de250>",
		fillcolor=lightcyan,
		label="922:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"912:CS" -> "922:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=912];
	"925:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f83925ded90>",
		fillcolor=lightcyan,
		label="925:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"912:CS" -> "925:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=912];
	"931:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f83925e8250>",
		fillcolor=lightcyan,
		label="931:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"912:CS" -> "931:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=912];
	"919:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f83925eb910>",
		fillcolor=lightcyan,
		label="919:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"912:CS" -> "919:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=912];
	"926:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f83925e6190>",
		fillcolor=lightcyan,
		label="926:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"912:CS" -> "926:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=912];
	"920:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f83925ebc10>",
		fillcolor=lightcyan,
		label="920:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"912:CS" -> "920:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=912];
	"930:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f83925e6f10>",
		fillcolor=lightcyan,
		label="930:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"912:CS" -> "930:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=912];
	"932:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f83925e8550>",
		fillcolor=lightcyan,
		label="932:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"912:CS" -> "932:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=912];
	"928:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f83925e6910>",
		fillcolor=lightcyan,
		label="928:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"912:CS" -> "928:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=912];
	"924:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f83925de9d0>",
		fillcolor=lightcyan,
		label="924:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"912:CS" -> "924:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=912];
	"929:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f83925e6c10>",
		fillcolor=lightcyan,
		label="929:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"912:CS" -> "929:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=912];
	"933:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f83925e8910>",
		fillcolor=lightcyan,
		label="933:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"912:CS" -> "933:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=912];
	"934:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f83925e8c90>",
		fillcolor=lightcyan,
		label="934:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"912:CS" -> "934:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=912];
	"913:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f83925d9650>",
		fillcolor=lightcyan,
		label="913:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"912:CS" -> "913:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=912];
	"923:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f83925de610>",
		fillcolor=lightcyan,
		label="923:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"912:CS" -> "923:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=912];
	"927:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f83925e6550>",
		fillcolor=lightcyan,
		label="927:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"912:CS" -> "927:CA"	 [cond="['ByteCnt']",
		label=ByteCnt,
		lineno=912];
	"917:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f83925eb3d0>",
		fillcolor=cadetblue,
		label="917:BS
MuxedCtrlData[7:0] = 8'h80;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f83925eb3d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"917:CA" -> "917:BS"	 [cond="[]",
		lineno=None];
	"939:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f83925e8f90>",
		fillcolor=turquoise,
		label="939:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"940:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f83925e3210>",
		fillcolor=springgreen,
		label="940:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"939:BL" -> "940:IF"	 [cond="[]",
		lineno=None];
	"918:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f83925eb690>",
		fillcolor=cadetblue,
		label="918:BS
MuxedCtrlData[7:0] = 8'hC2;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f83925eb690>]",
		style=filled,
		typ=BlockingSubstitution];
	"918:CA" -> "918:BS"	 [cond="[]",
		lineno=None];
	"Leaf_860:AL"	 [def_var="['ControlEnd_q', 'TxCtrlStartFrm_q']",
		label="Leaf_860:AL"];
	"886:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f83922f1090>",
		def_var="['IncrementByteCntBy2']",
		fillcolor=deepskyblue,
		label="886:AS
IncrementByteCntBy2 = CtrlMux & TxCtrlStartFrm & ~TxCtrlStartFrm_q & TxUsedDataIn;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['CtrlMux', 'TxCtrlStartFrm', 'TxCtrlStartFrm_q', 'TxUsedDataIn']"];
	"Leaf_860:AL" -> "886:AS";
	"793:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f83922c7d10>",
		clk_sens=True,
		fillcolor=gold,
		label="793:AL",
		sens="['MTxClk', 'TxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['ControlEnd_q', 'ControlEnd', 'TxReset']"];
	"Leaf_860:AL" -> "793:AL";
	"885:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f83922f2c90>",
		def_var="['IncrementByteCnt']",
		fillcolor=deepskyblue,
		label="885:AS
IncrementByteCnt = CtrlMux & (TxCtrlStartFrm & ~TxCtrlStartFrm_q & ~TxUsedDataIn | TxUsedDataIn & ~ControlEnd);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['CtrlMux', 'TxCtrlStartFrm', 'TxCtrlStartFrm_q', 'TxUsedDataIn', 'TxUsedDataIn', 'ControlEnd']"];
	"Leaf_860:AL" -> "885:AS";
	"927:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f83925e6650>",
		fillcolor=cadetblue,
		label="927:BS
MuxedCtrlData[7:0] = MAC[7:0];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f83925e6650>]",
		style=filled,
		typ=BlockingSubstitution];
	"927:BS" -> "Leaf_910:AL"	 [cond="[]",
		lineno=None];
	"767:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922b48d0>",
		fillcolor=firebrick,
		label="767:NS
WillSendControlFrame <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922b48d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_764:AL"	 [def_var="['WillSendControlFrame']",
		label="Leaf_764:AL"];
	"767:NS" -> "Leaf_764:AL"	 [cond="[]",
		lineno=None];
	"874:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922efed0>",
		fillcolor=firebrick,
		label="874:NS
DlyCrcCnt <= 4'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922efed0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_871:AL"	 [def_var="['DlyCrcCnt']",
		label="Leaf_871:AL"];
	"874:NS" -> "Leaf_871:AL"	 [cond="[]",
		lineno=None];
	"938:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f83925e8f50>",
		clk_sens=True,
		fillcolor=gold,
		label="938:AL",
		sens="['MTxClk', 'TxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['MuxedCtrlData', 'ByteCnt', 'TxReset']"];
	"938:AL" -> "939:BL"	 [cond="[]",
		lineno=None];
	"921:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f83925ebf90>",
		fillcolor=cadetblue,
		label="921:BS
MuxedCtrlData[7:0] = 8'h01;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f83925ebf90>]",
		style=filled,
		typ=BlockingSubstitution];
	"921:CA" -> "921:BS"	 [cond="[]",
		lineno=None];
	"Leaf_822:AL"	 [def_var="['SendingCtrlFrm']",
		label="Leaf_822:AL"];
	"808:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f83922ca5d0>",
		fillcolor=turquoise,
		label="808:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"809:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f83922ca750>",
		fillcolor=springgreen,
		label="809:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"808:BL" -> "809:IF"	 [cond="[]",
		lineno=None];
	"872:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f83922efd90>",
		fillcolor=turquoise,
		label="872:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"873:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f83922eff10>",
		fillcolor=springgreen,
		label="873:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"872:BL" -> "873:IF"	 [cond="[]",
		lineno=None];
	"822:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f83922cae10>",
		clk_sens=True,
		fillcolor=gold,
		label="822:AL",
		sens="['MTxClk', 'TxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['WillSendControlFrame', 'TxCtrlStartFrm', 'TxReset', 'TxDoneIn']"];
	"823:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f83922cae50>",
		fillcolor=turquoise,
		label="823:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"822:AL" -> "823:BL"	 [cond="[]",
		lineno=None];
	"786:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f83922c7b50>",
		fillcolor=springgreen,
		label="786:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"787:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922c7c50>",
		fillcolor=firebrick,
		label="787:NS
TxCtrlStartFrm <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922c7c50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"786:IF" -> "787:NS"	 [cond="['WillSendControlFrame', 'TxUsedDataOut', 'TxDoneIn', 'TxAbortIn', 'TxStartFrmIn', 'TxUsedDataOutDetected']",
		label="(WillSendControlFrame & ~TxUsedDataOut & (TxDoneIn | TxAbortIn | TxStartFrmIn | ~TxUsedDataOutDetected))",
		lineno=786];
	"898:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f83922f1e50>",
		fillcolor=springgreen,
		label="898:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"899:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922f1f90>",
		fillcolor=firebrick,
		label="899:NS
ByteCnt <= ByteCnt[5:0] + 6'd2;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922f1f90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"898:IF" -> "899:NS"	 [cond="['IncrementByteCntBy2', 'EnableCnt']",
		label="(IncrementByteCntBy2 & EnableCnt)",
		lineno=898];
	"901:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f83925d91d0>",
		fillcolor=springgreen,
		label="901:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"898:IF" -> "901:IF"	 [cond="['IncrementByteCntBy2', 'EnableCnt']",
		label="!((IncrementByteCntBy2 & EnableCnt))",
		lineno=898];
	"918:BS" -> "Leaf_910:AL"	 [cond="[]",
		lineno=None];
	"877:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922f21d0>",
		fillcolor=firebrick,
		label="877:NS
DlyCrcCnt <= 4'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922f21d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"877:NS" -> "Leaf_871:AL"	 [cond="[]",
		lineno=None];
	"Leaf_778:AL"	 [def_var="['TxCtrlStartFrm']",
		label="Leaf_778:AL"];
	"787:NS" -> "Leaf_778:AL"	 [cond="[]",
		lineno=None];
	"922:CA" -> "922:BS"	 [cond="[]",
		lineno=None];
	"888:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f83922f14d0>",
		def_var="['EnableCnt']",
		fillcolor=deepskyblue,
		label="888:AS
EnableCnt = ~DlyCrcEn | DlyCrcEn & &DlyCrcCnt[1:0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['DlyCrcEn', 'DlyCrcEn', 'DlyCrcCnt']"];
	"890:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f83922f16d0>",
		clk_sens=True,
		fillcolor=gold,
		label="890:AL",
		sens="['MTxClk', 'TxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['IncrementByteCnt', 'EnableCnt', 'IncrementByteCntBy2', 'ResetByteCnt', 'ByteCnt', 'TxReset']"];
	"888:AS" -> "890:AL";
	"766:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f83922b4910>",
		fillcolor=springgreen,
		label="766:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"766:IF" -> "767:NS"	 [cond="['TxReset']",
		label=TxReset,
		lineno=766];
	"769:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f83922b4c90>",
		fillcolor=springgreen,
		label="769:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"766:IF" -> "769:IF"	 [cond="['TxReset']",
		label="!(TxReset)",
		lineno=766];
	"921:BS" -> "Leaf_910:AL"	 [cond="[]",
		lineno=None];
	"933:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f83925e8a10>",
		fillcolor=cadetblue,
		label="933:BS
MuxedCtrlData[7:0] = TxPauseTV[7:0];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f83925e8a10>]",
		style=filled,
		typ=BlockingSubstitution];
	"933:BS" -> "Leaf_910:AL"	 [cond="[]",
		lineno=None];
	"867:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f83922efb10>",
		def_var="['IncrementDlyCrcCnt']",
		fillcolor=deepskyblue,
		label="867:AS
IncrementDlyCrcCnt = CtrlMux & TxUsedDataIn & ~DlyCrcCnt[2];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['CtrlMux', 'TxUsedDataIn', 'DlyCrcCnt']"];
	"871:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f83922efd50>",
		clk_sens=True,
		fillcolor=gold,
		label="871:AL",
		sens="['MTxClk', 'TxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['IncrementDlyCrcCnt', 'DlyCrcCnt', 'ResetByteCnt', 'TxReset']"];
	"867:AS" -> "871:AL";
	"Leaf_835:AL"	 [def_var="['TxUsedDataIn_q']",
		label="Leaf_835:AL"];
	"778:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f83922c7050>",
		clk_sens=True,
		fillcolor=gold,
		label="778:AL",
		sens="['MTxClk', 'TxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['TxUsedDataIn_q', 'TxStartFrmIn', 'TxDoneIn', 'TxAbortIn', 'WillSendControlFrame', 'TxUsedDataOutDetected', 'CtrlMux', 'TxUsedDataOut', '\
TxReset']"];
	"Leaf_835:AL" -> "778:AL";
	"871:AL" -> "872:BL"	 [cond="[]",
		lineno=None];
	"Leaf_938:AL"	 [def_var="['ControlData']",
		label="Leaf_938:AL"];
	"799:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922ca290>",
		fillcolor=firebrick,
		label="799:NS
TxCtrlEndFrm <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922ca290>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_793:AL"	 [def_var="['TxCtrlEndFrm']",
		label="Leaf_793:AL"];
	"799:NS" -> "Leaf_793:AL"	 [cond="[]",
		lineno=None];
	"772:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f83922b4e90>",
		fillcolor=springgreen,
		label="772:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"773:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922b4f90>",
		fillcolor=firebrick,
		label="773:NS
WillSendControlFrame <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922b4f90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"772:IF" -> "773:NS"	 [cond="['TPauseRq', 'TxFlow']",
		label="(TPauseRq & TxFlow)",
		lineno=772];
	"795:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f83922c7f10>",
		fillcolor=springgreen,
		label="795:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"798:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f83922ca350>",
		fillcolor=springgreen,
		label="798:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"795:IF" -> "798:IF"	 [cond="['TxReset']",
		label="!(TxReset)",
		lineno=795];
	"796:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922c7ed0>",
		fillcolor=firebrick,
		label="796:NS
TxCtrlEndFrm <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922c7ed0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"795:IF" -> "796:NS"	 [cond="['TxReset']",
		label=TxReset,
		lineno=795];
	"764:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f83922b4710>",
		clk_sens=True,
		fillcolor=gold,
		label="764:AL",
		sens="['MTxClk', 'TxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['TxFlow', 'TxCtrlEndFrm', 'CtrlMux', 'TPauseRq', 'TxReset']"];
	"765:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f83922b4750>",
		fillcolor=turquoise,
		label="765:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"764:AL" -> "765:BL"	 [cond="[]",
		lineno=None];
	"925:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f83925dee90>",
		fillcolor=cadetblue,
		label="925:BS
MuxedCtrlData[7:0] = MAC[23:16];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f83925dee90>]",
		style=filled,
		typ=BlockingSubstitution];
	"925:CA" -> "925:BS"	 [cond="[]",
		lineno=None];
	"831:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922dd690>",
		fillcolor=firebrick,
		label="831:NS
SendingCtrlFrm <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922dd690>]",
		style=filled,
		typ=NonblockingSubstitution];
	"831:NS" -> "Leaf_822:AL"	 [cond="[]",
		lineno=None];
	"931:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f83925e82d0>",
		fillcolor=cadetblue,
		label="931:BS
MuxedCtrlData[7:0] = 8'h01;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f83925e82d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"931:CA" -> "931:BS"	 [cond="[]",
		lineno=None];
	"779:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f83922b4fd0>",
		fillcolor=turquoise,
		label="779:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"778:AL" -> "779:BL"	 [cond="[]",
		lineno=None];
	"919:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f83925eb990>",
		fillcolor=cadetblue,
		label="919:BS
MuxedCtrlData[7:0] = 8'h00;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f83925eb990>]",
		style=filled,
		typ=BlockingSubstitution];
	"919:CA" -> "919:BS"	 [cond="[]",
		lineno=None];
	"783:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f83922c75d0>",
		fillcolor=springgreen,
		label="783:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"783:IF" -> "786:IF"	 [cond="['TxUsedDataIn_q', 'CtrlMux']",
		label="!((TxUsedDataIn_q & CtrlMux))",
		lineno=783];
	"784:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922c7590>",
		fillcolor=firebrick,
		label="784:NS
TxCtrlStartFrm <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922c7590>]",
		style=filled,
		typ=NonblockingSubstitution];
	"783:IF" -> "784:NS"	 [cond="['TxUsedDataIn_q', 'CtrlMux']",
		label="(TxUsedDataIn_q & CtrlMux)",
		lineno=783];
	"847:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f83922ddd10>",
		clk_sens=True,
		fillcolor=gold,
		label="847:AL",
		sens="['MTxClk', 'TxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['TxStartFrmIn', 'TxCtrlStartFrm', 'TxReset']"];
	"847:AL" -> "848:BL"	 [cond="[]",
		lineno=None];
	"876:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f83922f2210>",
		fillcolor=springgreen,
		label="876:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"876:IF" -> "877:NS"	 [cond="['ResetByteCnt']",
		label=ResetByteCnt,
		lineno=876];
	"879:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f83922f2350>",
		fillcolor=springgreen,
		label="879:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"876:IF" -> "879:IF"	 [cond="['ResetByteCnt']",
		label="!(ResetByteCnt)",
		lineno=876];
	"926:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f83925e6290>",
		fillcolor=cadetblue,
		label="926:BS
MuxedCtrlData[7:0] = MAC[15:8];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f83925e6290>]",
		style=filled,
		typ=BlockingSubstitution];
	"926:CA" -> "926:BS"	 [cond="[]",
		lineno=None];
	"816:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922cad50>",
		fillcolor=firebrick,
		label="816:NS
CtrlMux <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922cad50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_807:AL"	 [def_var="['CtrlMux']",
		label="Leaf_807:AL"];
	"816:NS" -> "Leaf_807:AL"	 [cond="[]",
		lineno=None];
	"932:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f83925e8650>",
		fillcolor=cadetblue,
		label="932:BS
MuxedCtrlData[7:0] = TxPauseTV[15:8];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f83925e8650>]",
		style=filled,
		typ=BlockingSubstitution];
	"932:BS" -> "Leaf_910:AL"	 [cond="[]",
		lineno=None];
	"838:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922dd910>",
		fillcolor=firebrick,
		label="838:NS
TxUsedDataIn_q <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922dd910>]",
		style=filled,
		typ=NonblockingSubstitution];
	"837:IF" -> "838:NS"	 [cond="['TxReset']",
		label=TxReset,
		lineno=837];
	"840:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922ddb10>",
		fillcolor=firebrick,
		label="840:NS
TxUsedDataIn_q <= TxUsedDataIn;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922ddb10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"837:IF" -> "840:NS"	 [cond="['TxReset']",
		label="!(TxReset)",
		lineno=837];
	"923:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f83925de710>",
		fillcolor=cadetblue,
		label="923:BS
MuxedCtrlData[7:0] = MAC[39:32];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f83925de710>]",
		style=filled,
		typ=BlockingSubstitution];
	"923:BS" -> "Leaf_910:AL"	 [cond="[]",
		lineno=None];
	"886:AS" -> "890:AL";
	"917:BS" -> "Leaf_910:AL"	 [cond="[]",
		lineno=None];
	"920:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f83925ebc90>",
		fillcolor=cadetblue,
		label="920:BS
MuxedCtrlData[7:0] = 8'h00;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f83925ebc90>]",
		style=filled,
		typ=BlockingSubstitution];
	"920:CA" -> "920:BS"	 [cond="[]",
		lineno=None];
	"Leaf_890:AL"	 [def_var="['ByteCnt']",
		label="Leaf_890:AL"];
	"Leaf_890:AL" -> "938:AL";
	"910:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f83925d9850>",
		clk_sens=False,
		fillcolor=gold,
		label="910:AL",
		sens="['ByteCnt', 'DlyCrcEn', 'MAC', 'TxPauseTV', 'DlyCrcCnt']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['DlyCrcEn', 'TxPauseTV', 'MAC', 'DlyCrcCnt', 'ByteCnt']"];
	"Leaf_890:AL" -> "910:AL";
	"Leaf_890:AL" -> "890:AL";
	"906:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f83925d9190>",
		def_var="['ControlEnd']",
		fillcolor=deepskyblue,
		label="906:AS
ControlEnd = ByteCnt[5:0] == 6'h22;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ByteCnt']"];
	"Leaf_890:AL" -> "906:AS";
	"911:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f83925d9810>",
		fillcolor=turquoise,
		label="911:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"910:AL" -> "911:BL"	 [cond="[]",
		lineno=None];
	"943:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f83925e3550>",
		fillcolor=springgreen,
		label="943:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"944:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83925e3690>",
		fillcolor=firebrick,
		label="944:NS
ControlData[7:0] <= MuxedCtrlData[7:0];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83925e3690>]",
		style=filled,
		typ=NonblockingSubstitution];
	"943:IF" -> "944:NS"	 [cond="['ByteCnt']",
		label="(~ByteCnt[0])",
		lineno=943];
	"925:BS" -> "Leaf_910:AL"	 [cond="[]",
		lineno=None];
	"781:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922c7210>",
		fillcolor=firebrick,
		label="781:NS
TxCtrlStartFrm <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922c7210>]",
		style=filled,
		typ=NonblockingSubstitution];
	"781:NS" -> "Leaf_778:AL"	 [cond="[]",
		lineno=None];
	"930:CA" -> "930:BS"	 [cond="[]",
		lineno=None];
	"932:CA" -> "932:BS"	 [cond="[]",
		lineno=None];
	"880:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922f2510>",
		fillcolor=firebrick,
		label="880:NS
DlyCrcCnt <= DlyCrcCnt + 4'd1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922f2510>]",
		style=filled,
		typ=NonblockingSubstitution];
	"879:IF" -> "880:NS"	 [cond="['IncrementDlyCrcCnt']",
		label=IncrementDlyCrcCnt,
		lineno=879];
	"773:NS" -> "Leaf_764:AL"	 [cond="[]",
		lineno=None];
	"827:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f83922dd410>",
		fillcolor=springgreen,
		label="827:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"830:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f83922dd590>",
		fillcolor=springgreen,
		label="830:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"827:IF" -> "830:IF"	 [cond="['WillSendControlFrame', 'TxCtrlStartFrm']",
		label="!((WillSendControlFrame & TxCtrlStartFrm))",
		lineno=827];
	"828:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922dd3d0>",
		fillcolor=firebrick,
		label="828:NS
SendingCtrlFrm <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922dd3d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"827:IF" -> "828:NS"	 [cond="['WillSendControlFrame', 'TxCtrlStartFrm']",
		label="(WillSendControlFrame & TxCtrlStartFrm)",
		lineno=827];
	"902:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83925d9450>",
		fillcolor=firebrick,
		label="902:NS
ByteCnt <= ByteCnt[5:0] + 6'd1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83925d9450>]",
		style=filled,
		typ=NonblockingSubstitution];
	"902:NS" -> "Leaf_890:AL"	 [cond="[]",
		lineno=None];
	"944:NS" -> "Leaf_938:AL"	 [cond="[]",
		lineno=None];
	"880:NS" -> "Leaf_871:AL"	 [cond="[]",
		lineno=None];
	"Leaf_764:AL" -> "822:AL";
	"Leaf_764:AL" -> "778:AL";
	"807:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f83922ca590>",
		clk_sens=True,
		fillcolor=gold,
		label="807:AL",
		sens="['MTxClk', 'TxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['WillSendControlFrame', 'TxDoneIn', 'TxUsedDataOut', 'TxReset']"];
	"Leaf_764:AL" -> "807:AL";
	"928:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f83925e6990>",
		fillcolor=cadetblue,
		label="928:BS
MuxedCtrlData[7:0] = 8'h88;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f83925e6990>]",
		style=filled,
		typ=BlockingSubstitution];
	"928:CA" -> "928:BS"	 [cond="[]",
		lineno=None];
	"850:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922dde90>",
		fillcolor=firebrick,
		label="850:NS
BlockTxDone <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922dde90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"849:IF" -> "850:NS"	 [cond="['TxReset']",
		label=TxReset,
		lineno=849];
	"852:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f83922ef1d0>",
		fillcolor=springgreen,
		label="852:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"849:IF" -> "852:IF"	 [cond="['TxReset']",
		label="!(TxReset)",
		lineno=849];
	"Leaf_847:AL"	 [def_var="['BlockTxDone']",
		label="Leaf_847:AL"];
	"850:NS" -> "Leaf_847:AL"	 [cond="[]",
		lineno=None];
	"891:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f83922f1710>",
		fillcolor=turquoise,
		label="891:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"890:AL" -> "891:BL"	 [cond="[]",
		lineno=None];
	"924:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f83925dead0>",
		fillcolor=cadetblue,
		label="924:BS
MuxedCtrlData[7:0] = MAC[31:24];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f83925dead0>]",
		style=filled,
		typ=BlockingSubstitution];
	"924:CA" -> "924:BS"	 [cond="[]",
		lineno=None];
	"873:IF" -> "874:NS"	 [cond="['TxReset']",
		label=TxReset,
		lineno=873];
	"873:IF" -> "876:IF"	 [cond="['TxReset']",
		label="!(TxReset)",
		lineno=873];
	"Leaf_793:AL" -> "764:AL";
	"810:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922ca710>",
		fillcolor=firebrick,
		label="810:NS
CtrlMux <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922ca710>]",
		style=filled,
		typ=NonblockingSubstitution];
	"810:NS" -> "Leaf_807:AL"	 [cond="[]",
		lineno=None];
	"929:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f83925e6c90>",
		fillcolor=cadetblue,
		label="929:BS
MuxedCtrlData[7:0] = 8'h08;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f83925e6c90>]",
		style=filled,
		typ=BlockingSubstitution];
	"929:CA" -> "929:BS"	 [cond="[]",
		lineno=None];
	"861:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f83922ef610>",
		fillcolor=turquoise,
		label="861:BL
ControlEnd_q <= ControlEnd;
TxCtrlStartFrm_q <= TxCtrlStartFrm;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922ef550>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f83922ef750>]",
		style=filled,
		typ=Block];
	"861:BL" -> "Leaf_860:AL"	 [cond="[]",
		lineno=None];
	"809:IF" -> "810:NS"	 [cond="['TxReset']",
		label=TxReset,
		lineno=809];
	"812:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f83922cab10>",
		fillcolor=springgreen,
		label="812:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"809:IF" -> "812:IF"	 [cond="['TxReset']",
		label="!(TxReset)",
		lineno=809];
	"893:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922f1850>",
		fillcolor=firebrick,
		label="893:NS
ByteCnt <= 6'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922f1850>]",
		style=filled,
		typ=NonblockingSubstitution];
	"893:NS" -> "Leaf_890:AL"	 [cond="[]",
		lineno=None];
	"914:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f83925d9e90>",
		fillcolor=cadetblue,
		label="914:BS
MuxedCtrlData[7:0] = 8'h01;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f83925d9e90>]",
		style=filled,
		typ=BlockingSubstitution];
	"914:BS" -> "Leaf_910:AL"	 [cond="[]",
		lineno=None];
	"830:IF" -> "831:NS"	 [cond="['TxDoneIn']",
		label=TxDoneIn,
		lineno=830];
	"896:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922f1b10>",
		fillcolor=firebrick,
		label="896:NS
ByteCnt <= 6'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922f1b10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"896:NS" -> "Leaf_890:AL"	 [cond="[]",
		lineno=None];
	"813:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922caad0>",
		fillcolor=firebrick,
		label="813:NS
CtrlMux <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922caad0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"812:IF" -> "813:NS"	 [cond="['WillSendControlFrame', 'TxUsedDataOut']",
		label="(WillSendControlFrame & ~TxUsedDataOut)",
		lineno=812];
	"815:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f83922cac10>",
		fillcolor=springgreen,
		label="815:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"812:IF" -> "815:IF"	 [cond="['WillSendControlFrame', 'TxUsedDataOut']",
		label="!((WillSendControlFrame & ~TxUsedDataOut))",
		lineno=812];
	"853:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922ef190>",
		fillcolor=firebrick,
		label="853:NS
BlockTxDone <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922ef190>]",
		style=filled,
		typ=NonblockingSubstitution];
	"853:NS" -> "Leaf_847:AL"	 [cond="[]",
		lineno=None];
	"838:NS" -> "Leaf_835:AL"	 [cond="[]",
		lineno=None];
	"884:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f83922f2790>",
		def_var="['ResetByteCnt']",
		fillcolor=deepskyblue,
		label="884:AS
ResetByteCnt = TxReset | ~TxCtrlStartFrm & (TxDoneIn | TxAbortIn);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['TxReset', 'TxCtrlStartFrm', 'TxDoneIn', 'TxAbortIn']"];
	"884:AS" -> "871:AL";
	"884:AS" -> "890:AL";
	"813:NS" -> "Leaf_807:AL"	 [cond="[]",
		lineno=None];
	"931:BS" -> "Leaf_910:AL"	 [cond="[]",
		lineno=None];
	"929:BS" -> "Leaf_910:AL"	 [cond="[]",
		lineno=None];
	"919:BS" -> "Leaf_910:AL"	 [cond="[]",
		lineno=None];
	"770:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922b4c50>",
		fillcolor=firebrick,
		label="770:NS
WillSendControlFrame <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922b4c50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"770:NS" -> "Leaf_764:AL"	 [cond="[]",
		lineno=None];
	"Leaf_778:AL" -> "822:AL";
	"Leaf_778:AL" -> "847:AL";
	"Leaf_778:AL" -> "886:AS";
	"Leaf_778:AL" -> "884:AS";
	"Leaf_778:AL" -> "885:AS";
	"860:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f83922ef2d0>",
		clk_sens=True,
		fillcolor=gold,
		label="860:AL",
		sens="['MTxClk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['TxCtrlStartFrm', 'ControlEnd']"];
	"Leaf_778:AL" -> "860:AL";
	"895:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f83922f1b50>",
		fillcolor=springgreen,
		label="895:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"895:IF" -> "898:IF"	 [cond="['ResetByteCnt']",
		label="!(ResetByteCnt)",
		lineno=895];
	"895:IF" -> "896:NS"	 [cond="['ResetByteCnt']",
		label=ResetByteCnt,
		lineno=895];
	"928:BS" -> "Leaf_910:AL"	 [cond="[]",
		lineno=None];
	"798:IF" -> "799:NS"	 [cond="['ControlEnd', 'ControlEnd_q']",
		label="(ControlEnd | ControlEnd_q)",
		lineno=798];
	"801:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922ca450>",
		fillcolor=firebrick,
		label="801:NS
TxCtrlEndFrm <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922ca450>]",
		style=filled,
		typ=NonblockingSubstitution];
	"798:IF" -> "801:NS"	 [cond="['ControlEnd', 'ControlEnd_q']",
		label="!((ControlEnd | ControlEnd_q))",
		lineno=798];
	"856:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922ef450>",
		fillcolor=firebrick,
		label="856:NS
BlockTxDone <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922ef450>]",
		style=filled,
		typ=NonblockingSubstitution];
	"856:NS" -> "Leaf_847:AL"	 [cond="[]",
		lineno=None];
	"815:IF" -> "816:NS"	 [cond="['TxDoneIn']",
		label=TxDoneIn,
		lineno=815];
	"933:CA" -> "933:BS"	 [cond="[]",
		lineno=None];
	"824:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f83922caf90>",
		fillcolor=springgreen,
		label="824:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"823:BL" -> "824:IF"	 [cond="[]",
		lineno=None];
	"Leaf_871:AL" -> "888:AS";
	"Leaf_871:AL" -> "867:AS";
	"Leaf_871:AL" -> "871:AL";
	"Leaf_871:AL" -> "910:AL";
	"934:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f83925e8d10>",
		fillcolor=cadetblue,
		label="934:BS
MuxedCtrlData[7:0] = 8'h0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f83925e8d10>]",
		style=filled,
		typ=BlockingSubstitution];
	"934:CA" -> "934:BS"	 [cond="[]",
		lineno=None];
	"913:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f83925eb0d0>",
		fillcolor=springgreen,
		label="913:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"913:CA" -> "913:IF"	 [cond="[]",
		lineno=None];
	"934:BS" -> "Leaf_910:AL"	 [cond="[]",
		lineno=None];
	"840:NS" -> "Leaf_835:AL"	 [cond="[]",
		lineno=None];
	"899:NS" -> "Leaf_890:AL"	 [cond="[]",
		lineno=None];
	"807:AL" -> "808:BL"	 [cond="[]",
		lineno=None];
	"926:BS" -> "Leaf_910:AL"	 [cond="[]",
		lineno=None];
	"765:BL" -> "766:IF"	 [cond="[]",
		lineno=None];
	"828:NS" -> "Leaf_822:AL"	 [cond="[]",
		lineno=None];
	"916:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f83925eb150>",
		fillcolor=cadetblue,
		label="916:BS
MuxedCtrlData[7:0] = 8'h0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f83925eb150>]",
		style=filled,
		typ=BlockingSubstitution];
	"916:BS" -> "Leaf_910:AL"	 [cond="[]",
		lineno=None];
	"913:IF" -> "914:BS"	 [cond="['DlyCrcEn', 'DlyCrcEn', 'DlyCrcCnt']",
		label="(~DlyCrcEn | DlyCrcEn & &DlyCrcCnt[1:0])",
		lineno=913];
	"913:IF" -> "916:BS"	 [cond="['DlyCrcEn', 'DlyCrcEn', 'DlyCrcCnt']",
		label="!((~DlyCrcEn | DlyCrcEn & &DlyCrcCnt[1:0]))",
		lineno=913];
	"911:BL" -> "912:CS"	 [cond="[]",
		lineno=None];
	"906:AS" -> "793:AL";
	"906:AS" -> "885:AS";
	"906:AS" -> "860:AL";
	"Leaf_910:AL" -> "938:AL";
	"901:IF" -> "902:NS"	 [cond="['IncrementByteCnt', 'EnableCnt']",
		label="(IncrementByteCnt & EnableCnt)",
		lineno=901];
	"855:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f83922ef310>",
		fillcolor=springgreen,
		label="855:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"855:IF" -> "856:NS"	 [cond="['TxStartFrmIn']",
		label=TxStartFrmIn,
		lineno=855];
	"923:CA" -> "923:BS"	 [cond="[]",
		lineno=None];
	"824:IF" -> "827:IF"	 [cond="['TxReset']",
		label="!(TxReset)",
		lineno=824];
	"825:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922cafd0>",
		fillcolor=firebrick,
		label="825:NS
SendingCtrlFrm <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83922cafd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"824:IF" -> "825:NS"	 [cond="['TxReset']",
		label=TxReset,
		lineno=824];
	"784:NS" -> "Leaf_778:AL"	 [cond="[]",
		lineno=None];
	"801:NS" -> "Leaf_793:AL"	 [cond="[]",
		lineno=None];
	"825:NS" -> "Leaf_822:AL"	 [cond="[]",
		lineno=None];
	"892:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f83922f1890>",
		fillcolor=springgreen,
		label="892:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"892:IF" -> "893:NS"	 [cond="['TxReset']",
		label=TxReset,
		lineno=892];
	"892:IF" -> "895:IF"	 [cond="['TxReset']",
		label="!(TxReset)",
		lineno=892];
	"794:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f83922c7d50>",
		fillcolor=turquoise,
		label="794:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"794:BL" -> "795:IF"	 [cond="[]",
		lineno=None];
	"769:IF" -> "772:IF"	 [cond="['TxCtrlEndFrm', 'CtrlMux']",
		label="!((TxCtrlEndFrm & CtrlMux))",
		lineno=769];
	"769:IF" -> "770:NS"	 [cond="['TxCtrlEndFrm', 'CtrlMux']",
		label="(TxCtrlEndFrm & CtrlMux)",
		lineno=769];
	"835:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f83922dd750>",
		clk_sens=True,
		fillcolor=gold,
		label="835:AL",
		sens="['MTxClk', 'TxReset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['TxUsedDataIn', 'TxReset']"];
	"835:AL" -> "836:BL"	 [cond="[]",
		lineno=None];
	"941:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83925e31d0>",
		fillcolor=firebrick,
		label="941:NS
ControlData[7:0] <= 8'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f83925e31d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"941:NS" -> "Leaf_938:AL"	 [cond="[]",
		lineno=None];
	"793:AL" -> "794:BL"	 [cond="[]",
		lineno=None];
	"885:AS" -> "890:AL";
	"924:BS" -> "Leaf_910:AL"	 [cond="[]",
		lineno=None];
	"927:CA" -> "927:BS"	 [cond="[]",
		lineno=None];
	"796:NS" -> "Leaf_793:AL"	 [cond="[]",
		lineno=None];
	"780:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f83922c7250>",
		fillcolor=springgreen,
		label="780:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"779:BL" -> "780:IF"	 [cond="[]",
		lineno=None];
	"Leaf_807:AL" -> "867:AS";
	"Leaf_807:AL" -> "764:AL";
	"Leaf_807:AL" -> "778:AL";
	"Leaf_807:AL" -> "886:AS";
	"Leaf_807:AL" -> "885:AS";
	"852:IF" -> "853:NS"	 [cond="['TxCtrlStartFrm']",
		label=TxCtrlStartFrm,
		lineno=852];
	"852:IF" -> "855:IF"	 [cond="['TxCtrlStartFrm']",
		label="!(TxCtrlStartFrm)",
		lineno=852];
	"891:BL" -> "892:IF"	 [cond="[]",
		lineno=None];
	"920:BS" -> "Leaf_910:AL"	 [cond="[]",
		lineno=None];
	"780:IF" -> "783:IF"	 [cond="['TxReset']",
		label="!(TxReset)",
		lineno=780];
	"780:IF" -> "781:NS"	 [cond="['TxReset']",
		label=TxReset,
		lineno=780];
	"860:AL" -> "861:BL"	 [cond="[]",
		lineno=None];
	"940:IF" -> "943:IF"	 [cond="['TxReset']",
		label="!(TxReset)",
		lineno=940];
	"940:IF" -> "941:NS"	 [cond="['TxReset']",
		label=TxReset,
		lineno=940];
}
