strict digraph "compose( ,  )" {
	node [label="\N"];
	"232:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe85b290ad0>",
		fillcolor=turquoise,
		label="232:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"234:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe85b56ab10>",
		fillcolor=springgreen,
		label="234:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"232:BL" -> "234:IF"	 [cond="[]",
		lineno=None];
	"Leaf_222:AL"	 [def_var="['bitRamOut', 'bitRam']",
		label="Leaf_222:AL"];
	"222:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fe85b294e10>",
		clk_sens=True,
		fillcolor=gold,
		label="222:AL",
		sens="['clk', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'bitRamEn', 'bitRam', 'bitRamIn', 'bitRamAddr', 'bitRamRw']"];
	"Leaf_222:AL" -> "222:AL";
	"225:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe85b290090>",
		fillcolor=springgreen,
		label="225:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"225:IF" -> "232:BL"	 [cond="['reset']",
		label="!(reset)",
		lineno=225];
	"226:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe85b290cd0>",
		fillcolor=turquoise,
		label="226:BL
bitRamOut = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe85b290bd0>]",
		style=filled,
		typ=Block];
	"225:IF" -> "226:BL"	 [cond="['reset']",
		label=reset,
		lineno=225];
	"226:BL" -> "Leaf_222:AL"	 [cond="[]",
		lineno=None];
	"236:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe85b62bb90>",
		fillcolor=springgreen,
		label="236:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"243:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe85b56ac10>",
		fillcolor=turquoise,
		label="243:BL
bitRam[bitRamAddr] = bitRamIn;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe85b56af50>]",
		style=filled,
		typ=Block];
	"236:IF" -> "243:BL"	 [cond="['bitRamRw']",
		label="!(bitRamRw)",
		lineno=236];
	"237:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe85b286ed0>",
		fillcolor=turquoise,
		label="237:BL
bitRamOut = bitRam[bitRamAddr];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe85b286fd0>]",
		style=filled,
		typ=Block];
	"236:IF" -> "237:BL"	 [cond="['bitRamRw']",
		label=bitRamRw,
		lineno=236];
	"235:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe85b2867d0>",
		fillcolor=turquoise,
		label="235:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"234:IF" -> "235:BL"	 [cond="['bitRamEn']",
		label=bitRamEn,
		lineno=234];
	"250:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe85b56aad0>",
		fillcolor=turquoise,
		label="250:BL
bitRamOut = 1'bZ;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe85b56ad90>]",
		style=filled,
		typ=Block];
	"234:IF" -> "250:BL"	 [cond="['bitRamEn']",
		label="!(bitRamEn)",
		lineno=234];
	"235:BL" -> "236:IF"	 [cond="[]",
		lineno=None];
	"223:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe85b294110>",
		fillcolor=turquoise,
		label="223:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"222:AL" -> "223:BL"	 [cond="[]",
		lineno=None];
	"243:BL" -> "Leaf_222:AL"	 [cond="[]",
		lineno=None];
	"223:BL" -> "225:IF"	 [cond="[]",
		lineno=None];
	"237:BL" -> "Leaf_222:AL"	 [cond="[]",
		lineno=None];
	"250:BL" -> "Leaf_222:AL"	 [cond="[]",
		lineno=None];
}
