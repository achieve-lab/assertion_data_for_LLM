strict digraph "" {
	node [label="\N"];
	"353:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f79abcb1e10>",
		fillcolor=cadetblue,
		label="353:BS
cnt_en = ENABLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f79abcb1e10>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_334:AL"	 [def_var="['access_permission', 'first_block_clear', 'start_core', 'enable_clear', 'first_block_set', 'cnt_en']",
		label="Leaf_334:AL"];
	"353:BS" -> "Leaf_334:AL"	 [cond="[]",
		lineno=None];
	"344:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f79abcba290>",
		fillcolor=turquoise,
		label="344:BL
access_permission = ENABLE;
first_block_set = ENABLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f79abcb1f50>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f79abcba110>]",
		style=filled,
		typ=Block];
	"347:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f79abcba2d0>",
		fillcolor=springgreen,
		label="347:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"344:BL" -> "347:IF"	 [cond="[]",
		lineno=None];
	"334:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f79abcba490>",
		clk_sens=False,
		fillcolor=gold,
		label="334:AL",
		sens="['DISABLE', 'ENABLE']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['ENABLE', 'ccf_set', 'key_deriv', 'read_en', 'PENABLE', 'state', 'enable', 'PADDR', 'AES_DINR', 'write_en', 'DISABLE', 'AES_DOUTR']"];
	"335:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f79abcba550>",
		fillcolor=turquoise,
		label="335:BL
access_permission = DISABLE;
start_core = DISABLE;
cnt_en = DISABLE;
enable_clear = DISABLE;
first_block_set = DISABLE;
first_\
block_clear = DISABLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f79abcba590>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f79abcba710>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f79abcba850>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f79abcba910>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f79abcbaa90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f79abcbac10>]",
		style=filled,
		typ=Block];
	"334:AL" -> "335:BL"	 [cond="[]",
		lineno=None];
	"362:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f79abcc2450>",
		fillcolor=cadetblue,
		label="362:BS
cnt_en = ENABLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f79abcc2450>]",
		style=filled,
		typ=BlockingSubstitution];
	"362:BS" -> "Leaf_334:AL"	 [cond="[]",
		lineno=None];
	"343:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f79abcbae50>",
		fillcolor=lightcyan,
		label="343:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"343:CA" -> "344:BL"	 [cond="[]",
		lineno=None];
	"360:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f79abcc23d0>",
		fillcolor=turquoise,
		label="360:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"361:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f79abcc2410>",
		fillcolor=springgreen,
		label="361:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"360:BL" -> "361:IF"	 [cond="[]",
		lineno=None];
	"363:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f79abcc25d0>",
		fillcolor=springgreen,
		label="363:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"360:BL" -> "363:IF"	 [cond="[]",
		lineno=None];
	"361:IF" -> "362:BS"	 [cond="['ccf_set']",
		label=ccf_set,
		lineno=361];
	"359:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f79abcc2350>",
		fillcolor=lightcyan,
		label="359:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"359:CA" -> "360:BL"	 [cond="[]",
		lineno=None];
	"355:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f79abcc2150>",
		fillcolor=lightcyan,
		label="355:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"356:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f79abcc21d0>",
		fillcolor=turquoise,
		label="356:BL
start_core = ENABLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f79abcc2210>]",
		style=filled,
		typ=Block];
	"355:CA" -> "356:BL"	 [cond="[]",
		lineno=None];
	"367:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f79abcc28d0>",
		fillcolor=turquoise,
		label="367:BL
first_block_clear = ENABLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f79abcc2910>]",
		style=filled,
		typ=Block];
	"369:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f79abcc2a90>",
		fillcolor=springgreen,
		label="369:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"367:BL" -> "369:IF"	 [cond="[]",
		lineno=None];
	"370:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f79abcc2ad0>",
		fillcolor=cadetblue,
		label="370:BS
cnt_en = ENABLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f79abcc2ad0>]",
		style=filled,
		typ=BlockingSubstitution];
	"369:IF" -> "370:BS"	 [cond="['PADDR', 'AES_DOUTR', 'read_en', 'PENABLE']",
		label="((PADDR == AES_DOUTR) && read_en && PENABLE)",
		lineno=369];
	"342:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f79abcbad90>",
		fillcolor=linen,
		label="342:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"335:BL" -> "342:CS"	 [cond="[]",
		lineno=None];
	"352:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f79abcbaf90>",
		fillcolor=springgreen,
		label="352:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"352:IF" -> "353:BS"	 [cond="['PADDR', 'AES_DINR', 'write_en']",
		label="((PADDR == AES_DINR) && write_en)",
		lineno=352];
	"364:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f79abcc2610>",
		fillcolor=cadetblue,
		label="364:BS
enable_clear = ENABLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f79abcc2610>]",
		style=filled,
		typ=BlockingSubstitution];
	"364:BS" -> "Leaf_334:AL"	 [cond="[]",
		lineno=None];
	"366:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f79abcc2850>",
		fillcolor=lightcyan,
		label="366:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"366:CA" -> "367:BL"	 [cond="[]",
		lineno=None];
	"351:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f79abcbaf50>",
		fillcolor=turquoise,
		label="351:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"351:BL" -> "352:IF"	 [cond="[]",
		lineno=None];
	"342:CS" -> "343:CA"	 [cond="['state']",
		label=state,
		lineno=342];
	"342:CS" -> "359:CA"	 [cond="['state']",
		label=state,
		lineno=342];
	"342:CS" -> "355:CA"	 [cond="['state']",
		label=state,
		lineno=342];
	"342:CS" -> "366:CA"	 [cond="['state']",
		label=state,
		lineno=342];
	"350:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f79abcbaed0>",
		fillcolor=lightcyan,
		label="350:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"342:CS" -> "350:CA"	 [cond="['state']",
		label=state,
		lineno=342];
	"350:CA" -> "351:BL"	 [cond="[]",
		lineno=None];
	"356:BL" -> "Leaf_334:AL"	 [cond="[]",
		lineno=None];
	"363:IF" -> "364:BS"	 [cond="['ccf_set', 'key_deriv']",
		label="(ccf_set && key_deriv)",
		lineno=363];
	"348:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f79abcb1c50>",
		fillcolor=cadetblue,
		label="348:BS
cnt_en = ENABLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f79abcb1c50>]",
		style=filled,
		typ=BlockingSubstitution];
	"347:IF" -> "348:BS"	 [cond="['enable', 'key_deriv']",
		label="(enable && !key_deriv)",
		lineno=347];
	"348:BS" -> "Leaf_334:AL"	 [cond="[]",
		lineno=None];
	"370:BS" -> "Leaf_334:AL"	 [cond="[]",
		lineno=None];
}
