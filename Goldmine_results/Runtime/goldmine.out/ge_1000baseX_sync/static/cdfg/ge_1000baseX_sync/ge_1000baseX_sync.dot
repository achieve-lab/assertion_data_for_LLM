strict digraph "compose( ,  )" {
	node [label="\N"];
	"Leaf_286:AL"	 [def_var="['sync_status']",
		label="Leaf_286:AL"];
	"426:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f271cffa110>",
		clk_sens=False,
		fillcolor=gold,
		label="426:AL",
		sens="['good_cgs_done', 'COMMA_match', 'S_PCS_SYNC_ACQUIRE_SYNC_2', 'S_PCS_SYNC_ACQUIRE_SYNC_1', 'cggood', 'sync_status', 'cgbad', 'S_\
PCS_SYNC_ACQUIRED_2', 'S_PCS_SYNC_ACQUIRED_3', 'INVALID', 'S_PCS_SYNC_ACQUIRED_4', 'pcs_sync_present', 'S_PCS_SYNC_ACQUIRED_2A', '\
S_PCS_SYNC_COMMA_DETECT_1', 'S_PCS_SYNC_COMMA_DETECT_2', 'S_PCS_SYNC_COMMA_DETECT_3', 'S_PCS_SYNC_ACQUIRED_1', 'S_PCS_SYNC_ACQUIRED_\
3A', 'S_PCS_SYNC_ACQUIRED_4A', 'S_PCS_SYNC_LOSS_OF_SYNC', 'ebi_K_d1']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['good_cgs_done', 'cggood', 'sync_status', 'cgbad', 'rx_even', 'pcs_sync_present', 'S_PCS_SYNC_ACQUIRED_2A', 'ebi_K_d1', 'signal_\
detect', 'COMMA_match', 'S_PCS_SYNC_ACQUIRE_SYNC_2', 'S_PCS_SYNC_ACQUIRE_SYNC_1', 'loopback', 'startup_enable', 'INVALID', 'S_PCS_\
SYNC_ACQUIRED_3A', 'S_PCS_SYNC_LOSS_OF_SYNC', 'S_PCS_SYNC_ACQUIRED_4A', 'S_PCS_SYNC_COMMA_DETECT_1', 'S_PCS_SYNC_COMMA_DETECT_2', '\
S_PCS_SYNC_COMMA_DETECT_3', 'S_PCS_SYNC_ACQUIRED_1', 'S_PCS_SYNC_ACQUIRED_3', 'S_PCS_SYNC_ACQUIRED_2', 'S_PCS_SYNC_ACQUIRED_4']"];
	"Leaf_286:AL" -> "426:AL";
	"455:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271cff22d0>",
		fillcolor=cadetblue,
		label="455:BS
rx_even_m_toggle = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271cff22d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_426:AL"	 [def_var="['rx_even_m_toggle', 'rx_even_m_clr', 'good_cgs_m_cnt', 'good_cgs_m_init', 'sync_m_lost', 'running_disparity_positive_m_set', 'good_\
cgs_m_inc', 'rx_even_m_set', 'pcs_sync_next', 'sync_m_acquired', 'rx_even_m_init', 'running_disparity_negative_m_set']",
		label="Leaf_426:AL"];
	"455:BS" -> "Leaf_426:AL"	 [cond="[]",
		lineno=None];
	"450:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f271cff21d0>",
		fillcolor=springgreen,
		label="450:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"450:IF" -> "455:BS"	 [cond="['signal_detect', 'loopback', 'COMMA_match']",
		label="!(((signal_detect | loopback) & COMMA_match))",
		lineno=450];
	"451:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f271cffcf90>",
		fillcolor=turquoise,
		label="451:BL
rx_even_m_set = 1;
pcs_sync_next = S_PCS_SYNC_COMMA_DETECT_1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271cffced0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271cff2110>]",
		style=filled,
		typ=Block];
	"450:IF" -> "451:BL"	 [cond="['signal_detect', 'loopback', 'COMMA_match']",
		label="((signal_detect | loopback) & COMMA_match)",
		lineno=450];
	"287:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f271d0502d0>",
		fillcolor=springgreen,
		label="287:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"288:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f271d050290>",
		fillcolor=firebrick,
		label="288:NS
sync_status <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f271d050290>]",
		style=filled,
		typ=NonblockingSubstitution];
	"287:IF" -> "288:NS"	 [cond="['reset']",
		label=reset,
		lineno=287];
	"290:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f271d050250>",
		fillcolor=turquoise,
		label="290:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"287:IF" -> "290:BL"	 [cond="['reset']",
		label="!(reset)",
		lineno=287];
	"341:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f271d42b110>",
		def_var="['COMMA_match']",
		fillcolor=deepskyblue,
		label="341:AS
COMMA_match = COMMA_RX & ebi_K_d1;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['COMMA_RX', 'ebi_K_d1']"];
	"381:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f271d431990>",
		def_var="['cgbad']",
		fillcolor=deepskyblue,
		label="381:AS
cgbad = INVALID | COMMA_match & rx_even;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['INVALID', 'COMMA_match', 'rx_even']"];
	"341:AS" -> "381:AS";
	"341:AS" -> "426:AL";
	"479:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f271cffb490>",
		fillcolor=lightcyan,
		label="479:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"480:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f271cffb750>",
		fillcolor=turquoise,
		label="480:BL
rx_even_m_toggle = 1;
pcs_sync_next = (~ebi_K_d1 & ~cgbad)? S_PCS_SYNC_ACQUIRE_SYNC_2 : S_PCS_SYNC_LOSS_OF_SYNC;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271cffb690>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271cffba50>]",
		style=filled,
		typ=Block];
	"479:CA" -> "480:BL"	 [cond="[]",
		lineno=None];
	"374:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f271d431450>",
		fillcolor=springgreen,
		label="374:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"375:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f271d431650>",
		fillcolor=springgreen,
		label="375:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"374:IF" -> "375:IF"	 [cond="['good_cgs_m_cnt']",
		label="!(good_cgs_m_cnt)",
		lineno=374];
	"374:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f271d431490>",
		fillcolor=firebrick,
		label="374:NS
good_cgs <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f271d431490>]",
		style=filled,
		typ=NonblockingSubstitution];
	"374:IF" -> "374:NS"	 [cond="['good_cgs_m_cnt']",
		label=good_cgs_m_cnt,
		lineno=374];
	"357:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f271d42b510>",
		fillcolor=firebrick,
		label="357:NS
INVALID <= (reset)? 0 : decoder_disparity_err | decoder_coding_err;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f271d42b510>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_355:AL"	 [def_var="['INVALID']",
		label="Leaf_355:AL"];
	"357:NS" -> "Leaf_355:AL"	 [cond="[]",
		lineno=None];
	"465:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f271cff2950>",
		fillcolor=lightcyan,
		label="465:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"466:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f271cff2990>",
		fillcolor=turquoise,
		label="466:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"465:CA" -> "466:BL"	 [cond="[]",
		lineno=None];
	"307:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f271d055350>",
		fillcolor=firebrick,
		label="307:NS
rx_even <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f271d055350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_301:AL"	 [def_var="['rx_even']",
		label="Leaf_301:AL"];
	"307:NS" -> "Leaf_301:AL"	 [cond="[]",
		lineno=None];
	"535:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f271d0177d0>",
		fillcolor=lightcyan,
		label="535:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"536:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f271d0179d0>",
		fillcolor=turquoise,
		label="536:BL
rx_even_m_toggle = 1;
pcs_sync_next = (cggood)? S_PCS_SYNC_ACQUIRED_4A : S_PCS_SYNC_LOSS_OF_SYNC;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271d017950>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271d017f10>]",
		style=filled,
		typ=Block];
	"535:CA" -> "536:BL"	 [cond="[]",
		lineno=None];
	"291:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f271d0504d0>",
		fillcolor=turquoise,
		label="291:BL
sync_status <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f271d0505d0>]",
		style=filled,
		typ=Block];
	"291:BL" -> "Leaf_286:AL"	 [cond="[]",
		lineno=None];
	"309:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f271d0557d0>",
		fillcolor=springgreen,
		label="309:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"309:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f271d055910>",
		fillcolor=firebrick,
		label="309:NS
rx_even <= ~rx_even;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f271d055910>]",
		style=filled,
		typ=NonblockingSubstitution];
	"309:IF" -> "309:NS"	 [cond="['rx_even_m_toggle']",
		label=rx_even_m_toggle,
		lineno=309];
	"540:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271d017dd0>",
		fillcolor=cadetblue,
		label="540:BS
good_cgs_m_init = 1;
good_cgs_m_init = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271d017dd0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271d017dd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"540:BS" -> "Leaf_426:AL"	 [cond="[]",
		lineno=None];
	"554:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f271d01ac50>",
		fillcolor=turquoise,
		label="554:BL
rx_even_m_toggle = 1;
good_cgs_m_inc = 1;
pcs_sync_next = (cgbad)? S_PCS_SYNC_ACQUIRED_4 : 
                (good_cgs_done)? \
S_PCS_SYNC_ACQUIRED_2 : S_PCS_SYNC_ACQUIRED_3A;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271d01aad0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271d01ac90>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271d01af10>]",
		style=filled,
		typ=Block];
	"554:BL" -> "Leaf_426:AL"	 [cond="[]",
		lineno=None];
	"286:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f271d050150>",
		clk_sens=True,
		fillcolor=gold,
		label="286:AL",
		sens="['ck', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'sync_m_acquired', 'sync_m_lost']"];
	"286:AL" -> "287:IF"	 [cond="[]",
		lineno=None];
	"308:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f271d055610>",
		fillcolor=firebrick,
		label="308:NS
rx_even <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f271d055610>]",
		style=filled,
		typ=NonblockingSubstitution];
	"308:NS" -> "Leaf_301:AL"	 [cond="[]",
		lineno=None];
	"375:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f271d4317d0>",
		fillcolor=firebrick,
		label="375:NS
good_cgs <= good_cgs + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f271d4317d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"375:IF" -> "375:NS"	 [cond="['good_cgs_m_inc']",
		label=good_cgs_m_inc,
		lineno=375];
	"Leaf_301:AL" -> "381:AS";
	"301:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f271d050c10>",
		clk_sens=True,
		fillcolor=gold,
		label="301:AL",
		sens="['ck', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'rx_even_m_toggle', 'rx_even_m_clr', 'rx_even_m_set', 'rx_even', 'rx_even_m_init']"];
	"Leaf_301:AL" -> "301:AL";
	"Leaf_301:AL" -> "426:AL";
	"305:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f271d050e10>",
		fillcolor=turquoise,
		label="305:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"306:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f271d055050>",
		fillcolor=springgreen,
		label="306:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"305:BL" -> "306:IF"	 [cond="[]",
		lineno=None];
	"335:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f271d426950>",
		def_var="['K28_1_RX']",
		fillcolor=deepskyblue,
		label="335:AS
K28_1_RX = ebi_rxd_d1 == 8'h3c;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ebi_rxd_d1']"];
	"339:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f271d426e90>",
		def_var="['COMMA_RX']",
		fillcolor=deepskyblue,
		label="339:AS
COMMA_RX = K28_1_RX | K28_5_RX | K28_7_RX;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['K28_1_RX', 'K28_5_RX', 'K28_7_RX']"];
	"335:AS" -> "339:AS";
	"467:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f271cff2e50>",
		fillcolor=springgreen,
		label="467:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"466:BL" -> "467:IF"	 [cond="[]",
		lineno=None];
	"379:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f271d431510>",
		def_var="['good_cgs_done']",
		fillcolor=deepskyblue,
		label="379:AS
good_cgs_done = good_cgs == 3;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['good_cgs']"];
	"379:AS" -> "426:AL";
	"308:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f271d0555d0>",
		fillcolor=springgreen,
		label="308:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"308:IF" -> "309:IF"	 [cond="['rx_even_m_clr']",
		label="!(rx_even_m_clr)",
		lineno=308];
	"308:IF" -> "308:NS"	 [cond="['rx_even_m_clr']",
		label=rx_even_m_clr,
		lineno=308];
	"501:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f271cfefd10>",
		fillcolor=turquoise,
		label="501:BL
rx_even_m_toggle = 1;
pcs_sync_next = (~ebi_K_d1 & ~cgbad)? S_PCS_SYNC_ACQUIRED_1 : S_PCS_SYNC_LOSS_OF_SYNC;
sync_m_acquired = ~\
ebi_K_d1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271cfef910>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271cfefcd0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271cfefed0>]",
		style=filled,
		typ=Block];
	"501:BL" -> "Leaf_426:AL"	 [cond="[]",
		lineno=None];
	"307:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f271d055310>",
		fillcolor=springgreen,
		label="307:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"307:IF" -> "307:NS"	 [cond="['rx_even_m_set']",
		label=rx_even_m_set,
		lineno=307];
	"307:IF" -> "308:IF"	 [cond="['rx_even_m_set']",
		label="!(rx_even_m_set)",
		lineno=307];
	"516:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f271d005590>",
		fillcolor=lightcyan,
		label="516:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"517:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f271d005790>",
		fillcolor=turquoise,
		label="517:BL
rx_even_m_toggle = 1;
pcs_sync_next = (cggood)? S_PCS_SYNC_ACQUIRED_2A : S_PCS_SYNC_ACQUIRED_3;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271d005710>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271d005cd0>]",
		style=filled,
		typ=Block];
	"516:CA" -> "517:BL"	 [cond="[]",
		lineno=None];
	"530:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271d0174d0>",
		fillcolor=cadetblue,
		label="530:BS
good_cgs_m_init = 1;
good_cgs_m_init = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271d0174d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271d0174d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"530:BS" -> "Leaf_426:AL"	 [cond="[]",
		lineno=None];
	"288:NS" -> "Leaf_286:AL"	 [cond="[]",
		lineno=None];
	"438:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f271d2fd150>",
		fillcolor=linen,
		label="438:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"438:CS" -> "479:CA"	 [cond="['pcs_sync_present']",
		label=pcs_sync_present,
		lineno=438];
	"438:CS" -> "465:CA"	 [cond="['pcs_sync_present']",
		label=pcs_sync_present,
		lineno=438];
	"438:CS" -> "535:CA"	 [cond="['pcs_sync_present']",
		label=pcs_sync_present,
		lineno=438];
	"438:CS" -> "516:CA"	 [cond="['pcs_sync_present']",
		label=pcs_sync_present,
		lineno=438];
	"440:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f271cffc510>",
		fillcolor=lightcyan,
		label="440:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"438:CS" -> "440:CA"	 [cond="['pcs_sync_present']",
		label=pcs_sync_present,
		lineno=438];
	"500:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f271cfef710>",
		fillcolor=lightcyan,
		label="500:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"438:CS" -> "500:CA"	 [cond="['pcs_sync_present']",
		label=pcs_sync_present,
		lineno=438];
	"553:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f271d01a950>",
		fillcolor=lightcyan,
		label="553:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"438:CS" -> "553:CA"	 [cond="['pcs_sync_present']",
		label=pcs_sync_present,
		lineno=438];
	"486:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f271cffbb90>",
		fillcolor=lightcyan,
		label="486:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"438:CS" -> "486:CA"	 [cond="['pcs_sync_present']",
		label=pcs_sync_present,
		lineno=438];
	"458:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f271cff2290>",
		fillcolor=lightcyan,
		label="458:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"438:CS" -> "458:CA"	 [cond="['pcs_sync_present']",
		label=pcs_sync_present,
		lineno=438];
	"561:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f271d2fd1d0>",
		fillcolor=lightcyan,
		label="561:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"438:CS" -> "561:CA"	 [cond="['pcs_sync_present']",
		label=pcs_sync_present,
		lineno=438];
	"545:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f271d01a110>",
		fillcolor=lightcyan,
		label="545:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"438:CS" -> "545:CA"	 [cond="['pcs_sync_present']",
		label=pcs_sync_present,
		lineno=438];
	"509:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f271cfeffd0>",
		fillcolor=lightcyan,
		label="509:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"438:CS" -> "509:CA"	 [cond="['pcs_sync_present']",
		label=pcs_sync_present,
		lineno=438];
	"445:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f271cffc950>",
		fillcolor=lightcyan,
		label="445:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"438:CS" -> "445:CA"	 [cond="['pcs_sync_present']",
		label=pcs_sync_present,
		lineno=438];
	"525:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f271d005e90>",
		fillcolor=lightcyan,
		label="525:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"438:CS" -> "525:CA"	 [cond="['pcs_sync_present']",
		label=pcs_sync_present,
		lineno=438];
	"276:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f271f1d4ad0>",
		fillcolor=springgreen,
		label="276:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"277:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f271d724f50>",
		fillcolor=springgreen,
		label="277:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"276:IF" -> "277:IF"	 [cond="['running_disparity_positive_m_set']",
		label="!(running_disparity_positive_m_set)",
		lineno=276];
	"276:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f271f8a2f50>",
		fillcolor=firebrick,
		label="276:NS
running_disparity <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f271f8a2f50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"276:IF" -> "276:NS"	 [cond="['running_disparity_positive_m_set']",
		label=running_disparity_positive_m_set,
		lineno=276];
	"292:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f271d050710>",
		fillcolor=springgreen,
		label="292:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"292:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f271d050790>",
		fillcolor=turquoise,
		label="292:BL
sync_status <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f271d050890>]",
		style=filled,
		typ=Block];
	"292:IF" -> "292:BL"	 [cond="['sync_m_lost']",
		label=sync_m_lost,
		lineno=292];
	"Leaf_325:AL"	 [def_var="['ebi_K_out', 'ebi_rxd_out']",
		label="Leaf_325:AL"];
	"329:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f271d426690>",
		fillcolor=turquoise,
		label="329:BL
ebi_rxd_out <= ebi_rxd_d1;
ebi_K_out <= ebi_K_d1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f271d4266d0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f271d426810>]",
		style=filled,
		typ=Block];
	"329:BL" -> "Leaf_325:AL"	 [cond="[]",
		lineno=None];
	"320:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f271d055bd0>",
		fillcolor=turquoise,
		label="320:BL
ebi_rxd_d1 <= 0;
ebi_K_d1 <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f271d055c10>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f271d055d50>]",
		style=filled,
		typ=Block];
	"Leaf_318:AL"	 [def_var="['ebi_rxd_d1', 'ebi_K_d1']",
		label="Leaf_318:AL"];
	"320:BL" -> "Leaf_318:AL"	 [cond="[]",
		lineno=None];
	"441:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f271cffc4d0>",
		fillcolor=turquoise,
		label="441:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"440:CA" -> "441:BL"	 [cond="[]",
		lineno=None];
	"562:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f271d2fd4d0>",
		fillcolor=turquoise,
		label="562:BL
rx_even_m_toggle = 1;
good_cgs_m_inc = 1;
pcs_sync_next = (cgbad)? S_PCS_SYNC_LOSS_OF_SYNC : 
                (good_cgs_done)? \
S_PCS_SYNC_ACQUIRED_3 : S_PCS_SYNC_ACQUIRED_4A;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271d2fd350>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271d2fd510>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271d2fd790>]",
		style=filled,
		typ=Block];
	"562:BL" -> "Leaf_426:AL"	 [cond="[]",
		lineno=None];
	"318:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f271d055a90>",
		clk_sens=True,
		fillcolor=gold,
		label="318:AL",
		sens="['ck', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'ebi_K', 'ebi_rxd']"];
	"319:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f271d055d10>",
		fillcolor=springgreen,
		label="319:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"318:AL" -> "319:IF"	 [cond="[]",
		lineno=None];
	"489:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f271cffbfd0>",
		fillcolor=turquoise,
		label="489:BL
rx_even_m_set = 1;
pcs_sync_next = S_PCS_SYNC_COMMA_DETECT_3;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271cffbf10>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271cfef150>]",
		style=filled,
		typ=Block];
	"489:BL" -> "Leaf_426:AL"	 [cond="[]",
		lineno=None];
	"442:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f271cffc6d0>",
		fillcolor=springgreen,
		label="442:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"442:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271cffc810>",
		fillcolor=cadetblue,
		label="442:BS
pcs_sync_next = S_PCS_SYNC_LOSS_OF_SYNC;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271cffc810>]",
		style=filled,
		typ=BlockingSubstitution];
	"442:IF" -> "442:BS"	 [cond="['startup_enable']",
		label=startup_enable,
		lineno=442];
	"369:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f271d42bed0>",
		fillcolor=springgreen,
		label="369:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"372:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f271d42bf50>",
		fillcolor=turquoise,
		label="372:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"369:IF" -> "372:BL"	 [cond="['reset']",
		label="!(reset)",
		lineno=369];
	"370:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f271d42be90>",
		fillcolor=firebrick,
		label="370:NS
good_cgs <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f271d42be90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"369:IF" -> "370:NS"	 [cond="['reset']",
		label=reset,
		lineno=369];
	"337:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f271d426cd0>",
		def_var="['K28_7_RX']",
		fillcolor=deepskyblue,
		label="337:AS
K28_7_RX = ebi_rxd_d1 == 8'hfc;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ebi_rxd_d1']"];
	"337:AS" -> "339:AS";
	"275:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f271d443c90>",
		fillcolor=turquoise,
		label="275:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"275:BL" -> "276:IF"	 [cond="[]",
		lineno=None];
	"269:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f271d45b7d0>",
		clk_sens=True,
		fillcolor=gold,
		label="269:AL",
		sens="['ck', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'running_disparity_positive_m_set', 'running_disparity_negative_m_set']"];
	"272:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f271d2eff50>",
		fillcolor=springgreen,
		label="272:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"269:AL" -> "272:IF"	 [cond="[]",
		lineno=None];
	"571:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f271d2fda90>",
		fillcolor=springgreen,
		label="571:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"571:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271d2fdbd0>",
		fillcolor=cadetblue,
		label="571:BS
pcs_sync_next = S_PCS_SYNC_LOSS_OF_SYNC;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271d2fdbd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"571:IF" -> "571:BS"	 [cond="['signal_detect']",
		label="(~signal_detect)",
		lineno=571];
	"451:BL" -> "Leaf_426:AL"	 [cond="[]",
		lineno=None];
	"472:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f271cffb090>",
		fillcolor=turquoise,
		label="472:BL
rx_even_m_toggle = 1;
pcs_sync_next = (~COMMA_match & ~INVALID)? S_PCS_SYNC_ACQUIRE_SYNC_1 : S_PCS_SYNC_LOSS_OF_SYNC;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271cffb0d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271cffb450>]",
		style=filled,
		typ=Block];
	"472:BL" -> "Leaf_426:AL"	 [cond="[]",
		lineno=None];
	"Leaf_368:AL"	 [def_var="['good_cgs']",
		label="Leaf_368:AL"];
	"375:NS" -> "Leaf_368:AL"	 [cond="[]",
		lineno=None];
	"493:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f271cfef310>",
		fillcolor=turquoise,
		label="493:BL
rx_even_m_toggle = 1;
pcs_sync_next = (~COMMA_match & ~INVALID)? S_PCS_SYNC_ACQUIRE_SYNC_2 : S_PCS_SYNC_LOSS_OF_SYNC;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271cfef350>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271cfef6d0>]",
		style=filled,
		typ=Block];
	"493:BL" -> "Leaf_426:AL"	 [cond="[]",
		lineno=None];
	"540:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f271d017cd0>",
		fillcolor=springgreen,
		label="540:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"540:IF" -> "540:BS"	 [cond="['cggood']",
		label="!(cggood)",
		lineno=540];
	"306:IF" -> "307:IF"	 [cond="['rx_even_m_init']",
		label="!(rx_even_m_init)",
		lineno=306];
	"306:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f271d055090>",
		fillcolor=firebrick,
		label="306:NS
rx_even <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f271d055090>]",
		style=filled,
		typ=NonblockingSubstitution];
	"306:IF" -> "306:NS"	 [cond="['rx_even_m_init']",
		label=rx_even_m_init,
		lineno=306];
	"Leaf_426:AL" -> "286:AL";
	"Leaf_426:AL" -> "269:AL";
	"418:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f271cff7c10>",
		clk_sens=True,
		fillcolor=gold,
		label="418:AL",
		sens="['ck', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'pcs_sync_next', 'S_PCS_SYNC_RUN']"];
	"Leaf_426:AL" -> "418:AL";
	"368:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f271d42bd50>",
		clk_sens=True,
		fillcolor=gold,
		label="368:AL",
		sens="['ck', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'good_cgs_m_cnt', 'good_cgs_m_init', 'good_cgs', 'good_cgs_m_inc']"];
	"Leaf_426:AL" -> "368:AL";
	"Leaf_426:AL" -> "301:AL";
	"336:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f271d426b10>",
		def_var="['K28_5_RX']",
		fillcolor=deepskyblue,
		label="336:AS
K28_5_RX = ebi_rxd_d1 == 8'hbc;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ebi_rxd_d1']"];
	"336:AS" -> "339:AS";
	"520:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f271d005a90>",
		fillcolor=springgreen,
		label="520:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"517:BL" -> "520:IF"	 [cond="[]",
		lineno=None];
	"520:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271d005b90>",
		fillcolor=cadetblue,
		label="520:BS
good_cgs_m_init = 1;
good_cgs_m_init = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271d005b90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271d005b90>]",
		style=filled,
		typ=BlockingSubstitution];
	"520:IF" -> "520:BS"	 [cond="['cggood']",
		label="!(cggood)",
		lineno=520];
	"272:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f271d4434d0>",
		fillcolor=firebrick,
		label="272:NS
running_disparity <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f271d4434d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_269:AL"	 [def_var="['running_disparity']",
		label="Leaf_269:AL"];
	"272:NS" -> "Leaf_269:AL"	 [cond="[]",
		lineno=None];
	"500:CA" -> "501:BL"	 [cond="[]",
		lineno=None];
	"373:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f271d431190>",
		fillcolor=springgreen,
		label="373:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"373:IF" -> "374:IF"	 [cond="['good_cgs_m_init']",
		label="!(good_cgs_m_init)",
		lineno=373];
	"373:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f271d4311d0>",
		fillcolor=firebrick,
		label="373:NS
good_cgs <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f271d4311d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"373:IF" -> "373:NS"	 [cond="['good_cgs_m_init']",
		label=good_cgs_m_init,
		lineno=373];
	"Leaf_355:AL" -> "381:AS";
	"359:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f271d42b7d0>",
		def_var="['VALID']",
		fillcolor=deepskyblue,
		label="359:AS
VALID = ~INVALID;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['INVALID']"];
	"Leaf_355:AL" -> "359:AS";
	"Leaf_355:AL" -> "426:AL";
	"420:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f271cff7f90>",
		fillcolor=firebrick,
		label="420:NS
pcs_sync_present <= (reset)? S_PCS_SYNC_RUN : pcs_sync_next;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f271cff7f90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"418:AL" -> "420:NS"	 [cond="[]",
		lineno=None];
	"459:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f271cff2450>",
		fillcolor=turquoise,
		label="459:BL
rx_even_m_toggle = 1;
pcs_sync_next = (~ebi_K_d1 & ~cgbad)? S_PCS_SYNC_ACQUIRE_SYNC_1 : S_PCS_SYNC_LOSS_OF_SYNC;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271cff2490>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271cff2810>]",
		style=filled,
		typ=Block];
	"459:BL" -> "Leaf_426:AL"	 [cond="[]",
		lineno=None];
	"383:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f271d431b10>",
		def_var="['cggood']",
		fillcolor=deepskyblue,
		label="383:AS
cggood = ~cgbad;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cgbad']"];
	"381:AS" -> "383:AS";
	"381:AS" -> "426:AL";
	"553:CA" -> "554:BL"	 [cond="[]",
		lineno=None];
	"Leaf_418:AL"	 [def_var="['pcs_sync_present']",
		label="Leaf_418:AL"];
	"420:NS" -> "Leaf_418:AL"	 [cond="[]",
		lineno=None];
	"372:BL" -> "373:IF"	 [cond="[]",
		lineno=None];
	"322:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f271d055ed0>",
		fillcolor=turquoise,
		label="322:BL
ebi_rxd_d1 <= ebi_rxd;
ebi_K_d1 <= ebi_K;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f271d055f10>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f271d426090>]",
		style=filled,
		typ=Block];
	"322:BL" -> "Leaf_318:AL"	 [cond="[]",
		lineno=None];
	"Leaf_418:AL" -> "426:AL";
	"480:BL" -> "Leaf_426:AL"	 [cond="[]",
		lineno=None];
	"487:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f271cffbbd0>",
		fillcolor=turquoise,
		label="487:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"486:CA" -> "487:BL"	 [cond="[]",
		lineno=None];
	"306:NS" -> "Leaf_301:AL"	 [cond="[]",
		lineno=None];
	"442:BS" -> "Leaf_426:AL"	 [cond="[]",
		lineno=None];
	"373:NS" -> "Leaf_368:AL"	 [cond="[]",
		lineno=None];
	"355:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f271d42b210>",
		clk_sens=True,
		fillcolor=gold,
		label="355:AL",
		sens="['ck', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'decoder_disparity_err', 'decoder_coding_err']"];
	"355:AL" -> "357:NS"	 [cond="[]",
		lineno=None];
	"427:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f271cffc290>",
		fillcolor=turquoise,
		label="427:BL
pcs_sync_next = pcs_sync_present;
good_cgs_m_init = 0;
good_cgs_m_inc = 0;
good_cgs_m_cnt = 0;
sync_m_acquired = 0;
sync_\
m_lost = 0;
rx_even_m_init = 0;
rx_even_m_set = 0;
rx_even_m_clr = 0;
rx_even_m_toggle = 0;
running_disparity_negative_m_set = 0;
\
running_disparity_positive_m_set = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271cffa2d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271cffa450>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271cffa5d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271cffa750>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271cffa8d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271cffaa10>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271cffab90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271cffad10>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271cffae90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271cffc050>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271cffc190>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271cffc2d0>]",
		style=filled,
		typ=Block];
	"427:BL" -> "438:CS"	 [cond="[]",
		lineno=None];
	"427:BL" -> "571:IF"	 [cond="[]",
		lineno=None];
	"441:BL" -> "442:IF"	 [cond="[]",
		lineno=None];
	"339:AS" -> "341:AS";
	"368:AL" -> "369:IF"	 [cond="[]",
		lineno=None];
	"277:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f271d724a10>",
		fillcolor=firebrick,
		label="277:NS
running_disparity <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f271d724a10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"277:NS" -> "Leaf_269:AL"	 [cond="[]",
		lineno=None];
	"370:NS" -> "Leaf_368:AL"	 [cond="[]",
		lineno=None];
	"520:BS" -> "Leaf_426:AL"	 [cond="[]",
		lineno=None];
	"458:CA" -> "459:BL"	 [cond="[]",
		lineno=None];
	"561:CA" -> "562:BL"	 [cond="[]",
		lineno=None];
	"302:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f271d050d90>",
		fillcolor=springgreen,
		label="302:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"301:AL" -> "302:IF"	 [cond="[]",
		lineno=None];
	"488:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f271cfef110>",
		fillcolor=springgreen,
		label="488:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"488:IF" -> "489:BL"	 [cond="['rx_even', 'COMMA_match']",
		label="(~rx_even & COMMA_match)",
		lineno=488];
	"488:IF" -> "493:BL"	 [cond="['rx_even', 'COMMA_match']",
		label="!((~rx_even & COMMA_match))",
		lineno=488];
	"327:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f271d426390>",
		fillcolor=turquoise,
		label="327:BL
ebi_rxd_out <= 0;
ebi_K_out <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f271d4263d0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f271d426510>]",
		style=filled,
		typ=Block];
	"327:BL" -> "Leaf_325:AL"	 [cond="[]",
		lineno=None];
	"536:BL" -> "540:IF"	 [cond="[]",
		lineno=None];
	"291:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f271d050610>",
		fillcolor=springgreen,
		label="291:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"290:BL" -> "291:IF"	 [cond="[]",
		lineno=None];
	"277:IF" -> "277:NS"	 [cond="['running_disparity_negative_m_set']",
		label=running_disparity_negative_m_set,
		lineno=277];
	"291:IF" -> "291:BL"	 [cond="['sync_m_acquired']",
		label=sync_m_acquired,
		lineno=291];
	"291:IF" -> "292:IF"	 [cond="['sync_m_acquired']",
		label="!(sync_m_acquired)",
		lineno=291];
	"446:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f271cffcad0>",
		fillcolor=turquoise,
		label="446:BL
sync_m_lost = sync_status;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271cffca90>]",
		style=filled,
		typ=Block];
	"446:BL" -> "450:IF"	 [cond="[]",
		lineno=None];
	"546:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f271d01a410>",
		fillcolor=turquoise,
		label="546:BL
rx_even_m_toggle = 1;
good_cgs_m_inc = 1;
pcs_sync_next = (cgbad)? S_PCS_SYNC_ACQUIRED_3 : 
                (good_cgs_done)? \
S_PCS_SYNC_ACQUIRED_1 : S_PCS_SYNC_ACQUIRED_2A;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271d01a290>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271d01a450>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271d01a6d0>]",
		style=filled,
		typ=Block];
	"545:CA" -> "546:BL"	 [cond="[]",
		lineno=None];
	"326:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f271d4264d0>",
		fillcolor=springgreen,
		label="326:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"326:IF" -> "329:BL"	 [cond="['reset']",
		label="!(reset)",
		lineno=326];
	"326:IF" -> "327:BL"	 [cond="['reset']",
		label=reset,
		lineno=326];
	"467:IF" -> "472:BL"	 [cond="['rx_even', 'COMMA_match']",
		label="!((~rx_even & COMMA_match))",
		lineno=467];
	"468:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f271cff2c90>",
		fillcolor=turquoise,
		label="468:BL
rx_even_m_set = 1;
pcs_sync_next = S_PCS_SYNC_COMMA_DETECT_2;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271cff2cd0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271cff2e90>]",
		style=filled,
		typ=Block];
	"467:IF" -> "468:BL"	 [cond="['rx_even', 'COMMA_match']",
		label="(~rx_even & COMMA_match)",
		lineno=467];
	"Leaf_368:AL" -> "379:AS";
	"Leaf_368:AL" -> "368:AL";
	"325:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f271d426250>",
		clk_sens=True,
		fillcolor=gold,
		label="325:AL",
		sens="['ck', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'ebi_rxd_d1', 'ebi_K_d1']"];
	"325:AL" -> "326:IF"	 [cond="[]",
		lineno=None];
	"510:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f271d005250>",
		fillcolor=turquoise,
		label="510:BL
rx_even_m_toggle = 1;
pcs_sync_next = (cggood)? S_PCS_SYNC_ACQUIRED_1 : S_PCS_SYNC_ACQUIRED_2;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271d005190>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271d0053d0>]",
		style=filled,
		typ=Block];
	"509:CA" -> "510:BL"	 [cond="[]",
		lineno=None];
	"526:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f271d0170d0>",
		fillcolor=turquoise,
		label="526:BL
rx_even_m_toggle = 1;
pcs_sync_next = (cggood)? S_PCS_SYNC_ACQUIRED_3A : S_PCS_SYNC_ACQUIRED_4;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271d017050>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f271d017610>]",
		style=filled,
		typ=Block];
	"530:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f271d0173d0>",
		fillcolor=springgreen,
		label="530:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"526:BL" -> "530:IF"	 [cond="[]",
		lineno=None];
	"468:BL" -> "Leaf_426:AL"	 [cond="[]",
		lineno=None];
	"383:AS" -> "426:AL";
	"272:IF" -> "275:BL"	 [cond="['reset']",
		label="!(reset)",
		lineno=272];
	"272:IF" -> "272:NS"	 [cond="['reset']",
		label=reset,
		lineno=272];
	"445:CA" -> "446:BL"	 [cond="[]",
		lineno=None];
	"487:BL" -> "488:IF"	 [cond="[]",
		lineno=None];
	"571:BS" -> "Leaf_426:AL"	 [cond="[]",
		lineno=None];
	"Leaf_318:AL" -> "341:AS";
	"Leaf_318:AL" -> "335:AS";
	"Leaf_318:AL" -> "337:AS";
	"Leaf_318:AL" -> "336:AS";
	"Leaf_318:AL" -> "325:AL";
	"Leaf_318:AL" -> "426:AL";
	"426:AL" -> "427:BL"	 [cond="[]",
		lineno=None];
	"292:BL" -> "Leaf_286:AL"	 [cond="[]",
		lineno=None];
	"525:CA" -> "526:BL"	 [cond="[]",
		lineno=None];
	"276:NS" -> "Leaf_269:AL"	 [cond="[]",
		lineno=None];
	"546:BL" -> "Leaf_426:AL"	 [cond="[]",
		lineno=None];
	"319:IF" -> "320:BL"	 [cond="['reset']",
		label=reset,
		lineno=319];
	"319:IF" -> "322:BL"	 [cond="['reset']",
		label="!(reset)",
		lineno=319];
	"303:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f271d050d50>",
		fillcolor=firebrick,
		label="303:NS
rx_even <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f271d050d50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"303:NS" -> "Leaf_301:AL"	 [cond="[]",
		lineno=None];
	"510:BL" -> "Leaf_426:AL"	 [cond="[]",
		lineno=None];
	"530:IF" -> "530:BS"	 [cond="['cggood']",
		label="!(cggood)",
		lineno=530];
	"309:NS" -> "Leaf_301:AL"	 [cond="[]",
		lineno=None];
	"302:IF" -> "305:BL"	 [cond="['reset']",
		label="!(reset)",
		lineno=302];
	"302:IF" -> "303:NS"	 [cond="['reset']",
		label=reset,
		lineno=302];
	"374:NS" -> "Leaf_368:AL"	 [cond="[]",
		lineno=None];
}
