strict digraph "compose( ,  )" {
	node [label="\N"];
	"246:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae197d0>",
		fillcolor=cadetblue,
		label="246:BS
Next_state = State_err_end;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae197d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_208:AL"	 [def_var="['Next_state']",
		label="Leaf_208:AL"];
	"246:BS" -> "Leaf_208:AL"	 [cond="[]",
		lineno=None];
	"254:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae19e10>",
		fillcolor=cadetblue,
		label="254:BS
Next_state = State_idle;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae19e10>]",
		style=filled,
		typ=BlockingSubstitution];
	"254:BS" -> "Leaf_208:AL"	 [cond="[]",
		lineno=None];
	"684:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfa9a1790>",
		fillcolor=springgreen,
		label="684:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"687:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfa9a1890>",
		fillcolor=firebrick,
		label="687:NS
Rx_mac_pa_tmp <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfa9a1890>]",
		style=filled,
		typ=NonblockingSubstitution];
	"684:IF" -> "687:NS"	 [cond="['Current_state_SYS', 'SYS_read', 'Dout', 'Addr_freshed_ptr']",
		label="!(((Current_state_SYS == SYS_read) && !(Dout[35] && Addr_freshed_ptr)))",
		lineno=684];
	"685:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfa9a16d0>",
		fillcolor=firebrick,
		label="685:NS
Rx_mac_pa_tmp <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfa9a16d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"684:IF" -> "685:NS"	 [cond="['Current_state_SYS', 'SYS_read', 'Dout', 'Addr_freshed_ptr']",
		label="((Current_state_SYS == SYS_read) && !(Dout[35] && Addr_freshed_ptr))",
		lineno=684];
	"671:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfa9b3650>",
		fillcolor=springgreen,
		label="671:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"674:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfa9b3810>",
		fillcolor=firebrick,
		label="674:NS
Dout_dl1 <= Dout;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfa9b3810>]",
		style=filled,
		typ=NonblockingSubstitution];
	"671:IF" -> "674:NS"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=671];
	"672:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfa9b3690>",
		fillcolor=firebrick,
		label="672:NS
Dout_dl1 <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfa9b3690>]",
		style=filled,
		typ=NonblockingSubstitution];
	"671:IF" -> "672:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=671];
	"662:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfa991f50>",
		fillcolor=firebrick,
		label="662:NS
Empty <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfa991f50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_660:AL"	 [def_var="['Empty']",
		label="Leaf_660:AL"];
	"662:NS" -> "Leaf_660:AL"	 [cond="[]",
		lineno=None];
	"695:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfa9a1c90>",
		fillcolor=firebrick,
		label="695:NS
Rx_mac_pa <= Rx_mac_pa_tmp;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfa9a1c90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_691:AL"	 [def_var="['Rx_mac_pa']",
		label="Leaf_691:AL"];
	"695:NS" -> "Leaf_691:AL"	 [cond="[]",
		lineno=None];
	"555:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fbcfae88450>",
		fillcolor=turquoise,
		label="555:BL
Packet_number_add_dl1 <= 0;
Packet_number_add_dl2 <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfae88490>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7fbcfae88610>]",
		style=filled,
		typ=Block];
	"Leaf_553:AL"	 [def_var="['Packet_number_add_dl1', 'Packet_number_add_dl2']",
		label="Leaf_553:AL"];
	"555:BL" -> "Leaf_553:AL"	 [cond="[]",
		lineno=None];
	"Leaf_627:AL"	 [def_var="['Add_rd_gray']",
		label="Leaf_627:AL"];
	"287:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbcfae17d50>",
		clk_sens=True,
		fillcolor=gold,
		label="287:AL",
		sens="['Clk_MAC', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Add_rd_gray']"];
	"Leaf_627:AL" -> "287:AL";
	"204:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb252d90>",
		fillcolor=firebrick,
		label="204:NS
Current_state <= State_idle;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb252d90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_202:AL"	 [def_var="['Current_state']",
		label="Leaf_202:AL"];
	"204:NS" -> "Leaf_202:AL"	 [cond="[]",
		lineno=None];
	"638:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbcfa995250>",
		clk_sens=False,
		fillcolor=gold,
		label="638:AL",
		sens="['Clk_SYS', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Add_wr_gray']"];
	"639:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfa995490>",
		fillcolor=springgreen,
		label="639:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"638:AL" -> "639:IF"	 [cond="[]",
		lineno=None];
	"327:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb11cd90>",
		fillcolor=firebrick,
		label="327:NS
Almost_full <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb11cd90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_317:AL"	 [def_var="['Almost_full']",
		label="Leaf_317:AL"];
	"327:NS" -> "Leaf_317:AL"	 [cond="[]",
		lineno=None];
	"225:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfae18310>",
		fillcolor=springgreen,
		label="225:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"226:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae18390>",
		fillcolor=cadetblue,
		label="226:BS
Next_state = State_byte1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae18390>]",
		style=filled,
		typ=BlockingSubstitution];
	"225:IF" -> "226:BS"	 [cond="['Fifo_data_en']",
		label=Fifo_data_en,
		lineno=225];
	"227:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfae18650>",
		fillcolor=springgreen,
		label="227:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"225:IF" -> "227:IF"	 [cond="['Fifo_data_en']",
		label="!(Fifo_data_en)",
		lineno=225];
	"526:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfae80d10>",
		fillcolor=springgreen,
		label="526:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"527:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae80d50>",
		fillcolor=cadetblue,
		label="527:BS
Next_state_SYS = SYS_pause;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae80d50>]",
		style=filled,
		typ=BlockingSubstitution];
	"526:IF" -> "527:BS"	 [cond="['Rx_mac_rd']",
		label="(!Rx_mac_rd)",
		lineno=526];
	"528:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfae7a150>",
		fillcolor=springgreen,
		label="528:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"526:IF" -> "528:IF"	 [cond="['Rx_mac_rd']",
		label="!((!Rx_mac_rd))",
		lineno=526];
	"693:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfa9a1ad0>",
		fillcolor=firebrick,
		label="693:NS
Rx_mac_pa <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfa9a1ad0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"693:NS" -> "Leaf_691:AL"	 [cond="[]",
		lineno=None];
	"325:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb11cc10>",
		fillcolor=firebrick,
		label="325:NS
Almost_full <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb11cc10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"325:NS" -> "Leaf_317:AL"	 [cond="[]",
		lineno=None];
	"394:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fbcfb126e50>",
		fillcolor=linen,
		label="394:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"403:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbcfb126d50>",
		fillcolor=lightcyan,
		label="403:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"394:CS" -> "403:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=394];
	"401:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbcfb126910>",
		fillcolor=lightcyan,
		label="401:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"394:CS" -> "401:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=394];
	"395:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbcfb12ce10>",
		fillcolor=lightcyan,
		label="395:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"394:CS" -> "395:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=394];
	"397:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbcfb126410>",
		fillcolor=lightcyan,
		label="397:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"394:CS" -> "397:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=394];
	"399:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbcfb126550>",
		fillcolor=lightcyan,
		label="399:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"394:CS" -> "399:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=394];
	"241:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae193d0>",
		fillcolor=cadetblue,
		label="241:BS
Next_state = Current_state;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae193d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"241:BS" -> "Leaf_208:AL"	 [cond="[]",
		lineno=None];
	"237:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae18f10>",
		fillcolor=cadetblue,
		label="237:BS
Next_state = State_err_end;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae18f10>]",
		style=filled,
		typ=BlockingSubstitution];
	"237:BS" -> "Leaf_208:AL"	 [cond="[]",
		lineno=None];
	"377:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb130a90>",
		fillcolor=firebrick,
		label="377:NS
Fifo_data_byte3 <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb130a90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_375:AL"	 [def_var="['Fifo_data_byte3']",
		label="Leaf_375:AL"];
	"377:NS" -> "Leaf_375:AL"	 [cond="[]",
		lineno=None];
	"288:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfae17f90>",
		fillcolor=springgreen,
		label="288:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"287:AL" -> "288:IF"	 [cond="[]",
		lineno=None];
	"Leaf_407:AL"	 [def_var="['Wr_en_tmp']",
		label="Leaf_407:AL"];
	"415:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbcfb123e50>",
		clk_sens=True,
		fillcolor=gold,
		label="415:AL",
		sens="['Clk_MAC', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Wr_en_tmp', 'Din_tmp']"];
	"Leaf_407:AL" -> "415:AL";
	"430:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbcfae92b10>",
		clk_sens=True,
		fillcolor=gold,
		label="430:AL",
		sens="['Clk_MAC', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Wr_en_ptr', 'Din_tmp', 'RX_APPEND_CRC', 'Wr_en_tmp', 'Din_tmp_reg']"];
	"Leaf_407:AL" -> "430:AL";
	"421:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbcfae92390>",
		clk_sens=True,
		fillcolor=gold,
		label="421:AL",
		sens="['Clk_MAC', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Wr_en_tmp', 'State_idle', 'Current_state']"];
	"Leaf_407:AL" -> "421:AL";
	"Leaf_457:AL"	 [def_var="['Packet_number_add_tmp_dl2', 'Packet_number_add_tmp_dl1']",
		label="Leaf_457:AL"];
	"457:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbcfaeb44d0>",
		clk_sens=True,
		fillcolor=gold,
		label="457:AL",
		sens="['Clk_MAC', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Packet_number_add_tmp', 'Packet_number_add_tmp_dl1']"];
	"Leaf_457:AL" -> "457:AL";
	"472:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbcfaeb4dd0>",
		clk_sens=True,
		fillcolor=gold,
		label="472:AL",
		sens="['Clk_MAC', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Packet_number_add_tmp_dl2', 'Packet_number_add_tmp_dl1']"];
	"Leaf_457:AL" -> "472:AL";
	"245:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfae19790>",
		fillcolor=springgreen,
		label="245:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"245:IF" -> "246:BS"	 [cond="['Fifo_data_err']",
		label=Fifo_data_err,
		lineno=245];
	"247:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfae19a50>",
		fillcolor=springgreen,
		label="247:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"245:IF" -> "247:IF"	 [cond="['Fifo_data_err']",
		label="!(Fifo_data_err)",
		lineno=245];
	"416:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfb123f50>",
		fillcolor=springgreen,
		label="416:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"415:AL" -> "416:IF"	 [cond="[]",
		lineno=None];
	"599:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfae7e690>",
		fillcolor=springgreen,
		label="599:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"601:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfae7eb50>",
		fillcolor=springgreen,
		label="601:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"599:IF" -> "601:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=599];
	"600:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfae7e6d0>",
		fillcolor=firebrick,
		label="600:NS
Rx_mac_ra <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfae7e6d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"599:IF" -> "600:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=599];
	"603:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfae7ef10>",
		fillcolor=springgreen,
		label="603:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"601:IF" -> "603:IF"	 [cond="['Packet_number_inFF', 'Fifo_data_count', 'Rx_Lwmark_pl']",
		label="!(((Packet_number_inFF == 0) && (Fifo_data_count <= Rx_Lwmark_pl)))",
		lineno=601];
	"602:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfae7eb90>",
		fillcolor=firebrick,
		label="602:NS
Rx_mac_ra <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfae7eb90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"601:IF" -> "602:NS"	 [cond="['Packet_number_inFF', 'Fifo_data_count', 'Rx_Lwmark_pl']",
		label="((Packet_number_inFF == 0) && (Fifo_data_count <= Rx_Lwmark_pl))",
		lineno=601];
	"598:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbcfae7e590>",
		clk_sens=False,
		fillcolor=gold,
		label="598:AL",
		sens="['Clk_SYS', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Rx_Hwmark_pl', 'Packet_number_inFF', 'Rx_Lwmark_pl', 'Fifo_data_count']"];
	"598:AL" -> "599:IF"	 [cond="[]",
		lineno=None];
	"259:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbcfae0c350>",
		fillcolor=lightcyan,
		label="259:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"260:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae0c490>",
		fillcolor=cadetblue,
		label="260:BS
Next_state = State_idle;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae0c490>]",
		style=filled,
		typ=BlockingSubstitution];
	"259:CA" -> "260:BS"	 [cond="[]",
		lineno=None];
	"418:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfae92110>",
		fillcolor=springgreen,
		label="418:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"419:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfae92250>",
		fillcolor=firebrick,
		label="419:NS
Din_tmp_reg <= Din_tmp;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfae92250>]",
		style=filled,
		typ=NonblockingSubstitution];
	"418:IF" -> "419:NS"	 [cond="['Wr_en_tmp']",
		label=Wr_en_tmp,
		lineno=418];
	"218:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfb24fdd0>",
		fillcolor=springgreen,
		label="218:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"220:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfae180d0>",
		fillcolor=springgreen,
		label="220:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"218:IF" -> "220:IF"	 [cond="['Fifo_data_err']",
		label="!(Fifo_data_err)",
		lineno=218];
	"219:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfb24fe10>",
		fillcolor=cadetblue,
		label="219:BS
Next_state = State_err_end;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfb24fe10>]",
		style=filled,
		typ=BlockingSubstitution];
	"218:IF" -> "219:BS"	 [cond="['Fifo_data_err']",
		label=Fifo_data_err,
		lineno=218];
	"547:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbcfae7af10>",
		fillcolor=lightcyan,
		label="547:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"548:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae880d0>",
		fillcolor=cadetblue,
		label="548:BS
Next_state_SYS = SYS_idle;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae880d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"547:CA" -> "548:BS"	 [cond="[]",
		lineno=None];
	"248:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae19a90>",
		fillcolor=cadetblue,
		label="248:BS
Next_state = State_be0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae19a90>]",
		style=filled,
		typ=BlockingSubstitution];
	"248:BS" -> "Leaf_208:AL"	 [cond="[]",
		lineno=None];
	"431:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfae92e50>",
		fillcolor=springgreen,
		label="431:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"430:AL" -> "431:IF"	 [cond="[]",
		lineno=None];
	"Leaf_580:AL"	 [def_var="['Fifo_data_count']",
		label="Leaf_580:AL"];
	"Leaf_580:AL" -> "598:AL";
	"624:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae84110>",
		fillcolor=cadetblue,
		label="624:BS
Addr_freshed_ptr = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae84110>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_620:AL"	 [def_var="['Addr_freshed_ptr']",
		label="Leaf_620:AL"];
	"624:BS" -> "Leaf_620:AL"	 [cond="[]",
		lineno=None];
	"650:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbcfa995c50>",
		clk_sens=False,
		fillcolor=gold,
		label="650:AL",
		sens="['Clk_SYS', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Add_wr_gray_dl1', 'Add_wr_jump_rd_pl1']"];
	"651:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfa995d90>",
		fillcolor=springgreen,
		label="651:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"650:AL" -> "651:IF"	 [cond="[]",
		lineno=None];
	"363:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbcfb124e50>",
		clk_sens=True,
		fillcolor=gold,
		label="363:AL",
		sens="['Clk_MAC', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Fifo_data_en']"];
	"364:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfb130110>",
		fillcolor=springgreen,
		label="364:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"363:AL" -> "364:IF"	 [cond="[]",
		lineno=None];
	"402:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfb126e10>",
		fillcolor=cadetblue,
		label="402:BS
Din_tmp = { 4'b1011, Fifo_data_byte3, Fifo_data_byte2, Fifo_data_byte1, 8'h0 };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfb126e10>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_393:AL"	 [def_var="['Din_tmp']",
		label="Leaf_393:AL"];
	"402:BS" -> "Leaf_393:AL"	 [cond="[]",
		lineno=None];
	"424:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfae927d0>",
		fillcolor=springgreen,
		label="424:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"426:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfae92950>",
		fillcolor=springgreen,
		label="426:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"424:IF" -> "426:IF"	 [cond="['Current_state', 'State_idle']",
		label="!((Current_state == State_idle))",
		lineno=424];
	"425:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfae92810>",
		fillcolor=firebrick,
		label="425:NS
Wr_en_ptr <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfae92810>]",
		style=filled,
		typ=NonblockingSubstitution];
	"424:IF" -> "425:NS"	 [cond="['Current_state', 'State_idle']",
		label="(Current_state == State_idle)",
		lineno=424];
	"609:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfaea2210>",
		fillcolor=springgreen,
		label="609:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"611:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfaea2650>",
		fillcolor=springgreen,
		label="611:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"609:IF" -> "611:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=609];
	"610:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfaea2250>",
		fillcolor=firebrick,
		label="610:NS
Add_rd <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfaea2250>]",
		style=filled,
		typ=NonblockingSubstitution];
	"609:IF" -> "610:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=609];
	"381:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbcfb12c090>",
		clk_sens=True,
		fillcolor=gold,
		label="381:AL",
		sens="['Clk_MAC', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Fifo_data_en_dl1', 'Fifo_data_dl1', 'Current_state', 'State_byte2']"];
	"382:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfb12c1d0>",
		fillcolor=springgreen,
		label="382:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"381:AL" -> "382:IF"	 [cond="[]",
		lineno=None];
	"391:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb12cdd0>",
		fillcolor=firebrick,
		label="391:NS
Fifo_data_byte1 <= Fifo_data_dl1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb12cdd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_387:AL"	 [def_var="['Fifo_data_byte1']",
		label="Leaf_387:AL"];
	"391:NS" -> "Leaf_387:AL"	 [cond="[]",
		lineno=None];
	"375:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbcfb130910>",
		clk_sens=True,
		fillcolor=gold,
		label="375:AL",
		sens="['Clk_MAC', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'State_byte3', 'Fifo_data_dl1', 'Current_state', 'Fifo_data_en_dl1']"];
	"376:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfb130a50>",
		fillcolor=springgreen,
		label="376:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"375:AL" -> "376:IF"	 [cond="[]",
		lineno=None];
	"710:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfa9aea50>",
		fillcolor=springgreen,
		label="710:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"711:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fbcfa9ae910>",
		fillcolor=turquoise,
		label="711:BL
Rx_mac_sop_tmp_dl1 <= 0;
Rx_mac_sop <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfa9ae950>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7fbcfa9aea90>]",
		style=filled,
		typ=Block];
	"710:IF" -> "711:BL"	 [cond="['Reset']",
		label=Reset,
		lineno=710];
	"716:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fbcfa9aec90>",
		fillcolor=turquoise,
		label="716:BL
Rx_mac_sop_tmp_dl1 <= Rx_mac_sop_tmp;
Rx_mac_sop <= Rx_mac_sop_tmp_dl1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfa9aecd0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7fbcfa9aee50>]",
		style=filled,
		typ=Block];
	"710:IF" -> "716:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=710];
	"618:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfaea2c10>",
		fillcolor=firebrick,
		label="618:NS
Add_rd_pl1 <= Add_rd;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfaea2c10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_614:AL"	 [def_var="['Add_rd_pl1']",
		label="Leaf_614:AL"];
	"618:NS" -> "Leaf_614:AL"	 [cond="[]",
		lineno=None];
	"608:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbcfaea20d0>",
		clk_sens=False,
		fillcolor=gold,
		label="608:AL",
		sens="['Clk_SYS', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Add_rd', 'Dout', 'Current_state_SYS', 'SYS_read', 'Addr_freshed_ptr']"];
	"Leaf_620:AL" -> "608:AL";
	"681:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbcfa9b3f90>",
		clk_sens=False,
		fillcolor=gold,
		label="681:AL",
		sens="['Clk_SYS', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Addr_freshed_ptr', 'Dout', 'SYS_read', 'Current_state_SYS']"];
	"Leaf_620:AL" -> "681:AL";
	"346:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb124050>",
		fillcolor=firebrick,
		label="346:NS
Add_wr_jump_tmp <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb124050>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_340:AL"	 [def_var="['Add_wr_jump_tmp']",
		label="Leaf_340:AL"];
	"346:NS" -> "Leaf_340:AL"	 [cond="[]",
		lineno=None];
	"544:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae7ad50>",
		fillcolor=cadetblue,
		label="544:BS
Next_state_SYS = SYS_idle;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae7ad50>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_514:AL"	 [def_var="['Next_state_SYS']",
		label="Leaf_514:AL"];
	"544:BS" -> "Leaf_514:AL"	 [cond="[]",
		lineno=None];
	"564:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fbcfae88c50>",
		def_var="['Packet_number_add_edge']",
		fillcolor=deepskyblue,
		label="564:AS
Packet_number_add_edge = Packet_number_add_dl1 & !Packet_number_add_dl2;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Packet_number_add_dl1', 'Packet_number_add_dl2']"];
	"572:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbcfae7c690>",
		clk_sens=False,
		fillcolor=gold,
		label="572:AL",
		sens="['Clk_SYS', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Packet_number_inFF', 'Packet_number_sub', 'Packet_number_add_edge']"];
	"564:AS" -> "572:AL";
	"640:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfa9953d0>",
		fillcolor=firebrick,
		label="640:NS
Add_wr_gray_dl1 <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfa9953d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"639:IF" -> "640:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=639];
	"642:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfa995590>",
		fillcolor=firebrick,
		label="642:NS
Add_wr_gray_dl1 <= Add_wr_gray;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfa995590>]",
		style=filled,
		typ=NonblockingSubstitution];
	"639:IF" -> "642:NS"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=639];
	"404:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfb123250>",
		fillcolor=cadetblue,
		label="404:BS
Din_tmp = { 4'b0000, Fifo_data_byte3, Fifo_data_byte2, Fifo_data_byte1, Fifo_data_dl1 };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfb123250>]",
		style=filled,
		typ=BlockingSubstitution];
	"403:CA" -> "404:BS"	 [cond="[]",
		lineno=None];
	"473:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfaeb4f10>",
		fillcolor=springgreen,
		label="473:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"475:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfaea7410>",
		fillcolor=springgreen,
		label="475:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"473:IF" -> "475:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=473];
	"474:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfaeb4f50>",
		fillcolor=firebrick,
		label="474:NS
Packet_number_add <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfaeb4f50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"473:IF" -> "474:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=473];
	"427:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfae92a90>",
		fillcolor=firebrick,
		label="427:NS
Wr_en_ptr <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfae92a90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"426:IF" -> "427:NS"	 [cond="['Wr_en_tmp']",
		label=Wr_en_tmp,
		lineno=426];
	"257:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbcfae0c110>",
		fillcolor=lightcyan,
		label="257:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"258:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae0c250>",
		fillcolor=cadetblue,
		label="258:BS
Next_state = State_idle;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae0c250>]",
		style=filled,
		typ=BlockingSubstitution];
	"257:CA" -> "258:BS"	 [cond="[]",
		lineno=None];
	"593:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fbcfae7e210>",
		fillcolor=turquoise,
		label="593:BL
Rx_Hwmark_pl <= Rx_Hwmark;
Rx_Lwmark_pl <= Rx_Lwmark;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfae7e250>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7fbcfae7e3d0>]",
		style=filled,
		typ=Block];
	"Leaf_586:AL"	 [def_var="['Rx_Hwmark_pl', 'Rx_Lwmark_pl']",
		label="Leaf_586:AL"];
	"593:BL" -> "Leaf_586:AL"	 [cond="[]",
		lineno=None];
	"Leaf_309:AL"	 [def_var="['Full']",
		label="Leaf_309:AL"];
	"332:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbcfb11cfd0>",
		clk_sens=True,
		fillcolor=gold,
		label="332:AL",
		sens="['Clk_MAC', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Full', 'Wr_en', 'Current_state', 'Add_wr', 'State_err_end', 'Add_wr_reg']"];
	"Leaf_309:AL" -> "332:AL";
	"291:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfae340d0>",
		fillcolor=firebrick,
		label="291:NS
Add_rd_gray_dl1 <= Add_rd_gray;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfae340d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_287:AL"	 [def_var="['Add_rd_gray_dl1']",
		label="Leaf_287:AL"];
	"291:NS" -> "Leaf_287:AL"	 [cond="[]",
		lineno=None];
	"348:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbcfb124150>",
		clk_sens=True,
		fillcolor=gold,
		label="348:AL",
		sens="['Clk_MAC', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Add_wr_jump_tmp']"];
	"Leaf_340:AL" -> "348:AL";
	"401:CA" -> "402:BS"	 [cond="[]",
		lineno=None];
	"Leaf_369:AL"	 [def_var="['Fifo_data_dl1']",
		label="Leaf_369:AL"];
	"Leaf_369:AL" -> "381:AL";
	"Leaf_369:AL" -> "375:AL";
	"393:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbcfb12cd90>",
		clk_sens=False,
		fillcolor=gold,
		label="393:AL",
		sens="['Fifo_data_byte1', 'Fifo_data_dl1', 'Fifo_data_byte3', 'Fifo_data_byte2']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Fifo_data_byte1', 'Fifo_data_dl1', 'Fifo_data_byte3', 'Fifo_data_byte2', 'Current_state']"];
	"Leaf_369:AL" -> "393:AL";
	"387:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbcfb12c7d0>",
		clk_sens=True,
		fillcolor=gold,
		label="387:AL",
		sens="['Clk_MAC', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Fifo_data_en_dl1', 'Fifo_data_dl1', 'Current_state', 'State_byte1']"];
	"Leaf_369:AL" -> "387:AL";
	"536:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae7a550>",
		fillcolor=cadetblue,
		label="536:BS
Next_state_SYS = Current_state_SYS;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae7a550>]",
		style=filled,
		typ=BlockingSubstitution];
	"536:BS" -> "Leaf_514:AL"	 [cond="[]",
		lineno=None];
	"517:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfae80190>",
		fillcolor=springgreen,
		label="517:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"518:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae801d0>",
		fillcolor=cadetblue,
		label="518:BS
Next_state_SYS = SYS_read;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae801d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"517:IF" -> "518:BS"	 [cond="['Rx_mac_rd', 'Rx_mac_ra', 'Empty']",
		label="(Rx_mac_rd && Rx_mac_ra && !Empty)",
		lineno=517];
	"519:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfae80690>",
		fillcolor=springgreen,
		label="519:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"517:IF" -> "519:IF"	 [cond="['Rx_mac_rd', 'Rx_mac_ra', 'Empty']",
		label="!((Rx_mac_rd && Rx_mac_ra && !Empty))",
		lineno=517];
	"320:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfb11cbd0>",
		fillcolor=springgreen,
		label="320:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"320:IF" -> "327:NS"	 [cond="['Add_wr_pluse4', 'Add_rd_ungray', 'Add_wr_pluse3', 'Add_rd_ungray', 'Add_wr_pluse2', 'Add_rd_ungray', 'Add_wr_pluse', 'Add_rd_ungray']",
		label="!(((Add_wr_pluse4 == Add_rd_ungray) || (Add_wr_pluse3 == Add_rd_ungray) || (Add_wr_pluse2 == Add_rd_ungray) || (Add_wr_pluse == \
Add_rd_ungray)))",
		lineno=320];
	"320:IF" -> "325:NS"	 [cond="['Add_wr_pluse4', 'Add_rd_ungray', 'Add_wr_pluse3', 'Add_rd_ungray', 'Add_wr_pluse2', 'Add_rd_ungray', 'Add_wr_pluse', 'Add_rd_ungray']",
		label="((Add_wr_pluse4 == Add_rd_ungray) || (Add_wr_pluse3 == Add_rd_ungray) || (Add_wr_pluse2 == Add_rd_ungray) || (Add_wr_pluse == Add_\
rd_ungray))",
		lineno=320];
	"Leaf_387:AL" -> "393:AL";
	"349:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfb124390>",
		fillcolor=springgreen,
		label="349:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"352:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb1244d0>",
		fillcolor=firebrick,
		label="352:NS
Add_wr_jump_tmp_pl1 <= Add_wr_jump_tmp;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb1244d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"349:IF" -> "352:NS"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=349];
	"350:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb1242d0>",
		fillcolor=firebrick,
		label="350:NS
Add_wr_jump_tmp_pl1 <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb1242d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"349:IF" -> "350:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=349];
	"527:BS" -> "Leaf_514:AL"	 [cond="[]",
		lineno=None];
	"691:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbcfa9a1990>",
		clk_sens=False,
		fillcolor=gold,
		label="691:AL",
		sens="['Clk_SYS', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Rx_mac_pa_tmp']"];
	"692:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfa9a1a90>",
		fillcolor=springgreen,
		label="692:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"691:AL" -> "692:IF"	 [cond="[]",
		lineno=None];
	"538:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfae7a910>",
		fillcolor=springgreen,
		label="538:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"539:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae7a850>",
		fillcolor=cadetblue,
		label="539:BS
Next_state_SYS = SYS_read;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae7a850>]",
		style=filled,
		typ=BlockingSubstitution];
	"538:IF" -> "539:BS"	 [cond="['Empty']",
		label="(!Empty)",
		lineno=538];
	"541:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae7aa50>",
		fillcolor=cadetblue,
		label="541:BS
Next_state_SYS = Current_state_SYS;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae7aa50>]",
		style=filled,
		typ=BlockingSubstitution];
	"538:IF" -> "541:BS"	 [cond="['Empty']",
		label="!((!Empty))",
		lineno=538];
	"578:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfaeb2310>",
		fillcolor=firebrick,
		label="578:NS
Packet_number_inFF <= Packet_number_inFF - 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfaeb2310>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_572:AL"	 [def_var="['Packet_number_inFF']",
		label="Leaf_572:AL"];
	"578:NS" -> "Leaf_572:AL"	 [cond="[]",
		lineno=None];
	"212:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfb24f690>",
		fillcolor=cadetblue,
		label="212:BS
Next_state = State_byte3;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfb24f690>]",
		style=filled,
		typ=BlockingSubstitution];
	"212:BS" -> "Leaf_208:AL"	 [cond="[]",
		lineno=None];
	"615:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfaea2a50>",
		fillcolor=springgreen,
		label="615:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"615:IF" -> "618:NS"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=615];
	"616:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfaea2a90>",
		fillcolor=firebrick,
		label="616:NS
Add_rd_pl1 <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfaea2a90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"615:IF" -> "616:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=615];
	"581:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfaeb25d0>",
		fillcolor=springgreen,
		label="581:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"584:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfaeb2a10>",
		fillcolor=firebrick,
		label="584:NS
Fifo_data_count <= Add_wr_ungray[9-1:9-5] - Add_rd[9-1:9-5];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfaeb2a10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"581:IF" -> "584:NS"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=581];
	"582:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfaeb2510>",
		fillcolor=firebrick,
		label="582:NS
Fifo_data_count <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfaeb2510>]",
		style=filled,
		typ=NonblockingSubstitution];
	"581:IF" -> "582:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=581];
	"279:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fbcfae173d0>",
		fillcolor=turquoise,
		label="279:BL
Add_wr_gray[9 - 1] <= Add_wr[9 - 1];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfae17310>]",
		style=filled,
		typ=Block];
	"Leaf_275:AL"	 [def_var="['Add_wr_gray']",
		label="Leaf_275:AL"];
	"279:BL" -> "Leaf_275:AL"	 [cond="[]",
		lineno=None];
	"683:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfa9a1150>",
		fillcolor=firebrick,
		label="683:NS
Rx_mac_pa_tmp <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfa9a1150>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_681:AL"	 [def_var="['Rx_mac_pa_tmp']",
		label="Leaf_681:AL"];
	"683:NS" -> "Leaf_681:AL"	 [cond="[]",
		lineno=None];
	"232:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae18b10>",
		fillcolor=cadetblue,
		label="232:BS
Next_state = Current_state;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae18b10>]",
		style=filled,
		typ=BlockingSubstitution];
	"232:BS" -> "Leaf_208:AL"	 [cond="[]",
		lineno=None];
	"333:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfb11d110>",
		fillcolor=springgreen,
		label="333:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"334:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb11d150>",
		fillcolor=firebrick,
		label="334:NS
Add_wr <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb11d150>]",
		style=filled,
		typ=NonblockingSubstitution];
	"333:IF" -> "334:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=333];
	"335:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfb11d490>",
		fillcolor=springgreen,
		label="335:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"333:IF" -> "335:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=333];
	"677:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fbcfa9b3b50>",
		def_var="['Rx_mac_BE']",
		fillcolor=deepskyblue,
		label="677:AS
Rx_mac_BE = Dout_dl1[33:32];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Dout_dl1']"];
	"687:NS" -> "Leaf_681:AL"	 [cond="[]",
		lineno=None];
	"252:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae19910>",
		fillcolor=cadetblue,
		label="252:BS
Next_state = State_idle;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae19910>]",
		style=filled,
		typ=BlockingSubstitution];
	"252:BS" -> "Leaf_208:AL"	 [cond="[]",
		lineno=None];
	"239:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae19210>",
		fillcolor=cadetblue,
		label="239:BS
Next_state = State_be3;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae19210>]",
		style=filled,
		typ=BlockingSubstitution];
	"239:BS" -> "Leaf_208:AL"	 [cond="[]",
		lineno=None];
	"407:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbcfb1232d0>",
		clk_sens=False,
		fillcolor=gold,
		label="407:AL",
		sens="[]",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Fifo_data_en', 'Current_state', 'State_be2', 'State_be3', 'State_be0', 'State_be1', 'State_byte0']"];
	"408:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfb123a90>",
		fillcolor=springgreen,
		label="408:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"407:AL" -> "408:IF"	 [cond="[]",
		lineno=None];
	"215:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbcfb24f890>",
		fillcolor=lightcyan,
		label="215:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"216:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfb24fad0>",
		fillcolor=springgreen,
		label="216:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"215:CA" -> "216:IF"	 [cond="[]",
		lineno=None];
	"604:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfaea2090>",
		fillcolor=firebrick,
		label="604:NS
Rx_mac_ra <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfaea2090>]",
		style=filled,
		typ=NonblockingSubstitution];
	"603:IF" -> "604:NS"	 [cond="['Packet_number_inFF', 'Fifo_data_count', 'Rx_Hwmark_pl']",
		label="((Packet_number_inFF >= 1) || (Fifo_data_count >= Rx_Hwmark_pl))",
		lineno=603];
	"546:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae7af50>",
		fillcolor=cadetblue,
		label="546:BS
Next_state_SYS = Current_state_SYS;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae7af50>]",
		style=filled,
		typ=BlockingSubstitution];
	"546:BS" -> "Leaf_514:AL"	 [cond="[]",
		lineno=None];
	"226:BS" -> "Leaf_208:AL"	 [cond="[]",
		lineno=None];
	"608:AL" -> "609:IF"	 [cond="[]",
		lineno=None];
	"344:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb11de50>",
		fillcolor=firebrick,
		label="344:NS
Add_wr_jump_tmp <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb11de50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"344:NS" -> "Leaf_340:AL"	 [cond="[]",
		lineno=None];
	"404:BS" -> "Leaf_393:AL"	 [cond="[]",
		lineno=None];
	"Leaf_363:AL"	 [def_var="['Fifo_data_en_dl1']",
		label="Leaf_363:AL"];
	"Leaf_363:AL" -> "381:AL";
	"Leaf_363:AL" -> "375:AL";
	"Leaf_363:AL" -> "387:AL";
	"700:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfa9a1f90>",
		fillcolor=springgreen,
		label="700:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"702:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfa9ae590>",
		fillcolor=springgreen,
		label="702:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"700:IF" -> "702:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=700];
	"701:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfa9a1fd0>",
		fillcolor=firebrick,
		label="701:NS
Rx_mac_sop_tmp <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfa9a1fd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"700:IF" -> "701:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=700];
	"574:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfae7c810>",
		fillcolor=firebrick,
		label="574:NS
Packet_number_inFF <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfae7c810>]",
		style=filled,
		typ=NonblockingSubstitution];
	"574:NS" -> "Leaf_572:AL"	 [cond="[]",
		lineno=None];
	"Leaf_508:AL"	 [def_var="['Current_state_SYS']",
		label="Leaf_508:AL"];
	"Leaf_508:AL" -> "608:AL";
	"566:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbcfae88f10>",
		clk_sens=False,
		fillcolor=gold,
		label="566:AL",
		sens="['Current_state_SYS', 'Next_state_SYS']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['SYS_wait_end', 'SYS_read', 'Current_state_SYS', 'Next_state_SYS']"];
	"Leaf_508:AL" -> "566:AL";
	"Leaf_508:AL" -> "681:AL";
	"699:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbcfa9a1e50>",
		clk_sens=False,
		fillcolor=gold,
		label="699:AL",
		sens="['Clk_SYS', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'SYS_read', 'SYS_idle', 'Next_state_SYS', 'Current_state_SYS']"];
	"Leaf_508:AL" -> "699:AL";
	"514:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbcfaea7d10>",
		clk_sens=False,
		fillcolor=gold,
		label="514:AL",
		sens="['Current_state_SYS', 'Rx_mac_rd', 'Rx_mac_ra', 'Dout', 'Empty']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Rx_mac_rd', 'Dout', 'Current_state_SYS', 'Empty', 'Rx_mac_ra']"];
	"Leaf_508:AL" -> "514:AL";
	"554:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfae885d0>",
		fillcolor=springgreen,
		label="554:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"554:IF" -> "555:BL"	 [cond="['Reset']",
		label=Reset,
		lineno=554];
	"560:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fbcfae88810>",
		fillcolor=turquoise,
		label="560:BL
Packet_number_add_dl1 <= Packet_number_add;
Packet_number_add_dl2 <= Packet_number_add_dl1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfae88850>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7fbcfae88a10>]",
		style=filled,
		typ=Block];
	"554:IF" -> "560:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=554];
	"437:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fbcfaea00d0>",
		fillcolor=turquoise,
		label="437:BL
Wr_en <= Wr_en_tmp;
Din <= Din_tmp;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfaea0110>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7fbcfaea0250>]",
		style=filled,
		typ=Block];
	"Leaf_430:AL"	 [def_var="['Wr_en', 'Din']",
		label="Leaf_430:AL"];
	"437:BL" -> "Leaf_430:AL"	 [cond="[]",
		lineno=None];
	"302:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fbcfae37310>",
		def_var="['Add_wr_pluse']",
		fillcolor=deepskyblue,
		label="302:AS
Add_wr_pluse = Add_wr + 1;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Add_wr']"];
	"309:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbcfae37b50>",
		clk_sens=True,
		fillcolor=gold,
		label="309:AL",
		sens="['Clk_MAC', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Add_rd_ungray', 'Reset', 'Add_wr_pluse']"];
	"302:AS" -> "309:AL";
	"317:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbcfb11c2d0>",
		clk_sens=True,
		fillcolor=gold,
		label="317:AL",
		sens="['Clk_MAC', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Add_rd_ungray', 'Reset', 'Add_wr_pluse', 'Add_wr_pluse4', 'Add_wr_pluse2', 'Add_wr_pluse3']"];
	"302:AS" -> "317:AL";
	"573:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfae7c7d0>",
		fillcolor=springgreen,
		label="573:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"573:IF" -> "574:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=573];
	"575:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfae7cc90>",
		fillcolor=springgreen,
		label="575:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"573:IF" -> "575:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=573];
	"572:AL" -> "573:IF"	 [cond="[]",
		lineno=None];
	"685:NS" -> "Leaf_681:AL"	 [cond="[]",
		lineno=None];
	"705:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfa9ae690>",
		fillcolor=firebrick,
		label="705:NS
Rx_mac_sop_tmp <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfa9ae690>]",
		style=filled,
		typ=NonblockingSubstitution];
	"702:IF" -> "705:NS"	 [cond="['Current_state_SYS', 'SYS_idle', 'Next_state_SYS', 'SYS_read']",
		label="!(((Current_state_SYS == SYS_idle) && (Next_state_SYS == SYS_read)))",
		lineno=702];
	"703:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfa9ae4d0>",
		fillcolor=firebrick,
		label="703:NS
Rx_mac_sop_tmp <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfa9ae4d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"702:IF" -> "703:NS"	 [cond="['Current_state_SYS', 'SYS_idle', 'Next_state_SYS', 'SYS_read']",
		label="((Current_state_SYS == SYS_idle) && (Next_state_SYS == SYS_read))",
		lineno=702];
	"396:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfb126390>",
		fillcolor=cadetblue,
		label="396:BS
Din_tmp = { 4'b1000, Fifo_data_byte3, Fifo_data_byte2, Fifo_data_byte1, Fifo_data_dl1 };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfb126390>]",
		style=filled,
		typ=BlockingSubstitution];
	"395:CA" -> "396:BS"	 [cond="[]",
		lineno=None];
	"Leaf_566:AL"	 [def_var="['Packet_number_sub']",
		label="Leaf_566:AL"];
	"Leaf_566:AL" -> "572:AL";
	"587:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfae7e0d0>",
		fillcolor=springgreen,
		label="587:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"587:IF" -> "593:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=587];
	"588:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fbcfaeb2e50>",
		fillcolor=turquoise,
		label="588:BL
Rx_Hwmark_pl <= 0;
Rx_Lwmark_pl <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfaeb2e90>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7fbcfae7e050>]",
		style=filled,
		typ=Block];
	"587:IF" -> "588:BL"	 [cond="['Reset']",
		label=Reset,
		lineno=587];
	"645:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfa995990>",
		fillcolor=springgreen,
		label="645:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"648:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfa995a90>",
		fillcolor=firebrick,
		label="648:NS
Add_wr_jump_rd_pl1 <= Add_wr_jump;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfa995a90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"645:IF" -> "648:NS"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=645];
	"646:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfa9958d0>",
		fillcolor=firebrick,
		label="646:NS
Add_wr_jump_rd_pl1 <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfa9958d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"645:IF" -> "646:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=645];
	"567:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfae7c3d0>",
		fillcolor=springgreen,
		label="567:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"566:AL" -> "567:IF"	 [cond="[]",
		lineno=None];
	"359:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfb124cd0>",
		fillcolor=springgreen,
		label="359:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"360:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb124e10>",
		fillcolor=firebrick,
		label="360:NS
Add_wr_jump <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb124e10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"359:IF" -> "360:NS"	 [cond="['Add_wr_jump_tmp_pl1']",
		label=Add_wr_jump_tmp_pl1,
		lineno=359];
	"208:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbcfb24f350>",
		clk_sens=False,
		fillcolor=gold,
		label="208:AL",
		sens="['Current_state', 'Fifo_data_en', 'Fifo_data_err', 'Fifo_data_end']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Fifo_data_en', 'Fifo_data_err', 'Current_state', 'Fifo_data_end']"];
	"209:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fbcfae0c510>",
		fillcolor=linen,
		label="209:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"208:AL" -> "209:CS"	 [cond="[]",
		lineno=None];
	"293:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbcfae34290>",
		clk_sens=True,
		fillcolor=gold,
		label="293:AL",
		sens="['Clk_MAC', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Add_rd_gray_dl1']"];
	"Leaf_287:AL" -> "293:AL";
	"663:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfa9b3290>",
		fillcolor=springgreen,
		label="663:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"664:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfa9b32d0>",
		fillcolor=firebrick,
		label="664:NS
Empty <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfa9b32d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"663:IF" -> "664:NS"	 [cond="['Add_rd', 'Add_wr_ungray']",
		label="(Add_rd == Add_wr_ungray)",
		lineno=663];
	"666:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfa9b3450>",
		fillcolor=firebrick,
		label="666:NS
Empty <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfa9b3450>]",
		style=filled,
		typ=NonblockingSubstitution];
	"663:IF" -> "666:NS"	 [cond="['Add_rd', 'Add_wr_ungray']",
		label="!((Add_rd == Add_wr_ungray))",
		lineno=663];
	"385:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb12c690>",
		fillcolor=firebrick,
		label="385:NS
Fifo_data_byte2 <= Fifo_data_dl1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb12c690>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_381:AL"	 [def_var="['Fifo_data_byte2']",
		label="Leaf_381:AL"];
	"385:NS" -> "Leaf_381:AL"	 [cond="[]",
		lineno=None];
	"422:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfae92490>",
		fillcolor=springgreen,
		label="422:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"421:AL" -> "422:IF"	 [cond="[]",
		lineno=None];
	"Leaf_660:AL" -> "514:AL";
	"451:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfaeb42d0>",
		fillcolor=springgreen,
		label="451:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"453:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfaeb4210>",
		fillcolor=firebrick,
		label="453:NS
Packet_number_add_tmp <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfaeb4210>]",
		style=filled,
		typ=NonblockingSubstitution];
	"451:IF" -> "453:NS"	 [cond="['Current_state', 'State_be0', 'Current_state', 'State_be1', 'Current_state', 'State_be2', 'Current_state', 'State_be3']",
		label="((Current_state == State_be0) || (Current_state == State_be1) || (Current_state == State_be2) || (Current_state == State_be3))",
		lineno=451];
	"455:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfaeb43d0>",
		fillcolor=firebrick,
		label="455:NS
Packet_number_add_tmp <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfaeb43d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"451:IF" -> "455:NS"	 [cond="['Current_state', 'State_be0', 'Current_state', 'State_be1', 'Current_state', 'State_be2', 'Current_state', 'State_be3']",
		label="!(((Current_state == State_be0) || (Current_state == State_be1) || (Current_state == State_be2) || (Current_state == State_be3)))",
		lineno=451];
	"256:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae0c050>",
		fillcolor=cadetblue,
		label="256:BS
Next_state = State_idle;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae0c050>]",
		style=filled,
		typ=BlockingSubstitution];
	"256:BS" -> "Leaf_208:AL"	 [cond="[]",
		lineno=None];
	"478:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfaea7510>",
		fillcolor=firebrick,
		label="478:NS
Packet_number_add <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfaea7510>]",
		style=filled,
		typ=NonblockingSubstitution];
	"475:IF" -> "478:NS"	 [cond="['Packet_number_add_tmp_dl1', 'Packet_number_add_tmp_dl2']",
		label="!((Packet_number_add_tmp_dl1 || Packet_number_add_tmp_dl2))",
		lineno=475];
	"476:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfaea7350>",
		fillcolor=firebrick,
		label="476:NS
Packet_number_add <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfaea7350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"475:IF" -> "476:NS"	 [cond="['Packet_number_add_tmp_dl1', 'Packet_number_add_tmp_dl2']",
		label="(Packet_number_add_tmp_dl1 || Packet_number_add_tmp_dl2)",
		lineno=475];
	"342:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb11da90>",
		fillcolor=firebrick,
		label="342:NS
Add_wr_jump_tmp <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb11da90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"342:NS" -> "Leaf_340:AL"	 [cond="[]",
		lineno=None];
	"413:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfb123c50>",
		fillcolor=cadetblue,
		label="413:BS
Wr_en_tmp = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfb123c50>]",
		style=filled,
		typ=BlockingSubstitution];
	"413:BS" -> "Leaf_407:AL"	 [cond="[]",
		lineno=None];
	"628:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfae84490>",
		fillcolor=springgreen,
		label="628:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"629:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfae84450>",
		fillcolor=firebrick,
		label="629:NS
Add_rd_gray <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfae84450>]",
		style=filled,
		typ=NonblockingSubstitution];
	"628:IF" -> "629:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=628];
	"631:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fbcfae84890>",
		fillcolor=turquoise,
		label="631:BL
Add_rd_gray[9 - 1] <= Add_rd[9 - 1];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfae847d0>]",
		style=filled,
		typ=Block];
	"628:IF" -> "631:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=628];
	"522:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae807d0>",
		fillcolor=cadetblue,
		label="522:BS
Next_state_SYS = Current_state_SYS;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae807d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"522:BS" -> "Leaf_514:AL"	 [cond="[]",
		lineno=None];
	"515:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fbcfae7afd0>",
		fillcolor=linen,
		label="515:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"515:CS" -> "547:CA"	 [cond="['Current_state_SYS']",
		label=Current_state_SYS,
		lineno=515];
	"516:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbcfaea7e10>",
		fillcolor=lightcyan,
		label="516:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"515:CS" -> "516:CA"	 [cond="['Current_state_SYS']",
		label=Current_state_SYS,
		lineno=515];
	"537:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbcfae7a510>",
		fillcolor=lightcyan,
		label="537:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"515:CS" -> "537:CA"	 [cond="['Current_state_SYS']",
		label=Current_state_SYS,
		lineno=515];
	"542:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbcfae7aa10>",
		fillcolor=lightcyan,
		label="542:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"515:CS" -> "542:CA"	 [cond="['Current_state_SYS']",
		label=Current_state_SYS,
		lineno=515];
	"523:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbcfae80210>",
		fillcolor=lightcyan,
		label="523:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"515:CS" -> "523:CA"	 [cond="['Current_state_SYS']",
		label=Current_state_SYS,
		lineno=515];
	"532:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbcfae80a90>",
		fillcolor=lightcyan,
		label="532:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"515:CS" -> "532:CA"	 [cond="['Current_state_SYS']",
		label=Current_state_SYS,
		lineno=515];
	"661:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfa991f10>",
		fillcolor=springgreen,
		label="661:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"661:IF" -> "662:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=661];
	"661:IF" -> "663:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=661];
	"Leaf_354:AL"	 [def_var="['Add_wr_jump']",
		label="Leaf_354:AL"];
	"644:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbcfa995750>",
		clk_sens=False,
		fillcolor=gold,
		label="644:AL",
		sens="['Clk_SYS', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Add_wr_jump']"];
	"Leaf_354:AL" -> "644:AL";
	"389:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb12c950>",
		fillcolor=firebrick,
		label="389:NS
Fifo_data_byte1 <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb12c950>]",
		style=filled,
		typ=NonblockingSubstitution];
	"389:NS" -> "Leaf_387:AL"	 [cond="[]",
		lineno=None];
	"459:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fbcfaeb4650>",
		fillcolor=turquoise,
		label="459:BL
Packet_number_add_tmp_dl1 <= 0;
Packet_number_add_tmp_dl2 <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfaeb4690>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7fbcfaeb4810>]",
		style=filled,
		typ=Block];
	"459:BL" -> "Leaf_457:AL"	 [cond="[]",
		lineno=None];
	"Leaf_514:AL" -> "566:AL";
	"Leaf_514:AL" -> "699:AL";
	"508:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbcfaea7610>",
		clk_sens=False,
		fillcolor=gold,
		label="508:AL",
		sens="['Clk_SYS', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Next_state_SYS']"];
	"Leaf_514:AL" -> "508:AL";
	"Leaf_448:AL"	 [def_var="['Packet_number_add_tmp']",
		label="Leaf_448:AL"];
	"453:NS" -> "Leaf_448:AL"	 [cond="[]",
		lineno=None];
	"622:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfaea2f10>",
		fillcolor=cadetblue,
		label="622:BS
Addr_freshed_ptr = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfaea2f10>]",
		style=filled,
		typ=BlockingSubstitution];
	"622:BS" -> "Leaf_620:AL"	 [cond="[]",
		lineno=None];
	"524:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfae80a10>",
		fillcolor=springgreen,
		label="524:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"524:IF" -> "526:IF"	 [cond="['Dout']",
		label="!(Dout[35])",
		lineno=524];
	"525:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae80a50>",
		fillcolor=cadetblue,
		label="525:BS
Next_state_SYS = SYS_wait_end;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae80a50>]",
		style=filled,
		typ=BlockingSubstitution];
	"524:IF" -> "525:BS"	 [cond="['Dout']",
		label="Dout[35]",
		lineno=524];
	"518:BS" -> "Leaf_514:AL"	 [cond="[]",
		lineno=None];
	"612:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfaea2810>",
		fillcolor=firebrick,
		label="612:NS
Add_rd <= Add_rd + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfaea2810>]",
		style=filled,
		typ=NonblockingSubstitution];
	"611:IF" -> "612:NS"	 [cond="['Current_state_SYS', 'SYS_read', 'Dout', 'Addr_freshed_ptr']",
		label="((Current_state_SYS == SYS_read) && !(Dout[35] && Addr_freshed_ptr))",
		lineno=611];
	"Leaf_608:AL"	 [def_var="['Add_rd']",
		label="Leaf_608:AL"];
	"Leaf_608:AL" -> "608:AL";
	"620:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbcfaea2cd0>",
		clk_sens=False,
		fillcolor=gold,
		label="620:AL",
		sens="[]",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Add_rd_pl1', 'Add_rd']"];
	"Leaf_608:AL" -> "620:AL";
	"614:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbcfaea2950>",
		clk_sens=False,
		fillcolor=gold,
		label="614:AL",
		sens="['Clk_SYS', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Add_rd']"];
	"Leaf_608:AL" -> "614:AL";
	"580:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbcfaeb2350>",
		clk_sens=False,
		fillcolor=gold,
		label="580:AL",
		sens="['Clk_SYS', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Add_rd', 'Add_wr_ungray']"];
	"Leaf_608:AL" -> "580:AL";
	"660:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbcfa991e10>",
		clk_sens=False,
		fillcolor=gold,
		label="660:AL",
		sens="['Clk_SYS', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Add_rd', 'Add_wr_ungray']"];
	"Leaf_608:AL" -> "660:AL";
	"627:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbcfae84310>",
		clk_sens=False,
		fillcolor=gold,
		label="627:AL",
		sens="['Reset', 'Clk_SYS']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Add_rd']"];
	"Leaf_608:AL" -> "627:AL";
	"234:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfae18bd0>",
		fillcolor=springgreen,
		label="234:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"236:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfae18ed0>",
		fillcolor=springgreen,
		label="236:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"234:IF" -> "236:IF"	 [cond="['Fifo_data_en']",
		label="!(Fifo_data_en)",
		lineno=234];
	"235:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae18c10>",
		fillcolor=cadetblue,
		label="235:BS
Next_state = State_byte0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae18c10>]",
		style=filled,
		typ=BlockingSubstitution];
	"234:IF" -> "235:BS"	 [cond="['Fifo_data_en']",
		label=Fifo_data_en,
		lineno=234];
	"516:CA" -> "517:IF"	 [cond="[]",
		lineno=None];
	"294:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfae34450>",
		fillcolor=springgreen,
		label="294:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"297:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fbcfae348d0>",
		fillcolor=turquoise,
		label="297:BL
Add_rd_ungray[9 - 1] = Add_rd_gray_dl1[9 - 1];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae34810>]",
		style=filled,
		typ=Block];
	"294:IF" -> "297:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=294];
	"295:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae34410>",
		fillcolor=cadetblue,
		label="295:BS
Add_rd_ungray = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae34410>]",
		style=filled,
		typ=BlockingSubstitution];
	"294:IF" -> "295:BS"	 [cond="['Reset']",
		label=Reset,
		lineno=294];
	"312:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfae37fd0>",
		fillcolor=springgreen,
		label="312:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"313:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb11c050>",
		fillcolor=firebrick,
		label="313:NS
Full <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb11c050>]",
		style=filled,
		typ=NonblockingSubstitution];
	"312:IF" -> "313:NS"	 [cond="['Add_wr_pluse', 'Add_rd_ungray']",
		label="(Add_wr_pluse == Add_rd_ungray)",
		lineno=312];
	"315:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb11c1d0>",
		fillcolor=firebrick,
		label="315:NS
Full <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb11c1d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"312:IF" -> "315:NS"	 [cond="['Add_wr_pluse', 'Add_rd_ungray']",
		label="!((Add_wr_pluse == Add_rd_ungray))",
		lineno=312];
	"Leaf_709:AL"	 [def_var="['Rx_mac_sop', 'Rx_mac_sop_tmp_dl1']",
		label="Leaf_709:AL"];
	"711:BL" -> "Leaf_709:AL"	 [cond="[]",
		lineno=None];
	"537:CA" -> "538:IF"	 [cond="[]",
		lineno=None];
	"422:IF" -> "424:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=422];
	"423:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfae924d0>",
		fillcolor=firebrick,
		label="423:NS
Wr_en_ptr <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfae924d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"422:IF" -> "423:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=422];
	"442:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fbcfaea0450>",
		fillcolor=turquoise,
		label="442:BL
Wr_en <= Wr_en_tmp && Wr_en_ptr;
Din <= { Din_tmp[35:32], Din_tmp_reg[31:0] };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfaea0490>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7fbcfaea0890>]",
		style=filled,
		typ=Block];
	"442:BL" -> "Leaf_430:AL"	 [cond="[]",
		lineno=None];
	"202:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbcfb252c10>",
		clk_sens=True,
		fillcolor=gold,
		label="202:AL",
		sens="['Clk_MAC', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Next_state']"];
	"Leaf_208:AL" -> "202:AL";
	"310:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfae37c50>",
		fillcolor=springgreen,
		label="310:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"310:IF" -> "312:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=310];
	"311:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfae37c90>",
		fillcolor=firebrick,
		label="311:NS
Full <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfae37c90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"310:IF" -> "311:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=310];
	"236:IF" -> "237:BS"	 [cond="['Fifo_data_err']",
		label=Fifo_data_err,
		lineno=236];
	"238:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfae191d0>",
		fillcolor=springgreen,
		label="238:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"236:IF" -> "238:IF"	 [cond="['Fifo_data_err']",
		label="!(Fifo_data_err)",
		lineno=236];
	"261:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbcfae0c4d0>",
		fillcolor=lightcyan,
		label="261:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"262:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae0c650>",
		fillcolor=cadetblue,
		label="262:BS
Next_state = State_idle;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae0c650>]",
		style=filled,
		typ=BlockingSubstitution];
	"261:CA" -> "262:BS"	 [cond="[]",
		lineno=None];
	"393:AL" -> "394:CS"	 [cond="[]",
		lineno=None];
	"654:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fbcfa991450>",
		fillcolor=turquoise,
		label="654:BL
Add_wr_ungray[9 - 1] = Add_wr_gray_dl1[9 - 1];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfa991390>]",
		style=filled,
		typ=Block];
	"Leaf_650:AL"	 [def_var="['Add_wr_ungray']",
		label="Leaf_650:AL"];
	"654:BL" -> "Leaf_650:AL"	 [cond="[]",
		lineno=None];
	"262:BS" -> "Leaf_208:AL"	 [cond="[]",
		lineno=None];
	"576:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfae7ccd0>",
		fillcolor=firebrick,
		label="576:NS
Packet_number_inFF <= Packet_number_inFF + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfae7ccd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"576:NS" -> "Leaf_572:AL"	 [cond="[]",
		lineno=None];
	"318:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfb11c3d0>",
		fillcolor=springgreen,
		label="318:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"318:IF" -> "320:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=318];
	"319:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb11c410>",
		fillcolor=firebrick,
		label="319:NS
Almost_full <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb11c410>]",
		style=filled,
		typ=NonblockingSubstitution];
	"318:IF" -> "319:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=318];
	"270:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfae0ccd0>",
		fillcolor=firebrick,
		label="270:NS
Add_wr_reg <= Add_wr;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfae0ccd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_266:AL"	 [def_var="['Add_wr_reg']",
		label="Leaf_266:AL"];
	"270:NS" -> "Leaf_266:AL"	 [cond="[]",
		lineno=None];
	"277:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfae0cf50>",
		fillcolor=firebrick,
		label="277:NS
Add_wr_gray <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfae0cf50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"277:NS" -> "Leaf_275:AL"	 [cond="[]",
		lineno=None];
	"520:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae805d0>",
		fillcolor=cadetblue,
		label="520:BS
Next_state_SYS = FF_emtpy_err;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae805d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"520:BS" -> "Leaf_514:AL"	 [cond="[]",
		lineno=None];
	"Leaf_415:AL"	 [def_var="['Din_tmp_reg']",
		label="Leaf_415:AL"];
	"Leaf_415:AL" -> "430:AL";
	"268:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfae0c990>",
		fillcolor=firebrick,
		label="268:NS
Add_wr_reg <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfae0c990>]",
		style=filled,
		typ=NonblockingSubstitution];
	"268:NS" -> "Leaf_266:AL"	 [cond="[]",
		lineno=None];
	"Leaf_266:AL" -> "332:AL";
	"383:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb12c210>",
		fillcolor=firebrick,
		label="383:NS
Fifo_data_byte2 <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb12c210>]",
		style=filled,
		typ=NonblockingSubstitution];
	"383:NS" -> "Leaf_381:AL"	 [cond="[]",
		lineno=None];
	"398:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfb1266d0>",
		fillcolor=cadetblue,
		label="398:BS
Din_tmp = { 4'b1001, Fifo_data_byte3, 24'h0 };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfb1266d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"398:BS" -> "Leaf_393:AL"	 [cond="[]",
		lineno=None];
	"682:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfa9a1110>",
		fillcolor=springgreen,
		label="682:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"681:AL" -> "682:IF"	 [cond="[]",
		lineno=None];
	"539:BS" -> "Leaf_514:AL"	 [cond="[]",
		lineno=None];
	"305:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fbcfae37910>",
		def_var="['Add_wr_pluse2']",
		fillcolor=deepskyblue,
		label="305:AS
Add_wr_pluse2 = Add_wr + 2;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Add_wr']"];
	"305:AS" -> "317:AL";
	"211:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfb24f650>",
		fillcolor=springgreen,
		label="211:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"211:IF" -> "212:BS"	 [cond="['Fifo_data_en']",
		label=Fifo_data_en,
		lineno=211];
	"214:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfb24f850>",
		fillcolor=cadetblue,
		label="214:BS
Next_state = Current_state;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfb24f850>]",
		style=filled,
		typ=BlockingSubstitution];
	"211:IF" -> "214:BS"	 [cond="['Fifo_data_en']",
		label="!(Fifo_data_en)",
		lineno=211];
	"612:NS" -> "Leaf_608:AL"	 [cond="[]",
		lineno=None];
	"629:NS" -> "Leaf_627:AL"	 [cond="[]",
		lineno=None];
	"388:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfb12c910>",
		fillcolor=springgreen,
		label="388:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"388:IF" -> "389:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=388];
	"390:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfb12cc90>",
		fillcolor=springgreen,
		label="390:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"388:IF" -> "390:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=388];
	"304:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fbcfae37710>",
		def_var="['Add_wr_pluse3']",
		fillcolor=deepskyblue,
		label="304:AS
Add_wr_pluse3 = Add_wr + 3;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Add_wr']"];
	"304:AS" -> "317:AL";
	"255:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbcfae19ed0>",
		fillcolor=lightcyan,
		label="255:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"255:CA" -> "256:BS"	 [cond="[]",
		lineno=None];
	"Leaf_421:AL"	 [def_var="['Wr_en_ptr']",
		label="Leaf_421:AL"];
	"Leaf_421:AL" -> "430:AL";
	"709:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbcfa9ae790>",
		clk_sens=False,
		fillcolor=gold,
		label="709:AL",
		sens="['Clk_SYS', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Rx_mac_sop_tmp', 'Rx_mac_sop_tmp_dl1']"];
	"709:AL" -> "710:IF"	 [cond="[]",
		lineno=None];
	"Leaf_472:AL"	 [def_var="['Packet_number_add']",
		label="Leaf_472:AL"];
	"478:NS" -> "Leaf_472:AL"	 [cond="[]",
		lineno=None];
	"217:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfb24fb10>",
		fillcolor=cadetblue,
		label="217:BS
Next_state = State_byte2;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfb24fb10>]",
		style=filled,
		typ=BlockingSubstitution];
	"217:BS" -> "Leaf_208:AL"	 [cond="[]",
		lineno=None];
	"Leaf_553:AL" -> "564:AS";
	"553:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbcfae882d0>",
		clk_sens=False,
		fillcolor=gold,
		label="553:AL",
		sens="['Clk_SYS', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Packet_number_add_dl1', 'Packet_number_add']"];
	"Leaf_553:AL" -> "553:AL";
	"652:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfa995dd0>",
		fillcolor=cadetblue,
		label="652:BS
Add_wr_ungray = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfa995dd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"651:IF" -> "652:BS"	 [cond="['Reset']",
		label=Reset,
		lineno=651];
	"653:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfa995fd0>",
		fillcolor=springgreen,
		label="653:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"651:IF" -> "653:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=651];
	"610:NS" -> "Leaf_608:AL"	 [cond="[]",
		lineno=None];
	"458:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfaeb47d0>",
		fillcolor=springgreen,
		label="458:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"457:AL" -> "458:IF"	 [cond="[]",
		lineno=None];
	"289:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfae17ed0>",
		fillcolor=firebrick,
		label="289:NS
Add_rd_gray_dl1 <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfae17ed0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"289:NS" -> "Leaf_287:AL"	 [cond="[]",
		lineno=None];
	"423:NS" -> "Leaf_421:AL"	 [cond="[]",
		lineno=None];
	"288:IF" -> "291:NS"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=288];
	"288:IF" -> "289:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=288];
	"244:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae194d0>",
		fillcolor=cadetblue,
		label="244:BS
Next_state = State_byte3;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae194d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"244:BS" -> "Leaf_208:AL"	 [cond="[]",
		lineno=None];
	"230:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae18950>",
		fillcolor=cadetblue,
		label="230:BS
Next_state = State_be2;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae18950>]",
		style=filled,
		typ=BlockingSubstitution];
	"230:BS" -> "Leaf_208:AL"	 [cond="[]",
		lineno=None];
	"Leaf_650:AL" -> "580:AL";
	"Leaf_650:AL" -> "660:AL";
	"584:NS" -> "Leaf_580:AL"	 [cond="[]",
		lineno=None];
	"293:AL" -> "294:IF"	 [cond="[]",
		lineno=None];
	"311:NS" -> "Leaf_309:AL"	 [cond="[]",
		lineno=None];
	"309:AL" -> "310:IF"	 [cond="[]",
		lineno=None];
	"Leaf_393:AL" -> "415:AL";
	"Leaf_393:AL" -> "430:AL";
	"209:CS" -> "259:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=209];
	"209:CS" -> "257:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=209];
	"209:CS" -> "215:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=209];
	"209:CS" -> "261:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=209];
	"209:CS" -> "255:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=209];
	"251:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbcfae19550>",
		fillcolor=lightcyan,
		label="251:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"209:CS" -> "251:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=209];
	"233:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbcfae183d0>",
		fillcolor=lightcyan,
		label="233:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"209:CS" -> "233:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=209];
	"242:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbcfae18d50>",
		fillcolor=lightcyan,
		label="242:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"209:CS" -> "242:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=209];
	"253:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbcfae19c90>",
		fillcolor=lightcyan,
		label="253:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"209:CS" -> "253:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=209];
	"210:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbcfb24f450>",
		fillcolor=lightcyan,
		label="210:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"209:CS" -> "210:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=209];
	"224:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbcfb24fb50>",
		fillcolor=lightcyan,
		label="224:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"209:CS" -> "224:CA"	 [cond="['Current_state']",
		label=Current_state,
		lineno=209];
	"Leaf_598:AL"	 [def_var="['Rx_mac_ra']",
		label="Leaf_598:AL"];
	"Leaf_598:AL" -> "514:AL";
	"427:NS" -> "Leaf_421:AL"	 [cond="[]",
		lineno=None];
	"458:IF" -> "459:BL"	 [cond="['Reset']",
		label=Reset,
		lineno=458];
	"464:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fbcfaeb4a10>",
		fillcolor=turquoise,
		label="464:BL
Packet_number_add_tmp_dl1 <= Packet_number_add_tmp;
Packet_number_add_tmp_dl2 <= Packet_number_add_tmp_dl1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfaeb4a50>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7fbcfaeb4c10>]",
		style=filled,
		typ=Block];
	"458:IF" -> "464:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=458];
	"543:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfae7ae10>",
		fillcolor=springgreen,
		label="543:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"542:CA" -> "543:IF"	 [cond="[]",
		lineno=None];
	"319:NS" -> "Leaf_317:AL"	 [cond="[]",
		lineno=None];
	"450:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfaea0a90>",
		fillcolor=firebrick,
		label="450:NS
Packet_number_add_tmp <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfaea0a90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"450:NS" -> "Leaf_448:AL"	 [cond="[]",
		lineno=None];
	"251:CA" -> "252:BS"	 [cond="[]",
		lineno=None];
	"238:IF" -> "241:BS"	 [cond="['Fifo_data_end']",
		label="!(Fifo_data_end)",
		lineno=238];
	"238:IF" -> "239:BS"	 [cond="['Fifo_data_end']",
		label=Fifo_data_end,
		lineno=238];
	"Leaf_293:AL"	 [def_var="['Add_rd_ungray']",
		label="Leaf_293:AL"];
	"297:BL" -> "Leaf_293:AL"	 [cond="[]",
		lineno=None];
	"676:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fbcfa9b3950>",
		def_var="['Rx_mac_data']",
		fillcolor=deepskyblue,
		label="676:AS
Rx_mac_data = Dout_dl1[31:0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Dout_dl1']"];
	"600:NS" -> "Leaf_598:AL"	 [cond="[]",
		lineno=None];
	"512:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfaea7990>",
		fillcolor=firebrick,
		label="512:NS
Current_state_SYS <= Next_state_SYS;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfaea7990>]",
		style=filled,
		typ=NonblockingSubstitution];
	"512:NS" -> "Leaf_508:AL"	 [cond="[]",
		lineno=None];
	"464:BL" -> "Leaf_457:AL"	 [cond="[]",
		lineno=None];
	"Leaf_381:AL" -> "393:AL";
	"425:NS" -> "Leaf_421:AL"	 [cond="[]",
		lineno=None];
	"417:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb123f90>",
		fillcolor=firebrick,
		label="417:NS
Din_tmp_reg <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb123f90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"417:NS" -> "Leaf_415:AL"	 [cond="[]",
		lineno=None];
	"235:BS" -> "Leaf_208:AL"	 [cond="[]",
		lineno=None];
	"Leaf_348:AL"	 [def_var="['Add_wr_jump_tmp_pl1']",
		label="Leaf_348:AL"];
	"354:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbcfb124690>",
		clk_sens=True,
		fillcolor=gold,
		label="354:AL",
		sens="['Clk_MAC', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'State_err_end', 'Current_state', 'Add_wr_jump_tmp_pl1']"];
	"Leaf_348:AL" -> "354:AL";
	"582:NS" -> "Leaf_580:AL"	 [cond="[]",
		lineno=None];
	"699:AL" -> "700:IF"	 [cond="[]",
		lineno=None];
	"378:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfb130dd0>",
		fillcolor=springgreen,
		label="378:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"379:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb130f10>",
		fillcolor=firebrick,
		label="379:NS
Fifo_data_byte3 <= Fifo_data_dl1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb130f10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"378:IF" -> "379:NS"	 [cond="['Current_state', 'State_byte3', 'Fifo_data_en_dl1']",
		label="((Current_state == State_byte3) && Fifo_data_en_dl1)",
		lineno=378];
	"396:BS" -> "Leaf_393:AL"	 [cond="[]",
		lineno=None];
	"336:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb11d4d0>",
		fillcolor=firebrick,
		label="336:NS
Add_wr <= Add_wr_reg;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb11d4d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_332:AL"	 [def_var="['Add_wr']",
		label="Leaf_332:AL"];
	"336:NS" -> "Leaf_332:AL"	 [cond="[]",
		lineno=None];
	"474:NS" -> "Leaf_472:AL"	 [cond="[]",
		lineno=None];
	"365:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb130050>",
		fillcolor=firebrick,
		label="365:NS
Fifo_data_en_dl1 <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb130050>]",
		style=filled,
		typ=NonblockingSubstitution];
	"365:NS" -> "Leaf_363:AL"	 [cond="[]",
		lineno=None];
	"510:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfaea7790>",
		fillcolor=firebrick,
		label="510:NS
Current_state_SYS <= SYS_idle;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfaea7790>]",
		style=filled,
		typ=NonblockingSubstitution];
	"510:NS" -> "Leaf_508:AL"	 [cond="[]",
		lineno=None];
	"400:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfb126a10>",
		fillcolor=cadetblue,
		label="400:BS
Din_tmp = { 4'b1010, Fifo_data_byte3, Fifo_data_byte2, 16'h0 };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfb126a10>]",
		style=filled,
		typ=BlockingSubstitution];
	"400:BS" -> "Leaf_393:AL"	 [cond="[]",
		lineno=None];
	"313:NS" -> "Leaf_309:AL"	 [cond="[]",
		lineno=None];
	"223:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae182d0>",
		fillcolor=cadetblue,
		label="223:BS
Next_state = Current_state;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae182d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"220:IF" -> "223:BS"	 [cond="['Fifo_data_end']",
		label="!(Fifo_data_end)",
		lineno=220];
	"221:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae18110>",
		fillcolor=cadetblue,
		label="221:BS
Next_state = State_be1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae18110>]",
		style=filled,
		typ=BlockingSubstitution];
	"220:IF" -> "221:BS"	 [cond="['Fifo_data_end']",
		label=Fifo_data_end,
		lineno=220];
	"356:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb1247d0>",
		fillcolor=firebrick,
		label="356:NS
Add_wr_jump <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb1247d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"356:NS" -> "Leaf_354:AL"	 [cond="[]",
		lineno=None];
	"228:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae18690>",
		fillcolor=cadetblue,
		label="228:BS
Next_state = State_err_end;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae18690>]",
		style=filled,
		typ=BlockingSubstitution];
	"228:BS" -> "Leaf_208:AL"	 [cond="[]",
		lineno=None];
	"436:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfaea0210>",
		fillcolor=springgreen,
		label="436:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"431:IF" -> "436:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=431];
	"432:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fbcfae92c50>",
		fillcolor=turquoise,
		label="432:BL
Wr_en <= 0;
Din <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfae92c90>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7fbcfae92dd0>]",
		style=filled,
		typ=Block];
	"431:IF" -> "432:BL"	 [cond="['Reset']",
		label=Reset,
		lineno=431];
	"275:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbcfae0ce10>",
		clk_sens=True,
		fillcolor=gold,
		label="275:AL",
		sens="['Reset', 'Clk_MAC']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Add_wr']"];
	"276:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfae0cf90>",
		fillcolor=springgreen,
		label="276:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"275:AL" -> "276:IF"	 [cond="[]",
		lineno=None];
	"616:NS" -> "Leaf_614:AL"	 [cond="[]",
		lineno=None];
	"338:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb11d890>",
		fillcolor=firebrick,
		label="338:NS
Add_wr <= Add_wr + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb11d890>]",
		style=filled,
		typ=NonblockingSubstitution];
	"338:NS" -> "Leaf_332:AL"	 [cond="[]",
		lineno=None];
	"367:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb130250>",
		fillcolor=firebrick,
		label="367:NS
Fifo_data_en_dl1 <= Fifo_data_en;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb130250>]",
		style=filled,
		typ=NonblockingSubstitution];
	"367:NS" -> "Leaf_363:AL"	 [cond="[]",
		lineno=None];
	"Leaf_670:AL"	 [def_var="['Dout_dl1']",
		label="Leaf_670:AL"];
	"674:NS" -> "Leaf_670:AL"	 [cond="[]",
		lineno=None];
	"Leaf_681:AL" -> "691:AL";
	"233:CA" -> "234:IF"	 [cond="[]",
		lineno=None];
	"Leaf_202:AL" -> "381:AL";
	"Leaf_202:AL" -> "375:AL";
	"Leaf_202:AL" -> "407:AL";
	"Leaf_202:AL" -> "208:AL";
	"Leaf_202:AL" -> "421:AL";
	"Leaf_202:AL" -> "393:AL";
	"Leaf_202:AL" -> "332:AL";
	"448:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbcfaea0910>",
		clk_sens=True,
		fillcolor=gold,
		label="448:AL",
		sens="['Clk_MAC', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Current_state', 'State_be2', 'State_be3', 'State_be0', 'State_be1']"];
	"Leaf_202:AL" -> "448:AL";
	"340:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbcfb11d910>",
		clk_sens=True,
		fillcolor=gold,
		label="340:AL",
		sens="['Clk_MAC', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'State_err_end', 'Current_state']"];
	"Leaf_202:AL" -> "340:AL";
	"266:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbcfae0c850>",
		clk_sens=True,
		fillcolor=gold,
		label="266:AL",
		sens="['Clk_MAC', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'State_idle', 'Current_state', 'Add_wr']"];
	"Leaf_202:AL" -> "266:AL";
	"Leaf_202:AL" -> "354:AL";
	"Leaf_202:AL" -> "387:AL";
	"258:BS" -> "Leaf_208:AL"	 [cond="[]",
		lineno=None];
	"Leaf_709:AL" -> "709:AL";
	"Leaf_572:AL" -> "598:AL";
	"Leaf_572:AL" -> "572:AL";
	"250:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae19c50>",
		fillcolor=cadetblue,
		label="250:BS
Next_state = Current_state;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae19c50>]",
		style=filled,
		typ=BlockingSubstitution];
	"250:BS" -> "Leaf_208:AL"	 [cond="[]",
		lineno=None];
	"509:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfaea7850>",
		fillcolor=springgreen,
		label="509:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"509:IF" -> "512:NS"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=509];
	"509:IF" -> "510:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=509];
	"Leaf_670:AL" -> "677:AS";
	"Leaf_670:AL" -> "676:AS";
	"678:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fbcfa9b3d50>",
		def_var="['Rx_mac_eop']",
		fillcolor=deepskyblue,
		label="678:AS
Rx_mac_eop = Dout_dl1[35];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Dout_dl1']"];
	"Leaf_670:AL" -> "678:AS";
	"455:NS" -> "Leaf_448:AL"	 [cond="[]",
		lineno=None];
	"223:BS" -> "Leaf_208:AL"	 [cond="[]",
		lineno=None];
	"334:NS" -> "Leaf_332:AL"	 [cond="[]",
		lineno=None];
	"243:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfae19490>",
		fillcolor=springgreen,
		label="243:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"242:CA" -> "243:IF"	 [cond="[]",
		lineno=None];
	"348:AL" -> "349:IF"	 [cond="[]",
		lineno=None];
	"604:NS" -> "Leaf_598:AL"	 [cond="[]",
		lineno=None];
	"548:BS" -> "Leaf_514:AL"	 [cond="[]",
		lineno=None];
	"621:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfaea2fd0>",
		fillcolor=springgreen,
		label="621:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"620:AL" -> "621:IF"	 [cond="[]",
		lineno=None];
	"269:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfae0cb90>",
		fillcolor=springgreen,
		label="269:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"269:IF" -> "270:NS"	 [cond="['Current_state', 'State_idle']",
		label="(Current_state == State_idle)",
		lineno=269];
	"216:IF" -> "218:IF"	 [cond="['Fifo_data_en']",
		label="!(Fifo_data_en)",
		lineno=216];
	"216:IF" -> "217:BS"	 [cond="['Fifo_data_en']",
		label=Fifo_data_en,
		lineno=216];
	"Leaf_430:AL" -> "332:AL";
	"529:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae7a090>",
		fillcolor=cadetblue,
		label="529:BS
Next_state_SYS = FF_emtpy_err;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae7a090>]",
		style=filled,
		typ=BlockingSubstitution];
	"528:IF" -> "529:BS"	 [cond="['Empty']",
		label=Empty,
		lineno=528];
	"531:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae7a290>",
		fillcolor=cadetblue,
		label="531:BS
Next_state_SYS = Current_state_SYS;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae7a290>]",
		style=filled,
		typ=BlockingSubstitution];
	"528:IF" -> "531:BS"	 [cond="['Empty']",
		label="!(Empty)",
		lineno=528];
	"315:NS" -> "Leaf_309:AL"	 [cond="[]",
		lineno=None];
	"577:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfaeb2150>",
		fillcolor=springgreen,
		label="577:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"577:IF" -> "578:NS"	 [cond="['Packet_number_add_edge', 'Packet_number_sub', 'Packet_number_inFF']",
		label="(!Packet_number_add_edge && Packet_number_sub && (Packet_number_inFF != 0))",
		lineno=577];
	"621:IF" -> "624:BS"	 [cond="['Add_rd_pl1', 'Add_rd']",
		label="!((Add_rd_pl1 == Add_rd))",
		lineno=621];
	"621:IF" -> "622:BS"	 [cond="['Add_rd_pl1', 'Add_rd']",
		label="(Add_rd_pl1 == Add_rd)",
		lineno=621];
	"376:IF" -> "377:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=376];
	"376:IF" -> "378:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=376];
	"476:NS" -> "Leaf_472:AL"	 [cond="[]",
		lineno=None];
	"Leaf_332:AL" -> "302:AS";
	"Leaf_332:AL" -> "305:AS";
	"Leaf_332:AL" -> "304:AS";
	"Leaf_332:AL" -> "275:AL";
	"Leaf_332:AL" -> "332:AL";
	"303:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fbcfae37510>",
		def_var="['Add_wr_pluse4']",
		fillcolor=deepskyblue,
		label="303:AS
Add_wr_pluse4 = Add_wr + 4;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Add_wr']"];
	"Leaf_332:AL" -> "303:AS";
	"Leaf_332:AL" -> "266:AL";
	"560:BL" -> "Leaf_553:AL"	 [cond="[]",
		lineno=None];
	"Leaf_638:AL"	 [def_var="['Add_wr_gray_dl1']",
		label="Leaf_638:AL"];
	"Leaf_638:AL" -> "650:AL";
	"382:IF" -> "383:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=382];
	"384:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfb12c550>",
		fillcolor=springgreen,
		label="384:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"382:IF" -> "384:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=382];
	"716:BL" -> "Leaf_709:AL"	 [cond="[]",
		lineno=None];
	"602:NS" -> "Leaf_598:AL"	 [cond="[]",
		lineno=None];
	"575:IF" -> "576:NS"	 [cond="['Packet_number_add_edge', 'Packet_number_sub']",
		label="(Packet_number_add_edge && !Packet_number_sub)",
		lineno=575];
	"575:IF" -> "577:IF"	 [cond="['Packet_number_add_edge', 'Packet_number_sub']",
		label="!((Packet_number_add_edge && !Packet_number_sub))",
		lineno=575];
	"267:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfae0c950>",
		fillcolor=springgreen,
		label="267:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"267:IF" -> "268:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=267];
	"267:IF" -> "269:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=267];
	"219:BS" -> "Leaf_208:AL"	 [cond="[]",
		lineno=None];
	"672:NS" -> "Leaf_670:AL"	 [cond="[]",
		lineno=None];
	"370:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfb130650>",
		fillcolor=springgreen,
		label="370:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"373:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb130750>",
		fillcolor=firebrick,
		label="373:NS
Fifo_data_dl1 <= Fifo_data;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb130750>]",
		style=filled,
		typ=NonblockingSubstitution];
	"370:IF" -> "373:NS"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=370];
	"371:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb130590>",
		fillcolor=firebrick,
		label="371:NS
Fifo_data_dl1 <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb130590>]",
		style=filled,
		typ=NonblockingSubstitution];
	"370:IF" -> "371:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=370];
	"534:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae7a350>",
		fillcolor=cadetblue,
		label="534:BS
Next_state_SYS = SYS_read;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae7a350>]",
		style=filled,
		typ=BlockingSubstitution];
	"534:BS" -> "Leaf_514:AL"	 [cond="[]",
		lineno=None];
	"664:NS" -> "Leaf_660:AL"	 [cond="[]",
		lineno=None];
	"214:BS" -> "Leaf_208:AL"	 [cond="[]",
		lineno=None];
	"Leaf_699:AL"	 [def_var="['Rx_mac_sop_tmp']",
		label="Leaf_699:AL"];
	"705:NS" -> "Leaf_699:AL"	 [cond="[]",
		lineno=None];
	"358:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb124b50>",
		fillcolor=firebrick,
		label="358:NS
Add_wr_jump <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb124b50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"358:NS" -> "Leaf_354:AL"	 [cond="[]",
		lineno=None];
	"317:AL" -> "318:IF"	 [cond="[]",
		lineno=None];
	"614:AL" -> "615:IF"	 [cond="[]",
		lineno=None];
	"Leaf_699:AL" -> "709:AL";
	"640:NS" -> "Leaf_638:AL"	 [cond="[]",
		lineno=None];
	"Leaf_644:AL"	 [def_var="['Add_wr_jump_rd_pl1']",
		label="Leaf_644:AL"];
	"Leaf_644:AL" -> "650:AL";
	"253:CA" -> "254:BS"	 [cond="[]",
		lineno=None];
	"332:AL" -> "333:IF"	 [cond="[]",
		lineno=None];
	"519:IF" -> "522:BS"	 [cond="['Rx_mac_rd', 'Rx_mac_ra', 'Empty']",
		label="!((Rx_mac_rd && Rx_mac_ra && Empty))",
		lineno=519];
	"519:IF" -> "520:BS"	 [cond="['Rx_mac_rd', 'Rx_mac_ra', 'Empty']",
		label="(Rx_mac_rd && Rx_mac_ra && Empty)",
		lineno=519];
	"543:IF" -> "544:BS"	 [cond="['Rx_mac_rd']",
		label="(!Rx_mac_rd)",
		lineno=543];
	"543:IF" -> "546:BS"	 [cond="['Rx_mac_rd']",
		label="!((!Rx_mac_rd))",
		lineno=543];
	"243:IF" -> "245:IF"	 [cond="['Fifo_data_en']",
		label="!(Fifo_data_en)",
		lineno=243];
	"243:IF" -> "244:BS"	 [cond="['Fifo_data_en']",
		label=Fifo_data_en,
		lineno=243];
	"568:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae7c310>",
		fillcolor=cadetblue,
		label="568:BS
Packet_number_sub = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae7c310>]",
		style=filled,
		typ=BlockingSubstitution];
	"567:IF" -> "568:BS"	 [cond="['Current_state_SYS', 'SYS_read', 'Next_state_SYS', 'SYS_wait_end']",
		label="((Current_state_SYS == SYS_read) && (Next_state_SYS == SYS_wait_end))",
		lineno=567];
	"570:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae7c4d0>",
		fillcolor=cadetblue,
		label="570:BS
Packet_number_sub = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfae7c4d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"567:IF" -> "570:BS"	 [cond="['Current_state_SYS', 'SYS_read', 'Next_state_SYS', 'SYS_wait_end']",
		label="!(((Current_state_SYS == SYS_read) && (Next_state_SYS == SYS_wait_end)))",
		lineno=567];
	"397:CA" -> "398:BS"	 [cond="[]",
		lineno=None];
	"419:NS" -> "Leaf_415:AL"	 [cond="[]",
		lineno=None];
	"586:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbcfaeb2cd0>",
		clk_sens=False,
		fillcolor=gold,
		label="586:AL",
		sens="['Clk_SYS', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Rx_Lwmark', 'Rx_Hwmark']"];
	"586:AL" -> "587:IF"	 [cond="[]",
		lineno=None];
	"341:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfb11da50>",
		fillcolor=springgreen,
		label="341:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"341:IF" -> "342:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=341];
	"343:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfb11df10>",
		fillcolor=springgreen,
		label="343:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"341:IF" -> "343:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=341];
	"642:NS" -> "Leaf_638:AL"	 [cond="[]",
		lineno=None];
	"670:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbcfa9b3550>",
		clk_sens=False,
		fillcolor=gold,
		label="670:AL",
		sens="['Clk_SYS', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Dout']"];
	"670:AL" -> "671:IF"	 [cond="[]",
		lineno=None];
	"352:NS" -> "Leaf_348:AL"	 [cond="[]",
		lineno=None];
	"335:IF" -> "336:NS"	 [cond="['Current_state', 'State_err_end']",
		label="(Current_state == State_err_end)",
		lineno=335];
	"337:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfb11d6d0>",
		fillcolor=springgreen,
		label="337:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"335:IF" -> "337:IF"	 [cond="['Current_state', 'State_err_end']",
		label="!((Current_state == State_err_end))",
		lineno=335];
	"523:CA" -> "524:IF"	 [cond="[]",
		lineno=None];
	"350:NS" -> "Leaf_348:AL"	 [cond="[]",
		lineno=None];
	"329:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fbcfb11cc90>",
		def_var="['Fifo_full']",
		fillcolor=deepskyblue,
		label="329:AS
Fifo_full = Almost_full;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Almost_full']"];
	"Leaf_317:AL" -> "329:AS";
	"360:NS" -> "Leaf_354:AL"	 [cond="[]",
		lineno=None];
	"553:AL" -> "554:IF"	 [cond="[]",
		lineno=None];
	"666:NS" -> "Leaf_660:AL"	 [cond="[]",
		lineno=None];
	"Leaf_472:AL" -> "553:AL";
	"644:AL" -> "645:IF"	 [cond="[]",
		lineno=None];
	"631:BL" -> "Leaf_627:AL"	 [cond="[]",
		lineno=None];
	"703:NS" -> "Leaf_699:AL"	 [cond="[]",
		lineno=None];
	"Leaf_293:AL" -> "309:AL";
	"Leaf_293:AL" -> "317:AL";
	"580:AL" -> "581:IF"	 [cond="[]",
		lineno=None];
	"588:BL" -> "Leaf_586:AL"	 [cond="[]",
		lineno=None];
	"260:BS" -> "Leaf_208:AL"	 [cond="[]",
		lineno=None];
	"449:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfaea0a50>",
		fillcolor=springgreen,
		label="449:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"448:AL" -> "449:IF"	 [cond="[]",
		lineno=None];
	"411:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfb123ad0>",
		fillcolor=cadetblue,
		label="411:BS
Wr_en_tmp = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbcfb123ad0>]",
		style=filled,
		typ=BlockingSubstitution];
	"411:BS" -> "Leaf_407:AL"	 [cond="[]",
		lineno=None];
	"276:IF" -> "279:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=276];
	"276:IF" -> "277:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=276];
	"529:BS" -> "Leaf_514:AL"	 [cond="[]",
		lineno=None];
	"416:IF" -> "418:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=416];
	"416:IF" -> "417:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=416];
	"Leaf_586:AL" -> "598:AL";
	"340:AL" -> "341:IF"	 [cond="[]",
		lineno=None];
	"449:IF" -> "451:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=449];
	"449:IF" -> "450:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=449];
	"384:IF" -> "385:NS"	 [cond="['Current_state', 'State_byte2', 'Fifo_data_en_dl1']",
		label="((Current_state == State_byte2) && Fifo_data_en_dl1)",
		lineno=384];
	"364:IF" -> "365:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=364];
	"364:IF" -> "367:NS"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=364];
	"533:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfae7a410>",
		fillcolor=springgreen,
		label="533:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"533:IF" -> "536:BS"	 [cond="['Rx_mac_rd']",
		label="!(Rx_mac_rd)",
		lineno=533];
	"533:IF" -> "534:BS"	 [cond="['Rx_mac_rd']",
		label=Rx_mac_rd,
		lineno=533];
	"337:IF" -> "338:NS"	 [cond="['Wr_en', 'Full']",
		label="(Wr_en && !Full)",
		lineno=337];
	"508:AL" -> "509:IF"	 [cond="[]",
		lineno=None];
	"648:NS" -> "Leaf_644:AL"	 [cond="[]",
		lineno=None];
	"568:BS" -> "Leaf_566:AL"	 [cond="[]",
		lineno=None];
	"652:BS" -> "Leaf_650:AL"	 [cond="[]",
		lineno=None];
	"210:CA" -> "211:IF"	 [cond="[]",
		lineno=None];
	"221:BS" -> "Leaf_208:AL"	 [cond="[]",
		lineno=None];
	"660:AL" -> "661:IF"	 [cond="[]",
		lineno=None];
	"357:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfb124b10>",
		fillcolor=springgreen,
		label="357:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"357:IF" -> "359:IF"	 [cond="['Current_state', 'State_err_end']",
		label="!((Current_state == State_err_end))",
		lineno=357];
	"357:IF" -> "358:NS"	 [cond="['Current_state', 'State_err_end']",
		label="(Current_state == State_err_end)",
		lineno=357];
	"229:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfae18910>",
		fillcolor=springgreen,
		label="229:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"229:IF" -> "232:BS"	 [cond="['Fifo_data_end']",
		label="!(Fifo_data_end)",
		lineno=229];
	"229:IF" -> "230:BS"	 [cond="['Fifo_data_end']",
		label=Fifo_data_end,
		lineno=229];
	"472:AL" -> "473:IF"	 [cond="[]",
		lineno=None];
	"653:IF" -> "654:BL"	 [cond="['Add_wr_jump_rd_pl1']",
		label="(!Add_wr_jump_rd_pl1)",
		lineno=653];
	"525:BS" -> "Leaf_514:AL"	 [cond="[]",
		lineno=None];
	"627:AL" -> "628:IF"	 [cond="[]",
		lineno=None];
	"355:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfb124790>",
		fillcolor=springgreen,
		label="355:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"355:IF" -> "356:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=355];
	"355:IF" -> "357:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=355];
	"227:IF" -> "228:BS"	 [cond="['Fifo_data_err']",
		label=Fifo_data_err,
		lineno=227];
	"227:IF" -> "229:IF"	 [cond="['Fifo_data_err']",
		label="!(Fifo_data_err)",
		lineno=227];
	"303:AS" -> "317:AL";
	"646:NS" -> "Leaf_644:AL"	 [cond="[]",
		lineno=None];
	"373:NS" -> "Leaf_369:AL"	 [cond="[]",
		lineno=None];
	"266:AL" -> "267:IF"	 [cond="[]",
		lineno=None];
	"Leaf_448:AL" -> "457:AL";
	"343:IF" -> "346:NS"	 [cond="['Current_state', 'State_err_end']",
		label="!((Current_state == State_err_end))",
		lineno=343];
	"343:IF" -> "344:NS"	 [cond="['Current_state', 'State_err_end']",
		label="(Current_state == State_err_end)",
		lineno=343];
	"436:IF" -> "437:BL"	 [cond="['RX_APPEND_CRC']",
		label=RX_APPEND_CRC,
		lineno=436];
	"436:IF" -> "442:BL"	 [cond="['RX_APPEND_CRC']",
		label="!(RX_APPEND_CRC)",
		lineno=436];
	"Leaf_614:AL" -> "620:AL";
	"432:BL" -> "Leaf_430:AL"	 [cond="[]",
		lineno=None];
	"692:IF" -> "695:NS"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=692];
	"692:IF" -> "693:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=692];
	"206:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb252f50>",
		fillcolor=firebrick,
		label="206:NS
Current_state <= Next_state;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbcfb252f50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"206:NS" -> "Leaf_202:AL"	 [cond="[]",
		lineno=None];
	"Leaf_375:AL" -> "393:AL";
	"532:CA" -> "533:IF"	 [cond="[]",
		lineno=None];
	"369:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbcfb130410>",
		clk_sens=True,
		fillcolor=gold,
		label="369:AL",
		sens="['Clk_MAC', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Fifo_data']"];
	"369:AL" -> "370:IF"	 [cond="[]",
		lineno=None];
	"247:IF" -> "248:BS"	 [cond="['Fifo_data_end']",
		label=Fifo_data_end,
		lineno=247];
	"247:IF" -> "250:BS"	 [cond="['Fifo_data_end']",
		label="!(Fifo_data_end)",
		lineno=247];
	"354:AL" -> "355:IF"	 [cond="[]",
		lineno=None];
	"224:CA" -> "225:IF"	 [cond="[]",
		lineno=None];
	"390:IF" -> "391:NS"	 [cond="['Current_state', 'State_byte1', 'Fifo_data_en_dl1']",
		label="((Current_state == State_byte1) && Fifo_data_en_dl1)",
		lineno=390];
	"203:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbcfb252e50>",
		fillcolor=springgreen,
		label="203:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"202:AL" -> "203:IF"	 [cond="[]",
		lineno=None];
	"514:AL" -> "515:CS"	 [cond="[]",
		lineno=None];
	"371:NS" -> "Leaf_369:AL"	 [cond="[]",
		lineno=None];
	"379:NS" -> "Leaf_375:AL"	 [cond="[]",
		lineno=None];
	"203:IF" -> "204:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=203];
	"203:IF" -> "206:NS"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=203];
	"408:IF" -> "413:BS"	 [cond="['Current_state', 'State_be0', 'Current_state', 'State_be1', 'Current_state', 'State_be2', 'Current_state', 'State_be3', 'Current_\
state', 'State_byte0', 'Fifo_data_en']",
		label="!(((Current_state == State_be0) || (Current_state == State_be1) || (Current_state == State_be2) || (Current_state == State_be3) || (\
Current_state == State_byte0) && Fifo_data_en))",
		lineno=408];
	"408:IF" -> "411:BS"	 [cond="['Current_state', 'State_be0', 'Current_state', 'State_be1', 'Current_state', 'State_be2', 'Current_state', 'State_be3', 'Current_\
state', 'State_byte0', 'Fifo_data_en']",
		label="((Current_state == State_be0) || (Current_state == State_be1) || (Current_state == State_be2) || (Current_state == State_be3) || (\
Current_state == State_byte0) && Fifo_data_en)",
		lineno=408];
	"701:NS" -> "Leaf_699:AL"	 [cond="[]",
		lineno=None];
	"387:AL" -> "388:IF"	 [cond="[]",
		lineno=None];
	"570:BS" -> "Leaf_566:AL"	 [cond="[]",
		lineno=None];
	"Leaf_275:AL" -> "638:AL";
	"295:BS" -> "Leaf_293:AL"	 [cond="[]",
		lineno=None];
	"531:BS" -> "Leaf_514:AL"	 [cond="[]",
		lineno=None];
	"541:BS" -> "Leaf_514:AL"	 [cond="[]",
		lineno=None];
	"682:IF" -> "684:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=682];
	"682:IF" -> "683:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=682];
	"399:CA" -> "400:BS"	 [cond="[]",
		lineno=None];
}
