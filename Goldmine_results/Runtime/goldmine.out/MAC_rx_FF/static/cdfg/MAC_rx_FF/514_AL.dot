strict digraph "" {
	node [label="\N"];
	"525:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbd1c2d4310>",
		fillcolor=cadetblue,
		label="525:BS
Next_state_SYS = SYS_wait_end;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbd1c2d4310>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_514:AL"	 [def_var="['Next_state_SYS']",
		label="Leaf_514:AL"];
	"525:BS" -> "Leaf_514:AL"	 [cond="[]",
		lineno=None];
	"514:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbd1c2d4490>",
		clk_sens=False,
		fillcolor=gold,
		label="514:AL",
		sens="['Current_state_SYS', 'Rx_mac_rd', 'Rx_mac_ra', 'Dout', 'Empty']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Rx_mac_rd', 'Dout', 'Current_state_SYS', 'Empty', 'Rx_mac_ra']"];
	"515:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fbd1c2d47d0>",
		fillcolor=linen,
		label="515:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"514:AL" -> "515:CS"	 [cond="[]",
		lineno=None];
	"544:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbd1c2d2510>",
		fillcolor=cadetblue,
		label="544:BS
Next_state_SYS = SYS_idle;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbd1c2d2510>]",
		style=filled,
		typ=BlockingSubstitution];
	"544:BS" -> "Leaf_514:AL"	 [cond="[]",
		lineno=None];
	"529:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbd1c2e6450>",
		fillcolor=cadetblue,
		label="529:BS
Next_state_SYS = FF_emtpy_err;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbd1c2e6450>]",
		style=filled,
		typ=BlockingSubstitution];
	"529:BS" -> "Leaf_514:AL"	 [cond="[]",
		lineno=None];
	"523:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbd1c2e6150>",
		fillcolor=lightcyan,
		label="523:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"524:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbd1c2e61d0>",
		fillcolor=springgreen,
		label="524:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"523:CA" -> "524:IF"	 [cond="[]",
		lineno=None];
	"515:CS" -> "523:CA"	 [cond="['Current_state_SYS']",
		label=Current_state_SYS,
		lineno=515];
	"547:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbd1c2d2710>",
		fillcolor=lightcyan,
		label="547:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"515:CS" -> "547:CA"	 [cond="['Current_state_SYS']",
		label=Current_state_SYS,
		lineno=515];
	"542:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbd1c2d2250>",
		fillcolor=lightcyan,
		label="542:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"515:CS" -> "542:CA"	 [cond="['Current_state_SYS']",
		label=Current_state_SYS,
		lineno=515];
	"532:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbd1c2e6910>",
		fillcolor=lightcyan,
		label="532:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"515:CS" -> "532:CA"	 [cond="['Current_state_SYS']",
		label=Current_state_SYS,
		lineno=515];
	"537:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbd1c2e6d50>",
		fillcolor=lightcyan,
		label="537:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"515:CS" -> "537:CA"	 [cond="['Current_state_SYS']",
		label=Current_state_SYS,
		lineno=515];
	"516:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fbd1c2d4890>",
		fillcolor=lightcyan,
		label="516:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"515:CS" -> "516:CA"	 [cond="['Current_state_SYS']",
		label=Current_state_SYS,
		lineno=515];
	"524:IF" -> "525:BS"	 [cond="['Dout']",
		label="Dout[35]",
		lineno=524];
	"526:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbd1c2e6210>",
		fillcolor=springgreen,
		label="526:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"524:IF" -> "526:IF"	 [cond="['Dout']",
		label="!(Dout[35])",
		lineno=524];
	"534:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbd1c2e6b90>",
		fillcolor=cadetblue,
		label="534:BS
Next_state_SYS = SYS_read;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbd1c2e6b90>]",
		style=filled,
		typ=BlockingSubstitution];
	"534:BS" -> "Leaf_514:AL"	 [cond="[]",
		lineno=None];
	"548:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbd1c2d2750>",
		fillcolor=cadetblue,
		label="548:BS
Next_state_SYS = SYS_idle;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbd1c2d2750>]",
		style=filled,
		typ=BlockingSubstitution];
	"547:CA" -> "548:BS"	 [cond="[]",
		lineno=None];
	"546:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbd1c2d2350>",
		fillcolor=cadetblue,
		label="546:BS
Next_state_SYS = Current_state_SYS;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbd1c2d2350>]",
		style=filled,
		typ=BlockingSubstitution];
	"546:BS" -> "Leaf_514:AL"	 [cond="[]",
		lineno=None];
	"543:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbd1c2d2310>",
		fillcolor=springgreen,
		label="543:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"542:CA" -> "543:IF"	 [cond="[]",
		lineno=None];
	"533:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbd1c2e6990>",
		fillcolor=springgreen,
		label="533:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"533:IF" -> "534:BS"	 [cond="['Rx_mac_rd']",
		label=Rx_mac_rd,
		lineno=533];
	"536:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbd1c2e69d0>",
		fillcolor=cadetblue,
		label="536:BS
Next_state_SYS = Current_state_SYS;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbd1c2e69d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"533:IF" -> "536:BS"	 [cond="['Rx_mac_rd']",
		label="!(Rx_mac_rd)",
		lineno=533];
	"548:BS" -> "Leaf_514:AL"	 [cond="[]",
		lineno=None];
	"536:BS" -> "Leaf_514:AL"	 [cond="[]",
		lineno=None];
	"520:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbd1c2d4b50>",
		fillcolor=cadetblue,
		label="520:BS
Next_state_SYS = FF_emtpy_err;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbd1c2d4b50>]",
		style=filled,
		typ=BlockingSubstitution];
	"520:BS" -> "Leaf_514:AL"	 [cond="[]",
		lineno=None];
	"517:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbd1c2d4910>",
		fillcolor=springgreen,
		label="517:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"519:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbd1c2d4950>",
		fillcolor=springgreen,
		label="519:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"517:IF" -> "519:IF"	 [cond="['Rx_mac_rd', 'Rx_mac_ra', 'Empty']",
		label="!((Rx_mac_rd && Rx_mac_ra && !Empty))",
		lineno=517];
	"518:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbd1c2d4e50>",
		fillcolor=cadetblue,
		label="518:BS
Next_state_SYS = SYS_read;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbd1c2d4e50>]",
		style=filled,
		typ=BlockingSubstitution];
	"517:IF" -> "518:BS"	 [cond="['Rx_mac_rd', 'Rx_mac_ra', 'Empty']",
		label="(Rx_mac_rd && Rx_mac_ra && !Empty)",
		lineno=517];
	"531:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbd1c2e6290>",
		fillcolor=cadetblue,
		label="531:BS
Next_state_SYS = Current_state_SYS;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbd1c2e6290>]",
		style=filled,
		typ=BlockingSubstitution];
	"531:BS" -> "Leaf_514:AL"	 [cond="[]",
		lineno=None];
	"528:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbd1c2e6250>",
		fillcolor=springgreen,
		label="528:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"528:IF" -> "529:BS"	 [cond="['Empty']",
		label=Empty,
		lineno=528];
	"528:IF" -> "531:BS"	 [cond="['Empty']",
		label="!(Empty)",
		lineno=528];
	"526:IF" -> "528:IF"	 [cond="['Rx_mac_rd']",
		label="!((!Rx_mac_rd))",
		lineno=526];
	"527:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbd1c2e6650>",
		fillcolor=cadetblue,
		label="527:BS
Next_state_SYS = SYS_pause;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbd1c2e6650>]",
		style=filled,
		typ=BlockingSubstitution];
	"526:IF" -> "527:BS"	 [cond="['Rx_mac_rd']",
		label="(!Rx_mac_rd)",
		lineno=526];
	"519:IF" -> "520:BS"	 [cond="['Rx_mac_rd', 'Rx_mac_ra', 'Empty']",
		label="(Rx_mac_rd && Rx_mac_ra && Empty)",
		lineno=519];
	"522:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbd1c2d4990>",
		fillcolor=cadetblue,
		label="522:BS
Next_state_SYS = Current_state_SYS;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbd1c2d4990>]",
		style=filled,
		typ=BlockingSubstitution];
	"519:IF" -> "522:BS"	 [cond="['Rx_mac_rd', 'Rx_mac_ra', 'Empty']",
		label="!((Rx_mac_rd && Rx_mac_ra && Empty))",
		lineno=519];
	"527:BS" -> "Leaf_514:AL"	 [cond="[]",
		lineno=None];
	"541:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbd1c2e6e50>",
		fillcolor=cadetblue,
		label="541:BS
Next_state_SYS = Current_state_SYS;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbd1c2e6e50>]",
		style=filled,
		typ=BlockingSubstitution];
	"541:BS" -> "Leaf_514:AL"	 [cond="[]",
		lineno=None];
	"532:CA" -> "533:IF"	 [cond="[]",
		lineno=None];
	"543:IF" -> "544:BS"	 [cond="['Rx_mac_rd']",
		label="(!Rx_mac_rd)",
		lineno=543];
	"543:IF" -> "546:BS"	 [cond="['Rx_mac_rd']",
		label="!((!Rx_mac_rd))",
		lineno=543];
	"538:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbd1c2e6e10>",
		fillcolor=springgreen,
		label="538:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"538:IF" -> "541:BS"	 [cond="['Empty']",
		label="!((!Empty))",
		lineno=538];
	"539:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbd1c2d2050>",
		fillcolor=cadetblue,
		label="539:BS
Next_state_SYS = SYS_read;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbd1c2d2050>]",
		style=filled,
		typ=BlockingSubstitution];
	"538:IF" -> "539:BS"	 [cond="['Empty']",
		label="(!Empty)",
		lineno=538];
	"522:BS" -> "Leaf_514:AL"	 [cond="[]",
		lineno=None];
	"518:BS" -> "Leaf_514:AL"	 [cond="[]",
		lineno=None];
	"537:CA" -> "538:IF"	 [cond="[]",
		lineno=None];
	"539:BS" -> "Leaf_514:AL"	 [cond="[]",
		lineno=None];
	"516:CA" -> "517:IF"	 [cond="[]",
		lineno=None];
}
