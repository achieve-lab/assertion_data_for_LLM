strict digraph "compose( ,  )" {
	node [label="\N"];
	"92:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f94e6dcc8d0>",
		fillcolor=firebrick,
		label="92:NS
broadcast_counter <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f94e6dcc8d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_88:AL"	 [def_var="['broadcast_counter']",
		label="Leaf_88:AL"];
	"92:NS" -> "Leaf_88:AL"	 [cond="[]",
		lineno=None];
	"100:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f94e6dc74d0>",
		fillcolor=firebrick,
		label="100:NS
broadcast_drop <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f94e6dc74d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_96:AL"	 [def_var="['broadcast_drop']",
		label="Leaf_96:AL"];
	"100:NS" -> "Leaf_96:AL"	 [cond="[]",
		lineno=None];
	"98:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f94e6dc7050>",
		fillcolor=firebrick,
		label="98:NS
broadcast_drop <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f94e6dc7050>]",
		style=filled,
		typ=NonblockingSubstitution];
	"98:NS" -> "Leaf_96:AL"	 [cond="[]",
		lineno=None];
	"99:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f94e6dc7590>",
		fillcolor=springgreen,
		label="99:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"99:IF" -> "100:NS"	 [cond="['broadcast_filter_en', 'broadcast_counter', 'broadcast_bucket_depth']",
		label="(broadcast_filter_en && (broadcast_counter == broadcast_bucket_depth))",
		lineno=99];
	"102:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f94e6dc7690>",
		fillcolor=firebrick,
		label="102:NS
broadcast_drop <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f94e6dc7690>]",
		style=filled,
		typ=NonblockingSubstitution];
	"99:IF" -> "102:NS"	 [cond="['broadcast_filter_en', 'broadcast_counter', 'broadcast_bucket_depth']",
		label="!((broadcast_filter_en && (broadcast_counter == broadcast_bucket_depth)))",
		lineno=99];
	"81:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f94e7507a90>",
		fillcolor=springgreen,
		label="81:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"83:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f94e6dcc0d0>",
		fillcolor=springgreen,
		label="83:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"81:IF" -> "83:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=81];
	"82:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f94e7507bd0>",
		fillcolor=firebrick,
		label="82:NS
time_counter <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f94e7507bd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"81:IF" -> "82:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=81];
	"88:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f94e6dcc390>",
		clk_sens=True,
		fillcolor=gold,
		label="88:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'broadcast_bucket_depth', 'time_counter', 'broadcast_ptr', 'broadcast_counter', 'broadcast_bucket_interval']"];
	"89:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f94e6dcc4d0>",
		fillcolor=springgreen,
		label="89:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"88:AL" -> "89:IF"	 [cond="[]",
		lineno=None];
	"96:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f94e6dcce90>",
		clk_sens=True,
		fillcolor=gold,
		label="96:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'broadcast_counter', 'broadcast_bucket_depth', 'broadcast_filter_en']"];
	"97:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f94e6dccfd0>",
		fillcolor=springgreen,
		label="97:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"96:AL" -> "97:IF"	 [cond="[]",
		lineno=None];
	"86:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f94e6dcc290>",
		fillcolor=firebrick,
		label="86:NS
time_counter <= time_counter + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f94e6dcc290>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_80:AL"	 [def_var="['time_counter']",
		label="Leaf_80:AL"];
	"86:NS" -> "Leaf_80:AL"	 [cond="[]",
		lineno=None];
	"Leaf_80:AL" -> "88:AL";
	"80:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f94e71baa90>",
		clk_sens=True,
		fillcolor=gold,
		label="80:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'time_counter', 'broadcast_bucket_interval']"];
	"Leaf_80:AL" -> "80:AL";
	"93:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f94e6dccc50>",
		fillcolor=springgreen,
		label="93:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"94:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f94e6dcce10>",
		fillcolor=firebrick,
		label="94:NS
broadcast_counter <= broadcast_counter + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f94e6dcce10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"93:IF" -> "94:NS"	 [cond="['broadcast_ptr', 'broadcast_counter', 'broadcast_bucket_depth']",
		label="(broadcast_ptr && (broadcast_counter != broadcast_bucket_depth))",
		lineno=93];
	"94:NS" -> "Leaf_88:AL"	 [cond="[]",
		lineno=None];
	"Leaf_88:AL" -> "88:AL";
	"Leaf_88:AL" -> "96:AL";
	"90:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f94e6dcc510>",
		fillcolor=firebrick,
		label="90:NS
broadcast_counter <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f94e6dcc510>]",
		style=filled,
		typ=NonblockingSubstitution];
	"89:IF" -> "90:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=89];
	"91:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f94e6dcc890>",
		fillcolor=springgreen,
		label="91:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"89:IF" -> "91:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=89];
	"97:IF" -> "98:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=97];
	"97:IF" -> "99:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=97];
	"80:AL" -> "81:IF"	 [cond="[]",
		lineno=None];
	"84:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f94e71e53d0>",
		fillcolor=firebrick,
		label="84:NS
time_counter <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f94e71e53d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"84:NS" -> "Leaf_80:AL"	 [cond="[]",
		lineno=None];
	"83:IF" -> "86:NS"	 [cond="['time_counter', 'broadcast_bucket_interval']",
		label="!((time_counter == broadcast_bucket_interval))",
		lineno=83];
	"83:IF" -> "84:NS"	 [cond="['time_counter', 'broadcast_bucket_interval']",
		label="(time_counter == broadcast_bucket_interval)",
		lineno=83];
	"82:NS" -> "Leaf_80:AL"	 [cond="[]",
		lineno=None];
	"102:NS" -> "Leaf_96:AL"	 [cond="[]",
		lineno=None];
	"90:NS" -> "Leaf_88:AL"	 [cond="[]",
		lineno=None];
	"91:IF" -> "92:NS"	 [cond="['time_counter', 'broadcast_bucket_interval']",
		label="(time_counter == broadcast_bucket_interval)",
		lineno=91];
	"91:IF" -> "93:IF"	 [cond="['time_counter', 'broadcast_bucket_interval']",
		label="!((time_counter == broadcast_bucket_interval))",
		lineno=91];
}
