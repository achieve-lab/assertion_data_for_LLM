strict digraph "compose( ,  )" {
	node [label="\N"];
	"273:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f9d5c774d10>",
		fillcolor=springgreen,
		label="273:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"273:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9d5c774e50>",
		fillcolor=firebrick,
		label="273:NS
b_FF <= #1 b;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9d5c774e50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"273:IF" -> "273:NS"	 [cond="['valid']",
		label=valid,
		lineno=273];
	"267:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9d5c774350>",
		fillcolor=firebrick,
		label="267:NS
a_FF <= #1 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9d5c774350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_266:AL"	 [def_var="['a_FF']",
		label="Leaf_266:AL"];
	"267:NS" -> "Leaf_266:AL"	 [cond="[]",
		lineno=None];
	"Leaf_271:AL"	 [def_var="['b_FF']",
		label="Leaf_271:AL"];
	"275:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f9d5c774f90>",
		def_var="['c']",
		fillcolor=deepskyblue,
		label="275:AS
c = rca_N(a_FF, b_FF);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['rca_N', 'a_FF', 'b_FF']"];
	"Leaf_271:AL" -> "275:AS";
	"276:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f9d5c78d310>",
		def_var="['d']",
		fillcolor=deepskyblue,
		label="276:AS
d = rca_N(a_FF, twos_complement(b_FF));",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['rca_N', 'a_FF', 'twos_complement', 'b_FF']"];
	"Leaf_271:AL" -> "276:AS";
	"267:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f9d5c774390>",
		fillcolor=springgreen,
		label="267:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"267:IF" -> "267:NS"	 [cond="['rstn']",
		label="(!rstn)",
		lineno=267];
	"268:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f9d5c774510>",
		fillcolor=springgreen,
		label="268:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"267:IF" -> "268:IF"	 [cond="['rstn']",
		label="!((!rstn))",
		lineno=267];
	"268:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9d5c774650>",
		fillcolor=firebrick,
		label="268:NS
a_FF <= #1 a;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9d5c774650>]",
		style=filled,
		typ=NonblockingSubstitution];
	"268:NS" -> "Leaf_266:AL"	 [cond="[]",
		lineno=None];
	"271:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f9d5c774950>",
		clk_sens=False,
		fillcolor=gold,
		label="271:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['valid', 'b', 'rstn']"];
	"272:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f9d5c774b90>",
		fillcolor=springgreen,
		label="272:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"271:AL" -> "272:IF"	 [cond="[]",
		lineno=None];
	"Leaf_266:AL" -> "275:AS";
	"Leaf_266:AL" -> "276:AS";
	"273:NS" -> "Leaf_271:AL"	 [cond="[]",
		lineno=None];
	"272:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9d5c774b50>",
		fillcolor=firebrick,
		label="272:NS
b_FF <= #1 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9d5c774b50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"272:NS" -> "Leaf_271:AL"	 [cond="[]",
		lineno=None];
	"268:IF" -> "268:NS"	 [cond="['valid']",
		label=valid,
		lineno=268];
	"266:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f9d5c774150>",
		clk_sens=False,
		fillcolor=gold,
		label="266:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['a', 'valid', 'rstn']"];
	"266:AL" -> "267:IF"	 [cond="[]",
		lineno=None];
	"272:IF" -> "273:IF"	 [cond="['rstn']",
		label="!((!rstn))",
		lineno=272];
	"272:IF" -> "272:NS"	 [cond="['rstn']",
		label="(!rstn)",
		lineno=272];
}
