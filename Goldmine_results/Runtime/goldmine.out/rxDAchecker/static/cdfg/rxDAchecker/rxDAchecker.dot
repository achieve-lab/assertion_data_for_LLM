strict digraph "compose( ,  )" {
	node [label="\N"];
	"208:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fc0c61edb90>",
		fillcolor=turquoise,
		label="208:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"209:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fc0c6221590>",
		fillcolor=springgreen,
		label="209:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"208:BL" -> "209:IF"	 [cond="[]",
		lineno=None];
	"221:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fc0c60a5b50>",
		def_var="['local_invalid']",
		fillcolor=deepskyblue,
		label="221:AS
local_invalid = 1'b0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="[]"];
	"214:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fc0c60a5f50>",
		fillcolor=turquoise,
		label="214:BL
multi_valid <= #TP da_addr == 48'h0180C2000001;
broad_valid <= #TP da_addr == 48'hffffffffffff;
local_valid <= #TP da_addr == \
MAC_Addr;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fc0c60a5bd0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7fc0c60a5890>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fc0c60a5750>]",
		style=filled,
		typ=Block];
	"209:IF" -> "214:BL"	 [cond="['reset']",
		label="!(reset)",
		lineno=209];
	"209:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fc0c6539c90>",
		fillcolor=turquoise,
		label="209:BL
multi_valid <= #TP 0;
broad_valid <= #TP 0;
local_valid <= #TP 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fc0c61eda10>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7fc0c7f7fc90>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fc0c6221610>]",
		style=filled,
		typ=Block];
	"209:IF" -> "209:BL"	 [cond="['reset']",
		label=reset,
		lineno=209];
	"Leaf_208:AL"	 [def_var="['local_valid', 'multi_valid', 'broad_valid']",
		label="Leaf_208:AL"];
	"208:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fc0c6203a10>",
		clk_sens=True,
		fillcolor=gold,
		label="208:AL",
		sens="['rxclk', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'MAC_Addr', 'da_addr']"];
	"208:AL" -> "208:BL"	 [cond="[]",
		lineno=None];
	"214:BL" -> "Leaf_208:AL"	 [cond="[]",
		lineno=None];
	"209:BL" -> "Leaf_208:AL"	 [cond="[]",
		lineno=None];
}
