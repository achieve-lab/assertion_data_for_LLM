strict digraph "compose( ,  )" {
	node [label="\N"];
	"15:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f9697456150>",
		clk_sens=True,
		fillcolor=gold,
		label="15:AL",
		sens="['rclk', 'rrst_n']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['b_rptr_next', 'rrst_n', 'g_rptr_next']"];
	"15:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f96956d2990>",
		fillcolor=turquoise,
		label="15:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"15:AL" -> "15:BL"	 [cond="[]",
		lineno=None];
	"27:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f9695555e10>",
		fillcolor=springgreen,
		label="27:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"28:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9695555d50>",
		fillcolor=firebrick,
		label="28:NS
empty <= rempty;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9695555d50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"27:IF" -> "28:NS"	 [cond="['rrst_n']",
		label="!((!rrst_n))",
		lineno=27];
	"27:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9695555690>",
		fillcolor=firebrick,
		label="27:NS
empty <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9695555690>]",
		style=filled,
		typ=NonblockingSubstitution];
	"27:IF" -> "27:NS"	 [cond="['rrst_n']",
		label="(!rrst_n)",
		lineno=27];
	"16:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f96956e3490>",
		fillcolor=springgreen,
		label="16:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"15:BL" -> "16:IF"	 [cond="[]",
		lineno=None];
	"12:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f969569ebd0>",
		def_var="['g_rptr_next']",
		fillcolor=deepskyblue,
		label="12:AS
g_rptr_next = (b_rptr_next >> 1) ^ b_rptr_next;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['b_rptr_next', 'b_rptr_next']"];
	"12:AS" -> "15:AL";
	"13:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f969569e090>",
		def_var="['rempty']",
		fillcolor=deepskyblue,
		label="13:AS
rempty = g_wptr_sync == g_rptr_next;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['g_wptr_sync', 'g_rptr_next']"];
	"12:AS" -> "13:AS";
	"Leaf_26:AL"	 [def_var="['empty']",
		label="Leaf_26:AL"];
	"28:NS" -> "Leaf_26:AL"	 [cond="[]",
		lineno=None];
	"27:NS" -> "Leaf_26:AL"	 [cond="[]",
		lineno=None];
	"20:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f96955558d0>",
		fillcolor=turquoise,
		label="20:BL
b_rptr <= b_rptr_next;
g_rptr <= g_rptr_next;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9695555990>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f9695555590>]",
		style=filled,
		typ=Block];
	"16:IF" -> "20:BL"	 [cond="['rrst_n']",
		label="!((!rrst_n))",
		lineno=16];
	"16:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f96956d2710>",
		fillcolor=turquoise,
		label="16:BL
b_rptr <= 0;
g_rptr <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f96956d24d0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f96956e34d0>]",
		style=filled,
		typ=Block];
	"16:IF" -> "16:BL"	 [cond="['rrst_n']",
		label="(!rrst_n)",
		lineno=16];
	"26:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f9695555250>",
		clk_sens=True,
		fillcolor=gold,
		label="26:AL",
		sens="['rclk', 'rrst_n']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rrst_n', 'rempty']"];
	"26:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f9695555310>",
		fillcolor=turquoise,
		label="26:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"26:AL" -> "26:BL"	 [cond="[]",
		lineno=None];
	"11:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f96956a3f50>",
		def_var="['b_rptr_next']",
		fillcolor=deepskyblue,
		label="11:AS
b_rptr_next = b_rptr + (r_en & !empty);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['b_rptr', 'r_en', 'empty']"];
	"Leaf_26:AL" -> "11:AS";
	"Leaf_15:AL"	 [def_var="['b_rptr', 'g_rptr']",
		label="Leaf_15:AL"];
	"Leaf_15:AL" -> "11:AS";
	"11:AS" -> "15:AL";
	"11:AS" -> "12:AS";
	"20:BL" -> "Leaf_15:AL"	 [cond="[]",
		lineno=None];
	"26:BL" -> "27:IF"	 [cond="[]",
		lineno=None];
	"13:AS" -> "26:AL";
	"16:BL" -> "Leaf_15:AL"	 [cond="[]",
		lineno=None];
}
