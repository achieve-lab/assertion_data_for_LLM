strict digraph "compose( ,  )" {
	node [label="\N"];
	"96:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fcc007fed10>",
		def_var="['add_wr']",
		fillcolor=deepskyblue,
		label="96:AS
add_wr = MAC_add_prom_add;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['MAC_add_prom_add']"];
	"Leaf_84:AL"	 [def_var="['MAC_add_prom_wr_dl1', 'MAC_add_prom_wr_dl2']",
		label="Leaf_84:AL"];
	"84:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fcc007fe150>",
		clk_sens=True,
		fillcolor=gold,
		label="84:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'MAC_add_prom_wr_dl1', 'MAC_add_prom_wr']"];
	"Leaf_84:AL" -> "84:AL";
	"95:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fcc007feb10>",
		def_var="['wr_en']",
		fillcolor=deepskyblue,
		label="95:AS
wr_en = MAC_add_prom_wr_dl1 & !MAC_add_prom_wr_dl2;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['MAC_add_prom_wr_dl1', 'MAC_add_prom_wr_dl2']"];
	"Leaf_84:AL" -> "95:AS";
	"102:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fcc00837190>",
		clk_sens=True,
		fillcolor=gold,
		label="102:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'add_rd', 'MAC_tx_addr_init', 'MAC_tx_addr_rd']"];
	"103:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fcc00837290>",
		fillcolor=springgreen,
		label="103:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"102:AL" -> "103:IF"	 [cond="[]",
		lineno=None];
	"106:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fcc00837590>",
		fillcolor=firebrick,
		label="106:NS
add_rd <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fcc00837590>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_102:AL"	 [def_var="['add_rd']",
		label="Leaf_102:AL"];
	"106:NS" -> "Leaf_102:AL"	 [cond="[]",
		lineno=None];
	"85:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fcc007fe450>",
		fillcolor=springgreen,
		label="85:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"84:AL" -> "85:IF"	 [cond="[]",
		lineno=None];
	"108:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fcc008378d0>",
		fillcolor=firebrick,
		label="108:NS
add_rd <= add_rd + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fcc008378d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"108:NS" -> "Leaf_102:AL"	 [cond="[]",
		lineno=None];
	"Leaf_102:AL" -> "102:AL";
	"109:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fcc008375d0>",
		def_var="['MAC_tx_addr_data']",
		fillcolor=deepskyblue,
		label="109:AS
MAC_tx_addr_data = dout;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['dout']"];
	"105:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fcc00837550>",
		fillcolor=springgreen,
		label="105:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"105:IF" -> "106:NS"	 [cond="['MAC_tx_addr_init']",
		label=MAC_tx_addr_init,
		lineno=105];
	"107:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fcc00837710>",
		fillcolor=springgreen,
		label="107:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"105:IF" -> "107:IF"	 [cond="['MAC_tx_addr_init']",
		label="!(MAC_tx_addr_init)",
		lineno=105];
	"104:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fcc008372d0>",
		fillcolor=firebrick,
		label="104:NS
add_rd <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fcc008372d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"104:NS" -> "Leaf_102:AL"	 [cond="[]",
		lineno=None];
	"91:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fcc007fe690>",
		fillcolor=turquoise,
		label="91:BL
MAC_add_prom_wr_dl1 <= MAC_add_prom_wr;
MAC_add_prom_wr_dl2 <= MAC_add_prom_wr_dl1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fcc007fe6d0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7fcc007fe890>]",
		style=filled,
		typ=Block];
	"91:BL" -> "Leaf_84:AL"	 [cond="[]",
		lineno=None];
	"85:IF" -> "91:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=85];
	"86:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fcc007fe2d0>",
		fillcolor=turquoise,
		label="86:BL
MAC_add_prom_wr_dl1 <= 0;
MAC_add_prom_wr_dl2 <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fcc007fe310>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7fcc007fe490>]",
		style=filled,
		typ=Block];
	"85:IF" -> "86:BL"	 [cond="['Reset']",
		label=Reset,
		lineno=85];
	"86:BL" -> "Leaf_84:AL"	 [cond="[]",
		lineno=None];
	"97:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fcc007fef10>",
		def_var="['din']",
		fillcolor=deepskyblue,
		label="97:AS
din = MAC_add_prom_data;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['MAC_add_prom_data']"];
	"107:IF" -> "108:NS"	 [cond="['MAC_tx_addr_rd']",
		label=MAC_tx_addr_rd,
		lineno=107];
	"103:IF" -> "105:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=103];
	"103:IF" -> "104:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=103];
}
