strict digraph "compose( ,  )" {
	node [label="\N"];
	"191:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3fb00d0>",
		fillcolor=cadetblue,
		label="191:BS
Read = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3fb00d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_188:AL"	 [def_var="['Read']",
		label="Leaf_188:AL"];
	"191:BS" -> "Leaf_188:AL"	 [cond="[]",
		lineno=None];
	"246:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3b79650>",
		fillcolor=cadetblue,
		label="246:BS
Reg_next_0 = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3b79650>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_242:AL"	 [def_var="['Reg_next_0']",
		label="Leaf_242:AL"];
	"246:BS" -> "Leaf_242:AL"	 [cond="[]",
		lineno=None];
	"212:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7aa3b75790>",
		fillcolor=springgreen,
		label="212:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"213:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7aa3b758d0>",
		fillcolor=firebrick,
		label="213:NS
DoutaReg <= Douta;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7aa3b758d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"212:IF" -> "213:NS"	 [cond="['Read']",
		label=Read,
		lineno=212];
	"178:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7aa3faa4d0>",
		fillcolor=springgreen,
		label="178:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"179:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7aa3faa510>",
		fillcolor=firebrick,
		label="179:NS
StepCounter <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7aa3faa510>]",
		style=filled,
		typ=NonblockingSubstitution];
	"178:IF" -> "179:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=178];
	"180:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7aa3faa810>",
		fillcolor=springgreen,
		label="180:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"178:IF" -> "180:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=178];
	"209:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f7aa3b75510>",
		clk_sens=True,
		fillcolor=gold,
		label="209:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Read', 'Reset', 'Douta']"];
	"Leaf_188:AL" -> "209:AL";
	"130:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f7aa3bd39d0>",
		clk_sens=True,
		fillcolor=gold,
		label="130:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'NextState']"];
	"131:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7aa3bd3c10>",
		fillcolor=springgreen,
		label="131:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"130:AL" -> "131:IF"	 [cond="[]",
		lineno=None];
	"221:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f7aa3b6d190>",
		fillcolor=linen,
		label="221:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"222:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7aa3b75a90>",
		fillcolor=lightcyan,
		label="222:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"221:CS" -> "222:CA"	 [cond="['CurrentState']",
		label=CurrentState,
		lineno=221];
	"225:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7aa3b6d1d0>",
		fillcolor=lightcyan,
		label="225:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"221:CS" -> "225:CA"	 [cond="['CurrentState']",
		label=CurrentState,
		lineno=221];
	"223:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7aa3b75d50>",
		fillcolor=lightcyan,
		label="223:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"221:CS" -> "223:CA"	 [cond="['CurrentState']",
		label=CurrentState,
		lineno=221];
	"224:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7aa3b75fd0>",
		fillcolor=lightcyan,
		label="224:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"221:CS" -> "224:CA"	 [cond="['CurrentState']",
		label=CurrentState,
		lineno=221];
	"188:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f7aa3faa890>",
		clk_sens=False,
		fillcolor=gold,
		label="188:AL",
		sens="['StepCounter']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['StepCounter']"];
	"189:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7aa3fb0090>",
		fillcolor=springgreen,
		label="189:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"188:AL" -> "189:IF"	 [cond="[]",
		lineno=None];
	"Leaf_136:AL"	 [def_var="['CurrentState_reg']",
		label="Leaf_136:AL"];
	"142:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f7aa3bcd850>",
		clk_sens=False,
		fillcolor=gold,
		label="142:AL",
		sens="['CurrentState', 'CPU_rd_apply_reg', 'Reg_apply_0', 'CurrentState_reg', 'Reg_apply_1', 'StepCounter']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['CPU_rd_apply_reg', 'CurrentState_reg', 'Reg_apply_1', 'Reg_apply_0', 'StepCounter', 'CurrentState']"];
	"Leaf_136:AL" -> "142:AL";
	"153:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3fa5110>",
		fillcolor=cadetblue,
		label="153:BS
NextState = CurrentState;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3fa5110>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_142:AL"	 [def_var="['NextState']",
		label="Leaf_142:AL"];
	"153:BS" -> "Leaf_142:AL"	 [cond="[]",
		lineno=None];
	"222:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3b75c50>",
		fillcolor=cadetblue,
		label="222:BS
Addra = { 1'd0, Reg_addr_0 };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3b75c50>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_220:AL"	 [def_var="['Addra']",
		label="Leaf_220:AL"];
	"222:BS" -> "Leaf_220:AL"	 [cond="[]",
		lineno=None];
	"132:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7aa3bd3b50>",
		fillcolor=firebrick,
		label="132:NS
CurrentState <= StateMAC0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7aa3bd3b50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"131:IF" -> "132:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=131];
	"134:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7aa3bd3d10>",
		fillcolor=firebrick,
		label="134:NS
CurrentState <= NextState;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7aa3bd3d10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"131:IF" -> "134:NS"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=131];
	"237:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7aa3b6ded0>",
		fillcolor=lightcyan,
		label="237:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"237:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7aa3b6dfd0>",
		fillcolor=firebrick,
		label="237:NS
Dina <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7aa3b6dfd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"237:CA" -> "237:NS"	 [cond="[]",
		lineno=None];
	"230:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7aa3b6d610>",
		fillcolor=springgreen,
		label="230:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"233:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f7aa3b6de90>",
		fillcolor=linen,
		label="233:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"230:IF" -> "233:CS"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=230];
	"231:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7aa3b6d5d0>",
		fillcolor=firebrick,
		label="231:NS
Dina <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7aa3b6d5d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"230:IF" -> "231:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=230];
	"236:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7aa3b6de10>",
		fillcolor=firebrick,
		label="236:NS
Dina <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7aa3b6de10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_229:AL"	 [def_var="['Dina']",
		label="Leaf_229:AL"];
	"236:NS" -> "Leaf_229:AL"	 [cond="[]",
		lineno=None];
	"171:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7aa3fa57d0>",
		fillcolor=lightcyan,
		label="171:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"172:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3faa210>",
		fillcolor=cadetblue,
		label="172:BS
NextState = StateMAC0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3faa210>]",
		style=filled,
		typ=BlockingSubstitution];
	"171:CA" -> "172:BS"	 [cond="[]",
		lineno=None];
	"163:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f7aa3fa5e90>",
		fillcolor=linen,
		label="163:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"166:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7aa3fa5ed0>",
		fillcolor=lightcyan,
		label="166:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"163:CS" -> "166:CA"	 [cond="['CurrentState_reg']",
		label=CurrentState_reg,
		lineno=163];
	"164:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7aa3fa5ad0>",
		fillcolor=lightcyan,
		label="164:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"163:CS" -> "164:CA"	 [cond="['CurrentState_reg']",
		label=CurrentState_reg,
		lineno=163];
	"165:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7aa3fa5d10>",
		fillcolor=lightcyan,
		label="165:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"163:CS" -> "165:CA"	 [cond="['CurrentState_reg']",
		label=CurrentState_reg,
		lineno=163];
	"243:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7aa3b79490>",
		fillcolor=springgreen,
		label="243:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"243:IF" -> "246:BS"	 [cond="['CurrentState', 'StateMAC0']",
		label="!((CurrentState == StateMAC0))",
		lineno=243];
	"244:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3b794d0>",
		fillcolor=cadetblue,
		label="244:BS
Reg_next_0 = Pipeline;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3b794d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"243:IF" -> "244:BS"	 [cond="['CurrentState', 'StateMAC0']",
		label="(CurrentState == StateMAC0)",
		lineno=243];
	"164:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3fa5bd0>",
		fillcolor=cadetblue,
		label="164:BS
NextState = StateMAC0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3fa5bd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"164:BS" -> "Leaf_142:AL"	 [cond="[]",
		lineno=None];
	"158:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3fa5650>",
		fillcolor=cadetblue,
		label="158:BS
NextState = StateMAC0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3fa5650>]",
		style=filled,
		typ=BlockingSubstitution];
	"158:BS" -> "Leaf_142:AL"	 [cond="[]",
		lineno=None];
	"283:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7aa3b99690>",
		fillcolor=firebrick,
		label="283:NS
CPU_rd_dout <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7aa3b99690>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_281:AL"	 [def_var="['CPU_rd_dout']",
		label="Leaf_281:AL"];
	"283:NS" -> "Leaf_281:AL"	 [cond="[]",
		lineno=None];
	"146:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f7aa3fa5250>",
		fillcolor=linen,
		label="146:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"142:AL" -> "146:CS"	 [cond="[]",
		lineno=None];
	"Leaf_177:AL"	 [def_var="['StepCounter']",
		label="Leaf_177:AL"];
	"Leaf_177:AL" -> "188:AL";
	"Leaf_177:AL" -> "142:AL";
	"195:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f7aa3fb0490>",
		clk_sens=False,
		fillcolor=gold,
		label="195:AL",
		sens="['StepCounter', 'CurrentState']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['StepCounter']"];
	"Leaf_177:AL" -> "195:AL";
	"202:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f7aa3fb0cd0>",
		clk_sens=False,
		fillcolor=gold,
		label="202:AL",
		sens="['StepCounter', 'CurrentState']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['StepCounter']"];
	"Leaf_177:AL" -> "202:AL";
	"177:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f7aa3faa3d0>",
		clk_sens=True,
		fillcolor=gold,
		label="177:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'StepCounter', 'CurrentState', 'NextState']"];
	"Leaf_177:AL" -> "177:AL";
	"150:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7aa3bcded0>",
		fillcolor=springgreen,
		label="150:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"150:IF" -> "153:BS"	 [cond="['Reg_apply_0']",
		label="!((!Reg_apply_0))",
		lineno=150];
	"151:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3bcdf10>",
		fillcolor=cadetblue,
		label="151:BS
NextState = StateMAC1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3bcdf10>]",
		style=filled,
		typ=BlockingSubstitution];
	"150:IF" -> "151:BS"	 [cond="['Reg_apply_0']",
		label="(!Reg_apply_0)",
		lineno=150];
	"198:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3fb0950>",
		fillcolor=cadetblue,
		label="198:BS
Pipeline = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3fb0950>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_195:AL"	 [def_var="['Pipeline']",
		label="Leaf_195:AL"];
	"198:BS" -> "Leaf_195:AL"	 [cond="[]",
		lineno=None];
	"189:IF" -> "191:BS"	 [cond="['StepCounter', 'StepCounter', 'StepCounter', 'StepCounter']",
		label="((StepCounter == 1) || (StepCounter == 4) || (StepCounter == 7) || (StepCounter == 10))",
		lineno=189];
	"193:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3fb0250>",
		fillcolor=cadetblue,
		label="193:BS
Read = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3fb0250>]",
		style=filled,
		typ=BlockingSubstitution];
	"189:IF" -> "193:BS"	 [cond="['StepCounter', 'StepCounter', 'StepCounter', 'StepCounter']",
		label="!(((StepCounter == 1) || (StepCounter == 4) || (StepCounter == 7) || (StepCounter == 10)))",
		lineno=189];
	"151:BS" -> "Leaf_142:AL"	 [cond="[]",
		lineno=None];
	"261:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7aa3b70190>",
		fillcolor=turquoise,
		label="261:BL
CPU_rd_apply_dl1 <= 0;
CPU_rd_apply_dl2 <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7aa3b701d0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f7aa3b70350>]",
		style=filled,
		typ=Block];
	"Leaf_259:AL"	 [def_var="['CPU_rd_apply_dl2', 'CPU_rd_apply_dl1']",
		label="Leaf_259:AL"];
	"261:BL" -> "Leaf_259:AL"	 [cond="[]",
		lineno=None];
	"155:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7aa3fa5350>",
		fillcolor=springgreen,
		label="155:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"156:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3fa5390>",
		fillcolor=cadetblue,
		label="156:BS
NextState = StateCPU;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3fa5390>]",
		style=filled,
		typ=BlockingSubstitution];
	"155:IF" -> "156:BS"	 [cond="['Reg_apply_1', 'CPU_rd_apply_reg']",
		label="(!Reg_apply_1 && CPU_rd_apply_reg)",
		lineno=155];
	"157:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7aa3fa5610>",
		fillcolor=springgreen,
		label="157:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"155:IF" -> "157:IF"	 [cond="['Reg_apply_1', 'CPU_rd_apply_reg']",
		label="!((!Reg_apply_1 && CPU_rd_apply_reg))",
		lineno=155];
	"279:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f7aa3b99290>",
		def_var="['CPU_rd_grant']",
		fillcolor=deepskyblue,
		label="279:AS
CPU_rd_grant = !CPU_rd_apply_reg;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['CPU_rd_apply_reg']"];
	"139:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7aa3bcd310>",
		fillcolor=springgreen,
		label="139:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"140:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7aa3bcd450>",
		fillcolor=firebrick,
		label="140:NS
CurrentState_reg <= CurrentState;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7aa3bcd450>]",
		style=filled,
		typ=NonblockingSubstitution];
	"139:IF" -> "140:NS"	 [cond="['CurrentState', 'StateCPU']",
		label="(CurrentState != StateCPU)",
		lineno=139];
	"276:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7aa3b991d0>",
		fillcolor=springgreen,
		label="276:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"277:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7aa3b992d0>",
		fillcolor=firebrick,
		label="277:NS
CPU_rd_apply_reg <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7aa3b992d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"276:IF" -> "277:NS"	 [cond="['CurrentState', 'StateCPU', 'Write']",
		label="((CurrentState == StateCPU) && Write)",
		lineno=276];
	"138:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7aa3bcd090>",
		fillcolor=firebrick,
		label="138:NS
CurrentState_reg <= StateMAC0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7aa3bcd090>]",
		style=filled,
		typ=NonblockingSubstitution];
	"138:NS" -> "Leaf_136:AL"	 [cond="[]",
		lineno=None];
	"182:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7aa3faaa10>",
		fillcolor=springgreen,
		label="182:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"183:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7aa3faabd0>",
		fillcolor=firebrick,
		label="183:NS
StepCounter <= StepCounter + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7aa3faabd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"182:IF" -> "183:NS"	 [cond="['StepCounter']",
		label="(StepCounter != 4'hf)",
		lineno=182];
	"244:BS" -> "Leaf_242:AL"	 [cond="[]",
		lineno=None];
	"224:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3b6d110>",
		fillcolor=cadetblue,
		label="224:BS
Addra = CPU_rd_addr;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3b6d110>]",
		style=filled,
		typ=BlockingSubstitution];
	"224:BS" -> "Leaf_220:AL"	 [cond="[]",
		lineno=None];
	"162:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7aa3fa5850>",
		fillcolor=springgreen,
		label="162:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"162:IF" -> "163:CS"	 [cond="['StepCounter']",
		label="(StepCounter == 3)",
		lineno=162];
	"169:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3faa110>",
		fillcolor=cadetblue,
		label="169:BS
NextState = CurrentState;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3faa110>]",
		style=filled,
		typ=BlockingSubstitution];
	"162:IF" -> "169:BS"	 [cond="['StepCounter']",
		label="!((StepCounter == 3))",
		lineno=162];
	"240:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f7aa3b6df90>",
		def_var="['Wea']",
		fillcolor=deepskyblue,
		label="240:AS
Wea = Write;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['Write']"];
	"237:NS" -> "Leaf_229:AL"	 [cond="[]",
		lineno=None];
	"205:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3b751d0>",
		fillcolor=cadetblue,
		label="205:BS
Write = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3b751d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_202:AL"	 [def_var="['Write']",
		label="Leaf_202:AL"];
	"205:BS" -> "Leaf_202:AL"	 [cond="[]",
		lineno=None];
	"207:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3b75350>",
		fillcolor=cadetblue,
		label="207:BS
Write = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3b75350>]",
		style=filled,
		typ=BlockingSubstitution];
	"207:BS" -> "Leaf_202:AL"	 [cond="[]",
		lineno=None];
	"259:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f7aa3b79fd0>",
		clk_sens=True,
		fillcolor=gold,
		label="259:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'CPU_rd_apply', 'CPU_rd_apply_dl1']"];
	"Leaf_259:AL" -> "259:AL";
	"271:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f7aa3b70910>",
		clk_sens=True,
		fillcolor=gold,
		label="271:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'CPU_rd_apply_dl2', 'CPU_rd_apply_dl1', 'Write', 'StateCPU', 'CurrentState']"];
	"Leaf_259:AL" -> "271:AL";
	"248:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f7aa3b79850>",
		clk_sens=False,
		fillcolor=gold,
		label="248:AL",
		sens="['CurrentState', 'Pipeline']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['StateMAC1', 'Pipeline', 'CurrentState']"];
	"Leaf_195:AL" -> "248:AL";
	"281:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f7aa3b99550>",
		clk_sens=True,
		fillcolor=gold,
		label="281:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Pipeline', 'StateCPU', 'Douta', 'CurrentState']"];
	"Leaf_195:AL" -> "281:AL";
	"242:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f7aa3b792d0>",
		clk_sens=False,
		fillcolor=gold,
		label="242:AL",
		sens="['CurrentState', 'Pipeline']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['StateMAC0', 'Pipeline', 'CurrentState']"];
	"Leaf_195:AL" -> "242:AL";
	"149:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3bcdc50>",
		fillcolor=cadetblue,
		label="149:BS
NextState = StateCPU;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3bcdc50>]",
		style=filled,
		typ=BlockingSubstitution];
	"149:BS" -> "Leaf_142:AL"	 [cond="[]",
		lineno=None];
	"140:NS" -> "Leaf_136:AL"	 [cond="[]",
		lineno=None];
	"234:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7aa3b6d990>",
		fillcolor=firebrick,
		label="234:NS
Dina <= Douta + Reg_data_0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7aa3b6d990>]",
		style=filled,
		typ=NonblockingSubstitution];
	"234:NS" -> "Leaf_229:AL"	 [cond="[]",
		lineno=None];
	"249:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7aa3b79a10>",
		fillcolor=springgreen,
		label="249:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"248:AL" -> "249:IF"	 [cond="[]",
		lineno=None];
	"282:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7aa3b99650>",
		fillcolor=springgreen,
		label="282:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"281:AL" -> "282:IF"	 [cond="[]",
		lineno=None];
	"220:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f7aa3b75890>",
		clk_sens=False,
		fillcolor=gold,
		label="220:AL",
		sens="['CPU_rd_addr', 'Reg_addr_1', 'Reg_addr_0']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['CPU_rd_addr', 'Reg_addr_1', 'CurrentState', 'Reg_addr_0']"];
	"220:AL" -> "221:CS"	 [cond="[]",
		lineno=None];
	"222:CA" -> "222:BS"	 [cond="[]",
		lineno=None];
	"156:BS" -> "Leaf_142:AL"	 [cond="[]",
		lineno=None];
	"236:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7aa3b6dd10>",
		fillcolor=lightcyan,
		label="236:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"236:CA" -> "236:NS"	 [cond="[]",
		lineno=None];
	"196:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7aa3fb0910>",
		fillcolor=springgreen,
		label="196:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"195:AL" -> "196:IF"	 [cond="[]",
		lineno=None];
	"285:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7aa3b99a50>",
		fillcolor=firebrick,
		label="285:NS
CPU_rd_dout <= Douta;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7aa3b99a50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"285:NS" -> "Leaf_281:AL"	 [cond="[]",
		lineno=None];
	"196:IF" -> "198:BS"	 [cond="['StepCounter', 'StepCounter', 'StepCounter', 'StepCounter']",
		label="((StepCounter == 2) || (StepCounter == 5) || (StepCounter == 8) || (StepCounter == 11))",
		lineno=196];
	"200:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3fb0ad0>",
		fillcolor=cadetblue,
		label="200:BS
Pipeline = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3fb0ad0>]",
		style=filled,
		typ=BlockingSubstitution];
	"196:IF" -> "200:BS"	 [cond="['StepCounter', 'StepCounter', 'StepCounter', 'StepCounter']",
		label="!(((StepCounter == 2) || (StepCounter == 5) || (StepCounter == 8) || (StepCounter == 11)))",
		lineno=196];
	"233:CS" -> "237:CA"	 [cond="['CurrentState']",
		label=CurrentState,
		lineno=233];
	"233:CS" -> "236:CA"	 [cond="['CurrentState']",
		label=CurrentState,
		lineno=233];
	"234:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7aa3b6d810>",
		fillcolor=lightcyan,
		label="234:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"233:CS" -> "234:CA"	 [cond="['CurrentState']",
		label=CurrentState,
		lineno=233];
	"235:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7aa3b6dad0>",
		fillcolor=lightcyan,
		label="235:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"233:CS" -> "235:CA"	 [cond="['CurrentState']",
		label=CurrentState,
		lineno=233];
	"211:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7aa3b75650>",
		fillcolor=firebrick,
		label="211:NS
DoutaReg <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7aa3b75650>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_209:AL"	 [def_var="['DoutaReg']",
		label="Leaf_209:AL"];
	"211:NS" -> "Leaf_209:AL"	 [cond="[]",
		lineno=None];
	"260:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7aa3b70310>",
		fillcolor=springgreen,
		label="260:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"259:AL" -> "260:IF"	 [cond="[]",
		lineno=None];
	"Leaf_202:AL" -> "240:AS";
	"Leaf_202:AL" -> "271:AL";
	"160:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3fa5810>",
		fillcolor=cadetblue,
		label="160:BS
NextState = CurrentState;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3fa5810>]",
		style=filled,
		typ=BlockingSubstitution];
	"160:BS" -> "Leaf_142:AL"	 [cond="[]",
		lineno=None];
	"272:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7aa3b70a50>",
		fillcolor=springgreen,
		label="272:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"271:AL" -> "272:IF"	 [cond="[]",
		lineno=None];
	"250:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3b79a50>",
		fillcolor=cadetblue,
		label="250:BS
Reg_next_1 = Pipeline;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3b79a50>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_248:AL"	 [def_var="['Reg_next_1']",
		label="Leaf_248:AL"];
	"250:BS" -> "Leaf_248:AL"	 [cond="[]",
		lineno=None];
	"203:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7aa3b75190>",
		fillcolor=springgreen,
		label="203:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"202:AL" -> "203:IF"	 [cond="[]",
		lineno=None];
	"223:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3b75f10>",
		fillcolor=cadetblue,
		label="223:BS
Addra = { 1'd1, Reg_addr_1 };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3b75f10>]",
		style=filled,
		typ=BlockingSubstitution];
	"223:BS" -> "Leaf_220:AL"	 [cond="[]",
		lineno=None];
	"154:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7aa3bcdd90>",
		fillcolor=lightcyan,
		label="154:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"154:CA" -> "155:IF"	 [cond="[]",
		lineno=None];
	"166:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3fa5fd0>",
		fillcolor=cadetblue,
		label="166:BS
NextState = StateMAC0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3fa5fd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"166:CA" -> "166:BS"	 [cond="[]",
		lineno=None];
	"234:CA" -> "234:NS"	 [cond="[]",
		lineno=None];
	"210:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7aa3b75610>",
		fillcolor=springgreen,
		label="210:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"210:IF" -> "212:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=210];
	"210:IF" -> "211:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=210];
	"177:AL" -> "178:IF"	 [cond="[]",
		lineno=None];
	"225:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3b6d2d0>",
		fillcolor=cadetblue,
		label="225:BS
Addra = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3b6d2d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"225:CA" -> "225:BS"	 [cond="[]",
		lineno=None];
	"Leaf_142:AL" -> "130:AL";
	"Leaf_142:AL" -> "177:AL";
	"179:NS" -> "Leaf_177:AL"	 [cond="[]",
		lineno=None];
	"235:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7aa3b6dc50>",
		fillcolor=firebrick,
		label="235:NS
Dina <= Douta + Reg_data_1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7aa3b6dc50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"235:CA" -> "235:NS"	 [cond="[]",
		lineno=None];
	"284:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7aa3b99910>",
		fillcolor=springgreen,
		label="284:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"284:IF" -> "285:NS"	 [cond="['Pipeline', 'CurrentState', 'StateCPU']",
		label="(Pipeline && (CurrentState == StateCPU))",
		lineno=284];
	"274:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7aa3b70e50>",
		fillcolor=springgreen,
		label="274:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"274:IF" -> "276:IF"	 [cond="['CPU_rd_apply_dl1', 'CPU_rd_apply_dl2']",
		label="!((CPU_rd_apply_dl1 & !CPU_rd_apply_dl2))",
		lineno=274];
	"275:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7aa3b70e90>",
		fillcolor=firebrick,
		label="275:NS
CPU_rd_apply_reg <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7aa3b70e90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"274:IF" -> "275:NS"	 [cond="['CPU_rd_apply_dl1', 'CPU_rd_apply_dl2']",
		label="(CPU_rd_apply_dl1 & !CPU_rd_apply_dl2)",
		lineno=274];
	"223:CA" -> "223:BS"	 [cond="[]",
		lineno=None];
	"225:BS" -> "Leaf_220:AL"	 [cond="[]",
		lineno=None];
	"Leaf_130:AL"	 [def_var="['CurrentState']",
		label="Leaf_130:AL"];
	"132:NS" -> "Leaf_130:AL"	 [cond="[]",
		lineno=None];
	"136:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f7aa3bd3ed0>",
		clk_sens=True,
		fillcolor=gold,
		label="136:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'StateCPU', 'CurrentState']"];
	"137:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7aa3bcd050>",
		fillcolor=springgreen,
		label="137:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"136:AL" -> "137:IF"	 [cond="[]",
		lineno=None];
	"172:BS" -> "Leaf_142:AL"	 [cond="[]",
		lineno=None];
	"249:IF" -> "250:BS"	 [cond="['CurrentState', 'StateMAC1']",
		label="(CurrentState == StateMAC1)",
		lineno=249];
	"252:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3b79bd0>",
		fillcolor=cadetblue,
		label="252:BS
Reg_next_1 = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3b79bd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"249:IF" -> "252:BS"	 [cond="['CurrentState', 'StateMAC1']",
		label="!((CurrentState == StateMAC1))",
		lineno=249];
	"224:CA" -> "224:BS"	 [cond="[]",
		lineno=None];
	"260:IF" -> "261:BL"	 [cond="['Reset']",
		label=Reset,
		lineno=260];
	"266:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7aa3b70550>",
		fillcolor=turquoise,
		label="266:BL
CPU_rd_apply_dl1 <= CPU_rd_apply;
CPU_rd_apply_dl2 <= CPU_rd_apply_dl1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7aa3b70590>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f7aa3b70750>]",
		style=filled,
		typ=Block];
	"260:IF" -> "266:BL"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=260];
	"282:IF" -> "283:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=282];
	"282:IF" -> "284:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=282];
	"164:CA" -> "164:BS"	 [cond="[]",
		lineno=None];
	"169:BS" -> "Leaf_142:AL"	 [cond="[]",
		lineno=None];
	"Leaf_271:AL"	 [def_var="['CPU_rd_apply_reg']",
		label="Leaf_271:AL"];
	"277:NS" -> "Leaf_271:AL"	 [cond="[]",
		lineno=None];
	"183:NS" -> "Leaf_177:AL"	 [cond="[]",
		lineno=None];
	"165:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3fa5e10>",
		fillcolor=cadetblue,
		label="165:BS
NextState = StateMAC1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7aa3fa5e10>]",
		style=filled,
		typ=BlockingSubstitution];
	"165:CA" -> "165:BS"	 [cond="[]",
		lineno=None];
	"Leaf_271:AL" -> "142:AL";
	"Leaf_271:AL" -> "279:AS";
	"252:BS" -> "Leaf_248:AL"	 [cond="[]",
		lineno=None];
	"231:NS" -> "Leaf_229:AL"	 [cond="[]",
		lineno=None];
	"147:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7aa3bcd950>",
		fillcolor=lightcyan,
		label="147:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"148:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7aa3bcdc10>",
		fillcolor=springgreen,
		label="148:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"147:CA" -> "148:IF"	 [cond="[]",
		lineno=None];
	"146:CS" -> "171:CA"	 [cond="['CurrentState']",
		label=CurrentState,
		lineno=146];
	"146:CS" -> "154:CA"	 [cond="['CurrentState']",
		label=CurrentState,
		lineno=146];
	"146:CS" -> "147:CA"	 [cond="['CurrentState']",
		label=CurrentState,
		lineno=146];
	"161:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7aa3fa5410>",
		fillcolor=lightcyan,
		label="161:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"146:CS" -> "161:CA"	 [cond="['CurrentState']",
		label=CurrentState,
		lineno=146];
	"273:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7aa3b70a90>",
		fillcolor=firebrick,
		label="273:NS
CPU_rd_apply_reg <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7aa3b70a90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"273:NS" -> "Leaf_271:AL"	 [cond="[]",
		lineno=None];
	"203:IF" -> "205:BS"	 [cond="['StepCounter', 'StepCounter', 'StepCounter', 'StepCounter']",
		label="((StepCounter == 3) || (StepCounter == 6) || (StepCounter == 9) || (StepCounter == 12))",
		lineno=203];
	"203:IF" -> "207:BS"	 [cond="['StepCounter', 'StepCounter', 'StepCounter', 'StepCounter']",
		label="!(((StepCounter == 3) || (StepCounter == 6) || (StepCounter == 9) || (StepCounter == 12)))",
		lineno=203];
	"275:NS" -> "Leaf_271:AL"	 [cond="[]",
		lineno=None];
	"193:BS" -> "Leaf_188:AL"	 [cond="[]",
		lineno=None];
	"Leaf_130:AL" -> "142:AL";
	"Leaf_130:AL" -> "248:AL";
	"Leaf_130:AL" -> "281:AL";
	"Leaf_130:AL" -> "220:AL";
	"Leaf_130:AL" -> "271:AL";
	"Leaf_130:AL" -> "177:AL";
	"Leaf_130:AL" -> "136:AL";
	"Leaf_130:AL" -> "242:AL";
	"229:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f7aa3b6d490>",
		clk_sens=True,
		fillcolor=gold,
		label="229:AL",
		sens="['Clk', 'Reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['Reset', 'Reg_data_0', 'Reg_data_1', 'Douta', 'CurrentState']"];
	"Leaf_130:AL" -> "229:AL";
	"161:CA" -> "162:IF"	 [cond="[]",
		lineno=None];
	"242:AL" -> "243:IF"	 [cond="[]",
		lineno=None];
	"272:IF" -> "274:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=272];
	"272:IF" -> "273:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=272];
	"209:AL" -> "210:IF"	 [cond="[]",
		lineno=None];
	"134:NS" -> "Leaf_130:AL"	 [cond="[]",
		lineno=None];
	"157:IF" -> "158:BS"	 [cond="['Reg_apply_1']",
		label="(!Reg_apply_1)",
		lineno=157];
	"157:IF" -> "160:BS"	 [cond="['Reg_apply_1']",
		label="!((!Reg_apply_1))",
		lineno=157];
	"181:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7aa3faa850>",
		fillcolor=firebrick,
		label="181:NS
StepCounter <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7aa3faa850>]",
		style=filled,
		typ=NonblockingSubstitution];
	"181:NS" -> "Leaf_177:AL"	 [cond="[]",
		lineno=None];
	"213:NS" -> "Leaf_209:AL"	 [cond="[]",
		lineno=None];
	"165:BS" -> "Leaf_142:AL"	 [cond="[]",
		lineno=None];
	"180:IF" -> "182:IF"	 [cond="['NextState', 'CurrentState']",
		label="!((NextState != CurrentState))",
		lineno=180];
	"180:IF" -> "181:NS"	 [cond="['NextState', 'CurrentState']",
		label="(NextState != CurrentState)",
		lineno=180];
	"148:IF" -> "150:IF"	 [cond="['Reg_apply_0', 'CPU_rd_apply_reg']",
		label="!((!Reg_apply_0 && CPU_rd_apply_reg))",
		lineno=148];
	"148:IF" -> "149:BS"	 [cond="['Reg_apply_0', 'CPU_rd_apply_reg']",
		label="(!Reg_apply_0 && CPU_rd_apply_reg)",
		lineno=148];
	"137:IF" -> "139:IF"	 [cond="['Reset']",
		label="!(Reset)",
		lineno=137];
	"137:IF" -> "138:NS"	 [cond="['Reset']",
		label=Reset,
		lineno=137];
	"229:AL" -> "230:IF"	 [cond="[]",
		lineno=None];
	"235:NS" -> "Leaf_229:AL"	 [cond="[]",
		lineno=None];
	"166:BS" -> "Leaf_142:AL"	 [cond="[]",
		lineno=None];
	"266:BL" -> "Leaf_259:AL"	 [cond="[]",
		lineno=None];
	"200:BS" -> "Leaf_195:AL"	 [cond="[]",
		lineno=None];
}
