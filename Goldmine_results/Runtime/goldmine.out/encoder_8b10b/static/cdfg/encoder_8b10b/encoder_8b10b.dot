strict digraph "compose( ,  )" {
	node [label="\N"];
	"258:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f9338923650>",
		fillcolor=turquoise,
		label="258:BL
tNAO <= A;
tNBOx <= B & !L40;
tNBOy <= L04;
tNCOx <= L04 | C;
tNCOy <= E & D & !C & !B & !A;
tNDO <= D & !(A & B & C);
tNEOx <= \
E | L13;
tNEOy <= !(E & D & !C & !B & !A);
tNIOw <= L22 & !E | E & L40;
tNIOx <= E & !D & !C & !(A & B);
tNIOy <= K & E & D & C & !\
B & !A;
tNIOz <= E & !D & C & !B & !A;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9338917890>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f9338917a90>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9338917bd0>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f9338917d90>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f933891a0d0>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f933891a510>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f933891a690>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f933891ab10>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f933891ac10>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f9338923210>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f93389233d0>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f9338923850>]",
		style=filled,
		typ=Block];
	"Leaf_243:AL"	 [def_var="['tNBOx', 'tNBOy', 'tNIOz', 'tNIOy', 'tNIOx', 'tNCOy', 'tNCOx', 'tNAO', 'tNIOw', 'tNDO', 'tNEOy', 'tNEOx']",
		label="Leaf_243:AL"];
	"258:BL" -> "Leaf_243:AL"	 [cond="[]",
		lineno=None];
	"188:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f9338d55790>",
		def_var="['CeqD']",
		fillcolor=deepskyblue,
		label="188:AS
CeqD = C & D | !C & !D;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['C', 'D', 'C', 'D']"];
	"193:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f9338d59390>",
		def_var="['L13']",
		fillcolor=deepskyblue,
		label="193:AS
L13 = !AeqB & !C & !D | !CeqD & !A & !B;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['AeqB', 'C', 'D', 'CeqD', 'A', 'B']"];
	"188:AS" -> "193:AS";
	"194:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f9338d597d0>",
		def_var="['L31']",
		fillcolor=deepskyblue,
		label="194:AS
L31 = !AeqB & C & D | !CeqD & A & B;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['AeqB', 'C', 'D', 'CeqD', 'A', 'B']"];
	"188:AS" -> "194:AS";
	"195:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f9338d59f10>",
		def_var="['L22']",
		fillcolor=deepskyblue,
		label="195:AS
L22 = A & B & !C & !D | C & D & !A & !B | !AeqB & !CeqD;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['A', 'B', 'C', 'D', 'C', 'D', 'A', 'B', 'AeqB', 'CeqD']"];
	"188:AS" -> "195:AS";
	"307:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f9338c3b050>",
		def_var="['NFO']",
		fillcolor=deepskyblue,
		label="307:AS
NFO = tNFO & !alt7;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['tNFO', 'alt7']"];
	"162:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f933897ab90>",
		def_var="['tst']",
		fillcolor=deepskyblue,
		label="162:AS
tst[9:0] = { NAO, NBO, NCO, NDO, NEO, NIO, NFO, NGO, NHO, NJO };",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['NAO', 'NBO', 'NCO', 'NDO', 'NEO', 'NIO', 'NFO', 'NGO', 'NHO', 'NJO']"];
	"307:AS" -> "162:AS";
	"168:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f933897ad90>",
		clk_sens=True,
		fillcolor=gold,
		label="168:AL",
		sens="['SBYTECLK', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'NEO', 'NIO', 'NDO', 'COMPLS6', 'NFO', 'NHO', 'NGO', 'NJO', 'NAO', 'DISPARITY6', 'NBO', 'NCO', 'PDOS4', 'COMPLS4', 'NDOS4']"];
	"307:AS" -> "168:AL";
	"309:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f9338c3b2d0>",
		def_var="['NHO']",
		fillcolor=deepskyblue,
		label="309:AS
NHO = tNHO;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['tNHO']"];
	"309:AS" -> "162:AS";
	"309:AS" -> "168:AL";
	"291:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f933892d850>",
		clk_sens=True,
		fillcolor=gold,
		label="291:AL",
		sens="['SBYTECLK', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'E', 'D', 'G', 'F', 'H', 'K', 'L13', 'disparity', 'L31']"];
	"292:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f933892df50>",
		fillcolor=springgreen,
		label="292:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"291:AL" -> "292:IF"	 [cond="[]",
		lineno=None];
	"187:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f9338d55450>",
		def_var="['AeqB']",
		fillcolor=deepskyblue,
		label="187:AS
AeqB = A & B | !A & !B;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['A', 'B', 'A', 'B']"];
	"187:AS" -> "193:AS";
	"187:AS" -> "194:AS";
	"187:AS" -> "195:AS";
	"283:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f933892d390>",
		def_var="['NIO']",
		fillcolor=deepskyblue,
		label="283:AS
NIO = tNIOw | tNIOx | tNIOy | tNIOz;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['tNIOw', 'tNIOx', 'tNIOy', 'tNIOz']"];
	"283:AS" -> "162:AS";
	"283:AS" -> "168:AL";
	"193:AS" -> "291:AL";
	"243:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f9338904750>",
		clk_sens=True,
		fillcolor=gold,
		label="243:AL",
		sens="['SBYTECLK', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'A', 'C', 'B', 'E', 'D', 'K', 'L04', 'L13', 'L40', 'L22']"];
	"193:AS" -> "243:AL";
	"207:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f933891ffd0>",
		def_var="['ND_1S6']",
		fillcolor=deepskyblue,
		label="207:AS
ND_1S6 = K | E & !L22 & !L13 | !E & !D & C & B & A;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['K', 'E', 'L22', 'L13', 'E', 'D', 'C', 'B', 'A']"];
	"193:AS" -> "207:AS";
	"206:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f933891fa10>",
		def_var="['PDOS6']",
		fillcolor=deepskyblue,
		label="206:AS
PDOS6 = K | E & !L22 & !L13;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['K', 'E', 'L22', 'L13']"];
	"193:AS" -> "206:AS";
	"201:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f933891f590>",
		def_var="['PD_1S6']",
		fillcolor=deepskyblue,
		label="201:AS
PD_1S6 = E & D & !C & !B & !A | !E & !L22 & !L31;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['E', 'D', 'C', 'B', 'A', 'E', 'L22', 'L31']"];
	"227:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f93389248d0>",
		clk_sens=True,
		fillcolor=gold,
		label="227:AL",
		sens="['SBYTECLK', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'PD_1S6', 'PD_1S4', 'DISPARITY6', 'disparity', 'ND_1S4', 'ND_1S6']"];
	"201:AS" -> "227:AL";
	"205:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f933891f690>",
		def_var="['NDOS6']",
		fillcolor=deepskyblue,
		label="205:AS
NDOS6 = PD_1S6;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['PD_1S6']"];
	"201:AS" -> "205:AS";
	"169:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f9338d4e390>",
		fillcolor=springgreen,
		label="169:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"173:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f9338d4e710>",
		fillcolor=turquoise,
		label="173:BL
disparity <= (PDOS4 | NDOS4) ^ DISPARITY6;
{ a, b, c, d, e, i, f, g, h, j } <= { NAO ^ COMPLS6, NBO ^ COMPLS6, NCO ^ COMPLS6, \
NDO ^ COMPLS6, NEO ^ COMPLS6, NIO ^ COMPLS6, NFO ^ COMPLS4, NGO ^ COMPLS4, NHO ^ COMPLS4, NJO ^ COMPLS4 };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9338d4e550>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f9338d55150>]",
		style=filled,
		typ=Block];
	"169:IF" -> "173:BL"	 [cond="['reset']",
		label="!(reset)",
		lineno=169];
	"170:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f9338d4e050>",
		fillcolor=turquoise,
		label="170:BL
disparity <= 1'b0;
{ a, b, c, d, e, i, f, g, h, j } <= 10'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f933897af10>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f9338d4e310>]",
		style=filled,
		typ=Block];
	"169:IF" -> "170:BL"	 [cond="['reset']",
		label=reset,
		lineno=169];
	"228:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f9338924c10>",
		fillcolor=springgreen,
		label="228:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"227:AL" -> "228:IF"	 [cond="[]",
		lineno=None];
	"213:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f9338922210>",
		def_var="['ND_1S4']",
		fillcolor=deepskyblue,
		label="213:AS
ND_1S4 = F & G;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['F', 'G']"];
	"213:AS" -> "227:AL";
	"Leaf_227:AL"	 [def_var="['COMPLS4', 'COMPLS6']",
		label="Leaf_227:AL"];
	"Leaf_227:AL" -> "168:AL";
	"310:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f9338c3b490>",
		def_var="['NJO']",
		fillcolor=deepskyblue,
		label="310:AS
NJO = tNJO | alt7;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['tNJO', 'alt7']"];
	"310:AS" -> "162:AS";
	"310:AS" -> "168:AL";
	"215:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f9338922a10>",
		def_var="['PD_1S4']",
		fillcolor=deepskyblue,
		label="215:AS
PD_1S4 = !F & !G | K & (F & !G | !F & G);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['F', 'G', 'K', 'F', 'G', 'F', 'G']"];
	"215:AS" -> "227:AL";
	"244:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f9338917750>",
		fillcolor=springgreen,
		label="244:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"243:AL" -> "244:IF"	 [cond="[]",
		lineno=None];
	"214:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f9338922490>",
		def_var="['NDOS4']",
		fillcolor=deepskyblue,
		label="214:AS
NDOS4 = !F & !G;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['F', 'G']"];
	"214:AS" -> "168:AL";
	"194:AS" -> "291:AL";
	"194:AS" -> "201:AS";
	"223:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f9338924490>",
		def_var="['illegalk']",
		fillcolor=deepskyblue,
		label="223:AS
illegalk = K & (A | B | !C | !D | !E) & (!F | !G | !H | !E | !L31);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['K', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'E', 'L31']"];
	"194:AS" -> "223:AS";
	"Leaf_168:AL"	 [def_var="['a', 'disparity']",
		label="Leaf_168:AL"];
	"173:BL" -> "Leaf_168:AL"	 [cond="[]",
		lineno=None];
	"282:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f933892d1d0>",
		def_var="['NEO']",
		fillcolor=deepskyblue,
		label="282:AS
NEO = tNEOx & tNEOy;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['tNEOx', 'tNEOy']"];
	"282:AS" -> "162:AS";
	"282:AS" -> "168:AL";
	"225:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f9338924690>",
		def_var="['DISPARITY6']",
		fillcolor=deepskyblue,
		label="225:AS
DISPARITY6 = disparity ^ (NDOS6 | PDOS6);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['disparity', 'NDOS6', 'PDOS6']"];
	"205:AS" -> "225:AS";
	"Leaf_243:AL" -> "283:AS";
	"Leaf_243:AL" -> "282:AS";
	"279:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f9338923cd0>",
		def_var="['NBO']",
		fillcolor=deepskyblue,
		label="279:AS
NBO = tNBOx | tNBOy;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['tNBOx', 'tNBOy']"];
	"Leaf_243:AL" -> "279:AS";
	"278:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f9338923b10>",
		def_var="['NAO']",
		fillcolor=deepskyblue,
		label="278:AS
NAO = tNAO;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['tNAO']"];
	"Leaf_243:AL" -> "278:AS";
	"280:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f9338923e90>",
		def_var="['NCO']",
		fillcolor=deepskyblue,
		label="280:AS
NCO = tNCOx | tNCOy;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['tNCOx', 'tNCOy']"];
	"Leaf_243:AL" -> "280:AS";
	"281:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f9338923fd0>",
		def_var="['NDO']",
		fillcolor=deepskyblue,
		label="281:AS
NDO = tNDO;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['tNDO']"];
	"Leaf_243:AL" -> "281:AS";
	"232:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f9338924f90>",
		fillcolor=turquoise,
		label="232:BL
COMPLS4 <= PD_1S4 & !DISPARITY6 | ND_1S4 & DISPARITY6;
COMPLS6 <= PD_1S6 & !disparity | ND_1S6 & disparity;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9338924d50>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f9338904090>]",
		style=filled,
		typ=Block];
	"232:BL" -> "Leaf_227:AL"	 [cond="[]",
		lineno=None];
	"244:IF" -> "258:BL"	 [cond="['reset']",
		label="!(reset)",
		lineno=244];
	"244:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f9338917550>",
		fillcolor=turquoise,
		label="244:BL
tNAO <= 0;
tNBOx <= 0;
tNBOy <= 0;
tNCOx <= 0;
tNCOy <= 0;
tNDO <= 0;
tNEOx <= 0;
tNEOy <= 0;
tNIOw <= 0;
tNIOx <= 0;
tNIOy <= \
0;
tNIOz <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f93389048d0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f9338904a10>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9338904b50>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f9338904c90>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9338904dd0>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f9338904f10>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9338917090>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f93389171d0>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9338917310>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f9338917450>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9338917590>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f93389176d0>]",
		style=filled,
		typ=Block];
	"244:IF" -> "244:BL"	 [cond="['reset']",
		label=reset,
		lineno=244];
	"207:AS" -> "227:AL";
	"158:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f933897a5d0>",
		def_var="['tbi']",
		fillcolor=deepskyblue,
		label="158:AS
tbi[9:0] = { a, b, c, d, e, i, f, g, h, j };",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['a', 'b', 'c', 'd', 'e', 'i', 'f', 'g', 'h', 'j']"];
	"299:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f9338c25bd0>",
		fillcolor=turquoise,
		label="299:BL
alt7 <= F & G & H & (K | ((disparity)? !E & D & L31 : E & !D & L13));
tNFO <= F;
tNGO <= G | !F & !G & !H;
tNHO <= H;
tNJO <= !\
H & (G ^ F);",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9338c25650>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f9338c25690>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9338c25b10>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f9338c25c10>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9338c25e90>]",
		style=filled,
		typ=Block];
	"292:IF" -> "299:BL"	 [cond="['reset']",
		label="!(reset)",
		lineno=292];
	"292:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f933892dd50>",
		fillcolor=turquoise,
		label="292:BL
alt7 <= 0;
tNFO <= 0;
tNGO <= 0;
tNHO <= 0;
tNJO <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f933892d9d0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f933892db10>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f933892dc50>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f933892dd90>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f933892ded0>]",
		style=filled,
		typ=Block];
	"292:IF" -> "292:BL"	 [cond="['reset']",
		label=reset,
		lineno=292];
	"Leaf_291:AL"	 [def_var="['alt7', 'tNGO', 'tNFO', 'tNJO', 'tNHO']",
		label="Leaf_291:AL"];
	"299:BL" -> "Leaf_291:AL"	 [cond="[]",
		lineno=None];
	"225:AS" -> "227:AL";
	"225:AS" -> "168:AL";
	"Leaf_291:AL" -> "307:AS";
	"Leaf_291:AL" -> "309:AS";
	"Leaf_291:AL" -> "310:AS";
	"308:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f9338c3b190>",
		def_var="['NGO']",
		fillcolor=deepskyblue,
		label="308:AS
NGO = tNGO;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['tNGO']"];
	"Leaf_291:AL" -> "308:AS";
	"308:AS" -> "162:AS";
	"308:AS" -> "168:AL";
	"Leaf_168:AL" -> "291:AL";
	"Leaf_168:AL" -> "227:AL";
	"Leaf_168:AL" -> "158:AS";
	"Leaf_168:AL" -> "225:AS";
	"244:BL" -> "Leaf_243:AL"	 [cond="[]",
		lineno=None];
	"168:AL" -> "169:IF"	 [cond="[]",
		lineno=None];
	"279:AS" -> "162:AS";
	"279:AS" -> "168:AL";
	"190:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f9338d55910>",
		def_var="['L40']",
		fillcolor=deepskyblue,
		label="190:AS
L40 = A & B & C & D;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['A', 'B', 'C', 'D']"];
	"190:AS" -> "243:AL";
	"292:BL" -> "Leaf_291:AL"	 [cond="[]",
		lineno=None];
	"228:IF" -> "232:BL"	 [cond="['reset']",
		label="!(reset)",
		lineno=228];
	"228:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f9338924a10>",
		fillcolor=turquoise,
		label="228:BL
COMPLS4 <= 0;
COMPLS6 <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f9338924a50>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f9338924b90>]",
		style=filled,
		typ=Block];
	"228:IF" -> "228:BL"	 [cond="['reset']",
		label=reset,
		lineno=228];
	"170:BL" -> "Leaf_168:AL"	 [cond="[]",
		lineno=None];
	"278:AS" -> "162:AS";
	"278:AS" -> "168:AL";
	"191:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f9338d55b90>",
		def_var="['L04']",
		fillcolor=deepskyblue,
		label="191:AS
L04 = !A & !B & !C & !D;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['A', 'B', 'C', 'D']"];
	"191:AS" -> "243:AL";
	"216:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f9338922b50>",
		def_var="['PDOS4']",
		fillcolor=deepskyblue,
		label="216:AS
PDOS4 = F & G & H;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['F', 'G', 'H']"];
	"216:AS" -> "168:AL";
	"280:AS" -> "162:AS";
	"280:AS" -> "168:AL";
	"195:AS" -> "201:AS";
	"195:AS" -> "243:AL";
	"195:AS" -> "207:AS";
	"195:AS" -> "206:AS";
	"153:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f933904cf90>",
		def_var="['H']",
		fillcolor=deepskyblue,
		label="153:AS
{ H, G, F, E, D, C, B, A } = ebi[7:0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ebi']"];
	"153:AS" -> "291:AL";
	"153:AS" -> "223:AS";
	"153:AS" -> "216:AS";
	"281:AS" -> "162:AS";
	"281:AS" -> "168:AL";
	"228:BL" -> "Leaf_227:AL"	 [cond="[]",
		lineno=None];
	"206:AS" -> "225:AS";
}
