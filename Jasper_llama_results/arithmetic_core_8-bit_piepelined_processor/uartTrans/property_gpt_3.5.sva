`include "defines.v"
module i_uartTrans(
		// input bit-stream
		input [1:0] stateReg, stateNext,	// current and next states
		input [2:0] nReg, nNext,		// counter
		input tx, txDoneTick,
		input		 txReg, txNext,	// current bit being transferred
		input [3:0] sReg, sNext,		//	counter
		input clk, reset, sTick, txStart,
		input [7:0] bReg, bNext,		// perhaps keeps data to be sent
		input [`dataBits-1 :0] din
);

assert property(@(posedge clk) (gnt1 == 1 & gnt2 == 0) |-> (tx == 1));
assert property(@(posedge clk) (gnt1 == 0 & gnt2 == 1) |-> (tx == 0));
assert property(@(posedge clk) (tx == 1) |-> (txDoneTick == 0));
assert property(@(posedge clk) (tx == 0) |-> (txDoneTick == 1));
endmodule