`include "defines.v"
parameter dataBits = `dataBits;
                parameter sbTick = `sbTick;

        localparam [1:0] idle = 2'b00, start = 2'b01, data = 2'b10, stop = 2'b11;module i_uartTrans(
		// input bit-stream
		input [1:0] stateReg, stateNext,	// current and next states
		input [2:0] nReg, nNext,		// counter
		input tx, txDoneTick,
		input		 txReg, txNext,	// current bit being transferred
		input [3:0] sReg, sNext,		//	counter
		input clk, reset, sTick, txStart,
		input [7:0] bReg, bNext,		// perhaps keeps data to be sent
		input [`dataBits-1 :0] din
);

assert property(@(posedge clk) (stateReg == idle && txStart) |-> (tx == 1));assert property(@(posedge clk) (stateReg == start && sTick && sReg == 15) |-> (stateNext == data));assert property(@(posedge clk) (stateReg == data && sTick && sReg == 15 && nReg == (dataBits-1)) |-> (stateNext == stop));assert property(@(posedge clk) (stateReg == stop && sTick && sReg == sbTick-1) |-> (stateNext == idle));
endmodule
