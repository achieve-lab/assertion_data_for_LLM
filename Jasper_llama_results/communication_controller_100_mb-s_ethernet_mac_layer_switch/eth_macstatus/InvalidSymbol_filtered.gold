property a5;
@(posedge clk) (SetInvalidSymbol == 0 & LoadRxStatus == 1) |=> (InvalidSymbol == 0);
endproperty
assert_a5: assert property(a5);

property a9;
@(posedge clk) (SetInvalidSymbol == 1) |=> (InvalidSymbol == 1);
endproperty
assert_a9: assert property(a9);

property a1;
@(posedge clk) (MRxD[1] == 0 & LoadRxStatus == 1) |=> (InvalidSymbol == 0);
endproperty
assert_a1: assert property(a1);

property a0;
@(posedge clk) (MRxD[0] == 1 & LoadRxStatus == 1) |=> (InvalidSymbol == 0);
endproperty
assert_a0: assert property(a0);

property a2;
@(posedge clk) (MRxDV == 0 & LoadRxStatus == 1) |=> (InvalidSymbol == 0);
endproperty
assert_a2: assert property(a2);

property a3;
@(posedge clk) (MRxD[0] == 1 & MRxErr == 1 & MRxD[2] == 0) |=> (InvalidSymbol == 0);
endproperty
assert_a3: assert property(a3);

property a4;
@(posedge clk) (MRxD[0] == 1 & MRxD[1] == 0 & MRxDV == 1 & MRxD[2] == 0) |=> (InvalidSymbol == 0);
endproperty
assert_a4: assert property(a4);

property a7;
@(posedge clk) (MRxD[0] == 1 & MRxD[2] == 1 & MRxDV == 0 & MRxD[1] == 1 & MRxErr == 0) |=> (InvalidSymbol == 0);
endproperty
assert_a7: assert property(a7);

property a6;
@(posedge clk) (MRxD[0] == 1 & MRxErr == 1 & MRxDV == 0 & MRxD[1] == 0) |=> (InvalidSymbol == 0);
endproperty
assert_a6: assert property(a6);

property a8;
@(posedge clk) (MRxD[1] == 0 & MRxD[2] == 1 & MRxD[0] == 0 & MRxErr == 1) |=> (InvalidSymbol == 0);
endproperty
assert_a8: assert property(a8);

