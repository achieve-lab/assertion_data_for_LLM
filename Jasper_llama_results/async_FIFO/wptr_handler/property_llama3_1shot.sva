module i_wptr_handler #(parameter PTR_WIDTH=3)(
  input [PTR_WIDTH:0] b_wptr, g_wptr,
  input wrap_around,
  input [PTR_WIDTH:0] b_wptr_next,
  input wclk, wrst_n, w_en,
  input [PTR_WIDTH:0] g_rptr_sync,
  input wfull,
  input [PTR_WIDTH:0] g_wptr_next,
  input full
);

assert property(@(posedge wclk)  (b_wptr_next == b_wptr + 1) |-> (g_wptr_next == (b_wptr_next >>1)^b_wptr_next));
assert property(@(posedge wclk)  (req2 == 1) |-> (gnt2 == 1));
assert property(@(posedge wclk)              (w_en == 1 & full == 0) |-> (b_wptr_next == b_wptr + 1));
assert property(@(posedge wclk)  (req2 == 0) |-> (gnt2 == 0));
assert property(@(posedge wclk)  (req1 == 0 & req2 == 0) |-> (gnt2 == 0));
assert property(@(posedge wclk)  endmodule            Test Assertions:             (rst == 1) |-> (gnt1 == 0));
assert property(@(posedge wclk)  (w_en == 0) |-> (b_wptr_next == b_wptr));
assert property(@(posedge wclk)  (b_wptr_next == b_wptr + 1) |-> (wfull == (g_wptr_next == {~g_rptr_sync[PTR_WIDTH:PTR_WIDTH-1], g_rptr_sync[PTR_WIDTH-2:0]})));
assert property(@(posedge wclk)  endmodule            Test Assertions:             (w_en == 1 & full == 0) |-> (b_wptr_next == b_wptr + 1));
assert property(@(posedge wclk)  (req1 == 1 & req2 == 0) |-> (gnt1 == 1));
assert property(@(posedge wclk)  (req1 == 1 & req2 == 0) |-> (gnt2 == 0));
assert property(@(posedge wclk)  (w_en == 0) |-> (g_wptr_next == g_wptr));
assert property(@(posedge wclk)  (req1 == 0 & req2 == 1) |-> (gnt2 == 1));
assert property(@(posedge wclk)  (req1 == 0 & req2 == 0) |-> (gnt1 == 0));
assert property(@(posedge wclk)  (wfull == 0) |-> (full == 0));
assert property(@(posedge wclk)  (req1 == 1) |-> (gnt1 == 1));
assert property(@(posedge wclk)  (req1 == 0) |-> (gnt1 == 0));
assert property(@(posedge wclk)  (w_en == 0) |-> (wfull == 0));
assert property(@(posedge wclk)  (req1 == 1 & req2 == 1) |-> (gnt1 == 0));
assert property(@(posedge wclk)  (req1 == 0 & req2 == 1) |-> (gnt1 == 0));
assert property(@(posedge wclk)  (rst == 1) |-> (gnt2 == 0));
assert property(@(posedge wclk)  (req1 == 1 & req2 == 1) |-> (gnt2 == 1));
assert property(@(posedge wclk)  (wfull == 1) |-> (full == 1));

endmodule