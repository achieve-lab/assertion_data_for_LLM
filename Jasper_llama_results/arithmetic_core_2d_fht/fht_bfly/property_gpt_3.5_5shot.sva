parameter N = 8;
module i_fht_bfly(
input			clk,
	input [N-1:0] co,sum,
input	[N-1:0]	b, // input
input [N-1:0] b_FF,
  	input [N:0] plus1,
	input  ci,
input			valid,
  	input [N-1:0] ainv,
input	[N  :0]	d, // subtractive input
input	[N  :0]	c, // additive input
input [N-1:0] a_FF,
input			rstn,
	input [N-1:0] a
);

assert property(@(posedge clk) (a_FF[0] == 1'b1 && a_FF[1] == 1'b0) |-> (c[0] == 1'b1));assert property(@(posedge clk) (a_FF[0] == 1'b0 && a_FF[1] == 1'b1) |-> (c[0] == 1'b0));assert property(@(posedge clk) (a_FF[0] == 1'b1 && a_FF[1] == 1'b0) |-> (d[0] == 1'b1));assert property(@(posedge clk) (a_FF[0] == 1'b0 && a_FF[1] == 1'b1) |-> (d[0] == 1'b0));assert property(@(posedge clk) (b_FF[0] == 1'b1 && b_FF[1] == 1'b0) |-> (c[0] == 1'b1));assert property(@(posedge clk) (b_FF[0] == 1'b0 && b_FF[1] == 1'b1) |-> (c[0] == 1'b0));assert property(@(posedge clk) (b_FF[0] == 1'b1 && b_FF[1] == 1'b0) |-> (d[0] == 1'b1));assert property(@(posedge clk) (b_FF[0] == 1'b0 && b_FF[1] == 1'b1) |-> (d[0] == 1'b0));
endmodule