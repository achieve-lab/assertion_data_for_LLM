module i_cavlc_read_run_befores(
input  [8:0]   coeff_6,
input   [8:0]   level_5,
input  [8:0]   coeff_9,
input   sel,
input  [3:0]   len_comb,
input     [8:0]   coeff,
input   [8:0]   level_6,
input   ena,
input  [8:0]   coeff_14,
input     [8:0]   coeff_12,
input   clr,
input  [8:0]   coeff_1,
input   [0:10]  rbsp,
input  [8:0]   coeff_4,
input   [8:0]   level_7,
input   [8:0]   level_15,
input   clk,
input   [3:0]   i,          //range from TotalCoeff-1 to 0
input   [8:0]   level_0,
input   [8:0]   level_12,
input  [8:0]   coeff_11,
input     [8:0]   coeff_10,
input  [8:0]   coeff_3,
input   [8:0]   level_14,
input   [8:0]   level_4,
input     [8:0]   coeff_13,
input   [8:0]   level_3,
input     [8:0]   coeff_5,
input     [3:0]   run,
input  [8:0]   coeff_7,
input  [8:0]   coeff_15,
input     [8:0]   coeff_0,
input   [8:0]   level_1,
input     [3:0]   len,
input  [8:0]   coeff_2,
input   [8:0]   level_10,
input   [8:0]   level_9,
input   ZeroLeft_init,
input   [8:0]   level_13,
input  [8:0]   coeff_8,
input   [8:0]   level_11,
input     [3:0]   ZeroLeft,
input   [3:0]   TotalZeros_comb,
input   rst_n,
input  [8:0] level_8,
input   [8:0]   level_2
);

assert property(@(posedge clk) (ena && sel && ZeroLeft > 0 && i == 0) |-> (coeff_0 == level_0));assert property(@(posedge clk) (ena && sel && ZeroLeft > 0 && i == 1) |-> (coeff_1 == level_1));assert property(@(posedge clk) (ena && sel && ZeroLeft > 0 && i == 2) |-> (coeff_2 == level_2));assert property(@(posedge clk) (ena && sel && ZeroLeft > 0 && i == 3) |-> (coeff_3 == level_3));assert property(@(posedge clk) (ena && sel && ZeroLeft > 0 && i == 4) |-> (coeff_4 == level_4));assert property(@(posedge clk) (ena && sel && ZeroLeft > 0 && i == 5) |-> (coeff_5 == level_5));assert property(@(posedge clk) (ena && sel && ZeroLeft > 0 && i == 6) |-> (coeff_6 == level_6));assert property(@(posedge clk) (ena && sel && ZeroLeft > 0 && i == 7) |-> (coeff_7 == level_7));assert property(@(posedge clk) (ena && sel && ZeroLeft > 0 && i == 8) |-> (coeff_8 == level_8));assert property(@(posedge clk) (ena && sel && ZeroLeft > 0 && i == 9) |-> (coeff_9 == level_9));assert property(@(posedge clk) (ena && sel && ZeroLeft > 0 && i == 10) |-> (coeff_10 == level_10));assert property(@(posedge clk) (ena && sel && ZeroLeft > 0 && i == 11) |-> (coeff_11 == level_11));assert property(@(posedge clk) (ena && sel && ZeroLeft > 0 && i == 12) |-> (coeff_12 == level_12));assert property(@(posedge clk) (ena && sel && ZeroLeft > 0 && i == 13) |-> (coeff_13 == level_13));assert property(@(posedge clk) (ena && sel && ZeroLeft > 0 && i == 14) |-> (coeff_14 == level_14));assert property(@(posedge clk) (ena && sel && ZeroLeft > 0 && i == 15) |-> (coeff_15 == level_15));assert property(@(posedge clk) (ena && sel && ZeroLeft == 0 && i > 0) |-> (len_comb == len));assert property(@(posedge clk) (ena && sel && ZeroLeft == 0 && i == 0) |-> (len_comb == 0));
endmodule