module i_cavlc_read_run_befores(
input  [8:0]   coeff_6,
input   [8:0]   level_5,
input  [8:0]   coeff_9,
input   sel,
input  [3:0]   len_comb,
input     [8:0]   coeff,
input   [8:0]   level_6,
input   ena,
input  [8:0]   coeff_14,
input     [8:0]   coeff_12,
input   clr,
input  [8:0]   coeff_1,
input   [0:10]  rbsp,
input  [8:0]   coeff_4,
input   [8:0]   level_7,
input   [8:0]   level_15,
input   clk,
input   [3:0]   i,          //range from TotalCoeff-1 to 0
input   [8:0]   level_0,
input   [8:0]   level_12,
input  [8:0]   coeff_11,
input     [8:0]   coeff_10,
input  [8:0]   coeff_3,
input   [8:0]   level_14,
input   [8:0]   level_4,
input     [8:0]   coeff_13,
input   [8:0]   level_3,
input     [8:0]   coeff_5,
input     [3:0]   run,
input  [8:0]   coeff_7,
input  [8:0]   coeff_15,
input     [8:0]   coeff_0,
input   [8:0]   level_1,
input     [3:0]   len,
input  [8:0]   coeff_2,
input   [8:0]   level_10,
input   [8:0]   level_9,
input   ZeroLeft_init,
input   [8:0]   level_13,
input  [8:0]   coeff_8,
input   [8:0]   level_11,
input     [3:0]   ZeroLeft,
input   [3:0]   TotalZeros_comb,
input   rst_n,
input  [8:0] level_8,
input   [8:0]   level_2
);

assert property(@(posedge clk) (ena && sel && ZeroLeft == 1) |-> (len == 0 && run == 0);
assert property(@(posedge clk) (ena && sel && ZeroLeft == 2) |-> (len == 1 && run == 0);
assert property(@(posedge clk) (ena && sel && ZeroLeft == 3) |-> (len == 1 && run == 1);
assert property(@(posedge clk) (ena && sel && ZeroLeft == 4) |-> (len == 1 && run == 2);
assert property(@(posedge clk) (ena && sel && ZeroLeft == 5) |-> (len == 1 && run == 3);
assert property(@(posedge clk) (ena && sel && ZeroLeft == 6) |-> (len == 1 && run == 4);
assert property(@(posedge clk) (ena && sel && ZeroLeft == 7) |-> (len == 1 && run == 5);
assert property(@(posedge clk) (ena && sel && ZeroLeft == 8) |-> (len == 1 && run == 6);
assert property(@(posedge clk) (ena && sel && ZeroLeft == 9) |-> (len == 1 && run == 7);
assert property(@(posedge clk) (ena && sel && ZeroLeft == 10) |-> (len == 1 && run == 8);
assert property(@(posedge clk) (ena && sel && ZeroLeft == 11) |-> (len == 1 && run == 9);
assert property(@(posedge clk) (ena && sel && ZeroLeft == 12) |-> (len == 1 && run == 10);
assert property(@(posedge clk) (ena && sel && ZeroLeft == 13) |-> (len == 1 && run == 11);
assert property(@(posedge clk) (ena && sel && ZeroLeft == 14) |-> (len == 1 && run == 12);
assert property(@(posedge clk) (ena && sel && ZeroLeft == 15) |-> (len == 1 && run == 13);
assert property(@(posedge clk) (ena && sel && ZeroLeft == 16) |-> (len == 1 && run == 14);
assert property(@(posedge clk) (ena && sel && ZeroLeft == 17) |-> (len == 1 && run == 15);
assert property(@(posedge clk) (ena && sel && ZeroLeft == 18) |-> (len == 1 && run == 0);
assert property(@(posedge clk) (ena && sel && ZeroLeft == 19) |-> (len == 1 && run == 1);
assert property(@(posedge clk) (ena && sel && ZeroLeft == 20) |-> (len == 1 && run == 2);
assert property(@(posedge clk) (ena && sel && ZeroLeft == 21) |-> (len == 1 && run == 3);
assert property(@(posedge clk) (ena && sel && ZeroLeft == 22) |-> (len == 1 && run == 4);
assert property(@(posedge clk) (ena && sel && ZeroLeft == 23) |-> (len == 1 && run == 5);
assert property(@(posedge clk) (ena && sel && ZeroLeft == 24) |-> (len == 1 && run == 6);
assert property(@(posedge clk) (ena && sel && ZeroLeft == 25) |-> (len == 1 && run == 7);
assert property(@(posedge clk) (ena && sel && ZeroLeft == 26) |-> (len == 1 && run == 8);
assert property(@(posedge clk) (ena && sel && ZeroLeft == 27) |-> (len == 1 && run == 9);
assert property(@(posedge clk) (ena && sel && ZeroLeft == 28) |-> (len == 1 && run == 10);
assert property(@(posedge clk) (ena && sel && ZeroLeft == 29) |-> (len == 1 && run == 11);
assert property(@(posedge clk) (ena && sel && ZeroLeft == 30) |-> (len == 1 && run == 12);
assert property(@(posedge clk) (ena && sel && ZeroLeft == 31) |-> (len == 1 && run == 13);
assert property(@(posedge clk) (ena && sel && ZeroLeft == 32) |-> (len == 1 && run == 14);
assert property(@(posedge clk) (ena && sel && ZeroLeft == 33) |-> (len == 1 && run == 15);
endmodule