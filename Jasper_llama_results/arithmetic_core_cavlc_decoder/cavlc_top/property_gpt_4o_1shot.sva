module i_cavlc_top(
input [4:0] len_read_total_coeffs_comb,
input    [8:0]   level_5,
input    [8:0]   level_2,
input  valid,
input [1:0] TrailingOnes,
input    [8:0]   level_4,
input   start,
input   [0:15]  rbsp,
input    [3:0]   len_read_total_zeros_comb,
input    [8:0]   level_3,
input  signed [8:0]    coeff_9,
input    [8:0]   level_0,
input  signed [8:0]    coeff_6,
input  signed [8:0]    coeff_7,
input    [8:0]   level_6,
input    [8:0]   level_14,
input    [3:0]   len_read_run_befores_comb,
input    [8:0]   level_1,
input [4:0] TotalCoeff_comb,
input  signed [8:0]    coeff_14,
input  signed [8:0]    coeff_8,
input  signed [8:0]    coeff_12,
input   clk, rst_n,
input    [8:0]   level_11,
input  signed [8:0]    coeff_5,
input  idle,
input  signed [8:0]    coeff_3,
input   [4:0]   max_coeff_num,
input  signed [8:0]    coeff_1,
input  signed [8:0]    coeff_11,
input  signed [8:0]    coeff_10,
input [1:0] TrailingOnes_comb,
input [7:0] cavlc_state,
input    [4:0]   len_read_levels_comb,
input    [3:0]   i,
input    [8:0]   level_9,
input [4:0] len_comb,
input  signed [8:0]    coeff_0,
input    [8:0]   level_10,
input  signed [8:0]    coeff_15,
input   signed [5:0]    nC,
input    [8:0]   level_8,
input  signed [8:0]    coeff_4,
input    [8:0]   level_12,
input    [3:0]   TotalZeros_comb,
input    [8:0]   level_7,
input    [3:0]   ZeroLeft,
input   ena,
input    [8:0]   level_13,
input [4:0] TotalCoeff,
input  signed [8:0]    coeff_2,
input  signed [8:0]    coeff_13,
input    [8:0]   level_15,

input  [7:0]  state,
input levels_abs_refresh,
input    [2:0]   tmp1,
input   t1s_sel,
input   prefix_sel,
input     [8:0]   level,
input   suffix_sel,
input     [3:0]   level_prefix,
input     [8:0]   level_abs,
input     [0:15]  rbsp_internal,        // reduce toggle rate
input     [8:0]   level_code_tmp,
input     [2:0]   suffixLength ,  // range from 0 to 6

input     [1:0]   TrailingOnes_3,
input     [4:0]   len_5,
input     [4:0]   TotalCoeff_5,
input     [4:0]   len_1,
input   sel,
input     [4:0]   len_2,
input     [1:0]   TrailingOnes_4,
input     [4:0]   TotalCoeff_1,
input     [4:0]   len_3,
input     [4:0]   TotalCoeff_4,
input     [4:0]   TotalCoeff_3,
input     [0:15]  rbsp_1,         
input     [4:0]   len_4,
input     [0:9]   rbsp_3,
input     [0:5]   rbsp_4,
input     [0:7]   rbsp_5,
input     [1:0]   TrailingOnes_5,
input     [1:0]   TrailingOnes_1,
input     [0:13]  rbsp_2,
input     [4:0]   TotalCoeff_2,
input     [1:0]   TrailingOnes_2
input   chroma_DC_sel,
input     [3:0]   len_comb,
input     [3:0]   TotalZeros_G3,
input     [0:2]   rbsp_chroma_DC,         
input   ena,
input     [1:0]   len_chroma_DC,
input     [3:0]   TotalZeros_LE3,
input     [0:5]   rbsp_G3,        
input   [0:8]   rbsp,
input     [1:0]   TotalZeros_chroma_DC,
input     [0:8]   rbsp_LE3,       
input     [3:0]   len_LE3,
input   sel,
input  [3:0]   TotalZeros_comb,
input     [2:0]   len_G3,
input   [3:0]   TotalCoeff
);

assert property(@(posedge clk)  (rst_n == 0) |-> (idle == 1));assert property(@(posedge clk)  (start == 1) |-> (idle == 0));assert property(@(posedge clk)  (ena == 1 && cavlc_state[`cavlc_read_total_coeffs_bit] == 1) |-> (TotalCoeff <= max_coeff_num));assert property(@(posedge clk)  (ena == 1 && cavlc_state[`cavlc_read_t1s_flags_bit] == 1) |-> (TrailingOnes <= 3));assert property(@(posedge clk)  (ena == 1 && cavlc_state[`cavlc_read_level_prefix_bit] == 1) |-> (level_0 <= 2047));assert property(@(posedge clk)  (ena == 1 && cavlc_state[`cavlc_read_level_suffix_bit] == 1) |-> (level_1 <= 2047));assert property(@(posedge clk)  (ena == 1 && cavlc_state[`cavlc_calc_level_bit] == 1) |-> (level_2 <= 2047));assert property(@(posedge clk)  (ena == 1 && cavlc_state[`cavlc_read_total_zeros_bit] == 1) |-> (TotalZeros_comb <= 15));assert property(@(posedge clk)  (ena == 1 && cavlc_state[`cavlc_read_run_befores_bit] == 1) |-> (ZeroLeft <= 15));assert property(@(posedge clk)  (valid == 1) |-> (idle == 0));assert property(@(posedge clk)  (idle == 1) |-> (valid == 0));assert property(@(posedge clk)  (cavlc_state[`cavlc_read_total_coeffs_bit] == 1) |-> (len_comb == len_read_total_coeffs_comb));assert property(@(posedge clk)  (cavlc_state[`cavlc_read_levels_bit] == 1) |-> (len_comb == len_read_levels_comb));assert property(@(posedge clk)  (cavlc_state[`cavlc_read_total_zeros_bit] == 1) |-> (len_comb == len_read_total_zeros_comb));assert property(@(posedge clk)  (cavlc_state[`cavlc_read_run_befores_bit] == 1) |-> (len_comb == len_read_run_befores_comb));assert property(@(posedge clk)  (cavlc_state[`cavlc_read_total_coeffs_bit] == 1) |-> (TotalCoeff == TotalCoeff_comb));assert property(@(posedge clk)  (cavlc_state[`cavlc_read_t1s_flags_bit] == 1) |-> (TrailingOnes == TrailingOnes_comb));assert property(@(posedge clk)  (cavlc_state[`cavlc_read_total_zeros_bit] == 1) |-> (ZeroLeft == TotalZeros_comb));assert property(@(posedge clk)  (cavlc_state[`cavlc_read_run_befores_bit] == 1) |-> (ZeroLeft == ZeroLeft));assert property(@(posedge clk)  (cavlc_state[`cavlc_read_levels_bit] == 1) |-> (level_0 == coeff_0));assert property(@(posedge clk)  (cavlc_state[`cavlc_read_levels_bit] == 1) |-> (level_1 == coeff_1));assert property(@(posedge clk)  (cavlc_state[`cavlc_read_levels_bit] == 1) |-> (level_2 == coeff_2));assert property(@(posedge clk)  (cavlc_state[`cavlc_read_levels_bit] == 1) |-> (level_3 == coeff_3));assert property(@(posedge clk)  (cavlc_state[`cavlc_read_levels_bit] == 1) |-> (level_4 == coeff_4));assert property(@(posedge clk)  (cavlc_state[`cavlc_read_levels_bit] == 1) |-> (level_5 == coeff_5));assert property(@(posedge clk)  (cavlc_state[`cavlc_read_levels_bit] == 1) |-> (level_6 == coeff_6));assert property(@(posedge clk)  (cavlc_state[`cavlc_read_levels_bit] == 1) |-> (level_7 == coeff_7));assert property(@(posedge clk)  (cavlc_state[`cavlc_read_levels_bit] == 1) |-> (level_8 == coeff_8));assert property(@(posedge clk)  (cavlc_state[`cavlc_read_levels_bit] == 1) |-> (level_9 == coeff_9));assert property(@(posedge clk)  (cavlc_state[`cavlc_read_levels_bit] == 1) |-> (level_10 == coeff_10));assert property(@(posedge clk)  (cavlc_state[`cavlc_read_levels_bit] == 1) |-> (level_11 == coeff_11));assert property(@(posedge clk)  (cavlc_state[`cavlc_read_levels_bit] == 1) |-> (level_12 == coeff_12));assert property(@(posedge clk)  (cavlc_state[`cavlc_read_levels_bit] == 1) |-> (level_13 == coeff_13));assert property(@(posedge clk)  (cavlc_state[`cavlc_read_levels_bit] == 1) |-> (level_14 == coeff_14));assert property(@(posedge clk) );
endmodule