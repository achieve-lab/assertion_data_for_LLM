module i_cavlc_fsm(
input idle,
input  ena,
input  [3:0]  ZeroLeft,
input  [1:0]  TrailingOnes,
input  start,
input [3:0]  i,
input  [7:0]  state,
input  [4:0]  TotalCoeff_comb,
input  [1:0]  TrailingOnes_comb,
input  clk,
input  [4:0]  TotalCoeff,
input  [4:0]  max_coeff_num,
input valid,
input  rst_n
);

assert property(@(posedge clk) (state == 0) |-> (valid == 0));
assert property(@(posedge clk) (state == 5) |-> (state == 2));
assert property(@(posedge clk) (state == 8) |-> (state == 0));
assert property(@(posedge clk) (state == 7) |-> (state == 8));
assert property(@(posedge clk) (state == 6) |-> (state == 7));
assert property(@(posedge clk) (state == 1) |-> (i == TotalCoeff_comb -1));
assert property(@(posedge clk)  (state == 0) |-> (i == 0));
assert property(@(posedge clk)             """
        ),
    )
    def test_verilog(self):
        self.verifyOutputs(self, VERILOG, UNSPECIFIED, UNSPECIFIED, UNSPECIFIED)

    @classmethod
    def tearDownClass(self):
        shutil.rmtree(TMP_DIR));
assert property(@(posedge clk) (state == 9) |-> (state == 0));
assert property(@(posedge clk) (state == 9) |-> (state == 9));
assert property(@(posedge clk) (state == 5) |-> (state == 6));
assert property(@(posedge clk) (state == 8) |-> (state == 9));
assert property(@(posedge clk) (state == 9) |-> (valid == 1));
assert property(@(posedge clk) (state == 4) |-> (state == 5));
assert property(@(posedge clk) (state == 1) |-> (valid == 0));
assert property(@(posedge clk) (state == 2) |-> (state == 3));
assert property(@(posedge clk) (state == 1) |-> (state == 2));
assert property(@(posedge clk) (state == 0) |-> (state == 0));
assert property(@(posedge clk) (state == 3) |-> (state == 4));
assert property(@(posedge clk) (state == 8) |-> (valid == 1));

endmodule