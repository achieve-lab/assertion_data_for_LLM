
module i_ge_1000baseX_sync(
   input 		       running_disparity,
   input               ebi_K,
   input          sync_status,
   input 	  rx_even_m_init, rx_even_m_set, rx_even_m_clr, rx_even_m_toggle,
   input [7:0]    ebi_rxd_out,
	input VALID,
	input K28_1_RX,
	input K28_5_RX,
	input K28_7_RX,
	input COMMA_RX,
	input COMMA_match,
	input cggood,
	input cgbad,
   input 	      INVALID,
   input 		       good_cgs_m_init, good_cgs_m_inc, good_cgs_m_cnt,
   input 		       running_disparity_positive_m_set,
    input [3:0] pcs_sync_present, pcs_sync_next,
   input               decoder_disparity_err,
   // rx_even input
   input               startup_enable,
   input 		       sync_m_acquired, sync_m_lost,
   input          ebi_K_out,
   input [7:0]    ebi_rxd_d1,  input          ebi_K_d1,
   input 		       running_disparity_negative_m_set,
   input           rx_even,
   input               ck,
   input               reset,
   input               loopback,
   input [4:0] ebi_rxd_X,  input [2:0] ebi_rxd_Y,
   input [2:0] 	       good_cgs,
   input [7:0] 	       ebi_rxd,
   input               decoder_coding_err,		     
   input               signal_detect
   // sync state machine inputistered part.
);

property a1;
@(posedge ck) (ebi_K_d1 == 1) |=> (ebi_K_out == 1);
endproperty
assert_a1: assert property(a1);

property a0;
@(posedge ck) (ebi_K_d1 == 0) |=> (ebi_K_out == 0);
endproperty
assert_a0: assert property(a0);

endmodule
