# ----------------------------------------
# Jasper Version Info
# tool      : Jasper 2024.03
# platform  : Linux 4.18.0-513.24.1.el8_9.x86_64
# version   : 2024.03 FCS 64 bits
# build date: 2024.03.27 15:42:27 UTC
# ----------------------------------------
# started   : 2024-06-04 12:00:15 CDT
# hostname  : pal-achieve-07.(none)
# pid       : 33312
# arguments : '-label' 'session_0' '-console' '//127.0.0.1:34687' '-nowindow' '-style' 'windows' '-data' 'AAABNnicdY+9CsJAEIQnikEsfA4RFNQ2tW0UwTaEqDGiuZAfBRt9VN8kfh5GSOEutz8zO8ueI8l71HUta907wZWvJf4z5/UtPEdt+/SdNrJ+trLUa8TNiMsbaqJURoFiVUpAxiChzrjRDbyCL4gZbpSr1F47cF8bpvtMH2Cu1CNuXWkLF7EhJefMxmwtrCrXlByxWRqgy0CMTnTzv4rAXhLqwlvQzWCOqEr7gzcQnijb' '-proj' '/home/vpulav2/Work/Jasper_llama/communication_controller_can_protocol_controller/can_register/can_register_llama3_1shot/sessionLogs/session_0' '-init' '-hidden' '/home/vpulav2/Work/Jasper_llama/communication_controller_can_protocol_controller/can_register/can_register_llama3_1shot/.tmp/.initCmds.tcl' 'FPV_can_register.tcl'

Any disclosure about the Cadence Design Systems software or its use
model to any third party violates the written Non-Disclosure Agreement
between Cadence Design Systems, Inc. and the customer.

THIS SOFTWARE CONTAINS CONFIDENTIAL INFORMATION AND TRADE SECRETS OF
CADENCE DESIGN SYSTEMS, INC. USE, DISCLOSURE, OR REPRODUCTION IS
PROHIBITED WITHOUT THE PRIOR EXPRESS WRITTEN PERMISSION OF CADENCE
DESIGN SYSTEMS, INC.

Copyright (C) 2000-2024 Cadence Design Systems, Inc. All Rights
Reserved.  Unpublished -- rights reserved under the copyright laws of
the United States.

This product includes software developed by others and redistributed
according to license agreement. See doc/third_party_readme.txt for
further details.

RESTRICTED RIGHTS LEGEND

Use, duplication, or disclosure by the Government is subject to
restrictions as set forth in subparagraph (c) (1) (ii) of the Rights in
Technical Data and Computer Software clause at DFARS 252.227-7013 or
subparagraphs (c) (1) and (2) of Commercial Computer Software -- Restricted
Rights at 48 CFR 52.227-19, as applicable.


                          Cadence Design Systems, Inc.
                          2655 Seely Avenue
                          San Jose, CA 95134
                          Phone: 408.943.1234

For technical assistance visit http://support.cadence.com.

Jasper Apps Analysis Session - /home/vpulav2/Work/Jasper_llama/communication_controller_can_protocol_controller/can_register/can_register_llama3_1shot/sessionLogs/session_0

INFO: successfully checked out licenses "jasper_interactive" and "jasper_fao".
INFO: reading configuration file "/home/vpulav2/.config/cadence/jasper.conf".
% 
% 
% # Analyze design under verification files
% set ROOT_PATH ./
./
% set RTL_PATH ${ROOT_PATH}
./
% set PROP_PATH ${ROOT_PATH}
./
% 
% analyze -v2k \
  ${RTL_PATH}/can_register.v
[-- (VERI-1482)] Analyzing Verilog file './/can_register.v'
% 
% # Analyze property files
% analyze -sva \
  ${RTL_PATH}/bindings.sva \
  ${RTL_PATH}/property_llama3_1shot.sva
[-- (VERI-1482)] Analyzing Verilog file '/tools/Cadence/Jasper/jasper_2024.03/lib/verilog/packages/std/std.sv' into library 'std'
[-- (VERI-1482)] Analyzing Verilog file './/bindings.sva'
[-- (VERI-1482)] Analyzing Verilog file './/property_llama3_1shot.sva'
% 
% # Elaborate design and properties
% elaborate -top can_register
INFO (ISW003): Top module name is "can_register".
[WARN (VERI-2418)] .//property_llama3_1shot.sva(1): parameter 'WIDTH' declared inside compilation unit '\$unit____bindings_sva ' shall be treated as localparam
[INFO (HIER-8002)] .//can_register.v(103): Disabling old hierarchical reference handler
[INFO (VERI-1018)] .//property_llama3_1shot.sva(2): compiling module 'i_can_register'
[INFO (VERI-1018)] .//can_register.v(77): compiling module 'can_register'
INFO (INL208): Elaboration synthesis summary:
  Number of synthesized netlists          3 (1 packages)
  Single run mode                         On
  Pipeline                                On (2 pipelined netlists)
  Late hierarchical reference connection  On
  Number of analyzed Verilog modules      3 (3 synthesized)
  Number of analyzed VHDL entities        0 (0 synthesized)
INFO (INL003): Clearing all state information (assumes, stopats, and so forth).
can_register
[<embedded>] % 
[<embedded>] % # Set up Clocks and Resets
[<embedded>] % clock clk
[<embedded>] % reset -none
INFO (IPM031): Clearing proof results of all properties.
[<embedded>] % 
[<embedded>] % # Get design information to check general complexity
[<embedded>] % get_design_info
Statistics [for instance "can_register"]
---------------------------
# Flops:         1 (8) (0 property flop bits)
# Latches:       0 (0)
# Gates:         1399 (5223)
# Nets:          1425
# Ports:         4
# RTL Lines:     163
# RTL Instances: 2
# Embedded Assumptions: 0
# Embedded Assertions:  127
# Embedded Covers:      127
8
[<embedded>] % 
[<embedded>] % # Prove properties
[<embedded>] % prove -all
Ncustom1: Custom engine code is hT3Ng7hPPfiYQOTDZ3qhYOwGAM51eA+J/FjkM5shLioAsqhgLR4Ft+O1BuKG6ilQ83B9tLXSl+CwjiTMAQA
Bcustom2: Custom engine code is hT3Nm7hPr1Vp3Di1Ra2USNIGL4JypRnLKLAdF6JAyuavO2JfGCiY9OZJhcAcOUnLx5xwNdhILGrAWX9s+z2WDkKwNR7tAfClBEjRFVQeq6DU54boFgEA
AMcustom3: Custom engine code is hT3Ng7hP/feYQOTDZ3qhYOwGAM51eA+J/FjkM5shLioAsqhgLR4Ft+O1BuKG6ilQ83B9tLXSmmqwm7g9AQA
Mpcustom4: Custom engine code is hT3NZbhP9fmY2AbBQnsjfOxn6c+6e6yL+/e8fZFmaQrnlgEA
INFO (IPF036): Starting proof on task: "<embedded>", 254 properties to prove with 0 already proven/unreachable
INFO (IRS029): Starting reset analysis: phase 1 of 4.
INFO (IRS030): Running reset analysis: phase 2 of 4.
INFO (IRS031): Running reset analysis: phase 3 of 4.
INFO (IRS020): Starting the reset analysis simulation with a limit of 100 iterations (phase 4 of 4).
INFO (IRS024): Reset iterations 0 to 3 analyzed.
INFO (IRS018): Reset analysis simulation executed for 2 iterations. Assigned values for 0 of 8 design flops, 0 of 0 design latches, 254 of 254 internal elements.
INFO (IRS039): Reset analysis complete.
INFO (IPF031): Settings used for proof thread 0:
    orchestration                 = on
    time_limit                    = 86400s
    per_property_time_limit       = 1s * 10 ^ scan
    engine_mode                   = auto
    proofgrid_per_engine_max_jobs = 1
    max engine jobs               = auto
    proofgrid_mode                = local
    proofgrid_restarts            = 10
0: Using multistage preprocessing
0: Starting reduce
0: Finished reduce in 0s
0.0.PRE: Performing Proof Simplification...
0.0.N: clocks: 1, declared: 1, looping: 0, posedge: 1, negedge: 0, noedge: 0, bothedge: 0
0.0.N: Proof Simplification Iteration 1	[0.00 s]
0.0.N: Proof Simplification Iteration 2	[0.00 s]
0.0.PRE: A proof was found: No trace exists. [0.00 s]
INFO (IPF057): 0.0.PRE: The property ":noDeadEnd" was proven in 0.00 s.
    Use check_assumptions -show -dead_end to show this property in the property table.
0.0.PRE: A proof was found: No trace exists. [0.00 s]
INFO (IPF057): 0.0.PRE: The property ":noConflict" was proven in 0.00 s.
    Use check_assumptions -show to show this property in the property table.
INFO (IPF047): 0.0.PRE: The cover property ":live" was covered in 1 cycles in 0.00 s.
    Use check_assumptions -show -live to show this property in the property table.
0.0.PRE: Proof Simplification completed in 0.00 s
0: About to start ProofGrid in its own thread with a limit of 10000 pending notifications and a limit of 10 traces.
0: =============================== ProofGrid start ===============================
0: ProofGrid usable level: 254
0: Initial ProofGrid level: 1
0: ProofGrid is starting event handling
AMcustom5: Custom engine code is hT3N1rhP11/52HrFRS21ROp2LOjVTgPvT8L8BGXHgLhaIuqtT4nARFjUqrBL+7pLmaTOzBepZW/Jm8SSrHDybSQtoNiO3y43wk+dEoWlsZizu97Fih6O6lPVG/LpWP5SsUPwlGagLNa1FKEFvwVXyX7//8prySbvSxIHXr5er+z4RAEA
Ncustom6: Custom engine code is hT3OXrhPByJp3TrFSTLhUmMH4KVtJgmTCnNDF46yMXOKY48m4LS5nE7yBzFjA7kDuwO/GhGUpEPiky3p3wmPn3dJZHxFMsafSoObRzSC+tn7sEY0WbTdZ/FV4hL3MYH/b1CIUvXSWR4wqEoVLsmMOD4xIPT4lI1LO6ZCO7PnnWQuLwetnvKlrXx6wCW/A+x+enqslg1YPobi4wEF/EvbzOvcTYdJvl2s4H2yZg2b2ofAVN5WvhWk1HoBAA
ADcustom7: Custom engine code is hT3Nv7hPv1752HrFRa2kROx2f/ECJeZB2AZsLdlO8VwmIuqtT4nIDFXclhg+O+o+DMmQCekbheGk0kK28laA9gaOFDXsQp29J3X615HY1IPHJWd6FUFvCHjO+p1k652b5JJvZlShNpGlGSXAiQe/mEAj6tEBAA
Tricustom8: Custom engine code is hT3Nu7hPt1752DvFRa0kNDiyIV97VyejwM9C/jCLJjdPvusZONHY42VYUy0Q1ZotnhcVtNc56tJ5wbxv6V2+XpdsaSlHck5vfnbYjdwj1OECy9U+7oSQ0SZE3g5ayD+Phuh4odCJTjeKa2k4elM9ldQfkAEA
Gcustom9: Custom engine code is hT3NibhPDfeYQADBZnYcglOvK9Pfd7EOeniIqP8jNsyIqInncipMGcUXqAadachREE9F2PwhBUZUNw5kHnd4JdXkamORRgEA
C2custom10: Custom engine code is hT3NirhPjfWYQADBZnYcglOvK9Pfd7EOeniIqP8jNsyIqInncgkrYMMXCYbdK0dUjZIF9d4cJ0rHoBDjwVLBKuG86XYVV00BAA
AGcustom11: Custom engine code is hT3NirhP/fmYQADBZnYcglOvK9Pfd7EOeniIqP8jNsyIqInnckcwYMMXCYbdK0dUjZIF9d4cJ0rHoBDjwVLBKuHEZnZByh0BAA
Bcustom12: Custom engine code is hT3NjrhPDfiYQADBZnYcglOvK9PfWxFtenjIyBqfrgr7if/jL/yPOuK1BAflEcW0DxNH2eDIoezN2gxlQFg81RZtiWXh7aiTAidvAQA
Ncustom13: Custom engine code is hT3NR7hPByFp3TrFSTLhUmMH4KWtJglTyV/c51BHEeZWamnJv767nE6PCak26bd3gf3XGN3rIRheufhDieCJQVISo+gNYUKhiUedBKGtsP/a18svAnlMJZudHxDFwK5ufsyoxsIyiAeSY2oi3tEuoDHr5gw42DFKAG3PqO3CEsl8Azzdt3pl5nGA1Ifv2H02eYsFzWb/nfp8PMb3F0krE/EgBcm8TD9Div8BAA
Tricustom14: Custom engine code is hT3Nu7hP3fiYQADBZnYcglNHp9bfd7EOeniIqP/ji8sGLQu8yhsFO+wxJ+O+R0bU8g/IewXFomyos+viQnWc2xYNYmMqpo3i40O7DaZR7qfp4YqNx26KRvQ/qx0BAA
0.0.N: pal-achieve-07: "AlmaLinux 8.9 (Midnight Oncilla)" is an unsupported operating system.
0.0.N: Proofgrid shell started at 33360@pal-achieve-07(local) jg_33312_pal-achieve-07_1
0.0.N: clocks: 1, declared: 1, looping: 0, posedge: 1, negedge: 0, noedge: 0, bothedge: 0
0.0.N: Next scan (0) will use per property time limit: 1s * 10 ^ 0 = 1s
0.0.N: Starting proof for property "can_register.v_can_register._assert_1"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: A trace with 1 cycles was found. [0.00 s]
INFO (IPF055): 0.0.N: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_1" in 0.10 s.
INFO (IPF047): 0.0.N: The cover property "can_register.v_can_register._assert_1:precondition1" was covered in 1 cycles in 0.10 s by the incidental trace "can_register.v_can_register._assert_1".
0.0.N: Stopped processing property "can_register.v_can_register._assert_1"	[0.10 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_2"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: A trace with 1 cycles was found. [0.00 s]
INFO (IPF055): 0.0.N: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_2" in 0.00 s.
INFO (IPF047): 0.0.N: The cover property "can_register.v_can_register._assert_2:precondition1" was covered in 1 cycles in 0.00 s by the incidental trace "can_register.v_can_register._assert_2".
0.0.N: Stopped processing property "can_register.v_can_register._assert_2"	[0.00 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_3"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: A trace with 1 cycles was found. [0.00 s]
INFO (IPF055): 0.0.N: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_3" in 0.00 s.
INFO (IPF047): 0.0.N: The cover property "can_register.v_can_register._assert_3:precondition1" was covered in 1 cycles in 0.00 s by the incidental trace "can_register.v_can_register._assert_3".
0.0.N: Stopped processing property "can_register.v_can_register._assert_3"	[0.00 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_4"	[0.00 s].
0: ProofGrid usable level: 248
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: A trace with 1 cycles was found. [0.00 s]
INFO (IPF055): 0.0.N: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_4" in 0.00 s.
INFO (IPF047): 0.0.N: The cover property "can_register.v_can_register._assert_4:precondition1" was covered in 1 cycles in 0.00 s by the incidental trace "can_register.v_can_register._assert_4".
0.0.N: Stopped processing property "can_register.v_can_register._assert_4"	[0.00 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_5"	[0.00 s].
0: ProofGrid usable level: 246
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: A trace with 1 cycles was found. [0.00 s]
INFO (IPF055): 0.0.N: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_5" in 0.00 s.
INFO (IPF047): 0.0.N: The cover property "can_register.v_can_register._assert_5:precondition1" was covered in 1 cycles in 0.00 s by the incidental trace "can_register.v_can_register._assert_5".
0.0.N: Stopped processing property "can_register.v_can_register._assert_5"	[0.00 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_6"	[0.00 s].
0: ProofGrid usable level: 244
0.0.N: Trace Attempt  1	[0.00 s]
0: ProofGrid is temporarily paused because there are too many pending traces.
0: ProofGrid is resuming to work after pausing for 0s. The amount of pending traces decreased.
0.0.N: A trace with 1 cycles was found. [0.00 s]
INFO (IPF055): 0.0.N: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_6" in 0.02 s.
INFO (IPF047): 0.0.N: The cover property "can_register.v_can_register._assert_6:precondition1" was covered in 1 cycles in 0.02 s by the incidental trace "can_register.v_can_register._assert_6".
0: ProofGrid usable level: 242
0.0.N: Stopped processing property "can_register.v_can_register._assert_6"	[0.03 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_7"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: A trace with 1 cycles was found. [0.00 s]
INFO (IPF055): 0.0.N: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_7" in 0.00 s.
INFO (IPF047): 0.0.N: The cover property "can_register.v_can_register._assert_7:precondition1" was covered in 1 cycles in 0.00 s by the incidental trace "can_register.v_can_register._assert_7".
0.0.N: Stopped processing property "can_register.v_can_register._assert_7"	[0.00 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_8"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: A trace with 1 cycles was found. [0.00 s]
INFO (IPF055): 0.0.N: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_8" in 0.00 s.
INFO (IPF047): 0.0.N: The cover property "can_register.v_can_register._assert_8:precondition1" was covered in 1 cycles in 0.00 s by the incidental trace "can_register.v_can_register._assert_8".
0.0.N: Stopped processing property "can_register.v_can_register._assert_8"	[0.00 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_9"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: A trace with 1 cycles was found. [0.00 s]
INFO (IPF055): 0.0.N: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_9" in 0.00 s.
INFO (IPF047): 0.0.N: The cover property "can_register.v_can_register._assert_9:precondition1" was covered in 1 cycles in 0.00 s by the incidental trace "can_register.v_can_register._assert_9".
0.0.N: Stopped processing property "can_register.v_can_register._assert_9"	[0.00 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_10"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: A trace with 1 cycles was found. [0.00 s]
INFO (IPF055): 0.0.N: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_10" in 0.00 s.
INFO (IPF047): 0.0.N: The cover property "can_register.v_can_register._assert_10:precondition1" was covered in 1 cycles in 0.00 s by the incidental trace "can_register.v_can_register._assert_10".
0.0.N: Stopped processing property "can_register.v_can_register._assert_10"	[0.00 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_11"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: A trace with 1 cycles was found. [0.00 s]
INFO (IPF055): 0.0.N: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_11" in 0.00 s.
INFO (IPF047): 0.0.N: The cover property "can_register.v_can_register._assert_11:precondition1" was covered in 1 cycles in 0.00 s by the incidental trace "can_register.v_can_register._assert_11".
0.0.N: Stopped processing property "can_register.v_can_register._assert_11"	[0.00 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_12"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: A trace with 1 cycles was found. [0.00 s]
INFO (IPF055): 0.0.N: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_12" in 0.00 s.
INFO (IPF047): 0.0.N: The cover property "can_register.v_can_register._assert_12:precondition1" was covered in 1 cycles in 0.00 s by the incidental trace "can_register.v_can_register._assert_12".
0.0.N: Stopped processing property "can_register.v_can_register._assert_12"	[0.00 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_13"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: A trace with 1 cycles was found. [0.00 s]
INFO (IPF055): 0.0.N: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_13" in 0.00 s.
INFO (IPF047): 0.0.N: The cover property "can_register.v_can_register._assert_13:precondition1" was covered in 1 cycles in 0.00 s by the incidental trace "can_register.v_can_register._assert_13".
0.0.N: Stopped processing property "can_register.v_can_register._assert_13"	[0.00 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_14"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: A trace with 1 cycles was found. [0.00 s]
INFO (IPF055): 0.0.N: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_14" in 0.00 s.
INFO (IPF047): 0.0.N: The cover property "can_register.v_can_register._assert_14:precondition1" was covered in 1 cycles in 0.00 s by the incidental trace "can_register.v_can_register._assert_14".
0.0.N: Stopped processing property "can_register.v_can_register._assert_14"	[0.00 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_15"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: A trace with 1 cycles was found. [0.00 s]
INFO (IPF055): 0.0.N: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_15" in 0.00 s.
INFO (IPF047): 0.0.N: The cover property "can_register.v_can_register._assert_15:precondition1" was covered in 1 cycles in 0.00 s by the incidental trace "can_register.v_can_register._assert_15".
0.0.N: Stopped processing property "can_register.v_can_register._assert_15"	[0.00 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_16"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: A trace with 1 cycles was found. [0.00 s]
INFO (IPF055): 0.0.N: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_16" in 0.00 s.
INFO (IPF047): 0.0.N: The cover property "can_register.v_can_register._assert_16:precondition1" was covered in 1 cycles in 0.00 s by the incidental trace "can_register.v_can_register._assert_16".
0.0.N: Stopped processing property "can_register.v_can_register._assert_16"	[0.00 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_17"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: A trace with 1 cycles was found. [0.00 s]
INFO (IPF055): 0.0.N: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_17" in 0.00 s.
INFO (IPF047): 0.0.N: The cover property "can_register.v_can_register._assert_17:precondition1" was covered in 1 cycles in 0.00 s by the incidental trace "can_register.v_can_register._assert_17".
0.0.N: Stopped processing property "can_register.v_can_register._assert_17"	[0.00 s].
0.0.Hp: pal-achieve-07: "AlmaLinux 8.9 (Midnight Oncilla)" is an unsupported operating system.
0.0.N: Starting proof for property "can_register.v_can_register._assert_18"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: A trace with 1 cycles was found. [0.00 s]
INFO (IPF055): 0.0.N: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_18" in 0.00 s.
INFO (IPF047): 0.0.N: The cover property "can_register.v_can_register._assert_18:precondition1" was covered in 1 cycles in 0.00 s by the incidental trace "can_register.v_can_register._assert_18".
0.0.N: Stopped processing property "can_register.v_can_register._assert_18"	[0.00 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_19"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: A trace with 1 cycles was found. [0.00 s]
INFO (IPF055): 0.0.N: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_19" in 0.00 s.
INFO (IPF047): 0.0.N: The cover property "can_register.v_can_register._assert_19:precondition1" was covered in 1 cycles in 0.00 s by the incidental trace "can_register.v_can_register._assert_19".
0.0.N: Stopped processing property "can_register.v_can_register._assert_19"	[0.00 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_20"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: A trace with 1 cycles was found. [0.00 s]
INFO (IPF055): 0.0.N: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_20" in 0.00 s.
INFO (IPF047): 0.0.N: The cover property "can_register.v_can_register._assert_20:precondition1" was covered in 1 cycles in 0.00 s by the incidental trace "can_register.v_can_register._assert_20".
0.0.N: Stopped processing property "can_register.v_can_register._assert_20"	[0.00 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_21"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: A trace with 1 cycles was found. [0.00 s]
INFO (IPF055): 0.0.N: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_21" in 0.00 s.
INFO (IPF047): 0.0.N: The cover property "can_register.v_can_register._assert_21:precondition1" was covered in 1 cycles in 0.00 s by the incidental trace "can_register.v_can_register._assert_21".
0.0.N: Stopped processing property "can_register.v_can_register._assert_21"	[0.00 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_22"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: A trace with 1 cycles was found. [0.00 s]
INFO (IPF055): 0.0.N: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_22" in 0.00 s.
INFO (IPF047): 0.0.N: The cover property "can_register.v_can_register._assert_22:precondition1" was covered in 1 cycles in 0.00 s by the incidental trace "can_register.v_can_register._assert_22".
0.0.N: Stopped processing property "can_register.v_can_register._assert_22"	[0.00 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_23"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: A trace with 1 cycles was found. [0.00 s]
INFO (IPF055): 0.0.N: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_23" in 0.00 s.
INFO (IPF047): 0.0.N: The cover property "can_register.v_can_register._assert_23:precondition1" was covered in 1 cycles in 0.00 s by the incidental trace "can_register.v_can_register._assert_23".
0.0.N: Stopped processing property "can_register.v_can_register._assert_23"	[0.01 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_24"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: A trace with 1 cycles was found. [0.00 s]
INFO (IPF055): 0.0.N: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_24" in 0.00 s.
INFO (IPF047): 0.0.N: The cover property "can_register.v_can_register._assert_24:precondition1" was covered in 1 cycles in 0.00 s by the incidental trace "can_register.v_can_register._assert_24".
0.0.N: Stopped processing property "can_register.v_can_register._assert_24"	[0.00 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_25"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: A trace with 1 cycles was found. [0.00 s]
INFO (IPF055): 0.0.N: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_25" in 0.00 s.
INFO (IPF047): 0.0.N: The cover property "can_register.v_can_register._assert_25:precondition1" was covered in 1 cycles in 0.00 s by the incidental trace "can_register.v_can_register._assert_25".
0.0.N: Stopped processing property "can_register.v_can_register._assert_25"	[0.00 s].
0.0.L: pal-achieve-07: "AlmaLinux 8.9 (Midnight Oncilla)" is an unsupported operating system.
0.0.N: Starting proof for property "can_register.v_can_register._assert_26"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0: ProofGrid is temporarily paused because there are too many pending traces.
0: ProofGrid is resuming to work after pausing for 0s. The amount of pending traces decreased.
0.0.N: A trace with 1 cycles was found. [0.00 s]
INFO (IPF055): 0.0.N: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_26" in 0.01 s.
INFO (IPF047): 0.0.N: The cover property "can_register.v_can_register._assert_26:precondition1" was covered in 1 cycles in 0.01 s by the incidental trace "can_register.v_can_register._assert_26".
0.0.N: Stopped processing property "can_register.v_can_register._assert_26"	[0.01 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_27"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: A trace with 1 cycles was found. [0.00 s]
INFO (IPF055): 0.0.N: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_27" in 0.00 s.
INFO (IPF047): 0.0.N: The cover property "can_register.v_can_register._assert_27:precondition1" was covered in 1 cycles in 0.00 s by the incidental trace "can_register.v_can_register._assert_27".
0.0.N: Stopped processing property "can_register.v_can_register._assert_27"	[0.00 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_28"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: A trace with 1 cycles was found. [0.00 s]
INFO (IPF055): 0.0.N: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_28" in 0.00 s.
INFO (IPF047): 0.0.N: The cover property "can_register.v_can_register._assert_28:precondition1" was covered in 1 cycles in 0.00 s by the incidental trace "can_register.v_can_register._assert_28".
0.0.N: Stopped processing property "can_register.v_can_register._assert_28"	[0.00 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_29"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: A trace with 1 cycles was found. [0.00 s]
INFO (IPF055): 0.0.N: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_29" in 0.00 s.
INFO (IPF047): 0.0.N: The cover property "can_register.v_can_register._assert_29:precondition1" was covered in 1 cycles in 0.00 s by the incidental trace "can_register.v_can_register._assert_29".
0.0.N: Stopped processing property "can_register.v_can_register._assert_29"	[0.00 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_30"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: A trace with 1 cycles was found. [0.00 s]
INFO (IPF055): 0.0.N: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_30" in 0.00 s.
INFO (IPF047): 0.0.N: The cover property "can_register.v_can_register._assert_30:precondition1" was covered in 1 cycles in 0.00 s by the incidental trace "can_register.v_can_register._assert_30".
0.0.N: Stopped processing property "can_register.v_can_register._assert_30"	[0.00 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_31"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: A trace with 1 cycles was found. [0.00 s]
INFO (IPF055): 0.0.N: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_31" in 0.00 s.
INFO (IPF047): 0.0.N: The cover property "can_register.v_can_register._assert_31:precondition1" was covered in 1 cycles in 0.00 s by the incidental trace "can_register.v_can_register._assert_31".
0.0.N: Stopped processing property "can_register.v_can_register._assert_31"	[0.00 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_32"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: A trace with 1 cycles was found. [0.00 s]
INFO (IPF055): 0.0.N: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_32" in 0.00 s.
INFO (IPF047): 0.0.N: The cover property "can_register.v_can_register._assert_32:precondition1" was covered in 1 cycles in 0.00 s by the incidental trace "can_register.v_can_register._assert_32".
0.0.N: Stopped processing property "can_register.v_can_register._assert_32"	[0.00 s].
0.0.Ht: pal-achieve-07: "AlmaLinux 8.9 (Midnight Oncilla)" is an unsupported operating system.
0.0.N: Starting proof for property "can_register.v_can_register._assert_33"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: A trace with 1 cycles was found. [0.00 s]
INFO (IPF055): 0.0.N: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_33" in 0.00 s.
INFO (IPF047): 0.0.N: The cover property "can_register.v_can_register._assert_33:precondition1" was covered in 1 cycles in 0.00 s by the incidental trace "can_register.v_can_register._assert_33".
0.0.N: Stopped processing property "can_register.v_can_register._assert_33"	[0.00 s].
0.0.Oh: pal-achieve-07: "AlmaLinux 8.9 (Midnight Oncilla)" is an unsupported operating system.
0.0.N: Starting proof for property "can_register.v_can_register._assert_34"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: A trace with 1 cycles was found. [0.00 s]
INFO (IPF055): 0.0.N: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_34" in 0.00 s.
INFO (IPF047): 0.0.N: The cover property "can_register.v_can_register._assert_34:precondition1" was covered in 1 cycles in 0.00 s by the incidental trace "can_register.v_can_register._assert_34".
0.0.N: Stopped processing property "can_register.v_can_register._assert_34"	[0.00 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_35"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: A trace with 1 cycles was found. [0.00 s]
INFO (IPF055): 0.0.N: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_35" in 0.00 s.
INFO (IPF047): 0.0.N: The cover property "can_register.v_can_register._assert_35:precondition1" was covered in 1 cycles in 0.00 s by the incidental trace "can_register.v_can_register._assert_35".
0.0.N: Stopped processing property "can_register.v_can_register._assert_35"	[0.00 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_36"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: A trace with 1 cycles was found. [0.00 s]
INFO (IPF055): 0.0.N: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_36" in 0.00 s.
INFO (IPF047): 0.0.N: The cover property "can_register.v_can_register._assert_36:precondition1" was covered in 1 cycles in 0.00 s by the incidental trace "can_register.v_can_register._assert_36".
0.0.N: Stopped processing property "can_register.v_can_register._assert_36"	[0.00 s].
0.0.Mpcustom4: pal-achieve-07: "AlmaLinux 8.9 (Midnight Oncilla)" is an unsupported operating system.
0.0.N: Starting proof for property "can_register.v_can_register._assert_37"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: A trace with 1 cycles was found. [0.00 s]
INFO (IPF055): 0.0.N: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_37" in 0.00 s.
INFO (IPF047): 0.0.N: The cover property "can_register.v_can_register._assert_37:precondition1" was covered in 1 cycles in 0.00 s by the incidental trace "can_register.v_can_register._assert_37".
0.0.N: Stopped processing property "can_register.v_can_register._assert_37"	[0.00 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_38"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: A trace with 1 cycles was found. [0.00 s]
INFO (IPF055): 0.0.N: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_38" in 0.00 s.
INFO (IPF047): 0.0.N: The cover property "can_register.v_can_register._assert_38:precondition1" was covered in 1 cycles in 0.00 s by the incidental trace "can_register.v_can_register._assert_38".
0.0.N: Stopped processing property "can_register.v_can_register._assert_38"	[0.00 s].
0.0.Bm: pal-achieve-07: "AlmaLinux 8.9 (Midnight Oncilla)" is an unsupported operating system.
0.0.N: Starting proof for property "can_register.v_can_register._assert_39"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: A trace with 1 cycles was found. [0.00 s]
INFO (IPF055): 0.0.N: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_39" in 0.00 s.
INFO (IPF047): 0.0.N: The cover property "can_register.v_can_register._assert_39:precondition1" was covered in 1 cycles in 0.00 s by the incidental trace "can_register.v_can_register._assert_39".
0.0.N: Stopped processing property "can_register.v_can_register._assert_39"	[0.00 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_40"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: A trace with 1 cycles was found. [0.00 s]
INFO (IPF055): 0.0.N: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_40" in 0.00 s.
INFO (IPF047): 0.0.N: The cover property "can_register.v_can_register._assert_40:precondition1" was covered in 1 cycles in 0.00 s by the incidental trace "can_register.v_can_register._assert_40".
0.0.N: Stopped processing property "can_register.v_can_register._assert_40"	[0.00 s].
0.0.Hp: Proofgrid shell started at 33387@pal-achieve-07(local) jg_33312_pal-achieve-07_1
0.0.L: Proofgrid shell started at 33395@pal-achieve-07(local) jg_33312_pal-achieve-07_1
0.0.N: Starting proof for property "can_register.v_can_register._assert_41"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: A trace with 1 cycles was found. [0.00 s]
INFO (IPF055): 0.0.N: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_41" in 0.00 s.
INFO (IPF047): 0.0.N: The cover property "can_register.v_can_register._assert_41:precondition1" was covered in 1 cycles in 0.00 s by the incidental trace "can_register.v_can_register._assert_41".
0.0.N: Stopped processing property "can_register.v_can_register._assert_41"	[0.00 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_42"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: A trace with 1 cycles was found. [0.00 s]
INFO (IPF055): 0.0.N: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_42" in 0.00 s.
INFO (IPF047): 0.0.N: The cover property "can_register.v_can_register._assert_42:precondition1" was covered in 1 cycles in 0.00 s by the incidental trace "can_register.v_can_register._assert_42".
0.0.N: Stopped processing property "can_register.v_can_register._assert_42"	[0.00 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_43"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: A trace with 1 cycles was found. [0.00 s]
INFO (IPF055): 0.0.N: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_43" in 0.00 s.
INFO (IPF047): 0.0.N: The cover property "can_register.v_can_register._assert_43:precondition1" was covered in 1 cycles in 0.00 s by the incidental trace "can_register.v_can_register._assert_43".
0.0.N: Stopped processing property "can_register.v_can_register._assert_43"	[0.00 s].
0.0.Hp: clocks: 1, declared: 1, looping: 0, posedge: 1, negedge: 0, noedge: 0, bothedge: 0
0.0.N: Starting proof for property "can_register.v_can_register._assert_44"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: A trace with 1 cycles was found. [0.00 s]
INFO (IPF055): 0.0.N: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_44" in 0.00 s.
INFO (IPF047): 0.0.N: The cover property "can_register.v_can_register._assert_44:precondition1" was covered in 1 cycles in 0.00 s by the incidental trace "can_register.v_can_register._assert_44".
0.0.N: Stopped processing property "can_register.v_can_register._assert_44"	[0.00 s].
0.0.Hp: Trace Attempt  1	[0.01 s]
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_45" in 0.02 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_45:precondition1" was covered in 1 cycles in 0.02 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_46" in 0.02 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_46:precondition1" was covered in 1 cycles in 0.02 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_47" in 0.02 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_47:precondition1" was covered in 1 cycles in 0.02 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_48" in 0.02 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_48:precondition1" was covered in 1 cycles in 0.02 s.
0: ProofGrid is temporarily paused because there are too many pending traces.
0: ProofGrid is resuming to work after pausing for 0s. The amount of pending traces decreased.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_49" in 0.02 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_49:precondition1" was covered in 1 cycles in 0.02 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_50" in 0.02 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_50:precondition1" was covered in 1 cycles in 0.02 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_51" in 0.02 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_51:precondition1" was covered in 1 cycles in 0.02 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_52" in 0.02 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_52:precondition1" was covered in 1 cycles in 0.02 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_53" in 0.03 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_53:precondition1" was covered in 1 cycles in 0.03 s.
0: ProofGrid is temporarily paused because there are too many pending traces.
0: ProofGrid is resuming to work after pausing for 0s. The amount of pending traces decreased.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_54" in 0.03 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_54:precondition1" was covered in 1 cycles in 0.03 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_55" in 0.03 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_55:precondition1" was covered in 1 cycles in 0.03 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_56" in 0.03 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_56:precondition1" was covered in 1 cycles in 0.03 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_57" in 0.03 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_57:precondition1" was covered in 1 cycles in 0.03 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_58" in 0.04 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_58:precondition1" was covered in 1 cycles in 0.04 s.
0: ProofGrid is temporarily paused because there are too many pending traces.
0: ProofGrid is resuming to work after pausing for 0s. The amount of pending traces decreased.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_59" in 0.04 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_59:precondition1" was covered in 1 cycles in 0.04 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_60" in 0.04 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_60:precondition1" was covered in 1 cycles in 0.04 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_61" in 0.04 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_61:precondition1" was covered in 1 cycles in 0.04 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_62" in 0.04 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_62:precondition1" was covered in 1 cycles in 0.04 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_63" in 0.04 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_63:precondition1" was covered in 1 cycles in 0.04 s.
0: ProofGrid is temporarily paused because there are too many pending traces.
0: ProofGrid is resuming to work after pausing for 0s. The amount of pending traces decreased.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_64" in 0.05 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_64:precondition1" was covered in 1 cycles in 0.05 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_65" in 0.05 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_65:precondition1" was covered in 1 cycles in 0.05 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_66" in 0.06 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_66:precondition1" was covered in 1 cycles in 0.06 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_67" in 0.06 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_67:precondition1" was covered in 1 cycles in 0.06 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_68" in 0.06 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_68:precondition1" was covered in 1 cycles in 0.06 s.
0: ProofGrid is temporarily paused because there are too many pending traces.
0: ProofGrid is resuming to work after pausing for 0s. The amount of pending traces decreased.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_69" in 0.06 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_69:precondition1" was covered in 1 cycles in 0.06 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_70" in 0.06 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_70:precondition1" was covered in 1 cycles in 0.06 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_71" in 0.06 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_71:precondition1" was covered in 1 cycles in 0.06 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_72" in 0.07 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_72:precondition1" was covered in 1 cycles in 0.07 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_73" in 0.07 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_73:precondition1" was covered in 1 cycles in 0.07 s.
0: ProofGrid is temporarily paused because there are too many pending traces.
0: ProofGrid is resuming to work after pausing for 0s. The amount of pending traces decreased.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_74" in 0.07 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_74:precondition1" was covered in 1 cycles in 0.07 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_75" in 0.07 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_75:precondition1" was covered in 1 cycles in 0.07 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_76" in 0.08 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_76:precondition1" was covered in 1 cycles in 0.08 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_77" in 0.08 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_77:precondition1" was covered in 1 cycles in 0.08 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_78" in 0.08 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_78:precondition1" was covered in 1 cycles in 0.08 s.
0: ProofGrid is temporarily paused because there are too many pending traces.
0: ProofGrid is resuming to work after pausing for 0s. The amount of pending traces decreased.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_79" in 0.08 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_79:precondition1" was covered in 1 cycles in 0.08 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_80" in 0.08 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_80:precondition1" was covered in 1 cycles in 0.08 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_81" in 0.09 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_81:precondition1" was covered in 1 cycles in 0.09 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_82" in 0.09 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_82:precondition1" was covered in 1 cycles in 0.09 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_83" in 0.09 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_83:precondition1" was covered in 1 cycles in 0.09 s.
0: ProofGrid is temporarily paused because there are too many pending traces.
0: ProofGrid is resuming to work after pausing for 0s. The amount of pending traces decreased.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_84" in 0.09 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_84:precondition1" was covered in 1 cycles in 0.09 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_85" in 0.09 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_85:precondition1" was covered in 1 cycles in 0.09 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_86" in 0.10 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_86:precondition1" was covered in 1 cycles in 0.10 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_87" in 0.10 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_87:precondition1" was covered in 1 cycles in 0.10 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_88" in 0.10 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_88:precondition1" was covered in 1 cycles in 0.10 s.
0: ProofGrid is temporarily paused because there are too many pending traces.
0: ProofGrid is resuming to work after pausing for 0s. The amount of pending traces decreased.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_89" in 0.10 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_89:precondition1" was covered in 1 cycles in 0.10 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_90" in 0.10 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_90:precondition1" was covered in 1 cycles in 0.10 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_91" in 0.11 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_91:precondition1" was covered in 1 cycles in 0.11 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_92" in 0.11 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_92:precondition1" was covered in 1 cycles in 0.11 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_93" in 0.11 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_93:precondition1" was covered in 1 cycles in 0.11 s.
0: ProofGrid is temporarily paused because there are too many pending traces.
0: ProofGrid is resuming to work after pausing for 0s. The amount of pending traces decreased.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_94" in 0.11 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_94:precondition1" was covered in 1 cycles in 0.11 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_95" in 0.12 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_95:precondition1" was covered in 1 cycles in 0.12 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_96" in 0.12 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_96:precondition1" was covered in 1 cycles in 0.12 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_97" in 0.12 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_97:precondition1" was covered in 1 cycles in 0.12 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_98" in 0.12 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_98:precondition1" was covered in 1 cycles in 0.12 s.
0: ProofGrid is temporarily paused because there are too many pending traces.
0: ProofGrid is resuming to work after pausing for 0s. The amount of pending traces decreased.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_99" in 0.12 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_99:precondition1" was covered in 1 cycles in 0.12 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_100" in 0.13 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_100:precondition1" was covered in 1 cycles in 0.13 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_101" in 0.13 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_101:precondition1" was covered in 1 cycles in 0.13 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_102" in 0.13 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_102:precondition1" was covered in 1 cycles in 0.13 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_103" in 0.13 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_103:precondition1" was covered in 1 cycles in 0.13 s.
0: ProofGrid is temporarily paused because there are too many pending traces.
0: ProofGrid is resuming to work after pausing for 0s. The amount of pending traces decreased.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_104" in 0.14 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_104:precondition1" was covered in 1 cycles in 0.14 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_105" in 0.14 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_105:precondition1" was covered in 1 cycles in 0.14 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_106" in 0.14 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_106:precondition1" was covered in 1 cycles in 0.14 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_107" in 0.14 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_107:precondition1" was covered in 1 cycles in 0.14 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_108" in 0.14 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_108:precondition1" was covered in 1 cycles in 0.14 s.
0: ProofGrid is temporarily paused because there are too many pending traces.
0: ProofGrid is resuming to work after pausing for 0s. The amount of pending traces decreased.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_109" in 0.15 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_109:precondition1" was covered in 1 cycles in 0.15 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_110" in 0.15 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_110:precondition1" was covered in 1 cycles in 0.15 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_111" in 0.15 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_111:precondition1" was covered in 1 cycles in 0.15 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_112" in 0.15 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_112:precondition1" was covered in 1 cycles in 0.15 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_113" in 0.15 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_113:precondition1" was covered in 1 cycles in 0.15 s.
0: ProofGrid is temporarily paused because there are too many pending traces.
0: ProofGrid is resuming to work after pausing for 0s. The amount of pending traces decreased.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_114" in 0.16 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_114:precondition1" was covered in 1 cycles in 0.16 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_115" in 0.16 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_115:precondition1" was covered in 1 cycles in 0.16 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_116" in 0.16 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_116:precondition1" was covered in 1 cycles in 0.16 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_117" in 0.16 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_117:precondition1" was covered in 1 cycles in 0.16 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_118" in 0.16 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_118:precondition1" was covered in 1 cycles in 0.16 s.
0: ProofGrid is temporarily paused because there are too many pending traces.
0: ProofGrid is resuming to work after pausing for 0s. The amount of pending traces decreased.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_119" in 0.17 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_119:precondition1" was covered in 1 cycles in 0.17 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_120" in 0.17 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_120:precondition1" was covered in 1 cycles in 0.17 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_121" in 0.17 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_121:precondition1" was covered in 1 cycles in 0.17 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_122" in 0.17 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_122:precondition1" was covered in 1 cycles in 0.17 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_123" in 0.17 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_123:precondition1" was covered in 1 cycles in 0.17 s.
0: ProofGrid is temporarily paused because there are too many pending traces.
0: ProofGrid is resuming to work after pausing for 0s. The amount of pending traces decreased.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_124" in 0.18 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_124:precondition1" was covered in 1 cycles in 0.18 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_125" in 0.18 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_125:precondition1" was covered in 1 cycles in 0.18 s.
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_126" in 0.18 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_126:precondition1" was covered in 1 cycles in 0.18 s.
0.0.N: Requesting engine job to stop
0.0.Hp: Requesting engine job to terminate
INFO (IPF144): 0: Initiating shutdown of proof [0.46 s]
0.0.Hp: A trace with 1 cycles was found. [0.01 s]
INFO (IPF055): 0.0.Hp: A counterexample (cex) with 1 cycles was found for the property "can_register.v_can_register._assert_127" in 0.18 s.
INFO (IPF047): 0.0.Hp: The cover property "can_register.v_can_register._assert_127:precondition1" was covered in 1 cycles in 0.18 s.
0.0.Hp: All properties determined. [0.01 s]
0.0.Ht: Proofgrid shell started at 33391@pal-achieve-07(local) jg_33312_pal-achieve-07_1
0.0.Ht: Requesting engine job to terminate
0.0.Ht: Preventing job from starting because proof is shutting down.
0.0.Ht: Requesting engine job to terminate
0.0.Ht: Interrupted. [0.00 s]
0.0.Bm: Proofgrid shell started at 33392@pal-achieve-07(local) jg_33312_pal-achieve-07_1
0.0.Bm: Requesting engine job to terminate
0.0.Bm: Preventing job from starting because proof is shutting down.
0.0.Bm: Requesting engine job to terminate
0.0.Mpcustom4: Proofgrid shell started at 33393@pal-achieve-07(local) jg_33312_pal-achieve-07_1
0.0.Mpcustom4: Requesting engine job to terminate
0.0.Mpcustom4: Preventing job from starting because proof is shutting down.
0.0.Mpcustom4: Requesting engine job to terminate
0.0.Oh: Proofgrid shell started at 33394@pal-achieve-07(local) jg_33312_pal-achieve-07_1
0.0.Oh: Requesting engine job to terminate
0.0.Oh: Preventing job from starting because proof is shutting down.
0.0.Oh: Requesting engine job to terminate
0.0.L: Requesting engine job to terminate
0.0.B: pal-achieve-07: "AlmaLinux 8.9 (Midnight Oncilla)" is an unsupported operating system.
0.0.B: Proofgrid shell started at 33396@pal-achieve-07(local) jg_33312_pal-achieve-07_1
0.0.B: Requesting engine job to terminate
0.0.B: Preventing job from starting because proof is shutting down.
0.0.B: Requesting engine job to terminate
0.0.AM: pal-achieve-07: "AlmaLinux 8.9 (Midnight Oncilla)" is an unsupported operating system.
0.0.AM: Proofgrid shell started at 33398@pal-achieve-07(local) jg_33312_pal-achieve-07_1
0.0.AM: Requesting engine job to terminate
0.0.AM: Preventing job from starting because proof is shutting down.
0.0.AM: Requesting engine job to terminate
0.0.N: Starting proof for property "can_register.v_can_register._assert_50"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: Stopped processing property "can_register.v_can_register._assert_50"	[0.00 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_55"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: Stopped processing property "can_register.v_can_register._assert_55"	[0.00 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_60"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: Stopped processing property "can_register.v_can_register._assert_60"	[0.00 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_65"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: Stopped processing property "can_register.v_can_register._assert_65"	[0.00 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_70"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: Stopped processing property "can_register.v_can_register._assert_70"	[0.00 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_75"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: Stopped processing property "can_register.v_can_register._assert_75"	[0.00 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_80"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: Stopped processing property "can_register.v_can_register._assert_80"	[0.00 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_85"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: Stopped processing property "can_register.v_can_register._assert_85"	[0.00 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_90"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: Stopped processing property "can_register.v_can_register._assert_90"	[0.00 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_95"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: Stopped processing property "can_register.v_can_register._assert_95"	[0.00 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_100"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: Stopped processing property "can_register.v_can_register._assert_100"	[0.00 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_105"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: Stopped processing property "can_register.v_can_register._assert_105"	[0.00 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_110"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: Stopped processing property "can_register.v_can_register._assert_110"	[0.00 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_115"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: Stopped processing property "can_register.v_can_register._assert_115"	[0.00 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_120"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: Stopped processing property "can_register.v_can_register._assert_120"	[0.00 s].
0.0.N: Starting proof for property "can_register.v_can_register._assert_125"	[0.00 s].
0.0.N: Trace Attempt  1	[0.00 s]
0.0.N: Stopped processing property "can_register.v_can_register._assert_125"	[0.00 s].
0.0.Hp: Exited with Success (@ 0.47 s)
0: ProofGrid usable level: 0
0.0.Mpcustom4: Interrupted. [0.00 s]
0.0.Oh: Interrupted. [0.00 s]
0.0.L: All properties determined. [0.15 s]
0.0.B: Interrupted. [0.00 s]
0.0.AM: Interrupted. [0.00 s]
0.0.N: All properties determined. [0.01 s]
0.0.Ht: Exited with Success (@ 0.47 s)
0.0.Bm: Interrupted. [0.00 s]
0.0.Mpcustom4: Exited with Success (@ 0.47 s)
0.0.Oh: Exited with Success (@ 0.47 s)
0.0.L: Exited with Success (@ 0.47 s)
0.0.B: Exited with Success (@ 0.47 s)
0.0.AM: Exited with Success (@ 0.47 s)
0.0.N: Exited with Success (@ 0.47 s)
0.0.Bm: Exited with Success (@ 0.47 s)
0: --------------------------------------------------------------
ProofGrid Summary (utilization 16.57 %)
--------------------------------------------------------------
     engines started                               :     9
     engine jobs started                           :     9

    Average time in state (seconds)
    ------------------------------------------------------
    Engine  Pending     Running        Dead    Utilization
    ------------------------------------------------------
      N        0.15        0.46        0.00       75.00 %
     Hp        0.32        0.18        0.00       36.15 %
     Ht        0.47        0.00        0.00        0.00 %
     Bm        0.46        0.00        0.00        0.00 %
    Mpcustom4        0.46        0.00        0.00        0.00 %
     Oh        0.44        0.00        0.00        0.00 %
      L        0.22        0.00        0.00        0.00 %
      B        0.38        0.00        0.00        0.00 %
     AM        0.34        0.00        0.00        0.00 %
    all        0.36        0.07        0.00       16.57 %

    Total time in state (seconds)
    -----------------------------------------
            Pending     Running        Dead  
    -----------------------------------------
               3.25        0.65        0.00

    Data read    : 40.18 kiB
    Data written : 22.56 kiB

0: All pending notifications were processed.
0: ProofGrid was paused 18 times for a total of 0.195 seconds
INFO (IPF059): 0: Completed proof on task: "<embedded>"

==============================================================
SUMMARY
==============================================================
           Properties Considered              : 254
                 assertions                   : 127
                  - proven                    : 0 (0%)
                  - bounded_proven (user)     : 0 (0%)
                  - bounded_proven (auto)     : 0 (0%)
                  - marked_proven             : 0 (0%)
                  - cex                       : 127 (100%)
                  - ar_cex                    : 0 (0%)
                  - undetermined              : 0 (0%)
                  - unknown                   : 0 (0%)
                  - error                     : 0 (0%)
                 covers                       : 127
                  - unreachable               : 0 (0%)
                  - bounded_unreachable (user): 0 (0%)
                  - covered                   : 127 (100%)
                  - ar_covered                : 0 (0%)
                  - undetermined              : 0 (0%)
                  - unknown                   : 0 (0%)
                  - error                     : 0 (0%)
determined
[<embedded>] % 
[<embedded>] % # Report proof results
[<embedded>] % report

==============================================================
    Jasper Verification Results
==============================================================
    2024.03 FCS 64 bits for Linux64 3.10.0-1160.21.1.el7.x86_64
    Host Name: pal-achieve-07.uic.edu
    User Name: vpulav2
    Printed on: Tuesday, Jun 4, 2024 12:00:18 PM CDT
    Working Directory: /home/vpulav2/Work/Jasper_llama/communication_controller_can_protocol_controller/can_register


==============================================================
RESULTS
==============================================================

------------------------------------------------------------------------------------------------------------------
       Name                                                      |    Result    |  Engine  |  Bound  |  Time    
------------------------------------------------------------------------------------------------------------------

---[ <embedded> ]-------------------------------------------------------------------------------------------------
[1]   can_register.v_can_register._assert_1                           cex             N             1    0.097 s      
[2]   can_register.v_can_register._assert_1:precondition1             covered         N             1    0.097 s      
[3]   can_register.v_can_register._assert_2                           cex             N             1    0.000 s      
[4]   can_register.v_can_register._assert_2:precondition1             covered         N             1    0.000 s      
[5]   can_register.v_can_register._assert_3                           cex             N             1    0.000 s      
[6]   can_register.v_can_register._assert_3:precondition1             covered         N             1    0.000 s      
[7]   can_register.v_can_register._assert_4                           cex             N             1    0.000 s      
[8]   can_register.v_can_register._assert_4:precondition1             covered         N             1    0.000 s      
[9]   can_register.v_can_register._assert_5                           cex             N             1    0.000 s      
[10]  can_register.v_can_register._assert_5:precondition1             covered         N             1    0.000 s      
[11]  can_register.v_can_register._assert_6                           cex             N             1    0.016 s      
[12]  can_register.v_can_register._assert_6:precondition1             covered         N             1    0.016 s      
[13]  can_register.v_can_register._assert_7                           cex             N             1    0.000 s      
[14]  can_register.v_can_register._assert_7:precondition1             covered         N             1    0.000 s      
[15]  can_register.v_can_register._assert_8                           cex             N             1    0.000 s      
[16]  can_register.v_can_register._assert_8:precondition1             covered         N             1    0.000 s      
[17]  can_register.v_can_register._assert_9                           cex             N             1    0.000 s      
[18]  can_register.v_can_register._assert_9:precondition1             covered         N             1    0.000 s      
[19]  can_register.v_can_register._assert_10                          cex             N             1    0.000 s      
[20]  can_register.v_can_register._assert_10:precondition1            covered         N             1    0.000 s      
[21]  can_register.v_can_register._assert_11                          cex             N             1    0.000 s      
[22]  can_register.v_can_register._assert_11:precondition1            covered         N             1    0.000 s      
[23]  can_register.v_can_register._assert_12                          cex             N             1    0.000 s      
[24]  can_register.v_can_register._assert_12:precondition1            covered         N             1    0.000 s      
[25]  can_register.v_can_register._assert_13                          cex             N             1    0.000 s      
[26]  can_register.v_can_register._assert_13:precondition1            covered         N             1    0.000 s      
[27]  can_register.v_can_register._assert_14                          cex             N             1    0.000 s      
[28]  can_register.v_can_register._assert_14:precondition1            covered         N             1    0.000 s      
[29]  can_register.v_can_register._assert_15                          cex             N             1    0.000 s      
[30]  can_register.v_can_register._assert_15:precondition1            covered         N             1    0.000 s      
[31]  can_register.v_can_register._assert_16                          cex             N             1    0.000 s      
[32]  can_register.v_can_register._assert_16:precondition1            covered         N             1    0.000 s      
[33]  can_register.v_can_register._assert_17                          cex             N             1    0.000 s      
[34]  can_register.v_can_register._assert_17:precondition1            covered         N             1    0.000 s      
[35]  can_register.v_can_register._assert_18                          cex             N             1    0.000 s      
[36]  can_register.v_can_register._assert_18:precondition1            covered         N             1    0.000 s      
[37]  can_register.v_can_register._assert_19                          cex             N             1    0.000 s      
[38]  can_register.v_can_register._assert_19:precondition1            covered         N             1    0.000 s      
[39]  can_register.v_can_register._assert_20                          cex             N             1    0.000 s      
[40]  can_register.v_can_register._assert_20:precondition1            covered         N             1    0.000 s      
[41]  can_register.v_can_register._assert_21                          cex             N             1    0.001 s      
[42]  can_register.v_can_register._assert_21:precondition1            covered         N             1    0.001 s      
[43]  can_register.v_can_register._assert_22                          cex             N             1    0.000 s      
[44]  can_register.v_can_register._assert_22:precondition1            covered         N             1    0.000 s      
[45]  can_register.v_can_register._assert_23                          cex             N             1    0.000 s      
[46]  can_register.v_can_register._assert_23:precondition1            covered         N             1    0.000 s      
[47]  can_register.v_can_register._assert_24                          cex             N             1    0.000 s      
[48]  can_register.v_can_register._assert_24:precondition1            covered         N             1    0.000 s      
[49]  can_register.v_can_register._assert_25                          cex             N             1    0.000 s      
[50]  can_register.v_can_register._assert_25:precondition1            covered         N             1    0.000 s      
[51]  can_register.v_can_register._assert_26                          cex             N             1    0.007 s      
[52]  can_register.v_can_register._assert_26:precondition1            covered         N             1    0.007 s      
[53]  can_register.v_can_register._assert_27                          cex             N             1    0.000 s      
[54]  can_register.v_can_register._assert_27:precondition1            covered         N             1    0.000 s      
[55]  can_register.v_can_register._assert_28                          cex             N             1    0.000 s      
[56]  can_register.v_can_register._assert_28:precondition1            covered         N             1    0.000 s      
[57]  can_register.v_can_register._assert_29                          cex             N             1    0.000 s      
[58]  can_register.v_can_register._assert_29:precondition1            covered         N             1    0.000 s      
[59]  can_register.v_can_register._assert_30                          cex             N             1    0.000 s      
[60]  can_register.v_can_register._assert_30:precondition1            covered         N             1    0.000 s      
[61]  can_register.v_can_register._assert_31                          cex             N             1    0.000 s      
[62]  can_register.v_can_register._assert_31:precondition1            covered         N             1    0.000 s      
[63]  can_register.v_can_register._assert_32                          cex             N             1    0.000 s      
[64]  can_register.v_can_register._assert_32:precondition1            covered         N             1    0.000 s      
[65]  can_register.v_can_register._assert_33                          cex             N             1    0.000 s      
[66]  can_register.v_can_register._assert_33:precondition1            covered         N             1    0.000 s      
[67]  can_register.v_can_register._assert_34                          cex             N             1    0.001 s      
[68]  can_register.v_can_register._assert_34:precondition1            covered         N             1    0.001 s      
[69]  can_register.v_can_register._assert_35                          cex             N             1    0.000 s      
[70]  can_register.v_can_register._assert_35:precondition1            covered         N             1    0.000 s      
[71]  can_register.v_can_register._assert_36                          cex             N             1    0.001 s      
[72]  can_register.v_can_register._assert_36:precondition1            covered         N             1    0.001 s      
[73]  can_register.v_can_register._assert_37                          cex             N             1    0.001 s      
[74]  can_register.v_can_register._assert_37:precondition1            covered         N             1    0.001 s      
[75]  can_register.v_can_register._assert_38                          cex             N             1    0.001 s      
[76]  can_register.v_can_register._assert_38:precondition1            covered         N             1    0.001 s      
[77]  can_register.v_can_register._assert_39                          cex             N             1    0.001 s      
[78]  can_register.v_can_register._assert_39:precondition1            covered         N             1    0.001 s      
[79]  can_register.v_can_register._assert_40                          cex             N             1    0.001 s      
[80]  can_register.v_can_register._assert_40:precondition1            covered         N             1    0.001 s      
[81]  can_register.v_can_register._assert_41                          cex             N             1    0.001 s      
[82]  can_register.v_can_register._assert_41:precondition1            covered         N             1    0.001 s      
[83]  can_register.v_can_register._assert_42                          cex             N             1    0.000 s      
[84]  can_register.v_can_register._assert_42:precondition1            covered         N             1    0.000 s      
[85]  can_register.v_can_register._assert_43                          cex             N             1    0.000 s      
[86]  can_register.v_can_register._assert_43:precondition1            covered         N             1    0.000 s      
[87]  can_register.v_can_register._assert_44                          cex             N             1    0.000 s      
[88]  can_register.v_can_register._assert_44:precondition1            covered         N             1    0.000 s      
[89]  can_register.v_can_register._assert_45                          cex             Hp            1    0.017 s      
[90]  can_register.v_can_register._assert_45:precondition1            covered         Hp            1    0.017 s      
[91]  can_register.v_can_register._assert_46                          cex             Hp            1    0.018 s      
[92]  can_register.v_can_register._assert_46:precondition1            covered         Hp            1    0.018 s      
[93]  can_register.v_can_register._assert_47                          cex             Hp            1    0.019 s      
[94]  can_register.v_can_register._assert_47:precondition1            covered         Hp            1    0.019 s      
[95]  can_register.v_can_register._assert_48                          cex             Hp            1    0.020 s      
[96]  can_register.v_can_register._assert_48:precondition1            covered         Hp            1    0.020 s      
[97]  can_register.v_can_register._assert_49                          cex             Hp            1    0.021 s      
[98]  can_register.v_can_register._assert_49:precondition1            covered         Hp            1    0.021 s      
[99]  can_register.v_can_register._assert_50                          cex             Hp            1    0.023 s      
[100] can_register.v_can_register._assert_50:precondition1            covered         Hp            1    0.023 s      
[101] can_register.v_can_register._assert_51                          cex             Hp            1    0.024 s      
[102] can_register.v_can_register._assert_51:precondition1            covered         Hp            1    0.024 s      
[103] can_register.v_can_register._assert_52                          cex             Hp            1    0.025 s      
[104] can_register.v_can_register._assert_52:precondition1            covered         Hp            1    0.025 s      
[105] can_register.v_can_register._assert_53                          cex             Hp            1    0.025 s      
[106] can_register.v_can_register._assert_53:precondition1            covered         Hp            1    0.025 s      
[107] can_register.v_can_register._assert_54                          cex             Hp            1    0.032 s      
[108] can_register.v_can_register._assert_54:precondition1            covered         Hp            1    0.032 s      
[109] can_register.v_can_register._assert_55                          cex             Hp            1    0.033 s      
[110] can_register.v_can_register._assert_55:precondition1            covered         Hp            1    0.033 s      
[111] can_register.v_can_register._assert_56                          cex             Hp            1    0.034 s      
[112] can_register.v_can_register._assert_56:precondition1            covered         Hp            1    0.034 s      
[113] can_register.v_can_register._assert_57                          cex             Hp            1    0.035 s      
[114] can_register.v_can_register._assert_57:precondition1            covered         Hp            1    0.035 s      
[115] can_register.v_can_register._assert_58                          cex             Hp            1    0.035 s      
[116] can_register.v_can_register._assert_58:precondition1            covered         Hp            1    0.035 s      
[117] can_register.v_can_register._assert_59                          cex             Hp            1    0.042 s      
[118] can_register.v_can_register._assert_59:precondition1            covered         Hp            1    0.042 s      
[119] can_register.v_can_register._assert_60                          cex             Hp            1    0.043 s      
[120] can_register.v_can_register._assert_60:precondition1            covered         Hp            1    0.043 s      
[121] can_register.v_can_register._assert_61                          cex             Hp            1    0.044 s      
[122] can_register.v_can_register._assert_61:precondition1            covered         Hp            1    0.044 s      
[123] can_register.v_can_register._assert_62                          cex             Hp            1    0.044 s      
[124] can_register.v_can_register._assert_62:precondition1            covered         Hp            1    0.044 s      
[125] can_register.v_can_register._assert_63                          cex             Hp            1    0.045 s      
[126] can_register.v_can_register._assert_63:precondition1            covered         Hp            1    0.045 s      
[127] can_register.v_can_register._assert_64                          cex             Hp            1    0.053 s      
[128] can_register.v_can_register._assert_64:precondition1            covered         Hp            1    0.053 s      
[129] can_register.v_can_register._assert_65                          cex             Hp            1    0.054 s      
[130] can_register.v_can_register._assert_65:precondition1            covered         Hp            1    0.054 s      
[131] can_register.v_can_register._assert_66                          cex             Hp            1    0.056 s      
[132] can_register.v_can_register._assert_66:precondition1            covered         Hp            1    0.056 s      
[133] can_register.v_can_register._assert_67                          cex             Hp            1    0.058 s      
[134] can_register.v_can_register._assert_67:precondition1            covered         Hp            1    0.058 s      
[135] can_register.v_can_register._assert_68                          cex             Hp            1    0.059 s      
[136] can_register.v_can_register._assert_68:precondition1            covered         Hp            1    0.059 s      
[137] can_register.v_can_register._assert_69                          cex             Hp            1    0.063 s      
[138] can_register.v_can_register._assert_69:precondition1            covered         Hp            1    0.063 s      
[139] can_register.v_can_register._assert_70                          cex             Hp            1    0.064 s      
[140] can_register.v_can_register._assert_70:precondition1            covered         Hp            1    0.064 s      
[141] can_register.v_can_register._assert_71                          cex             Hp            1    0.065 s      
[142] can_register.v_can_register._assert_71:precondition1            covered         Hp            1    0.065 s      
[143] can_register.v_can_register._assert_72                          cex             Hp            1    0.065 s      
[144] can_register.v_can_register._assert_72:precondition1            covered         Hp            1    0.065 s      
[145] can_register.v_can_register._assert_73                          cex             Hp            1    0.066 s      
[146] can_register.v_can_register._assert_73:precondition1            covered         Hp            1    0.066 s      
[147] can_register.v_can_register._assert_74                          cex             Hp            1    0.073 s      
[148] can_register.v_can_register._assert_74:precondition1            covered         Hp            1    0.073 s      
[149] can_register.v_can_register._assert_75                          cex             Hp            1    0.074 s      
[150] can_register.v_can_register._assert_75:precondition1            covered         Hp            1    0.074 s      
[151] can_register.v_can_register._assert_76                          cex             Hp            1    0.075 s      
[152] can_register.v_can_register._assert_76:precondition1            covered         Hp            1    0.075 s      
[153] can_register.v_can_register._assert_77                          cex             Hp            1    0.076 s      
[154] can_register.v_can_register._assert_77:precondition1            covered         Hp            1    0.076 s      
[155] can_register.v_can_register._assert_78                          cex             Hp            1    0.076 s      
[156] can_register.v_can_register._assert_78:precondition1            covered         Hp            1    0.076 s      
[157] can_register.v_can_register._assert_79                          cex             Hp            1    0.084 s      
[158] can_register.v_can_register._assert_79:precondition1            covered         Hp            1    0.084 s      
[159] can_register.v_can_register._assert_80                          cex             Hp            1    0.085 s      
[160] can_register.v_can_register._assert_80:precondition1            covered         Hp            1    0.085 s      
[161] can_register.v_can_register._assert_81                          cex             Hp            1    0.085 s      
[162] can_register.v_can_register._assert_81:precondition1            covered         Hp            1    0.085 s      
[163] can_register.v_can_register._assert_82                          cex             Hp            1    0.086 s      
[164] can_register.v_can_register._assert_82:precondition1            covered         Hp            1    0.086 s      
[165] can_register.v_can_register._assert_83                          cex             Hp            1    0.087 s      
[166] can_register.v_can_register._assert_83:precondition1            covered         Hp            1    0.087 s      
[167] can_register.v_can_register._assert_84                          cex             Hp            1    0.094 s      
[168] can_register.v_can_register._assert_84:precondition1            covered         Hp            1    0.094 s      
[169] can_register.v_can_register._assert_85                          cex             Hp            1    0.095 s      
[170] can_register.v_can_register._assert_85:precondition1            covered         Hp            1    0.095 s      
[171] can_register.v_can_register._assert_86                          cex             Hp            1    0.096 s      
[172] can_register.v_can_register._assert_86:precondition1            covered         Hp            1    0.096 s      
[173] can_register.v_can_register._assert_87                          cex             Hp            1    0.096 s      
[174] can_register.v_can_register._assert_87:precondition1            covered         Hp            1    0.096 s      
[175] can_register.v_can_register._assert_88                          cex             Hp            1    0.097 s      
[176] can_register.v_can_register._assert_88:precondition1            covered         Hp            1    0.097 s      
[177] can_register.v_can_register._assert_89                          cex             Hp            1    0.104 s      
[178] can_register.v_can_register._assert_89:precondition1            covered         Hp            1    0.104 s      
[179] can_register.v_can_register._assert_90                          cex             Hp            1    0.105 s      
[180] can_register.v_can_register._assert_90:precondition1            covered         Hp            1    0.105 s      
[181] can_register.v_can_register._assert_91                          cex             Hp            1    0.106 s      
[182] can_register.v_can_register._assert_91:precondition1            covered         Hp            1    0.106 s      
[183] can_register.v_can_register._assert_92                          cex             Hp            1    0.106 s      
[184] can_register.v_can_register._assert_92:precondition1            covered         Hp            1    0.106 s      
[185] can_register.v_can_register._assert_93                          cex             Hp            1    0.107 s      
[186] can_register.v_can_register._assert_93:precondition1            covered         Hp            1    0.107 s      
[187] can_register.v_can_register._assert_94                          cex             Hp            1    0.115 s      
[188] can_register.v_can_register._assert_94:precondition1            covered         Hp            1    0.115 s      
[189] can_register.v_can_register._assert_95                          cex             Hp            1    0.115 s      
[190] can_register.v_can_register._assert_95:precondition1            covered         Hp            1    0.115 s      
[191] can_register.v_can_register._assert_96                          cex             Hp            1    0.116 s      
[192] can_register.v_can_register._assert_96:precondition1            covered         Hp            1    0.116 s      
[193] can_register.v_can_register._assert_97                          cex             Hp            1    0.116 s      
[194] can_register.v_can_register._assert_97:precondition1            covered         Hp            1    0.116 s      
[195] can_register.v_can_register._assert_98                          cex             Hp            1    0.117 s      
[196] can_register.v_can_register._assert_98:precondition1            covered         Hp            1    0.117 s      
[197] can_register.v_can_register._assert_99                          cex             Hp            1    0.125 s      
[198] can_register.v_can_register._assert_99:precondition1            covered         Hp            1    0.125 s      
[199] can_register.v_can_register._assert_100                         cex             Hp            1    0.126 s      
[200] can_register.v_can_register._assert_100:precondition1           covered         Hp            1    0.126 s      
[201] can_register.v_can_register._assert_101                         cex             Hp            1    0.126 s      
[202] can_register.v_can_register._assert_101:precondition1           covered         Hp            1    0.126 s      
[203] can_register.v_can_register._assert_102                         cex             Hp            1    0.127 s      
[204] can_register.v_can_register._assert_102:precondition1           covered         Hp            1    0.127 s      
[205] can_register.v_can_register._assert_103                         cex             Hp            1    0.127 s      
[206] can_register.v_can_register._assert_103:precondition1           covered         Hp            1    0.127 s      
[207] can_register.v_can_register._assert_104                         cex             Hp            1    0.135 s      
[208] can_register.v_can_register._assert_104:precondition1           covered         Hp            1    0.135 s      
[209] can_register.v_can_register._assert_105                         cex             Hp            1    0.136 s      
[210] can_register.v_can_register._assert_105:precondition1           covered         Hp            1    0.136 s      
[211] can_register.v_can_register._assert_106                         cex             Hp            1    0.137 s      
[212] can_register.v_can_register._assert_106:precondition1           covered         Hp            1    0.137 s      
[213] can_register.v_can_register._assert_107                         cex             Hp            1    0.137 s      
[214] can_register.v_can_register._assert_107:precondition1           covered         Hp            1    0.137 s      
[215] can_register.v_can_register._assert_108                         cex             Hp            1    0.138 s      
[216] can_register.v_can_register._assert_108:precondition1           covered         Hp            1    0.138 s      
[217] can_register.v_can_register._assert_109                         cex             Hp            1    0.146 s      
[218] can_register.v_can_register._assert_109:precondition1           covered         Hp            1    0.146 s      
[219] can_register.v_can_register._assert_110                         cex             Hp            1    0.146 s      
[220] can_register.v_can_register._assert_110:precondition1           covered         Hp            1    0.146 s      
[221] can_register.v_can_register._assert_111                         cex             Hp            1    0.147 s      
[222] can_register.v_can_register._assert_111:precondition1           covered         Hp            1    0.147 s      
[223] can_register.v_can_register._assert_112                         cex             Hp            1    0.147 s      
[224] can_register.v_can_register._assert_112:precondition1           covered         Hp            1    0.147 s      
[225] can_register.v_can_register._assert_113                         cex             Hp            1    0.148 s      
[226] can_register.v_can_register._assert_113:precondition1           covered         Hp            1    0.148 s      
[227] can_register.v_can_register._assert_114                         cex             Hp            1    0.156 s      
[228] can_register.v_can_register._assert_114:precondition1           covered         Hp            1    0.156 s      
[229] can_register.v_can_register._assert_115                         cex             Hp            1    0.157 s      
[230] can_register.v_can_register._assert_115:precondition1           covered         Hp            1    0.157 s      
[231] can_register.v_can_register._assert_116                         cex             Hp            1    0.157 s      
[232] can_register.v_can_register._assert_116:precondition1           covered         Hp            1    0.157 s      
[233] can_register.v_can_register._assert_117                         cex             Hp            1    0.158 s      
[234] can_register.v_can_register._assert_117:precondition1           covered         Hp            1    0.158 s      
[235] can_register.v_can_register._assert_118                         cex             Hp            1    0.158 s      
[236] can_register.v_can_register._assert_118:precondition1           covered         Hp            1    0.158 s      
[237] can_register.v_can_register._assert_119                         cex             Hp            1    0.166 s      
[238] can_register.v_can_register._assert_119:precondition1           covered         Hp            1    0.166 s      
[239] can_register.v_can_register._assert_120                         cex             Hp            1    0.167 s      
[240] can_register.v_can_register._assert_120:precondition1           covered         Hp            1    0.167 s      
[241] can_register.v_can_register._assert_121                         cex             Hp            1    0.168 s      
[242] can_register.v_can_register._assert_121:precondition1           covered         Hp            1    0.168 s      
[243] can_register.v_can_register._assert_122                         cex             Hp            1    0.168 s      
[244] can_register.v_can_register._assert_122:precondition1           covered         Hp            1    0.168 s      
[245] can_register.v_can_register._assert_123                         cex             Hp            1    0.169 s      
[246] can_register.v_can_register._assert_123:precondition1           covered         Hp            1    0.169 s      
[247] can_register.v_can_register._assert_124                         cex             Hp            1    0.177 s      
[248] can_register.v_can_register._assert_124:precondition1           covered         Hp            1    0.177 s      
[249] can_register.v_can_register._assert_125                         cex             Hp            1    0.179 s      
[250] can_register.v_can_register._assert_125:precondition1           covered         Hp            1    0.179 s      
[251] can_register.v_can_register._assert_126                         cex             Hp            1    0.180 s      
[252] can_register.v_can_register._assert_126:precondition1           covered         Hp            1    0.180 s      
[253] can_register.v_can_register._assert_127                         cex             Hp            1    0.180 s      
[254] can_register.v_can_register._assert_127:precondition1           covered         Hp            1    0.180 s      

==============================================================
ASSUMPTIONS
==============================================================

-------------------------------------------------------------------------------
       Name    |  Expression  |  Location     |  Status      |  Dependencies                  
-------------------------------------------------------------------------------
[<embedded>] % 
[<embedded>] % 
[<embedded>] % 
[<embedded>] % exit
INFO (IPL005): Received request to exit from the console.
INFO (IPL014): Waiting for the Tcl-thread to exit.
INFO: Waiting for proof threads to stop...
INFO: Proof threads stopped.
INFO (IPL018): The peak resident set memory use for this session was 0.384 GB.
INFO (IPL015): The Tcl-thread exited with status 0.
INFO (IPL016): Exiting the analysis session with status 0.
