module i_can_acf(
input         rst,
input          match,
input   [7:0] acceptance_mask_0,
input         no_byte0,
input   [7:0] acceptance_mask_1,
input   [7:0] acceptance_mask_3,
input         no_byte1,
input   [7:0] acceptance_code_3,
input   [7:0] acceptance_mask_2,
input  [28:0] id,
input         go_rx_crc_lim,
input         clk,
  /* Mode inputister */
input   [7:0] data0,
input        id_ok,
input   [7:0] acceptance_code_1,
input   [7:0] acceptance_code_2,
input          match_sf_ext,
input         reset_mode,
input   [7:0] acceptance_code_0,
input         extended_mode,
input          match_df_std,
input         rtr2,
input         ide,
input         acceptance_filter_mode,
input   [7:0] data1,
input          match_df_ext,
input         go_rx_inter,
input         go_error_frame,
input         rtr1,
input          match_sf_std
);

assert property(@(posedge clk)  (go_rx_crc_lim) |-> (extended_mode));
assert property(@(posedge clk)  (go_rx_crc_lim) |-> (match_df_ext));
assert property(@(posedge clk)  (go_rx_crc_lim) |-> (id_ok));
assert property(@(posedge clk)  (id_ok) |-> (go_rx_crc_lim));
assert property(@(posedge clk)  (go_rx_crc_lim) |-> (match_sf_std));
assert property(@(posedge clk)  (go_rx_crc_lim) |-> (match_sf_ext));
assert property(@(posedge clk)  (go_rx_crc_lim) |-> (match));
assert property(@(posedge clk)  (go_rx_crc_lim) |-> (match_df_std));
assert property(@(posedge clk)  (go_rx_crc_lim) |-> (ide));
assert property(@(posedge clk)  (go_rx_crc_lim) |-> (acceptance_filter_mode));

endmodule