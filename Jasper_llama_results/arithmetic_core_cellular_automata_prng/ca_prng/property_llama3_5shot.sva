parameter [7 : 0] DEFAULT_RULE = 8'b00011110;
module i_ca_prng(
  input          ca_state_we,
  input [31 : 0] ca_state_input,
  input [31 : 0] ca_state_new,
  input [31 : 0] tmp_ca_state_new,
  input [7 : 0] update_rule_input,
  input [31:0] init_pattern_data,
  input [7:0] update_rule_reg,
  input clk,
  input reset_n,
  input [31:0] ca_state_reg,
  input [31:0] prng_data,
  input [7:0] update_rule,
  input load_update_rule,
  input load_init_pattern,
  input next_pattern
);

assert property(@(posedge clk)  (load_init_pattern) |-> (ca_state_we == 1));
assert property(@(posedge clk)  (tmp_ca_state_new == 32'b00000000000000000000000000000000) |-> (ca_state_new == tmp_ca_state_new));
assert property(@(posedge clk)  (prng_data == 32'b00000000000000000000000000000000) |-> (init_pattern_data == 32'b00000000000000000000000000000000));
assert property(@(posedge clk)  (prng_data == 32'b00000000000000000000000000000000) |-> (load_init_pattern == 0));
assert property(@(posedge clk)  (load_init_pattern) |-> (prng_data == 32'b00000000000000000000000000000000));
assert property(@(posedge clk)  (prng_data == 32'b00000000000000000000000000000000) |-> (update_rule_reg == 8'b00011110));
assert property(@(posedge clk)  (ca_state_reg == 32'b00000000000000000000000000000000) |-> (prng_data == 32'b00000000000000000000000000000000));
assert property(@(posedge clk)  (next_pattern) |-> (prng_data == 32'b00000000000000000000000000000000));
assert property(@(posedge clk)  (update_rule_reg == 8'b00011110) |-> (ca_state_new == 32'b00000000000000000000000000000000));
assert property(@(posedge clk)  (ca_state_we == 1) |-> (prng_data == 32'b00000000000000000000000000000000));
assert property(@(posedge clk)  (update_rule_reg == 8'b00011110) |-> (tmp_ca_state_new == 32'b00000000000000000000000000000000));
assert property(@(posedge clk)  (next_pattern) |-> (ca_state_new == tmp_ca_state_new));
assert property(@(posedge clk)  (ca_state_we == 0) |-> (ca_state_new == tmp_ca_state_new));
assert property(@(posedge clk)  (ca_state_reg == 32'b00000000000000000000000000000000) |-> (ca_state_we == 0));
assert property(@(posedge clk)  (prng_data == 32'b00000000000000000000000000000000) |-> (tmp_ca_state_new == 32'b00000000000000000000000000000000));
assert property(@(posedge clk)  (next_pattern) |-> (ca_state_we == 1));
assert property(@(posedge clk)  (update_rule_reg == 8'b00011110) |-> (prng_data == 32'b00000000000000000000000000000000));
assert property(@(posedge clk)  (ca_state_we == 1) |-> (ca_state_reg == ca_state_new));
assert property(@(posedge clk)  (tmp_ca_state_new == 32'b00000000000000000000000000000000) |-> (ca_state_we == 0));
assert property(@(posedge clk)  (prng_data == 32'b00000000000000000000000000000000) |-> (ca_state_new == tmp_ca_state_new));
assert property(@(posedge clk)  (tmp_ca_state_new == 32'b00000000000000000000000000000000) |-> (prng_data == 32'b00000000000000000000000000000000));
assert property(@(posedge clk)  (ca_state_reg == 32'b00000000000000000000000000000000) |-> (ca_state_new == 32'b00000000000000000000000000000000));
assert property(@(posedge clk)  (load_init_pattern) |-> (ca_state_new == init_pattern_data));
assert property(@(posedge clk)  (load_init_pattern) |-> (tmp_ca_state_new == 32'b00000000000000000000000000000000));
assert property(@(posedge clk)  (update_rule_reg == 8'b00011110) |-> (ca_state_reg == 32'b00000000000000000000000000000000));
assert property(@(posedge clk)  (update_rule_reg == 8'b00011110) |-> (ca_state_we == 0));
assert property(@(posedge clk)  (ca_state_reg == 32'b00000000000000000000000000000000) |-> (update_rule_reg == 8'b00011110));
assert property(@(posedge clk)  (ca_state_reg == 32'b00000000000000000000000000000000) |-> (tmp_ca_state_new == 32'b00000000000000000000000000000000));
assert property(@(posedge clk)  (ca_state_we == 0) |-> (ca_state_reg == 32'b00000000000000000000000000000000));
assert property(@(posedge clk)  (ca_state_we == 0) |-> (prng_data == 32'b00000000000000000000000000000000));
assert property(@(posedge clk)  (prng_data == 32'b00000000000000000000000000000000) |-> (ca_state_we == 0));
assert property(@(posedge clk)  (prng_data == 32'b00000000000000000000000000000000) |-> (ca_state_reg == 32'b00000000000000000000000000000000));

endmodule
