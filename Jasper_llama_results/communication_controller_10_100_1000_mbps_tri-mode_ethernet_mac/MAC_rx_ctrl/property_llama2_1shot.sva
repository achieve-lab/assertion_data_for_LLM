module i_MAC_rx_ctrl(
input  [2:0]   Rx_pkt_type_rmon        ,
input [3:0]       Pause_next,                             
input             Too_short,
input             broadcast_ptr           ,
input [15:0]      Frame_length_counter,
input [7:0]       pause_quanta_h      ,
input  [15:0]  pause_quanta        ,   
input          Fifo_data_end   ,
input           Fifo_full,
input [3:0]       Pause_current /* synthesis syn_keep*/,
input   [7:0]   MRxD    ,                                       
input [3:0]       Next_state, 
input [5:0]       IFG_counter,   
input           MRxErr  ,                                       
input             RxErr   ,
input             pause_quanta_val_tmp,
input             pause_frame_ptr     ,
input [7:0]       RxD_dl1 ,
input             Rx_apply_rmon_tmp,
input  [7:0]   Fifo_data       ,
input             Fifo_data_en,
input   [5:0]   RX_IFG_SET    ,
input   [6:0]   RX_MIN_LENGTH   ,// 64
input   [15:0]  RX_MAX_LENGTH   ,// 1518
input          CRC_en  ,       
input [7:0]       RxD ,
input [2:0]       Rx_pkt_err_type_rmon,
input           MCrs_dv ,                                       
input             Rx_apply_rmon,
input          CRC_init,       
input             Too_long,
input             Fifo_data_err,
input             Crs_dv  ,      
input          pause_quanta_val    ,   
input  [15:0]  Rx_pkt_length_rmon      ,
input             MAC_add_en,
input             Rx_apply_rmon_tmp_pl1,
input           Reset   ,         
input           Clk     ,         
input           CRC_err ,
input           MAC_rx_add_chk_err  ,
input           broadcast_drop          ,
input [3:0]       Current_state /* synthesis syn_keep*/
);

assert property(@(posedge Clk) (pause_quanta_val) |-> (pause_quanta == 16'h000d));
assert property(@(posedge Clk) (pause_quanta_val) |-> (pause_quanta == 16'h0017));
assert property(@(posedge Clk) (pause_quanta_val) |-> (pause_quanta == 16'h0000));
assert property(@(posedge Clk) (pause_quanta_val) |-> (pause_quanta == 16'h001d));
assert property(@(posedge Clk) (pause_quanta_val) |-> (pause_quanta == 16'h0016));
assert property(@(posedge Clk) (pause_quanta_val) |-> (pause_quanta == 16'h0005));
assert property(@(posedge Clk) (pause_quanta_val) |-> (pause_quanta == 16'h0008));
assert property(@(posedge Clk) (pause_quanta_val) |-> (pause_quanta == 16'h0004));
assert property(@(posedge Clk) (pause_quanta_val) |-> (pause_quanta == 16'h001a));
assert property(@(posedge Clk) (pause_quanta_val) |-> (pause_quanta == 16'h0018));
assert property(@(posedge Clk) (pause_quanta_val) |-> (pause_quanta == 16'h0014));
assert property(@(posedge Clk) (pause_quanta_val) |-> (pause_quanta == 16'h0021));
assert property(@(posedge Clk) (pause_quanta_val) |-> (pause_quanta == 16'h001c));
assert property(@(posedge Clk) (pause_quanta_val) |-> (pause_quanta == 16'h000e));
assert property(@(posedge Clk) (pause_quanta_val) |-> (pause_quanta == 16'h0003));
assert property(@(posedge Clk) (pause_quanta_val) |-> (pause_quanta == 16'h000f));
assert property(@(posedge Clk) (pause_quanta_val) |-> (pause_quanta == 16'h0010));
assert property(@(posedge Clk) (pause_quanta_val) |-> (pause_quanta == 16'h001e));
assert property(@(posedge Clk) (pause_quanta_val) |-> (pause_quanta == 16'h0007));
assert property(@(posedge Clk) (pause_quanta_val) |-> (pause_quanta == 16'h0002));
assert property(@(posedge Clk) (pause_quanta_val) |-> (pause_quanta == 16'h0015));
assert property(@(posedge Clk) (pause_quanta_val) |-> (pause_quanta == 16'h0006));
assert property(@(posedge Clk) (pause_quanta_val) |-> (pause_quanta == 16'h000b));
assert property(@(posedge Clk) (pause_quanta_val) |-> (pause_quanta == 16'h000a));
assert property(@(posedge Clk) (pause_quanta_val) |-> (pause_quanta == 16'h0011));
assert property(@(posedge Clk) (pause_quanta_val) |-> (pause_quanta == 16'h0013));
assert property(@(posedge Clk) (pause_quanta_val) |-> (pause_quanta == 16'h0012));
assert property(@(posedge Clk) (pause_quanta_val) |-> (pause_quanta == 16'h0022));
assert property(@(posedge Clk) (pause_quanta_val) |-> (pause_quanta == 16'h001f));
assert property(@(posedge Clk) (pause_quanta_val) |-> (pause_quanta == 16'h0020));
assert property(@(posedge Clk) (pause_quanta_val) |-> (pause_quanta == 16'h001b));
assert property(@(posedge Clk) (pause_quanta_val) |-> (pause_quanta == 16'h0019));
assert property(@(posedge Clk) (pause_quanta_val) |-> (pause_quanta == 16'h0001));
assert property(@(posedge Clk) (pause_quanta_val) |-> (pause_quanta == 16'h000c));
assert property(@(posedge Clk) (pause_quanta_val) |-> (pause_quanta == 16'h0009));

endmodule