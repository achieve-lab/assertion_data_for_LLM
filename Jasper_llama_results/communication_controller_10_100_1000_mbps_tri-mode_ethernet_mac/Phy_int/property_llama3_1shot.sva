module i_Phy_int(
input             Rx_er_dl1           ,
input   [2:0]   Speed               ,
input          MCrs_dv             ,       
input             Col_dl1             ,
input             Crs_dl1             ,
input             Tx_en               ,
input           Crs                 ,
input             Tx_odd_data_ptr     ,  
input             Rx_odd_data_ptr     ,
input     [7:0]   Rxd_dl1             ,
input             MTxEn_dl1           ,
input   [7:0]   MTxD                ,
input           MAC_tx_clk          ,
input           MTxEn               ,   
input          Tx_er               ,
input     [7:0]   Rxd_dl2             ,
input     [7:0]   MRxD                ,
input             Rx_dv_dl1           ,
input          MCRS                ,
input           Col                 ,
input           MAC_rx_clk          ,
input   [7:0]   Rxd                 ,
input           Rx_dv               ,
input           Line_loop_en        ,
input           Rx_er               ,
input           Reset               ,
input             Rx_dv_dl2           ,
input          MRxErr              ,       
input     [7:0]   Txd                 ,
input     [7:0]   MTxD_dl1            
);

assert property(@(posedge MAC_rx_clk)  (MCRS == 1) |-> (Crs_dl1 == 1));
assert property(@(posedge MAC_rx_clk)  (Rx_dv_dl2 == 1) |-> (MCrs_dv == 1));
assert property(@(posedge MAC_rx_clk)  (Rx_dv_dl1 == 1) |-> (Rx_odd_data_ptr == 0));
assert property(@(posedge MAC_rx_clk)  (MRxErr == 1) |-> (Rx_er_dl1 == 1));
assert property(@(posedge MAC_rx_clk)      (MCrs_dv == 1) |-> (MRxD == Txd));
assert property(@(posedge MAC_rx_clk)  (Rx_dv_dl1 == 1) |-> (Rx_odd_data_ptr == 1));

endmodule