property a2;
@(posedge clk) (crc_check_valid == 0 & rxstate[3] == 0 & check_reset == 0) |=> (bad_frame_get == 1);
endproperty
assert_a2: assert property(a2);

property a4;
@(posedge clk) (crc_check_invalid == 0 & length_error == 0 & crc_check_valid == 1 & rxstate[0] == 1) |=> (bad_frame_get == 0);
endproperty
assert_a4: assert property(a4);

property a7;
@(posedge clk) (crc_check_invalid == 0 & length_error == 0 & crc_check_valid == 1 & rxstate[2] == 1) |=> (bad_frame_get == 0);
endproperty
assert_a7: assert property(a7);

property a6;
@(posedge clk) (crc_check_invalid == 0 & length_error == 0 & crc_check_valid == 1 & rxstate[1] == 1) |=> (bad_frame_get == 0);
endproperty
assert_a6: assert property(a6);

property a9;
@(posedge clk) (crc_check_invalid == 0 & length_error == 0 & crc_check_valid == 1 & rxstate[3] == 0) |=> (bad_frame_get == 0);
endproperty
assert_a9: assert property(a9);

property a3;
@(posedge clk) (crc_check_invalid == 0 & length_error == 0 & check_reset == 1 & rxstate[0] == 1) |=> (bad_frame_get == 0);
endproperty
assert_a3: assert property(a3);

property a5;
@(posedge clk) (crc_check_invalid == 0 & length_error == 0 & check_reset == 1 & rxstate[1] == 1) |=> (bad_frame_get == 0);
endproperty
assert_a5: assert property(a5);

property a8;
@(posedge clk) (crc_check_invalid == 0 & length_error == 0 & check_reset == 1 & rxstate[2] == 1) |=> (bad_frame_get == 0);
endproperty
assert_a8: assert property(a8);

property a1;
@(posedge clk) (length_error == 1) |=> (bad_frame_get == 1);
endproperty
assert_a1: assert property(a1);

property a0;
@(posedge clk) (crc_check_invalid == 1) |=> (bad_frame_get == 1);
endproperty
assert_a0: assert property(a0);

