
module i_rxLenTypChecker(
    input  get_terminator,
    input length_error,
    input length_65_127,
    input length_128_255,
    input length_256_511,
    input[`COUNTER_WIDTH-1:0] frame_cnt, 
    input small_error,
    input  vlan_enable,  //VLAN mode enable bit
    input jumbo_frame,
    input length_512_1023,
    input  rxclk,
    input  tagged_frame,	 //number of 64bits DATA field of tagged frame contains
    input length_1024_max,
    input [2:0] location_input,
    input padded_frame,
    input [2:0] terminator_location,
    input  reset,
    input large_error,
    input location_reg,
    input  jumbo_enable //Enable jumbo frame recieving
);
property a20;
@(posedge rxclk) (frame_cnt[0] == 1 & frame_cnt[6] == 1 & frame_cnt[8] == 0) |=> (length_128_255 == 0);
endproperty
assert_a20: assert property(a20);

property a21;
@(posedge rxclk) (frame_cnt[2] == 0 & frame_cnt[8] == 1 & frame_cnt[9] == 1 & frame_cnt[0] == 0) |=> (length_128_255 == 0);
endproperty
assert_a21: assert property(a21);

property a22;
@(posedge rxclk) (frame_cnt[0] == 1 & frame_cnt[9] == 1 & frame_cnt[4] == 1) |=> (length_128_255 == 0);
endproperty
assert_a22: assert property(a22);

property a23;
@(posedge rxclk) (frame_cnt[0] == 1 & frame_cnt[6] == 1 & frame_cnt[10] == 1 & frame_cnt[2] == 1) |=> (length_128_255 == 0);
endproperty
assert_a23: assert property(a23);

property a24;
@(posedge rxclk) (get_terminator == 1 & frame_cnt[7] == 1 & frame_cnt[5] == 0 & frame_cnt[0] == 0 & frame_cnt[3] == 1 & frame_cnt[2] == 1 & frame_cnt[1] == 0) |=> (length_128_255 == 1);
endproperty
assert_a24: assert property(a24);

property a25;
@(posedge rxclk) (get_terminator == 1 & frame_cnt[7] == 1 & frame_cnt[9] == 0 & frame_cnt[1] == 1 & frame_cnt[0] == 0 & frame_cnt[6] == 1 & frame_cnt[8] == 0 & frame_cnt[3] == 0) |=> (length_128_255 == 1);
endproperty
assert_a25: assert property(a25);

property a26;
@(posedge rxclk) (get_terminator == 1 & frame_cnt[7] == 1 & frame_cnt[8] == 1 & frame_cnt[2] == 1 & frame_cnt[1] == 1 & frame_cnt[0] == 0 & frame_cnt[4] == 1 & frame_cnt[5] == 0 & frame_cnt[9] == 0) |=> (length_128_255 == 1);
endproperty
assert_a26: assert property(a26);

property a27;
@(posedge rxclk) (get_terminator == 1 & frame_cnt[7] == 1 & frame_cnt[8] == 1 & frame_cnt[2] == 1 & frame_cnt[1] == 1 & frame_cnt[0] == 0 & frame_cnt[3] == 0 & frame_cnt[5] == 1 & frame_cnt[9] == 0) |=> (length_128_255 == 1);
endproperty
assert_a27: assert property(a27);

property a28;
@(posedge rxclk) (get_terminator == 1 & frame_cnt[7] == 1 & frame_cnt[5] == 0 & frame_cnt[10] == 0 & frame_cnt[2] == 1 & frame_cnt[8] == 1 & frame_cnt[9] == 1 & frame_cnt[0] == 0) |=> (length_128_255 == 1);
endproperty
assert_a28: assert property(a28);

property a29;
@(posedge rxclk) (get_terminator == 1 & frame_cnt[7] == 1 & frame_cnt[3] == 1 & frame_cnt[5] == 0 & frame_cnt[0] == 0 & frame_cnt[4] == 1 & frame_cnt[1] == 0 & frame_cnt[10] == 0) |=> (length_128_255 == 1);
endproperty
assert_a29: assert property(a29);

property a16;
@(posedge rxclk) (frame_cnt[6] == 0 & frame_cnt[2] == 1 & frame_cnt[4] == 0) |=> (length_128_255 == 0);
endproperty
assert_a16: assert property(a16);

property a15;
@(posedge rxclk) (frame_cnt[1] == 0 & frame_cnt[3] == 0 & frame_cnt[6] == 1 & frame_cnt[0] == 0) |=> (length_128_255 == 0);
endproperty
assert_a15: assert property(a15);

property a14;
@(posedge rxclk) (frame_cnt[2] == 0 & frame_cnt[8] == 1 & frame_cnt[0] == 0 & frame_cnt[1] == 1) |=> (length_128_255 == 0);
endproperty
assert_a14: assert property(a14);

property a17;
@(posedge rxclk) (frame_cnt[2] == 0 & frame_cnt[3] == 1 & frame_cnt[6] == 1 & frame_cnt[1] == 1) |=> (length_128_255 == 0);
endproperty
assert_a17: assert property(a17);

property a30;
@(posedge rxclk) (get_terminator == 1 & frame_cnt[7] == 1 & frame_cnt[9] == 0 & frame_cnt[6] == 0 & frame_cnt[4] == 1 & frame_cnt[3] == 1 & frame_cnt[1] == 1 & frame_cnt[2] == 1) |=> (length_128_255 == 1);
endproperty
assert_a30: assert property(a30);

property a11;
@(posedge rxclk) (frame_cnt[2] == 0 & frame_cnt[3] == 1 & frame_cnt[9] == 0 & frame_cnt[0] == 1) |=> (length_128_255 == 0);
endproperty
assert_a11: assert property(a11);

property a10;
@(posedge rxclk) (frame_cnt[0] == 1 & frame_cnt[5] == 0 & frame_cnt[1] == 1) |=> (length_128_255 == 0);
endproperty
assert_a10: assert property(a10);

property a13;
@(posedge rxclk) (frame_cnt[1] == 0 & frame_cnt[0] == 1 & frame_cnt[4] == 1) |=> (length_128_255 == 0);
endproperty
assert_a13: assert property(a13);

property a12;
@(posedge rxclk) (frame_cnt[9] == 1 & frame_cnt[5] == 1 & frame_cnt[0] == 0) |=> (length_128_255 == 0);
endproperty
assert_a12: assert property(a12);

property a19;
@(posedge rxclk) (frame_cnt[6] == 0 & frame_cnt[0] == 0 & frame_cnt[1] == 1) |=> (length_128_255 == 0);
endproperty
assert_a19: assert property(a19);

property a18;
@(posedge rxclk) (frame_cnt[2] == 0 & frame_cnt[3] == 1 & frame_cnt[4] == 0 & frame_cnt[0] == 0) |=> (length_128_255 == 0);
endproperty
assert_a18: assert property(a18);

property a1;
@(posedge rxclk) (get_terminator == 0) |=> (length_128_255 == 0);
endproperty
assert_a1: assert property(a1);

property a0;
@(posedge rxclk) (frame_cnt[7] == 0) |=> (length_128_255 == 0);
endproperty
assert_a0: assert property(a0);

property a3;
@(posedge rxclk) (frame_cnt[9] == 1 & frame_cnt[3] == 0 & frame_cnt[0] == 1) |=> (length_128_255 == 0);
endproperty
assert_a3: assert property(a3);

property a2;
@(posedge rxclk) (frame_cnt[5] == 1 & frame_cnt[1] == 0) |=> (length_128_255 == 0);
endproperty
assert_a2: assert property(a2);

property a5;
@(posedge rxclk) (frame_cnt[0] == 1 & frame_cnt[10] == 0 & frame_cnt[1] == 1) |=> (length_128_255 == 0);
endproperty
assert_a5: assert property(a5);

property a4;
@(posedge rxclk) (frame_cnt[9] == 1 & frame_cnt[3] == 0 & frame_cnt[1] == 1) |=> (length_128_255 == 0);
endproperty
assert_a4: assert property(a4);

property a7;
@(posedge rxclk) (frame_cnt[2] == 0 & frame_cnt[10] == 0 & frame_cnt[0] == 1) |=> (length_128_255 == 0);
endproperty
assert_a7: assert property(a7);

property a6;
@(posedge rxclk) (frame_cnt[0] == 1 & frame_cnt[6] == 1 & frame_cnt[1] == 1) |=> (length_128_255 == 0);
endproperty
assert_a6: assert property(a6);

property a9;
@(posedge rxclk) (frame_cnt[2] == 0 & frame_cnt[8] == 1 & frame_cnt[10] == 0) |=> (length_128_255 == 0);
endproperty
assert_a9: assert property(a9);

property a8;
@(posedge rxclk) (frame_cnt[6] == 0 & frame_cnt[4] == 0 & frame_cnt[0] == 0) |=> (length_128_255 == 0);
endproperty
assert_a8: assert property(a8);


endmodule
