parameter pChannels = 4;
parameter pPrescalerBits = 8;
module i_PSGEnvGen(
	input [19:0] envDvn [3:0],
	input [19:0] envStepPeriod1 ,
	input [7:0] sustain3,
	input [15:0] envStepPeriod,	// determines the length of one step of the envelope generator
	input [17:0] decay,
	input [19:0] envDvnx,
	input [11:0] relese_x,
	input [11:0] relese2,
	input [15:0] attack0,
	input [7:0] envCtr2 [3:0],
	input [15:0] attack1,
    input [1:0] sel ,
	input [15:0] attack,
	input [7:0] sustain0,
	input [7:0] sustain2,
	input rst,							// reset
	input [7:0] sustain_x,
	input [11:0] relese1,
	input [7:0] sustain1,
	input [15:0] attack_x,
	input [7:0] envCtr [3:0],
	input [11:0] decay2,
	input [11:0] decay_x,
	input clk,							// core clock
	input [15:0] attack2,
	input [7:0] sustain,
	input [15:0] attack3,
	input [2:0] icnt [3:0],		// interval count
	input [2:0] envStateNxt,
	input [11:0] decay3,
	input [11:0] decay0,
	input [17:0] relese,
	input [7:0] envCtrx,
	input [11:0] relese0,
	input [3:0] gate,
	input [7:0] iv [3:0],			// interval value for decay/release
	input [11:0] decay1,
	input [11:0] relese3,
	input [pPrescalerBits-1:0] cnt,		// clock rate prescaler
	input [7:0] o,
	input [2:0] envState [3:0],
        
	input [1:0] s,
	input [4:1] i1,
	input e,
	input [4:1] i2,
	input [4:1] i0,
	input [4:1] z,
	input [4:1] i3
);

assert property(@(posedge clk) (cnt == 8'd0) |-> (tap[7] == tap[6]));
assert property(@(posedge clk) (cnt == 8'd0) |-> (tap[23] == tap[22]));
assert property(@(posedge clk) (cnt == 8'd0) |-> (acc == 0));
assert property(@(posedge clk) (cnt == 8'd0) |-> (tap[35] == tap[34]));
assert property(@(posedge clk) (cnt == 8'd0) |-> (tap[20] == tap[19]));
assert property(@(posedge clk) (cnt == 8'd0) |-> (tap[11] == tap[10]));
assert property(@(posedge clk) (cnt == 8'd0) |-> (tap[27] == tap[26]));
assert property(@(posedge clk) (cnt == 8'd0) |-> (tap[33] == tap[32]));
assert property(@(posedge clk) (cnt == 8'd0) |-> (tap[36] == tap[35]));
assert property(@(posedge clk) (cnt == 8'd0) |-> (tap[26] == tap[25]));
assert property(@(posedge clk) (cnt == 8'd0) |-> (tap[10] == tap[9]));
assert property(@(posedge clk) (cnt == 8'd0) |-> (o == 0));
assert property(@(posedge clk) (cnt == 8'd0) |-> (tap[39] == tap[38]));
assert property(@(posedge clk) (cnt == 8'd0) |-> (tap[15] == tap[14]));
assert property(@(posedge clk) (cnt == 8'd0) |-> (tap[21] == tap[20]));
assert property(@(posedge clk) (cnt == 8'd0) |-> (tap[25] == tap[24]));
assert property(@(posedge clk) (cnt == 8'd0) |-> (tap[3] == tap[2]));
assert property(@(posedge clk) (cnt == 8'd0) |-> (tap[32] == tap[31]));
assert property(@(posedge clk) (cnt == 8'd0) |-> (tap[8] == tap[7]));
assert property(@(posedge clk) (cnt == 8'd0) |-> (tap[18] == tap[17]));
assert property(@(posedge clk) (cnt == 8'd0) |-> (tap[0] == i));
assert property(@(posedge clk) (cnt == 8'd0) |-> (tap[24] == tap[23]));
assert property(@(posedge clk) (cnt == 8'd0) |-> (tap[12] == tap[11]));
assert property(@(posedge clk) (cnt == 8'd0) |-> (tap[34] == tap[33]));
assert property(@(posedge clk) (cnt == 8'd0) |-> (tap[30] == tap[29]));
assert property(@(posedge clk) (cnt == 8'd0) |-> (tap[37] == tap[36]));
assert property(@(posedge clk) (cnt == 8'd0) |-> (tap[19] == tap[18]));
assert property(@(posedge clk) (cnt == 8'd0) |-> (tap[38] == tap[37]));
assert property(@(posedge clk) (cnt == 8'd0) |-> (tap[14] == tap[13]));
assert property(@(posedge clk) (cnt == 8'd0) |-> (tap[9] == tap[8]));
assert property(@(posedge clk) (cnt == 8'd0) |-> (tap[1] == tap[0]));
assert property(@(posedge clk) (cnt == 8'd0) |-> (tap[29] == tap[28]));
assert property(@(posedge clk) (cnt == 8'd0) |-> (tap[40] == tap[39]));
assert property(@(posedge clk) (cnt == 8'd0) |-> (tap[22] == tap[21]));
assert property(@(posedge clk) (cnt == 8'd0) |-> (tap[2] == tap[1]));
assert property(@(posedge clk) (cnt == 8'd0) |-> (tap[5] == tap[4]));
assert property(@(posedge clk) (cnt == 8'd0) |-> (tap[41] == tap[40]));
assert property(@(posedge clk) (cnt == 8'd0) |-> (tap[31] == tap[30]));
assert property(@(posedge clk) (cnt == 8'd0) |-> (tap[4] == tap[3]));
assert property(@(posedge clk) (cnt == 8'd0) |-> (tap[28] == tap[27]));
assert property(@(posedge clk) (cnt == 8'd0) |-> (tap[6] == tap[5]));
assert property(@(posedge clk) (cnt == 8'd0) |-> (tap[16] == tap[15]));
assert property(@(posedge clk) (cnt == 8'd0) |-> (tap[13] == tap[12]));
assert property(@(posedge clk) (cnt == 8'd0) |-> (tap[17] == tap[16]));

endmodule