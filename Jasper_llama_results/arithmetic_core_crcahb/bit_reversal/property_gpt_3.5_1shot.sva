  parameter DATA_SIZE = 32;
module i_bit_reversal(
	input  [DATA_SIZE - 1 : 0] data_in,
	input [DATA_SIZE - 1 : 0] data_out,
	input  [1 : 0] rev_type,
	input DEFAULT_CLOCK,
	input DEFAULT_RESET,
input [DATA_SIZE - 1 : 0] data_reversed[0 : 3]
);

assert property(@(posedge DEFAULT_CLOCK) (data_reversed[NO_REVERSE] == data_in));assert property(@(posedge DEFAULT_CLOCK)  (data_reversed[BYTE][i] == data_in[31 - i]) |-> (data_out[i] == data_in[31 - i]));assert property(@(posedge DEFAULT_CLOCK)  (data_reversed[HALF_WORD][i] == data_in[31 - i]) |-> (data_out[i] == data_in[31 - i]));assert property(@(posedge DEFAULT_CLOCK)  (data_reversed[WORD][i] == data_in[31 - i]) |-> (data_out[i] == data_in[31 - i]));
endmodule