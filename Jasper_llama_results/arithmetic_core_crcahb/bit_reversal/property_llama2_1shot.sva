  parameter DATA_SIZE = 32;
module i_bit_reversal(
	input  [DATA_SIZE - 1 : 0] data_in,
	input [DATA_SIZE - 1 : 0] data_out,
	input  [1 : 0] rev_type,
	input DEFAULT_CLOCK,
	input DEFAULT_RESET,
input [DATA_SIZE - 1 : 0] data_reversed[0 : 3]
);

assert property(@(posedge DEFAULT_CLOCK) (rev_type == 1) |-> (data_out == {data_in[7:0], data_in[15:8], data_in[23:16], data_in[31:24]}));
assert property(@(posedge DEFAULT_CLOCK) (rev_type == 0) |-> (data_out == data_in));
assert property(@(posedge DEFAULT_CLOCK) (rev_type == 2) |-> (data_out == {data_in[15:0], data_in[31:16]}));
assert property(@(posedge DEFAULT_CLOCK) (rev_type == 3) |-> (data_out == {data_in[31:0]}));

endmodule