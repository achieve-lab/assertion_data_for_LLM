parameter DividerLength   = 7;
module i_freqdivider(
 input Positive, Negative,    // signals Positive, Negative are synchronous with MainClock
 input MainClock,                 // main clock
input [DividerLength-1 : 0] DividerCounter,
input FrequencyOut        // inputistered input
);

assert property(@(posedge MainClock) (!Positive && Negative ##1 !Negative && !Positive ##1 !Positive ##1 !Positive ##1 Negative) |-> Positive);
assert property(@(posedge MainClock) (!Positive ##1 !Negative && !Positive ##1 !Positive && Negative ##1 !Positive ##1 Negative) |-> Positive);
assert property(@(posedge MainClock) (!Negative && !Positive ##1 !Negative && !Positive ##1 !Positive ##1 !Negative && !Positive ##1 1) |-> Negative);
assert property(@(posedge MainClock) (!Positive ##1 !Negative && !Positive ##1 !Positive ##1 !Positive && Negative ##1 Negative) |-> Positive);
assert property(@(posedge MainClock) (!Positive ##1 !Negative && !Positive ##1 !Negative && !Positive ##1 !Positive ##1 !Positive) |-> Negative);
endmodule
