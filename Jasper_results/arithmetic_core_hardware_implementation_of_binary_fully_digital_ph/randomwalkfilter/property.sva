
parameter FilterLength      = 8;
parameter FilterResetValue  = 4;
parameter FilterMaxValue    = FilterResetValue;
parameter FilterMinValue    = 256 - FilterResetValue;

module i_randomwalkfilter(
input [FilterLength-1 : 0] FilterCounter,
/* calculation of input pulses synchrinized with MainClock */
input Positive, Negative,
 input  MainClock, Lead, Lag    // System Clock and Phase Comparator signals
);

assert property(@(posedge MainClock) (!Lag && Lead ##1 !Lag && !Lead ##1 !Lag ##1 !Lag ##1 Lead) |-> Lag);
assert property(@(posedge MainClock) (!Lag ##1 !Lag && !Lead ##1 !Lag && Lead ##1 !Lag ##1 Lead) |-> Lag);
assert property(@(posedge MainClock) (!Lag && !Lead ##1 !Lag && !Lead ##1 !Lag ##1 !Lag && !Lead ##1 1) |-> Lead);
assert property(@(posedge MainClock) (!Lag ##1 !Lag && !Lead ##1 !Lag ##1 !Lag && Lead ##1 Lead) |-> Lag);
assert property(@(posedge MainClock) (!Lag ##1 !Lag && !Lead ##1 !Lag && !Lead ##1 !Lag ##1 !Lag) |-> Lead);
endmodule
