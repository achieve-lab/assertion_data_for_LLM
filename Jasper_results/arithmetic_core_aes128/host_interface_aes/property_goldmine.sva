
module i_host_interface(
	input [31:0] col_bus,
input cnt_en,
input wr_err,
input first_block_set,
	input int_ccf,
	input col_rd_en,
	input [1:0] key_sel,
	input col_wr_en,
input [31:0] bus_out_mux,
	input [1:0] data_type,
input dma_in_en,
input enable,
	input [3:0] key_en,
input errc,
	input PWRITE,
	input [31:0] key_bus,
	input [31:0] PRDATA,
input [2:0] state, next_state,
	input [31:0] iv_bus,
	input [12:0] PWDATA,
input wr_err_en,
input ccf_ie,
	input [1:0] mode,
	input PCLK,
input enable_clear,
input aes_cr_wr_en,
input write_completed,
input [10:0] aes_cr,
input key_deriv,
	input start_core,
input [1:0] chmod_in,
	input dma_req_rd,
	input ccf_set,
input [1:0] mode_in,
input rd_err,
input ccf,
input dma_req,
	input PSEL,
	input [3:0] PADDR,
input read_en,
	input disable_core,
	input [3:0] iv_en,
input [31:0] bus_out,
input err_ie,
input access_permission,
	input [1:0] col_addr,
	input [3:0] iv_sel,
	input PENABLE,
input ccfc,
input read_completed,
	input dma_req_wr,
	input int_err,
	input [1:0] chmod,
input first_block_clear,
input dma_out_en,
input rd_err_en,
input [1:0] cnt,
	input PRESETn,
	input DEFAULT_CLOCK,
	input DEFAULT_RESET,
input write_en,
	input first_block
);

property a1;
@(posedge DEFAULT_CLOCK) (enable == 0) |-> (disable_core == 1);
endproperty
assert_a1 : assert property(a1);
property a0;
@(posedge DEFAULT_CLOCK) (enable == 1) |-> (disable_core == 0);
endproperty
assert_a0 : assert property(a0);
property a3;
@(posedge DEFAULT_CLOCK) (ccf_ie == 0) |-> (int_ccf == 0);
endproperty
assert_a3 : assert property(a3);

property a4;
@(posedge DEFAULT_CLOCK) (ccf_ie == 1 & ccf_set == 1) |-> (int_ccf == 1);
endproperty
assert_a4 : assert property(a4);

property a2;
@(posedge DEFAULT_CLOCK) (ccf_set == 0) |-> (int_ccf == 0);
endproperty
assert_a2 : assert property(a2);

endmodule
