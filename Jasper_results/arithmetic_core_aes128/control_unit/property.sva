

module i_control_unit(
        input  [2:0] sbox_sel,
        input  [1:0] rk_sel,
        input  [1:0] key_out_sel,
        input  [1:0] col_sel,
        input  [3:0] key_en,
        input  [3:0] col_en,
        input  [3:0] round,
        input  bypass_rk,
        input  bypass_key_en,
        input  key_sel,
        input  iv_cnt_en,
        input  iv_cnt_sel,
        input  key_derivation_en,
        input end_comp,
        input key_init,
        input key_gen,
        input mode_ctr,
        input mode_cbc,
        input last_round,
  	input encrypt_decrypt,
        input [1:0] operation_mode,
        input [1:0] aes_mode,
        input start,
        input disable_core,
        input clk,
        input rst_n,
	input first_round,
	input state,
	input op_mode,
	input rd_count_en,
	input next_state,
	input rd_count,
	input op_key_derivation,
	input enc_dec
);
assert property(@(posedge clk) ((key_out_sel == 0) ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!bypass_key_en ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((col_sel >= 0) && (col_sel <= 2) ##1 1) |-> first_round);
assert property(@(posedge clk) (!bypass_rk ##1 1) |-> first_round);
assert property(@(posedge clk) (!iv_cnt_sel ##1 1) |-> first_round);
assert property(@(posedge clk) ((key_en == 0) ##1 1) |-> first_round);
assert property(@(posedge clk) ((col_sel == 2)) |-> first_round);
assert property(@(posedge clk) (first_round) |-> (col_sel == 2));
assert property(@(posedge clk) (!rd_count_en ##1 1) |-> first_round);
assert property(@(posedge clk) ((operation_mode >= 0) && (operation_mode <= 3) ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!iv_cnt_en ##1 1) |-> first_round);
assert property(@(posedge clk) (!iv_cnt_sel ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((key_en == 0) ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((state == 0) ##1 1) |-> first_round);
assert property(@(posedge clk) ((aes_mode >= 0) && (aes_mode <= 3) ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!last_round ##1 1) |-> first_round);
assert property(@(posedge clk) ((round == 0) ##1 1) |-> first_round);
assert property(@(posedge clk) ((rd_count == 0) ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) (clk ##1 1) |-> first_round);
assert property(@(posedge clk) (!key_gen ##1 1) |-> first_round);
assert property(@(posedge clk) ((col_sel >= 0) && (col_sel <= 2) ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!last_round ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!bypass_rk ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((aes_mode >= 0) && (aes_mode <= 3) ##1 1) |-> first_round);
assert property(@(posedge clk) ((op_mode >= 0) && (op_mode <= 3) ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((rd_count == 0) ##1 1) |-> first_round);
assert property(@(posedge clk) (!bypass_key_en ##1 1) |-> first_round);
assert property(@(posedge clk) ((col_en == 0) ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!end_comp ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((next_state >= 0) && (next_state <= 11) ##1 1) |-> first_round);
assert property(@(posedge clk) ((key_out_sel == 0) ##1 1) |-> first_round);
assert property(@(posedge clk) ((sbox_sel == 0) ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!key_derivation_en ##1 1) |-> first_round);
assert property(@(posedge clk) ((state == 0) ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!rst_n) |-> (col_sel == 2));
assert property(@(posedge clk) ((round == 0) ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((op_mode >= 0) && (op_mode <= 3) ##1 1) |-> first_round);
assert property(@(posedge clk) (!key_sel ##1 1) |-> first_round);
assert property(@(posedge clk) (!key_derivation_en ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((next_state >= 0) && (next_state <= 11) ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!iv_cnt_en ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((rk_sel == 0) ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((col_en == 0) ##1 1) |-> first_round);
assert property(@(posedge clk) (!end_comp ##1 1) |-> first_round);
assert property(@(posedge clk) ((sbox_sel == 0) ##1 1) |-> first_round);
assert property(@(posedge clk) (!key_sel ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((operation_mode >= 0) && (operation_mode <= 3) ##1 1) |-> first_round);
assert property(@(posedge clk) (clk ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((rk_sel == 0) ##1 1) |-> first_round);
assert property(@(posedge clk) (!rst_n) |-> first_round);
assert property(@(posedge clk) (!rd_count_en ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((rd_count == 0) ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((round == 0) ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((next_state >= 0) && (next_state <= 11) ##2 1) |-> first_round);
assert property(@(posedge clk) (!bypass_key_en ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((sbox_sel == 0) ##2 1) |-> first_round);
assert property(@(posedge clk) (!bypass_rk ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) (first_round ##1 1) |-> first_round);
assert property(@(posedge clk) ((operation_mode >= 0) && (operation_mode <= 3) ##2 1) |-> first_round);
assert property(@(posedge clk) (clk ##2 1) |-> first_round);
assert property(@(posedge clk) ((next_state >= 0) && (next_state <= 11) ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) (clk ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!last_round ##2 1) |-> first_round);
assert property(@(posedge clk) (!end_comp ##2 1) |-> first_round);
assert property(@(posedge clk) ((round == 0) ##2 1) |-> first_round);
assert property(@(posedge clk) (!key_derivation_en ##2 1) |-> first_round);
assert property(@(posedge clk) ((col_en == 0) ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!rst_n ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!end_comp ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((key_out_sel == 0) ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((op_mode >= 0) && (op_mode <= 3) ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((operation_mode >= 0) && (operation_mode <= 3) ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!key_sel ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!iv_cnt_sel ##2 1) |-> first_round);
assert property(@(posedge clk) ((rk_sel == 0) ##2 1) |-> first_round);
assert property(@(posedge clk) ((key_en == 0) ##2 1) |-> first_round);
assert property(@(posedge clk) (!key_sel ##2 1) |-> first_round);
assert property(@(posedge clk) ((sbox_sel == 0) ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!key_gen ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((key_en == 0) ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!iv_cnt_en ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((op_mode >= 0) && (op_mode <= 3) ##2 1) |-> first_round);
assert property(@(posedge clk) ((col_en == 0) ##2 1) |-> first_round);
assert property(@(posedge clk) (!bypass_key_en ##2 1) |-> first_round);
assert property(@(posedge clk) (!iv_cnt_sel ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((state == 0) ##2 1) |-> first_round);
assert property(@(posedge clk) (!key_derivation_en ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((rk_sel == 0) ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((col_sel >= 0) && (col_sel <= 2) ##2 1) |-> first_round);
assert property(@(posedge clk) ((aes_mode >= 0) && (aes_mode <= 3) ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!bypass_rk ##2 1) |-> first_round);
assert property(@(posedge clk) ((col_sel == 2) ##1 1) |-> first_round);
assert property(@(posedge clk) (!iv_cnt_en ##2 1) |-> first_round);
assert property(@(posedge clk) (!key_gen ##2 1) |-> first_round);
assert property(@(posedge clk) ((key_out_sel == 0) ##2 1) |-> first_round);
assert property(@(posedge clk) ((aes_mode >= 0) && (aes_mode <= 3) ##2 1) |-> first_round);
assert property(@(posedge clk) ((state == 0) ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!last_round ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((rd_count == 0) ##2 1) |-> first_round);
assert property(@(posedge clk) ((col_sel >= 0) && (col_sel <= 2) ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) (first_round ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!rst_n ##1 1) |-> first_round);
assert property(@(posedge clk) ((col_sel == 2) ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!rd_count_en ##2 1) |-> first_round);
assert property(@(posedge clk) (!rd_count_en ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!rst_n ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!iv_cnt_en ##3 1) |-> first_round);
assert property(@(posedge clk) ((col_sel == 2) ##2 1) |-> first_round);
assert property(@(posedge clk) ((col_sel >= 0) && (col_sel <= 2) ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((col_sel >= 0) && (col_sel <= 2) ##3 1) |-> first_round);
assert property(@(posedge clk) ((next_state >= 0) && (next_state <= 11) ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((operation_mode >= 0) && (operation_mode <= 3) ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((state == 0) ##3 1) |-> first_round);
assert property(@(posedge clk) ((next_state >= 0) && (next_state <= 11) ##3 1) |-> first_round);
assert property(@(posedge clk) (!bypass_key_en ##3 1) |-> first_round);
assert property(@(posedge clk) ((col_en == 0) ##3 1) |-> first_round);
assert property(@(posedge clk) ((key_out_sel == 0) ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!bypass_rk ##3 1) |-> first_round);
assert property(@(posedge clk) (!rd_count_en ##3 1) |-> first_round);
assert property(@(posedge clk) (first_round ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((key_en == 0) ##3 1) |-> first_round);
assert property(@(posedge clk) (!iv_cnt_sel ##3 1) |-> first_round);
assert property(@(posedge clk) (!key_derivation_en ##3 1) |-> first_round);
assert property(@(posedge clk) (!key_sel ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((aes_mode >= 0) && (aes_mode <= 3) ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) (clk ##3 1) |-> first_round);
assert property(@(posedge clk) ((round == 0) ##3 1) |-> first_round);
assert property(@(posedge clk) ((sbox_sel == 0) ##3 1) |-> first_round);
assert property(@(posedge clk) (!end_comp ##3 1) |-> first_round);
assert property(@(posedge clk) ((col_en == 0) ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!bypass_key_en ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((key_en == 0) ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((col_sel == 2) ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) (first_round ##2 1) |-> first_round);
assert property(@(posedge clk) ((rd_count == 0) ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((operation_mode >= 0) && (operation_mode <= 3) ##3 1) |-> first_round);
assert property(@(posedge clk) (!key_gen ##3 1) |-> first_round);
assert property(@(posedge clk) (!bypass_rk ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!iv_cnt_sel ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!last_round ##3 1) |-> first_round);
assert property(@(posedge clk) ((sbox_sel == 0) ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((aes_mode >= 0) && (aes_mode <= 3) ##3 1) |-> first_round);
assert property(@(posedge clk) (clk ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!key_sel ##3 1) |-> first_round);
assert property(@(posedge clk) (!iv_cnt_en ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!end_comp ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((key_out_sel == 0) ##3 1) |-> first_round);
assert property(@(posedge clk) ((round == 0) ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((op_mode >= 0) && (op_mode <= 3) ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!rd_count_en ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((rd_count == 0) ##3 1) |-> first_round);
assert property(@(posedge clk) ((op_mode >= 0) && (op_mode <= 3) ##3 1) |-> first_round);
assert property(@(posedge clk) (!key_derivation_en ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((rk_sel == 0) ##3 1) |-> first_round);
assert property(@(posedge clk) ((state == 0) ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!rst_n ##2 1) |-> first_round);
assert property(@(posedge clk) ((rk_sel == 0) ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!last_round ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!key_gen ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((round == 0) ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((key_out_sel == 0) ##4 1) |-> first_round);
assert property(@(posedge clk) (!rst_n ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!iv_cnt_sel ##4 1) |-> first_round);
assert property(@(posedge clk) (!key_sel ##4 1) |-> first_round);
assert property(@(posedge clk) ((col_sel == 2) ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((sbox_sel == 0) ##4 1) |-> first_round);
assert property(@(posedge clk) (!end_comp ##4 1) |-> first_round);
assert property(@(posedge clk) ((col_en == 0) ##4 1) |-> first_round);
assert property(@(posedge clk) (!bypass_rk ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!bypass_key_en ##4 1) |-> first_round);
assert property(@(posedge clk) ((state == 0) ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((col_sel >= 0) && (col_sel <= 2) ##4 1) |-> first_round);
assert property(@(posedge clk) (clk ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((col_en == 0) ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) (first_round ##3 1) |-> first_round);
assert property(@(posedge clk) (!bypass_key_en ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((operation_mode >= 0) && (operation_mode <= 3) ##4 1) |-> first_round);
assert property(@(posedge clk) ((aes_mode >= 0) && (aes_mode <= 3) ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((col_sel == 2) ##3 1) |-> first_round);
assert property(@(posedge clk) (!bypass_rk ##4 1) |-> first_round);
assert property(@(posedge clk) (!key_sel ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!key_derivation_en ##4 1) |-> first_round);
assert property(@(posedge clk) ((rk_sel == 0) ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((col_sel >= 0) && (col_sel <= 2) ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((key_en == 0) ##4 1) |-> first_round);
assert property(@(posedge clk) ((next_state >= 0) && (next_state <= 11) ##4 1) |-> first_round);
assert property(@(posedge clk) ((rk_sel == 0) ##4 1) |-> first_round);
assert property(@(posedge clk) ((rd_count == 0) ##4 1) |-> first_round);
assert property(@(posedge clk) (!rst_n ##3 1) |-> first_round);
assert property(@(posedge clk) ((round == 0) ##4 1) |-> first_round);
assert property(@(posedge clk) ((op_mode >= 0) && (op_mode <= 3) ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((key_en == 0) ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!iv_cnt_en ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!last_round ##4 1) |-> first_round);
assert property(@(posedge clk) (!rd_count_en ##4 1) |-> first_round);
assert property(@(posedge clk) ((aes_mode >= 0) && (aes_mode <= 3) ##4 1) |-> first_round);
assert property(@(posedge clk) (!iv_cnt_en ##4 1) |-> first_round);
assert property(@(posedge clk) ((key_out_sel == 0) ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) (first_round ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!end_comp ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((next_state >= 0) && (next_state <= 11) ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!rd_count_en ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((op_mode >= 0) && (op_mode <= 3) ##4 1) |-> first_round);
assert property(@(posedge clk) ((sbox_sel == 0) ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) (clk ##4 1) |-> first_round);
assert property(@(posedge clk) (!key_derivation_en ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!key_gen ##4 1) |-> first_round);
assert property(@(posedge clk) ((state == 0) ##4 1) |-> first_round);
assert property(@(posedge clk) (!iv_cnt_sel ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!key_gen ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((operation_mode >= 0) && (operation_mode <= 3) ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!last_round ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((rd_count == 0) ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) (first_round ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) (first_round ##4 1) |-> first_round);
assert property(@(posedge clk) ((col_sel == 2) ##4 1) |-> first_round);
assert property(@(posedge clk) (!rst_n ##4 1) |-> first_round);
assert property(@(posedge clk) ((col_sel == 2) ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!rst_n ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((next_state >= 0) && (next_state <= 4) ##1 1) |-> first_round);
assert property(@(posedge clk) ((next_state >= 0) && (next_state <= 4) ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((next_state >= 0) && (next_state <= 4) ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((next_state >= 0) && (next_state <= 4) ##2 1) |-> first_round);
assert property(@(posedge clk) ((next_state >= 0) && (next_state <= 4) ##3 1) |-> first_round);
assert property(@(posedge clk) ((next_state >= 0) && (next_state <= 4) ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((next_state >= 0) && (next_state <= 4) ##4 1) |-> first_round);
assert property(@(posedge clk) ((next_state >= 0) && (next_state <= 4) ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!op_key_derivation ##1 1) |-> first_round);
assert property(@(posedge clk) (!op_key_derivation ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!op_key_derivation ##3 1) |-> first_round);
assert property(@(posedge clk) (!op_key_derivation ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!op_key_derivation ##4 1) |-> first_round);
assert property(@(posedge clk) (!op_key_derivation ##2 1) |-> first_round);
assert property(@(posedge clk) (!op_key_derivation ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!op_key_derivation ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((next_state >= 0) && (next_state <= 1)) |-> (next_state >= 0) && (next_state <= 4));
assert property(@(posedge clk) (!mode_ctr ##1 1) |-> first_round);
assert property(@(posedge clk) (!mode_ctr ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!mode_ctr ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!mode_ctr ##2 1) |-> first_round);
assert property(@(posedge clk) (!mode_ctr ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!mode_ctr ##3 1) |-> first_round);
assert property(@(posedge clk) (!mode_ctr ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!mode_ctr ##4 1) |-> first_round);
assert property(@(posedge clk) ((aes_mode >= 1) && (aes_mode <= 3)) |-> (col_sel == 2));
assert property(@(posedge clk) ((aes_mode >= 1) && (aes_mode <= 3)) |-> first_round);
assert property(@(posedge clk) (!mode_cbc ##1 1) |-> first_round);
assert property(@(posedge clk) (!mode_cbc ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!mode_cbc ##2 1) |-> first_round);
assert property(@(posedge clk) (!mode_cbc ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!mode_cbc ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!mode_cbc ##3 1) |-> first_round);
assert property(@(posedge clk) (!mode_cbc ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!mode_cbc ##4 1) |-> first_round);
assert property(@(posedge clk) ((next_state >= 0) && (next_state <= 1) ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((next_state >= 0) && (next_state <= 1) ##1 1) |-> first_round);
assert property(@(posedge clk) ((next_state >= 0) && (next_state <= 1) ##2 1) |-> first_round);
assert property(@(posedge clk) ((next_state >= 0) && (next_state <= 1) ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((next_state >= 0) && (next_state <= 1) ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((next_state >= 0) && (next_state <= 1) ##4 1) |-> first_round);
assert property(@(posedge clk) ((next_state >= 0) && (next_state <= 1) ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((next_state >= 0) && (next_state <= 1) ##3 1) |-> first_round);
assert property(@(posedge clk) (enc_dec) |-> encrypt_decrypt);
assert property(@(posedge clk) (encrypt_decrypt) |-> enc_dec);
assert property(@(posedge clk) (encrypt_decrypt) |-> (op_mode >= 0) && (op_mode <= 1));
assert property(@(posedge clk) (enc_dec) |-> (op_mode >= 0) && (op_mode <= 1));
assert property(@(posedge clk) ((op_mode >= 0) && (op_mode <= 1) ##1 1) |-> first_round);
assert property(@(posedge clk) ((op_mode >= 0) && (op_mode <= 1) ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((op_mode >= 0) && (op_mode <= 1) ##2 1) |-> first_round);
assert property(@(posedge clk) (enc_dec) |-> first_round);
assert property(@(posedge clk) (encrypt_decrypt ##1 1) |-> first_round);
assert property(@(posedge clk) (enc_dec ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) (enc_dec) |-> (col_sel == 2));
assert property(@(posedge clk) (encrypt_decrypt) |-> first_round);
assert property(@(posedge clk) (enc_dec ##1 1) |-> first_round);
assert property(@(posedge clk) (encrypt_decrypt) |-> (col_sel == 2));
assert property(@(posedge clk) (encrypt_decrypt ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((op_mode >= 0) && (op_mode <= 1) ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) (encrypt_decrypt ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) (enc_dec ##2 1) |-> first_round);
assert property(@(posedge clk) (enc_dec ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) (encrypt_decrypt ##2 1) |-> first_round);
assert property(@(posedge clk) ((op_mode >= 0) && (op_mode <= 1) ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((op_mode >= 0) && (op_mode <= 1) ##3 1) |-> first_round);
assert property(@(posedge clk) (enc_dec ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) (enc_dec ##3 1) |-> first_round);
assert property(@(posedge clk) ((op_mode >= 0) && (op_mode <= 1) ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) (encrypt_decrypt ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((op_mode >= 0) && (op_mode <= 1) ##4 1) |-> first_round);
assert property(@(posedge clk) (encrypt_decrypt ##3 1) |-> first_round);
assert property(@(posedge clk) (encrypt_decrypt ##4 1) |-> first_round);
assert property(@(posedge clk) (encrypt_decrypt ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) (enc_dec ##4 1) |-> first_round);
assert property(@(posedge clk) (enc_dec ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!key_init) |-> (next_state == 0));
assert property(@(posedge clk) (!start) |-> (next_state == 0));
assert property(@(posedge clk) (!start) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) (!key_init) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) ((next_state == 0)) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) ((next_state >= 1) && (next_state <= 11)) |-> start);
assert property(@(posedge clk) (key_init) |-> start);
assert property(@(posedge clk) ((next_state >= 1) && (next_state <= 11)) |-> key_init);
assert property(@(posedge clk) (start) |-> key_init);
assert property(@(posedge clk) (!key_init) |-> (next_state >= 0) && (next_state <= 4));
assert property(@(posedge clk) (!start) |-> (next_state >= 0) && (next_state <= 4));
assert property(@(posedge clk) ((next_state == 0)) |-> (next_state >= 0) && (next_state <= 4));
assert property(@(posedge clk) (disable_core ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) (disable_core ##3 1) |-> first_round);
assert property(@(posedge clk) (disable_core ##2 1) |-> first_round);
assert property(@(posedge clk) (disable_core ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) (disable_core ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) (disable_core ##1 1) |-> first_round);
assert property(@(posedge clk) (disable_core) |-> first_round);
assert property(@(posedge clk) (disable_core ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) (disable_core) |-> (col_sel == 2));
assert property(@(posedge clk) (disable_core ##4 1) |-> first_round);
assert property(@(posedge clk) ((aes_mode >= 0) && (aes_mode <= 1) ##1 1) |-> first_round);
assert property(@(posedge clk) ((aes_mode >= 0) && (aes_mode <= 1) ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((aes_mode >= 0) && (aes_mode <= 1) ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((aes_mode >= 0) && (aes_mode <= 1) ##4 1) |-> first_round);
assert property(@(posedge clk) ((aes_mode >= 0) && (aes_mode <= 1) ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((aes_mode >= 0) && (aes_mode <= 1) ##2 1) |-> first_round);
assert property(@(posedge clk) ((aes_mode >= 0) && (aes_mode <= 1) ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((aes_mode >= 0) && (aes_mode <= 1) ##3 1) |-> first_round);
assert property(@(posedge clk) ((operation_mode >= 1) && (operation_mode <= 2)) |-> first_round);
assert property(@(posedge clk) ((operation_mode >= 1) && (operation_mode <= 2)) |-> (col_sel == 2));
assert property(@(posedge clk) (!start ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((next_state == 0) ##1 1) |-> first_round);
assert property(@(posedge clk) (!start ##2 1) |-> first_round);
assert property(@(posedge clk) (!start ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!key_init ##1 1) |-> first_round);
assert property(@(posedge clk) (!key_init ##2 1) |-> first_round);
assert property(@(posedge clk) (!start ##1 1) |-> first_round);
assert property(@(posedge clk) ((next_state == 0) ##2 1) |-> first_round);
assert property(@(posedge clk) (!key_init ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((next_state == 0) ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!key_init ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((next_state == 0) ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((next_state == 0) ##3 1) |-> first_round);
assert property(@(posedge clk) (!key_init ##3 1) |-> first_round);
assert property(@(posedge clk) ((next_state == 0) ##4 1) |-> first_round);
assert property(@(posedge clk) (!key_init ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!start ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!key_init ##4 1) |-> first_round);
assert property(@(posedge clk) ((next_state == 0) ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!start ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((next_state == 0) ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!start ##3 1) |-> first_round);
assert property(@(posedge clk) (!key_init ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!start ##4 1) |-> first_round);
assert property(@(posedge clk) (key_init) |-> first_round);
assert property(@(posedge clk) (start) |-> first_round);
assert property(@(posedge clk) (key_init) |-> (col_sel == 2));
assert property(@(posedge clk) (start) |-> (col_sel == 2));
assert property(@(posedge clk) (key_init ##1 1) |-> first_round);
assert property(@(posedge clk) (start ##1 1) |-> first_round);
assert property(@(posedge clk) (key_init ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) (start ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((aes_mode >= 1) && (aes_mode <= 2) ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((aes_mode >= 1) && (aes_mode <= 2) ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((aes_mode >= 1) && (aes_mode <= 2) ##1 1) |-> first_round);
assert property(@(posedge clk) ((aes_mode >= 1) && (aes_mode <= 2) ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((aes_mode >= 1) && (aes_mode <= 2) ##3 1) |-> first_round);
assert property(@(posedge clk) ((aes_mode >= 1) && (aes_mode <= 2) ##4 1) |-> first_round);
assert property(@(posedge clk) ((aes_mode >= 1) && (aes_mode <= 2) ##2 1) |-> first_round);
assert property(@(posedge clk) ((aes_mode >= 1) && (aes_mode <= 2) ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) (start ##3 1) |-> first_round);
assert property(@(posedge clk) (key_init ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) (start ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) (start ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) (key_init ##3 1) |-> first_round);
assert property(@(posedge clk) (key_init ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) (start ##2 1) |-> first_round);
assert property(@(posedge clk) (key_init ##2 1) |-> first_round);
assert property(@(posedge clk) (key_init ##4 1) |-> first_round);
assert property(@(posedge clk) (start ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) (start ##4 1) |-> first_round);
assert property(@(posedge clk) (key_init ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((op_mode == 0)) |-> (op_mode >= 0) && (op_mode <= 1));
assert property(@(posedge clk) ((operation_mode >= 2) && (operation_mode <= 3)) |-> first_round);
assert property(@(posedge clk) ((operation_mode >= 2) && (operation_mode <= 3)) |-> (col_sel == 2));
assert property(@(posedge clk) ((op_mode == 0)) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) ((aes_mode >= 2) && (aes_mode <= 3) ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((aes_mode >= 2) && (aes_mode <= 3)) |-> first_round);
assert property(@(posedge clk) ((aes_mode >= 2) && (aes_mode <= 3) ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((aes_mode >= 2) && (aes_mode <= 3) ##1 1) |-> first_round);
assert property(@(posedge clk) ((aes_mode >= 2) && (aes_mode <= 3)) |-> (col_sel == 2));
assert property(@(posedge clk) ((aes_mode >= 2) && (aes_mode <= 3) ##2 1) |-> first_round);
assert property(@(posedge clk) ((aes_mode >= 2) && (aes_mode <= 3) ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((aes_mode >= 2) && (aes_mode <= 3) ##3 1) |-> first_round);
assert property(@(posedge clk) ((aes_mode >= 2) && (aes_mode <= 3) ##4 1) |-> first_round);
assert property(@(posedge clk) ((aes_mode >= 2) && (aes_mode <= 3) ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((op_mode == 0)) |-> (next_state >= 0) && (next_state <= 4));
assert property(@(posedge clk) (!disable_core ##1 1) |-> first_round);
assert property(@(posedge clk) (!disable_core ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!disable_core ##2 1) |-> first_round);
assert property(@(posedge clk) (!disable_core ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!disable_core ##3 1) |-> first_round);
assert property(@(posedge clk) (!disable_core ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!disable_core ##4 1) |-> first_round);
assert property(@(posedge clk) (!disable_core ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((op_mode == 0) ##1 1) |-> first_round);
assert property(@(posedge clk) ((op_mode == 0) ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((op_mode == 0) ##4 1) |-> first_round);
assert property(@(posedge clk) ((op_mode == 0) ##3 1) |-> first_round);
assert property(@(posedge clk) ((op_mode == 0) ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((op_mode == 0) ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((op_mode == 0) ##2 1) |-> first_round);
assert property(@(posedge clk) ((op_mode == 0) ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!encrypt_decrypt && (operation_mode >= 2) && (operation_mode <= 3)) |-> (op_mode >= 2) && (op_mode <= 3));
assert property(@(posedge clk) (!encrypt_decrypt && !rst_n) |-> (op_mode >= 2) && (op_mode <= 3));
assert property(@(posedge clk) (!encrypt_decrypt && first_round) |-> (op_mode >= 2) && (op_mode <= 3));
assert property(@(posedge clk) (!encrypt_decrypt && (col_sel == 2)) |-> (op_mode >= 2) && (op_mode <= 3));
assert property(@(posedge clk) ((next_state >= 1) && (next_state <= 4)) |-> start);
assert property(@(posedge clk) ((next_state >= 1) && (next_state <= 4)) |-> key_init);
assert property(@(posedge clk) ((op_mode >= 1) && (op_mode <= 2)) |-> (col_sel == 2));
assert property(@(posedge clk) ((op_mode >= 1) && (op_mode <= 2)) |-> first_round);
assert property(@(posedge clk) ((op_mode >= 2) && (op_mode <= 3)) |-> first_round);
assert property(@(posedge clk) (!enc_dec ##3 1) |-> first_round);
assert property(@(posedge clk) (!encrypt_decrypt ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!enc_dec ##4 1) |-> first_round);
assert property(@(posedge clk) (!encrypt_decrypt ##1 1) |-> first_round);
assert property(@(posedge clk) (!encrypt_decrypt ##2 1) |-> first_round);
assert property(@(posedge clk) (!encrypt_decrypt ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!encrypt_decrypt ##3 1) |-> first_round);
assert property(@(posedge clk) ((op_mode >= 2) && (op_mode <= 3)) |-> (col_sel == 2));
assert property(@(posedge clk) (!enc_dec ##1 1) |-> first_round);
assert property(@(posedge clk) (!encrypt_decrypt ##4 1) |-> first_round);
assert property(@(posedge clk) (!encrypt_decrypt ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!enc_dec ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!encrypt_decrypt ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!enc_dec ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!enc_dec ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!enc_dec ##2 1) |-> first_round);
assert property(@(posedge clk) (!enc_dec ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((op_mode >= 2) && (op_mode <= 3) ##4 1) |-> first_round);
assert property(@(posedge clk) ((op_mode >= 2) && (op_mode <= 3) ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((op_mode >= 2) && (op_mode <= 3) ##3 1) |-> first_round);
assert property(@(posedge clk) ((op_mode >= 2) && (op_mode <= 3) ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((op_mode >= 2) && (op_mode <= 3) ##2 1) |-> first_round);
assert property(@(posedge clk) ((op_mode >= 2) && (op_mode <= 3) ##1 1) |-> first_round);
assert property(@(posedge clk) ((op_mode >= 2) && (op_mode <= 3) ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((op_mode >= 2) && (op_mode <= 3) ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) (mode_cbc) |-> (aes_mode == 1));
assert property(@(posedge clk) ((aes_mode == 1)) |-> mode_cbc);
assert property(@(posedge clk) ((aes_mode == 1)) |-> (aes_mode >= 1) && (aes_mode <= 2));
assert property(@(posedge clk) (mode_cbc) |-> (aes_mode >= 1) && (aes_mode <= 2));
assert property(@(posedge clk) ((aes_mode == 1)) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) (mode_cbc) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) ((operation_mode == 1)) |-> encrypt_decrypt);
assert property(@(posedge clk) ((operation_mode == 1)) |-> enc_dec);
assert property(@(posedge clk) ((operation_mode == 1)) |-> (op_mode >= 0) && (op_mode <= 1));
assert property(@(posedge clk) ((operation_mode == 0)) |-> (op_mode == 0));
assert property(@(posedge clk) ((operation_mode == 0)) |-> (op_mode >= 0) && (op_mode <= 1));
assert property(@(posedge clk) (!rst_n && (operation_mode == 0)) |-> encrypt_decrypt);
assert property(@(posedge clk) ((col_sel == 2) && (operation_mode == 0)) |-> enc_dec);
assert property(@(posedge clk) (!rst_n && (operation_mode == 0)) |-> enc_dec);
assert property(@(posedge clk) ((col_sel == 2) && (operation_mode == 0)) |-> encrypt_decrypt);
assert property(@(posedge clk) ((aes_mode == 0)) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) ((aes_mode == 3)) |-> (aes_mode >= 2) && (aes_mode <= 3));
assert property(@(posedge clk) ((operation_mode == 0)) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) (mode_ctr) |-> (aes_mode == 2));
assert property(@(posedge clk) ((aes_mode == 2)) |-> mode_ctr);
assert property(@(posedge clk) ((aes_mode == 2)) |-> (op_mode == 0));
assert property(@(posedge clk) (mode_ctr) |-> (op_mode == 0));
assert property(@(posedge clk) ((aes_mode == 2)) |-> (aes_mode >= 2) && (aes_mode <= 3));
assert property(@(posedge clk) (mode_ctr) |-> (aes_mode >= 2) && (aes_mode <= 3));
assert property(@(posedge clk) ((aes_mode == 2)) |-> (aes_mode >= 1) && (aes_mode <= 2));
assert property(@(posedge clk) (mode_ctr) |-> (aes_mode >= 1) && (aes_mode <= 2));
assert property(@(posedge clk) (mode_ctr) |-> encrypt_decrypt);
assert property(@(posedge clk) ((aes_mode == 2)) |-> encrypt_decrypt);
assert property(@(posedge clk) (mode_ctr) |-> enc_dec);
assert property(@(posedge clk) ((aes_mode == 2)) |-> enc_dec);
assert property(@(posedge clk) ((aes_mode == 2)) |-> (op_mode >= 0) && (op_mode <= 1));
assert property(@(posedge clk) (mode_ctr) |-> (op_mode >= 0) && (op_mode <= 1));
assert property(@(posedge clk) ((operation_mode == 0)) |-> (next_state >= 0) && (next_state <= 4));
assert property(@(posedge clk) ((operation_mode == 2)) |-> (next_state >= 0) && (next_state <= 4));
assert property(@(posedge clk) (mode_ctr) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) ((next_state == 1)) |-> (op_mode == 0));
assert property(@(posedge clk) ((next_state == 1)) |-> start);
assert property(@(posedge clk) ((next_state == 1)) |-> key_init);
assert property(@(posedge clk) ((next_state == 1)) |-> encrypt_decrypt);
assert property(@(posedge clk) ((next_state == 1)) |-> enc_dec);
assert property(@(posedge clk) ((next_state == 1)) |-> (op_mode >= 0) && (op_mode <= 1));
assert property(@(posedge clk) ((next_state == 1)) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) (mode_ctr) |-> (next_state >= 0) && (next_state <= 4));
assert property(@(posedge clk) ((aes_mode == 2)) |-> (next_state >= 0) && (next_state <= 4));
assert property(@(posedge clk) ((op_mode == 1)) |-> op_key_derivation);
assert property(@(posedge clk) (op_key_derivation) |-> (op_mode == 1));
assert property(@(posedge clk) ((op_mode == 1)) |-> encrypt_decrypt);
assert property(@(posedge clk) (op_key_derivation) |-> enc_dec);
assert property(@(posedge clk) ((op_mode == 1)) |-> enc_dec);
assert property(@(posedge clk) (op_key_derivation) |-> encrypt_decrypt);
assert property(@(posedge clk) (op_key_derivation) |-> (op_mode >= 0) && (op_mode <= 1));
assert property(@(posedge clk) ((op_mode == 1)) |-> (op_mode >= 0) && (op_mode <= 1));
assert property(@(posedge clk) ((next_state == 1)) |-> (next_state >= 0) && (next_state <= 4));
assert property(@(posedge clk) (!encrypt_decrypt && disable_core) |-> (op_mode >= 2) && (op_mode <= 3));
assert property(@(posedge clk) ((op_mode == 2)) |-> (op_mode >= 2) && (op_mode <= 3));
assert property(@(posedge clk) (!encrypt_decrypt && (operation_mode == 2)) |-> (op_mode >= 2) && (op_mode <= 3));
assert property(@(posedge clk) ((aes_mode >= 1) && (aes_mode <= 3) && (operation_mode == 0)) |-> enc_dec);
assert property(@(posedge clk) ((aes_mode >= 1) && (aes_mode <= 3) && (operation_mode == 0)) |-> encrypt_decrypt);
assert property(@(posedge clk) ((op_mode == 3)) |-> (op_mode >= 2) && (op_mode <= 3));
assert property(@(posedge clk) (!encrypt_decrypt && (operation_mode == 3)) |-> (op_mode >= 2) && (op_mode <= 3));
assert property(@(posedge clk) ((next_state == 11)) |-> start);
assert property(@(posedge clk) ((next_state == 11)) |-> key_init);
assert property(@(posedge clk) (!encrypt_decrypt && (next_state >= 4) && (next_state <= 11)) |-> (op_mode >= 2) && (op_mode <= 3));
assert property(@(posedge clk) (!encrypt_decrypt && key_init) |-> (op_mode >= 2) && (op_mode <= 3));
assert property(@(posedge clk) (!encrypt_decrypt && start) |-> (op_mode >= 2) && (op_mode <= 3));
assert property(@(posedge clk) ((op_mode == 2)) |-> (next_state >= 0) && (next_state <= 4));
assert property(@(posedge clk) ((aes_mode == 1) ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((aes_mode == 1) ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((aes_mode == 1) ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) (mode_cbc) |-> first_round);
assert property(@(posedge clk) (mode_cbc ##1 1) |-> first_round);
assert property(@(posedge clk) (mode_cbc ##2 1) |-> first_round);
assert property(@(posedge clk) (mode_cbc ##3 1) |-> first_round);
assert property(@(posedge clk) (mode_cbc ##4 1) |-> first_round);
assert property(@(posedge clk) ((aes_mode == 1) ##4 1) |-> first_round);
assert property(@(posedge clk) ((aes_mode == 1)) |-> first_round);
assert property(@(posedge clk) ((aes_mode == 1) ##3 1) |-> first_round);
assert property(@(posedge clk) (mode_cbc ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((aes_mode == 1) ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) (mode_cbc) |-> (col_sel == 2));
assert property(@(posedge clk) (mode_cbc ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) (mode_cbc ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) (mode_cbc ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((aes_mode == 1) ##1 1) |-> first_round);
assert property(@(posedge clk) ((aes_mode == 1) ##2 1) |-> first_round);
assert property(@(posedge clk) ((aes_mode == 1)) |-> (col_sel == 2));
assert property(@(posedge clk) ((operation_mode == 1)) |-> (col_sel == 2));
assert property(@(posedge clk) ((operation_mode == 1)) |-> first_round);
assert property(@(posedge clk) (!encrypt_decrypt && (aes_mode == 1)) |-> (op_mode >= 2) && (op_mode <= 3));
assert property(@(posedge clk) (!encrypt_decrypt && mode_cbc) |-> (op_mode >= 2) && (op_mode <= 3));
assert property(@(posedge clk) ((operation_mode == 0) && disable_core) |-> enc_dec);
assert property(@(posedge clk) ((operation_mode == 0) && disable_core) |-> encrypt_decrypt);
assert property(@(posedge clk) ((operation_mode == 2)) |-> first_round);
assert property(@(posedge clk) ((operation_mode == 2)) |-> (col_sel == 2));
assert property(@(posedge clk) ((operation_mode == 0) && key_init) |-> encrypt_decrypt);
assert property(@(posedge clk) ((operation_mode == 0) && start) |-> encrypt_decrypt);
assert property(@(posedge clk) ((operation_mode == 0) && start) |-> enc_dec);
assert property(@(posedge clk) ((operation_mode == 0) && key_init) |-> enc_dec);
assert property(@(posedge clk) (!encrypt_decrypt && (aes_mode == 3)) |-> (op_mode >= 2) && (op_mode <= 3));
assert property(@(posedge clk) ((aes_mode == 0) ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((aes_mode == 3) ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((aes_mode == 3) ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((aes_mode == 0) ##1 1) |-> first_round);
assert property(@(posedge clk) ((aes_mode == 3) ##2 1) |-> first_round);
assert property(@(posedge clk) ((aes_mode == 3)) |-> (col_sel == 2));
assert property(@(posedge clk) ((aes_mode == 3)) |-> first_round);
assert property(@(posedge clk) ((aes_mode == 3) ##1 1) |-> first_round);
assert property(@(posedge clk) ((aes_mode == 3) ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((aes_mode == 0) ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((aes_mode == 0) ##2 1) |-> first_round);
assert property(@(posedge clk) ((aes_mode == 0) ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((aes_mode == 0) ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((aes_mode == 0) ##4 1) |-> first_round);
assert property(@(posedge clk) ((aes_mode == 0) ##3 1) |-> first_round);
assert property(@(posedge clk) ((aes_mode == 3) ##3 1) |-> first_round);
assert property(@(posedge clk) ((aes_mode == 3) ##4 1) |-> first_round);
assert property(@(posedge clk) ((aes_mode == 3) ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((aes_mode >= 2) && (aes_mode <= 3) && (operation_mode == 0)) |-> enc_dec);
assert property(@(posedge clk) ((aes_mode >= 2) && (aes_mode <= 3) && (operation_mode == 0)) |-> encrypt_decrypt);
assert property(@(posedge clk) (mode_ctr ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) (mode_ctr ##4 1) |-> first_round);
assert property(@(posedge clk) ((aes_mode == 2)) |-> first_round);
assert property(@(posedge clk) (mode_ctr ##2 1) |-> first_round);
assert property(@(posedge clk) (mode_ctr ##1 1) |-> first_round);
assert property(@(posedge clk) ((aes_mode == 2) ##1 1) |-> first_round);
assert property(@(posedge clk) ((aes_mode == 2) ##2 1) |-> first_round);
assert property(@(posedge clk) (mode_ctr) |-> first_round);
assert property(@(posedge clk) ((aes_mode == 2) ##3 1) |-> first_round);
assert property(@(posedge clk) (mode_ctr ##3 1) |-> first_round);
assert property(@(posedge clk) ((aes_mode == 2) ##4 1) |-> first_round);
assert property(@(posedge clk) (mode_ctr ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((aes_mode == 2)) |-> (col_sel == 2));
assert property(@(posedge clk) (mode_ctr ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((operation_mode == 3)) |-> first_round);
assert property(@(posedge clk) ((aes_mode == 2) ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) (mode_ctr) |-> (col_sel == 2));
assert property(@(posedge clk) ((aes_mode == 2) ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((aes_mode == 2) ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((aes_mode == 2) ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((operation_mode == 3)) |-> (col_sel == 2));
assert property(@(posedge clk) (mode_ctr ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((next_state == 4)) |-> (op_mode == 2));
assert property(@(posedge clk) ((next_state == 4)) |-> (op_mode >= 2) && (op_mode <= 3));
assert property(@(posedge clk) ((next_state == 4)) |-> start);
assert property(@(posedge clk) ((next_state == 4)) |-> key_init);
assert property(@(posedge clk) (!encrypt_decrypt && (next_state == 11)) |-> (op_mode >= 2) && (op_mode <= 3));
assert property(@(posedge clk) ((next_state == 1) ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((next_state == 1) ##1 1) |-> first_round);
assert property(@(posedge clk) ((next_state == 1)) |-> first_round);
assert property(@(posedge clk) ((next_state == 1)) |-> (col_sel == 2));
assert property(@(posedge clk) ((next_state == 1) ##2 1) |-> first_round);
assert property(@(posedge clk) ((next_state == 1) ##3 1) |-> first_round);
assert property(@(posedge clk) ((next_state == 1) ##4 1) |-> first_round);
assert property(@(posedge clk) ((next_state == 1) ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((next_state == 1) ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((next_state == 1) ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((aes_mode == 3) && (operation_mode == 0)) |-> enc_dec);
assert property(@(posedge clk) ((aes_mode == 3) && (operation_mode == 0)) |-> encrypt_decrypt);
assert property(@(posedge clk) ((operation_mode == 0) && mode_cbc) |-> encrypt_decrypt);
assert property(@(posedge clk) ((aes_mode == 1) && (operation_mode == 0)) |-> enc_dec);
assert property(@(posedge clk) ((operation_mode == 0) && mode_cbc) |-> enc_dec);
assert property(@(posedge clk) ((aes_mode == 1) && (operation_mode == 0)) |-> encrypt_decrypt);
assert property(@(posedge clk) (op_key_derivation ##1 1) |-> first_round);
assert property(@(posedge clk) ((op_mode == 1)) |-> first_round);
assert property(@(posedge clk) (op_key_derivation ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((op_mode == 1) ##1 1) |-> first_round);
assert property(@(posedge clk) (op_key_derivation ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((op_mode == 1) ##2 1) |-> first_round);
assert property(@(posedge clk) (op_key_derivation) |-> (col_sel == 2));
assert property(@(posedge clk) ((op_mode == 1) ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) (op_key_derivation ##2 1) |-> first_round);
assert property(@(posedge clk) ((op_mode == 1) ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) (op_key_derivation) |-> first_round);
assert property(@(posedge clk) ((op_mode == 1)) |-> (col_sel == 2));
assert property(@(posedge clk) ((op_mode == 1) ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) (op_key_derivation ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) (op_key_derivation ##3 1) |-> first_round);
assert property(@(posedge clk) ((op_mode == 1) ##3 1) |-> first_round);
assert property(@(posedge clk) (op_key_derivation ##4 1) |-> first_round);
assert property(@(posedge clk) (op_key_derivation ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((op_mode == 1) ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((op_mode == 1) ##4 1) |-> first_round);
assert property(@(posedge clk) ((op_mode == 2)) |-> first_round);
assert property(@(posedge clk) ((op_mode == 2)) |-> (col_sel == 2));
assert property(@(posedge clk) ((op_mode == 2) ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((op_mode == 2) ##1 1) |-> first_round);
assert property(@(posedge clk) ((op_mode == 2) ##2 1) |-> first_round);
assert property(@(posedge clk) ((op_mode == 2) ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((op_mode == 2) ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((op_mode == 2) ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((op_mode == 2) ##3 1) |-> first_round);
assert property(@(posedge clk) ((op_mode == 2) ##4 1) |-> first_round);
assert property(@(posedge clk) ((aes_mode == 3) && (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (aes_mode == 2));
assert property(@(posedge clk) ((aes_mode == 3) && (next_state == 4) ##1 (next_state == 4) ##1 1) |-> mode_ctr);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 start) |-> (aes_mode == 2));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 enc_dec) |-> (aes_mode == 2));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 (op_mode == 0)) |-> (aes_mode == 2));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 encrypt_decrypt) |-> (aes_mode == 2));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 (next_state == 1)) |-> mode_ctr);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 key_init) |-> mode_ctr);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 encrypt_decrypt) |-> mode_ctr);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 enc_dec) |-> mode_ctr);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 key_init) |-> (aes_mode == 2));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 (next_state == 1)) |-> (aes_mode == 2));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 (op_mode == 0)) |-> mode_ctr);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 start) |-> mode_ctr);
assert property(@(posedge clk) (disable_core ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> disable_core);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 !key_init) |-> (op_mode == 2));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 !enc_dec) |-> (op_mode == 2));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 (next_state == 0)) |-> (op_mode == 2));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 !encrypt_decrypt) |-> (op_mode == 2));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 !mode_ctr) |-> (op_mode == 2));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 !start) |-> (op_mode == 2));
assert property(@(posedge clk) ((aes_mode >= 0) && (aes_mode <= 1) && (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (op_mode == 2));
assert property(@(posedge clk) ((op_mode >= 2) && (op_mode <= 3) ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (aes_mode == 2));
assert property(@(posedge clk) (!encrypt_decrypt ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (aes_mode == 2));
assert property(@(posedge clk) (!enc_dec ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> mode_ctr);
assert property(@(posedge clk) (!enc_dec ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (aes_mode == 2));
assert property(@(posedge clk) (!encrypt_decrypt ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> mode_ctr);
assert property(@(posedge clk) ((op_mode >= 2) && (op_mode <= 3) ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> mode_ctr);
assert property(@(posedge clk) ((next_state == 4) && disable_core ##1 (next_state == 4) ##3 1) |-> (next_state == 11));
assert property(@(posedge clk) ((next_state == 4) ##1 !disable_core && (next_state == 4) ##3 1) |-> (next_state == 11));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##3 op_key_derivation) |-> (next_state == 11));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##3 (op_mode == 1)) |-> (next_state == 11));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##3 (aes_mode == 0)) |-> (next_state == 11));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##3 (operation_mode == 1)) |-> (next_state == 11));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##2 !start ##1 1) |-> (next_state == 11));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##2 (op_mode >= 2) && (op_mode <= 3) ##1 1) |-> (next_state == 11));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##2 !encrypt_decrypt ##1 1) |-> (next_state == 11));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##2 disable_core ##1 1) |-> (next_state == 11));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##2 !enc_dec ##1 1) |-> (next_state == 11));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##2 !key_init ##1 1) |-> (next_state == 11));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##2 (operation_mode >= 2) && (operation_mode <= 3) ##1 1) |-> (next_state == 11));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##2 (next_state == 0) ##1 1) |-> (next_state == 11));
assert property(@(posedge clk) ((next_state == 4) ##1 !disable_core && (next_state == 4) ##3 1) |-> (aes_mode == 0));
assert property(@(posedge clk) ((op_mode >= 0) && (op_mode <= 1) ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (op_mode == 2));
assert property(@(posedge clk) (encrypt_decrypt ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (op_mode == 2));
assert property(@(posedge clk) (enc_dec ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (op_mode == 2));
assert property(@(posedge clk) ((next_state == 4) ##1 (aes_mode >= 0) && (aes_mode <= 1) && (next_state == 4) ##1 1) |-> (aes_mode == 2));
assert property(@(posedge clk) ((next_state == 4) ##1 (aes_mode >= 0) && (aes_mode <= 1) && (next_state == 4) ##1 1) |-> mode_ctr);
assert property(@(posedge clk) ((op_mode == 3) ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (aes_mode == 2));
assert property(@(posedge clk) ((op_mode == 3) ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> mode_ctr);
assert property(@(posedge clk) (!encrypt_decrypt && (op_mode == 0)) |-> rst_n);
assert property(@(posedge clk) (!first_round) |-> (col_sel == 0));
assert property(@(posedge clk) (rst_n) |-> (col_sel == 0));
assert property(@(posedge clk) (!encrypt_decrypt && (op_mode == 0)) |-> (col_sel == 0));
assert property(@(posedge clk) (!enc_dec && (op_mode == 0)) |-> rst_n);
assert property(@(posedge clk) (!first_round) |-> rst_n);
assert property(@(posedge clk) ((col_sel == 0)) |-> rst_n);
assert property(@(posedge clk) (!enc_dec && (op_mode == 0)) |-> (col_sel == 0));
assert property(@(posedge clk) ((aes_mode == 2) ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (aes_mode == 2));
assert property(@(posedge clk) ((aes_mode == 2) ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> mode_ctr);
assert property(@(posedge clk) (mode_ctr ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> mode_ctr);
assert property(@(posedge clk) (mode_ctr ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (aes_mode == 2));
assert property(@(posedge clk) ((col_sel == 0) ##2 1) |-> (next_state == 4));
assert property(@(posedge clk) ((col_sel == 0) ##4 1) |-> (next_state == 4));
assert property(@(posedge clk) (!first_round ##2 1) |-> (next_state == 4));
assert property(@(posedge clk) (!first_round ##4 1) |-> (next_state == 4));
assert property(@(posedge clk) (rst_n ##2 1) |-> (next_state == 4));
assert property(@(posedge clk) (rst_n ##4 1) |-> (next_state == 4));
assert property(@(posedge clk) ((next_state == 11) ##3 (next_state == 4) ##1 (aes_mode == 3) && (op_mode == 2)) |-> (next_state == 4));
assert property(@(posedge clk) ((aes_mode == 1) && (next_state == 11) ##3 (next_state == 4) ##1 (op_mode == 2)) |-> (next_state == 4));
assert property(@(posedge clk) ((next_state == 11) ##1 !op_key_derivation ##2 (next_state == 4) ##1 (op_mode == 2)) |-> (next_state == 4));
assert property(@(posedge clk) ((next_state == 11) ##3 (next_state == 4) ##1 !disable_core && (op_mode == 2)) |-> (next_state == 4));
assert property(@(posedge clk) ((next_state == 11) && disable_core ##3 (next_state == 4) ##1 (op_mode == 2)) |-> (next_state == 4));
assert property(@(posedge clk) ((next_state == 11) ##3 (next_state == 4) ##1 !mode_cbc && (op_mode == 2)) |-> (next_state == 4));
assert property(@(posedge clk) ((next_state == 11) ##2 !mode_ctr ##1 (next_state == 4) ##1 (op_mode == 2)) |-> (next_state == 4));
assert property(@(posedge clk) ((next_state == 11) && mode_cbc ##3 (next_state == 4) ##1 (op_mode == 2)) |-> (next_state == 4));
assert property(@(posedge clk) ((aes_mode >= 0) && (aes_mode <= 1) && (next_state == 11) ##3 (next_state == 4) ##1 (op_mode == 2)) |-> (next_state == 4));
assert property(@(posedge clk) ((next_state == 11) ##3 !mode_cbc && (next_state == 4) ##1 (op_mode == 2)) |-> (next_state == 4));
assert property(@(posedge clk) ((next_state == 11) ##1 !mode_cbc ##2 (next_state == 4) ##1 (op_mode == 2)) |-> (next_state == 4));
assert property(@(posedge clk) ((next_state == 11) ##3 (next_state == 4) && disable_core ##1 (op_mode == 2)) |-> (next_state == 4));
assert property(@(posedge clk) ((next_state == 11) ##2 (aes_mode >= 0) && (aes_mode <= 1) ##1 (next_state == 4) ##1 (op_mode == 2)) |-> (next_state == 4));
assert property(@(posedge clk) ((next_state == 11) ##3 (aes_mode == 0) && (next_state == 4) ##1 (op_mode == 2)) |-> (next_state == 4));
assert property(@(posedge clk) ((next_state == 11) ##2 !disable_core ##1 (next_state == 4) ##1 (op_mode == 2)) |-> (next_state == 4));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 (aes_mode == 3)) |-> (op_mode == 2));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 (aes_mode == 0)) |-> (op_mode == 2));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 !disable_core) |-> (op_mode == 2));
assert property(@(posedge clk) ((next_state == 11) ##1 mode_ctr ##2 (next_state == 4) ##1 (op_mode == 2)) |-> (next_state == 4));
assert property(@(posedge clk) ((next_state == 11) ##1 (op_mode == 0) ##2 (next_state == 4) ##1 (op_mode == 2)) |-> (next_state == 4));
assert property(@(posedge clk) ((next_state == 11) ##2 mode_cbc ##1 (next_state == 4) ##1 (op_mode == 2)) |-> (next_state == 4));
assert property(@(posedge clk) ((next_state == 11) ##2 (aes_mode == 1) ##1 (next_state == 4) ##1 (op_mode == 2)) |-> (next_state == 4));
assert property(@(posedge clk) (!mode_ctr && (next_state >= 1) && (next_state <= 4) ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (op_mode == 2));
assert property(@(posedge clk) ((next_state >= 1) && (next_state <= 4) ##1 (next_state == 4) ##1 !disable_core && (next_state == 4) ##1 1) |-> (op_mode == 2));
assert property(@(posedge clk) ((next_state >= 1) && (next_state <= 4) ##1 (next_state == 4) ##1 (aes_mode == 3) && (next_state == 4) ##1 1) |-> (op_mode == 2));
assert property(@(posedge clk) ((next_state >= 1) && (next_state <= 4) ##1 (next_state == 4) ##1 !mode_cbc && (next_state == 4) ##1 1) |-> (op_mode == 2));
assert property(@(posedge clk) ((next_state >= 1) && (next_state <= 4) ##1 (next_state == 4) && disable_core ##1 (next_state == 4) ##1 1) |-> (op_mode == 2));
assert property(@(posedge clk) ((aes_mode == 3) ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (op_mode == 2));
assert property(@(posedge clk) ((aes_mode == 0) && (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (op_mode == 2));
assert property(@(posedge clk) (!disable_core && (next_state >= 1) && (next_state <= 4) ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (op_mode == 2));
assert property(@(posedge clk) ((next_state == 4) && mode_cbc ##1 (next_state == 4) ##1 1) |-> (op_mode == 2));
assert property(@(posedge clk) ((aes_mode == 1) && (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (op_mode == 2));
assert property(@(posedge clk) ((next_state >= 1) && (next_state <= 4) && mode_cbc ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (op_mode == 2));
assert property(@(posedge clk) ((aes_mode == 1) && (next_state >= 1) && (next_state <= 4) ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (op_mode == 2));
assert property(@(posedge clk) ((col_sel == 0) ##1 1) |-> (op_mode == 3));
assert property(@(posedge clk) (rst_n ##3 1) |-> (next_state == 11));
assert property(@(posedge clk) (!first_round ##3 1) |-> (next_state == 11));
assert property(@(posedge clk) (rst_n ##1 1) |-> (op_mode == 3));
assert property(@(posedge clk) ((col_sel == 0) ##3 1) |-> (next_state == 11));
assert property(@(posedge clk) (!first_round ##1 1) |-> (op_mode == 3));
assert property(@(posedge clk) ((aes_mode == 0) && (next_state == 4) ##1 (next_state == 4) ##3 1) |-> (next_state == 11));
assert property(@(posedge clk) ((aes_mode >= 0) && (aes_mode <= 1) && (next_state == 4) && disable_core ##1 (next_state == 4) ##3 1) |-> (op_mode == 3));
assert property(@(posedge clk) ((aes_mode == 0) && (next_state == 4) ##1 (next_state == 4) ##3 1) |-> (op_mode == 3));
assert property(@(posedge clk) ((aes_mode >= 1) && (aes_mode <= 2) ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (op_mode == 2));
assert property(@(posedge clk) (!mode_cbc && (aes_mode >= 0) && (aes_mode <= 1) && (next_state == 4) ##1 (next_state == 4) ##3 1) |-> (op_mode == 3));
assert property(@(posedge clk) ((col_sel == 0) ##2 1) |-> (op_mode == 2));
assert property(@(posedge clk) (rst_n ##4 1) |-> (op_mode == 2));
assert property(@(posedge clk) (rst_n ##2 1) |-> (op_mode == 2));
assert property(@(posedge clk) (!first_round ##4 1) |-> (op_mode == 2));
assert property(@(posedge clk) ((col_sel == 0) ##4 1) |-> (op_mode == 2));
assert property(@(posedge clk) (!first_round ##2 1) |-> (op_mode == 2));
assert property(@(posedge clk) (!mode_cbc && (next_state == 4) ##1 (next_state == 4) ##1 (op_mode == 2) ##2 1) |-> (next_state == 11));
assert property(@(posedge clk) ((aes_mode >= 0) && (aes_mode <= 1) && (next_state == 4) ##1 (next_state == 4) ##3 !enc_dec) |-> (op_mode == 3));
assert property(@(posedge clk) ((aes_mode >= 0) && (aes_mode <= 1) && (next_state == 4) ##1 (next_state == 4) ##3 (next_state == 11)) |-> (op_mode == 3));
assert property(@(posedge clk) ((aes_mode >= 0) && (aes_mode <= 1) && (next_state == 4) ##1 (next_state == 4) ##3 !encrypt_decrypt) |-> (op_mode == 3));
assert property(@(posedge clk) ((aes_mode >= 0) && (aes_mode <= 1) && (next_state == 4) ##3 (aes_mode == 0) ##1 (next_state == 11)) |-> (op_mode == 3));
assert property(@(posedge clk) ((aes_mode >= 0) && (aes_mode <= 1) && (next_state == 4) ##1 (next_state == 4) ##3 (aes_mode == 0)) |-> (op_mode == 3));
assert property(@(posedge clk) ((aes_mode >= 0) && (aes_mode <= 1) && (next_state == 4) ##1 (next_state == 4) ##3 disable_core) |-> (op_mode == 3));
assert property(@(posedge clk) ((aes_mode >= 0) && (aes_mode <= 1) && (next_state == 4) ##1 (next_state == 4) ##1 disable_core ##2 1) |-> (op_mode == 3));
assert property(@(posedge clk) ((aes_mode >= 0) && (aes_mode <= 1) && (next_state == 4) ##1 (next_state == 4) ##3 !mode_ctr) |-> (op_mode == 3));
assert property(@(posedge clk) ((aes_mode >= 0) && (aes_mode <= 1) && (next_state == 4) ##1 !disable_core && (next_state == 4) ##3 1) |-> (op_mode == 3));
assert property(@(posedge clk) (!first_round ##3 1) |-> op_key_derivation);
assert property(@(posedge clk) ((col_sel == 0) ##3 1) |-> op_key_derivation);
assert property(@(posedge clk) ((col_sel == 0) ##3 1) |-> (op_mode == 1));
assert property(@(posedge clk) (!first_round ##3 1) |-> (op_mode == 1));
assert property(@(posedge clk) (rst_n ##3 1) |-> op_key_derivation);
assert property(@(posedge clk) (rst_n ##3 1) |-> (op_mode == 1));
assert property(@(posedge clk) ((next_state == 4) ##1 (aes_mode == 3) ##2 (aes_mode == 0) ##1 (next_state == 11)) |-> (op_mode == 3));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 (aes_mode == 3) ##2 1) |-> (next_state == 11));
assert property(@(posedge clk) ((next_state == 4) ##1 (aes_mode == 0) && (next_state == 4) ##3 1) |-> (next_state == 11));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 (op_mode == 2) ##2 !enc_dec) |-> (next_state == 11));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 (op_mode == 2) ##2 !encrypt_decrypt) |-> (next_state == 11));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 (op_mode == 2) ##2 disable_core) |-> (next_state == 11));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 (op_mode == 2) && disable_core ##2 1) |-> (next_state == 11));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 (operation_mode == 3) ##2 1) |-> (next_state == 11));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 (op_mode == 2) ##2 !mode_ctr) |-> (next_state == 11));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 (aes_mode == 3) ##2 1) |-> (op_mode == 3));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##3 (operation_mode == 3)) |-> (op_mode == 3));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##2 (aes_mode == 3) ##1 1) |-> (next_state == 11));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##3 (aes_mode == 3)) |-> (next_state == 11));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##2 (op_mode == 3) ##1 1) |-> (next_state == 11));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##2 (operation_mode == 2) ##1 1) |-> (next_state == 11));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##2 (operation_mode == 3) ##1 1) |-> (next_state == 11));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##2 (op_mode == 2) ##1 1) |-> (next_state == 11));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##3 (op_mode == 3)) |-> (next_state == 11));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##3 (operation_mode == 3)) |-> (next_state == 11));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##2 (aes_mode == 0) ##1 (aes_mode == 0)) |-> (op_mode == 3));
assert property(@(posedge clk) ((aes_mode == 3) && (next_state == 4) && disable_core ##2 (next_state == 4) ##2 1) |-> op_key_derivation);
assert property(@(posedge clk) ((aes_mode == 3) && (next_state == 4) && disable_core ##2 (next_state == 4) ##2 1) |-> (op_mode == 1));
assert property(@(posedge clk) ((aes_mode == 3) && (next_state == 4) ##1 mode_ctr ##1 (next_state == 4) ##2 1) |-> op_key_derivation);
assert property(@(posedge clk) ((aes_mode == 3) && (next_state == 4) ##1 (aes_mode == 2) ##1 (next_state == 4) ##2 1) |-> op_key_derivation);
assert property(@(posedge clk) ((aes_mode == 3) && (next_state == 4) ##1 mode_ctr ##1 (next_state == 4) ##2 1) |-> (op_mode == 1));
assert property(@(posedge clk) ((aes_mode == 3) && (next_state == 4) ##1 (aes_mode == 2) ##1 (next_state == 4) ##2 1) |-> (op_mode == 1));
assert property(@(posedge clk) ((aes_mode == 3) && (next_state == 4) ##2 (next_state == 4) ##2 !mode_ctr) |-> (op_mode == 1));
assert property(@(posedge clk) ((aes_mode == 3) && (next_state == 4) ##2 (next_state == 4) ##2 !key_init) |-> op_key_derivation);
assert property(@(posedge clk) ((aes_mode == 3) && (next_state == 4) ##2 (next_state == 4) ##2 (next_state == 0)) |-> op_key_derivation);
assert property(@(posedge clk) ((aes_mode == 3) && (next_state == 4) ##2 (aes_mode == 0) && (next_state == 4) ##2 1) |-> (op_mode == 1));
assert property(@(posedge clk) ((aes_mode == 3) && (next_state == 4) ##2 (next_state == 4) ##2 (aes_mode == 0)) |-> op_key_derivation);
assert property(@(posedge clk) ((aes_mode == 3) && (next_state == 4) ##2 !mode_cbc && (next_state == 4) ##2 1) |-> op_key_derivation);
assert property(@(posedge clk) ((aes_mode == 3) && (next_state == 4) ##2 (aes_mode == 0) && (next_state == 4) ##2 1) |-> op_key_derivation);
assert property(@(posedge clk) ((aes_mode == 3) && (next_state == 4) ##2 (next_state == 4) ##2 (next_state == 0)) |-> (op_mode == 1));
assert property(@(posedge clk) ((aes_mode == 3) && (next_state == 4) ##2 (next_state == 4) ##2 !start) |-> op_key_derivation);
assert property(@(posedge clk) ((op_mode == 1) ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (op_mode == 2));
assert property(@(posedge clk) ((aes_mode == 3) && (next_state == 4) ##2 (next_state == 4) ##2 disable_core) |-> op_key_derivation);
assert property(@(posedge clk) ((aes_mode == 3) && (next_state == 4) ##2 (next_state == 4) ##1 disable_core ##1 1) |-> (op_mode == 1));
assert property(@(posedge clk) ((aes_mode == 3) && (next_state == 4) ##2 (next_state == 4) ##2 !start) |-> (op_mode == 1));
assert property(@(posedge clk) (op_key_derivation ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (op_mode == 2));
assert property(@(posedge clk) ((aes_mode == 3) && (next_state == 4) ##2 (next_state == 4) ##2 !key_init) |-> (op_mode == 1));
assert property(@(posedge clk) ((aes_mode == 3) && (next_state == 4) ##2 (next_state == 4) ##2 !mode_ctr) |-> op_key_derivation);
assert property(@(posedge clk) ((aes_mode == 3) && (next_state == 4) ##2 (next_state == 4) ##1 disable_core ##1 1) |-> op_key_derivation);
assert property(@(posedge clk) ((aes_mode == 3) && (next_state == 4) ##2 (next_state == 4) ##2 disable_core) |-> (op_mode == 1));
assert property(@(posedge clk) ((aes_mode == 3) && (next_state == 4) ##2 (next_state == 4) ##2 (aes_mode == 0)) |-> (op_mode == 1));
assert property(@(posedge clk) ((aes_mode == 3) && (next_state == 4) ##2 !mode_cbc && (next_state == 4) ##2 1) |-> (op_mode == 1));
assert property(@(posedge clk) ((aes_mode == 3) && (next_state == 4) ##1 disable_core ##1 (next_state == 4) ##2 1) |-> op_key_derivation);
assert property(@(posedge clk) ((aes_mode == 3) && (next_state == 4) ##1 !mode_cbc ##1 (next_state == 4) ##2 1) |-> (op_mode == 1));
assert property(@(posedge clk) ((aes_mode == 3) && (next_state == 4) ##1 (aes_mode >= 2) && (aes_mode <= 3) ##1 (next_state == 4) ##2 1) |-> op_key_derivation);
assert property(@(posedge clk) ((aes_mode == 3) && (next_state == 4) ##1 disable_core ##1 (next_state == 4) ##2 1) |-> (op_mode == 1));
assert property(@(posedge clk) ((aes_mode == 3) && (next_state == 4) ##1 !mode_cbc ##1 (next_state == 4) ##2 1) |-> op_key_derivation);
assert property(@(posedge clk) ((aes_mode == 3) && (next_state == 4) ##1 (aes_mode >= 2) && (aes_mode <= 3) ##1 (next_state == 4) ##2 1) |-> (op_mode == 1));
assert property(@(posedge clk) ((operation_mode == 0) ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (op_mode == 2));
assert property(@(posedge clk) ((next_state == 4) ##1 (aes_mode == 2) && key_init ##1 (next_state == 4) ##2 1) |-> (op_mode == 1));
assert property(@(posedge clk) ((next_state == 4) ##2 (next_state == 4) ##2 (operation_mode == 1)) |-> op_key_derivation);
assert property(@(posedge clk) ((next_state == 4) ##1 (aes_mode == 2) && key_init ##1 (next_state == 4) ##2 1) |-> op_key_derivation);
assert property(@(posedge clk) ((next_state == 4) ##2 (next_state == 4) ##2 (operation_mode == 1)) |-> (op_mode == 1));
assert property(@(posedge clk) (mode_ctr ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (op_mode == 2));
assert property(@(posedge clk) ((aes_mode == 2) ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (op_mode == 2));
assert property(@(posedge clk) ((next_state == 4) ##2 (next_state == 4) ##1 (operation_mode == 0) ##1 1) |-> op_key_derivation);
assert property(@(posedge clk) ((next_state == 4) ##2 (next_state == 4) ##1 (operation_mode == 0) ##1 1) |-> (op_mode == 1));
assert property(@(posedge clk) ((next_state == 4) ##1 (op_mode == 0) && (operation_mode == 3) ##1 (next_state == 4) ##2 1) |-> op_key_derivation);
assert property(@(posedge clk) ((next_state == 4) ##1 (op_mode == 0) && (operation_mode == 3) ##1 (next_state == 4) ##2 1) |-> (op_mode == 1));
assert property(@(posedge clk) ((next_state == 4) ##1 (op_mode == 0) && (operation_mode >= 2) && (operation_mode <= 3) ##1 (next_state == 4) ##2 1) |-> op_key_derivation);
assert property(@(posedge clk) ((next_state == 4) ##1 (op_mode == 0) && (operation_mode >= 2) && (operation_mode <= 3) ##1 (next_state == 4) ##2 1) |-> (op_mode == 1));
assert property(@(posedge clk) ((aes_mode == 0) && (next_state == 4) ##1 (next_state == 4) ##3 1) |-> (aes_mode == 0));
assert property(@(posedge clk) (start ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> key_init);
assert property(@(posedge clk) (key_init ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> key_init);
assert property(@(posedge clk) (start ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> start);
assert property(@(posedge clk) (key_init ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> start);
assert property(@(posedge clk) (!disable_core ##1 !disable_core ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (aes_mode == 2));
assert property(@(posedge clk) (!disable_core ##1 !disable_core ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> mode_ctr);
assert property(@(posedge clk) (!mode_cbc && (next_state == 4) ##1 (next_state == 4) ##1 !start ##2 1) |-> (aes_mode == 0));
assert property(@(posedge clk) ((op_mode == 0) ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (op_mode == 2));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##2 (operation_mode == 3)) |-> (aes_mode == 3));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##2 (op_mode == 3)) |-> (aes_mode == 3));
assert property(@(posedge clk) ((operation_mode == 2) ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (aes_mode == 2));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 (operation_mode == 2) ##1 !enc_dec) |-> (aes_mode == 3));
assert property(@(posedge clk) ((operation_mode == 2) ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> mode_ctr);
assert property(@(posedge clk) ((next_state == 4) ##1 (aes_mode >= 1) && (aes_mode <= 3) && (next_state == 4) ##2 !enc_dec) |-> (aes_mode == 3));
assert property(@(posedge clk) ((next_state == 4) ##1 (aes_mode == 3) && (next_state == 4) ##2 !enc_dec) |-> (aes_mode == 3));
assert property(@(posedge clk) ((next_state == 4) ##1 !disable_core && (next_state == 4) ##2 !enc_dec) |-> (aes_mode == 3));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 !start ##2 disable_core) |-> (aes_mode == 0));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 !start ##2 (next_state == 11)) |-> (aes_mode == 0));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 !start ##2 !mode_ctr) |-> (aes_mode == 0));
assert property(@(posedge clk) (!disable_core && (operation_mode == 3) ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (aes_mode == 2));
assert property(@(posedge clk) (!disable_core && (operation_mode == 3) ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> mode_ctr);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 !start ##2 !enc_dec) |-> (aes_mode == 0));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 !start ##2 !encrypt_decrypt) |-> (aes_mode == 0));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##3 (op_mode == 3)) |-> (aes_mode == 0));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 (aes_mode == 3) ##2 1) |-> (aes_mode == 0));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 !start && disable_core ##2 1) |-> (aes_mode == 0));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##3 (operation_mode == 3)) |-> (aes_mode == 0));
assert property(@(posedge clk) (!disable_core && (next_state == 4) ##1 (next_state == 4) ##2 !enc_dec) |-> (aes_mode == 3));
assert property(@(posedge clk) (!disable_core ##1 (next_state == 4) ##1 (next_state == 4) && disable_core ##1 1) |-> (aes_mode == 2));
assert property(@(posedge clk) (!disable_core ##1 (next_state == 4) ##1 (next_state == 4) && disable_core ##1 1) |-> mode_ctr);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##2 (aes_mode == 3) ##1 1) |-> (aes_mode == 0));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##2 (op_mode == 3) ##1 1) |-> (aes_mode == 0));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##2 (operation_mode == 3) ##1 1) |-> (aes_mode == 0));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 11) ##1 (next_state == 4) ##1 1) |-> (next_state == 1));
assert property(@(posedge clk) ((next_state == 4) && disable_core ##1 (next_state == 4) ##1 !start ##2 1) |-> (aes_mode == 0));
assert property(@(posedge clk) (rst_n ##4 1) |-> (aes_mode == 0));
assert property(@(posedge clk) ((col_sel == 0) ##4 1) |-> (aes_mode == 0));
assert property(@(posedge clk) (!disable_core && !start ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (aes_mode == 2));
assert property(@(posedge clk) (!disable_core && !key_init ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (aes_mode == 2));
assert property(@(posedge clk) (!disable_core && (next_state == 0) ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (aes_mode == 2));
assert property(@(posedge clk) (!disable_core && !start ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> mode_ctr);
assert property(@(posedge clk) (!first_round) |-> (aes_mode == 0));
assert property(@(posedge clk) (!first_round ##4 1) |-> (aes_mode == 0));
assert property(@(posedge clk) (!disable_core && (next_state == 0) ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> mode_ctr);
assert property(@(posedge clk) (!disable_core && !key_init ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> mode_ctr);
assert property(@(posedge clk) ((col_sel == 0)) |-> (aes_mode == 0));
assert property(@(posedge clk) (rst_n) |-> (aes_mode == 0));
assert property(@(posedge clk) (disable_core ##1 (next_state == 4) ##1 (next_state == 4) ##2 !enc_dec) |-> (aes_mode == 3));
assert property(@(posedge clk) (start ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (aes_mode == 2));
assert property(@(posedge clk) (start ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> mode_ctr);
assert property(@(posedge clk) (key_init ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (aes_mode == 2));
assert property(@(posedge clk) (key_init ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> mode_ctr);
assert property(@(posedge clk) (!disable_core && (op_mode == 3) ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (aes_mode == 2));
assert property(@(posedge clk) (!disable_core && (op_mode == 3) ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> mode_ctr);
assert property(@(posedge clk) ((next_state == 4) ##1 (aes_mode >= 0) && (aes_mode <= 1) && (next_state == 4) ##3 !encrypt_decrypt) |-> mode_cbc);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 start ##2 !encrypt_decrypt) |-> (aes_mode == 1));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 (aes_mode == 2) ##2 !encrypt_decrypt) |-> mode_cbc);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 (aes_mode >= 0) && (aes_mode <= 2) ##2 !encrypt_decrypt) |-> mode_cbc);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##2 (aes_mode >= 2) && (aes_mode <= 3) ##1 !encrypt_decrypt) |-> mode_cbc);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 (op_mode == 0) ##2 !encrypt_decrypt) |-> mode_cbc);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 encrypt_decrypt ##2 !encrypt_decrypt) |-> mode_cbc);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 enc_dec ##2 !encrypt_decrypt) |-> mode_cbc);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 key_init ##2 !encrypt_decrypt) |-> mode_cbc);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 (next_state == 1) ##2 !encrypt_decrypt) |-> mode_cbc);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##3 !start) |-> (aes_mode == 1));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) && disable_core ##3 !encrypt_decrypt) |-> mode_cbc);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##2 (operation_mode == 0) ##1 1) |-> (aes_mode == 1));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##2 (next_state == 1) ##1 1) |-> (aes_mode == 1));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##3 (next_state == 0)) |-> (aes_mode == 1));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 start ##2 !encrypt_decrypt) |-> mode_cbc);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##2 !op_key_derivation ##1 !encrypt_decrypt) |-> mode_cbc);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##2 (next_state == 1) ##1 1) |-> mode_cbc);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) && mode_cbc ##3 1) |-> (aes_mode == 1));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 mode_ctr ##2 !encrypt_decrypt) |-> mode_cbc);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##2 (next_state >= 0) && (next_state <= 1) ##1 !encrypt_decrypt) |-> mode_cbc);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##2 mode_ctr ##1 1) |-> mode_cbc);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) && mode_cbc ##3 1) |-> mode_cbc);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##3 !start) |-> mode_cbc);
assert property(@(posedge clk) ((next_state == 4) ##1 (aes_mode == 1) && (next_state == 4) ##3 1) |-> mode_cbc);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##2 (aes_mode == 2) ##1 1) |-> mode_cbc);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##2 (op_mode == 0) ##1 1) |-> mode_cbc);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##3 (op_mode == 2)) |-> mode_cbc);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##3 !key_init) |-> mode_cbc);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##2 (operation_mode == 0) ##1 1) |-> mode_cbc);
assert property(@(posedge clk) ((next_state == 4) ##1 (aes_mode >= 0) && (aes_mode <= 1) && (next_state == 4) ##3 !encrypt_decrypt) |-> (aes_mode == 1));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##3 !key_init) |-> (aes_mode == 1));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 mode_ctr ##2 !encrypt_decrypt) |-> (aes_mode == 1));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) && mode_cbc ##1 1) |-> mode_ctr);
assert property(@(posedge clk) ((next_state == 4) ##1 (aes_mode == 0) && (next_state == 4) ##1 1) |-> (aes_mode == 2));
assert property(@(posedge clk) ((next_state == 4) ##1 (aes_mode == 1) && (next_state == 4) ##1 1) |-> mode_ctr);
assert property(@(posedge clk) ((next_state == 4) ##1 (aes_mode == 0) && (next_state == 4) ##1 1) |-> mode_ctr);
assert property(@(posedge clk) ((aes_mode == 1) ##1 (next_state == 4) ##2 (next_state == 4) ##1 1) |-> (next_state == 1));
assert property(@(posedge clk) (mode_cbc ##1 (next_state == 4) ##2 (next_state == 4) ##1 1) |-> (next_state == 1));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##3 !encrypt_decrypt && (operation_mode == 2)) |-> mode_cbc);
assert property(@(posedge clk) ((next_state == 4) ##1 (aes_mode == 1) && (next_state == 4) ##3 1) |-> (aes_mode == 1));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##2 mode_ctr ##1 1) |-> (aes_mode == 1));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##2 (next_state >= 0) && (next_state <= 1) ##1 !encrypt_decrypt) |-> (aes_mode == 1));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 (next_state == 1) ##2 !encrypt_decrypt) |-> (aes_mode == 1));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##3 !encrypt_decrypt && (operation_mode == 2)) |-> (aes_mode == 1));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 key_init ##2 !encrypt_decrypt) |-> (aes_mode == 1));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 encrypt_decrypt ##2 !encrypt_decrypt) |-> (aes_mode == 1));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 (aes_mode == 2) ##2 !encrypt_decrypt) |-> (aes_mode == 1));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##3 (op_mode == 2)) |-> (aes_mode == 1));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 (aes_mode >= 0) && (aes_mode <= 2) ##2 !encrypt_decrypt) |-> (aes_mode == 1));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##2 (op_mode == 0) ##1 1) |-> (aes_mode == 1));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##2 !op_key_derivation ##1 !encrypt_decrypt) |-> (aes_mode == 1));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##2 (aes_mode == 2) ##1 1) |-> (aes_mode == 1));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) && mode_cbc ##1 1) |-> (aes_mode == 2));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##2 (aes_mode >= 2) && (aes_mode <= 3) ##1 !encrypt_decrypt) |-> (aes_mode == 1));
assert property(@(posedge clk) ((next_state == 4) ##1 (aes_mode == 1) && (next_state == 4) ##1 1) |-> (aes_mode == 2));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) && disable_core ##3 !encrypt_decrypt) |-> (aes_mode == 1));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 (op_mode == 0) ##2 !encrypt_decrypt) |-> (aes_mode == 1));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 enc_dec ##2 !encrypt_decrypt) |-> (aes_mode == 1));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##3 (next_state == 0)) |-> mode_cbc);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 (operation_mode == 3)) |-> mode_ctr);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 (operation_mode == 3)) |-> (aes_mode == 2));
assert property(@(posedge clk) ((col_sel == 0) ##1 1) |-> mode_cbc);
assert property(@(posedge clk) ((col_sel == 0) ##1 1) |-> (aes_mode == 1));
assert property(@(posedge clk) ((col_sel == 0) ##2 1) |-> (aes_mode == 1));
assert property(@(posedge clk) ((col_sel == 0) ##3 1) |-> (aes_mode == 1));
assert property(@(posedge clk) (!first_round ##1 1) |-> (aes_mode == 1));
assert property(@(posedge clk) (!first_round ##2 1) |-> (aes_mode == 1));
assert property(@(posedge clk) (!first_round ##3 1) |-> (aes_mode == 1));
assert property(@(posedge clk) (rst_n ##3 1) |-> (aes_mode == 1));
assert property(@(posedge clk) (rst_n ##1 1) |-> (aes_mode == 1));
assert property(@(posedge clk) ((col_sel == 0) ##3 1) |-> mode_cbc);
assert property(@(posedge clk) ((col_sel == 0) ##2 1) |-> mode_cbc);
assert property(@(posedge clk) (rst_n ##3 1) |-> mode_cbc);
assert property(@(posedge clk) (rst_n ##2 1) |-> (aes_mode == 1));
assert property(@(posedge clk) (rst_n ##2 1) |-> mode_cbc);
assert property(@(posedge clk) (!first_round ##3 1) |-> mode_cbc);
assert property(@(posedge clk) (!first_round ##2 1) |-> mode_cbc);
assert property(@(posedge clk) (!first_round ##1 1) |-> mode_cbc);
assert property(@(posedge clk) (rst_n ##1 1) |-> mode_cbc);
assert property(@(posedge clk) ((op_mode >= 2) && (op_mode <= 3) && disable_core ##1 (next_state == 4) ##2 (next_state == 4) ##1 1) |-> (next_state == 1));
assert property(@(posedge clk) (!disable_core && (next_state == 4) ##1 (next_state == 4) ##3 !encrypt_decrypt) |-> mode_cbc);
assert property(@(posedge clk) (!disable_core && (next_state == 4) ##1 (next_state == 4) ##3 !encrypt_decrypt) |-> (aes_mode == 1));
assert property(@(posedge clk) ((aes_mode == 3) && (next_state == 4) ##1 (next_state == 4) ##3 !encrypt_decrypt) |-> (aes_mode == 1));
assert property(@(posedge clk) ((aes_mode == 3) && (next_state == 4) ##1 (next_state == 4) ##3 !encrypt_decrypt) |-> mode_cbc);
assert property(@(posedge clk) (!disable_core && !enc_dec ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (aes_mode == 2));
assert property(@(posedge clk) ((aes_mode >= 0) && (aes_mode <= 1) && (op_mode >= 2) && (op_mode <= 3) ##1 (next_state == 4) ##2 (next_state == 4) ##1 1) |-> (next_state == 1));
assert property(@(posedge clk) (!disable_core && !encrypt_decrypt ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> mode_ctr);
assert property(@(posedge clk) (!disable_core && !enc_dec ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> mode_ctr);
assert property(@(posedge clk) (!disable_core && !encrypt_decrypt ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (aes_mode == 2));
assert property(@(posedge clk) (!disable_core && (op_mode >= 2) && (op_mode <= 3) ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> mode_ctr);
assert property(@(posedge clk) (!disable_core && (op_mode >= 2) && (op_mode <= 3) ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (aes_mode == 2));
assert property(@(posedge clk) ((op_mode == 2) ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> mode_ctr);
assert property(@(posedge clk) ((op_mode == 2) ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (aes_mode == 2));
assert property(@(posedge clk) ((next_state == 11) ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> mode_ctr);
assert property(@(posedge clk) ((next_state == 11) ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (aes_mode == 2));
assert property(@(posedge clk) ((op_mode >= 2) && (op_mode <= 3) ##1 (next_state == 4) ##1 start ##1 (next_state == 4) ##1 1) |-> (next_state == 1));
assert property(@(posedge clk) ((op_mode >= 2) && (op_mode <= 3) ##1 (next_state == 4) ##1 key_init ##1 (next_state == 4) ##1 1) |-> (next_state == 1));
assert property(@(posedge clk) ((op_mode >= 2) && (op_mode <= 3) ##1 (next_state == 4) ##1 (aes_mode >= 1) && (aes_mode <= 3) ##1 (next_state == 4) ##1 1) |-> (next_state == 1));
assert property(@(posedge clk) ((op_mode >= 2) && (op_mode <= 3) ##1 (next_state == 4) ##2 (next_state == 4) ##1 (operation_mode == 3)) |-> (next_state == 1));
assert property(@(posedge clk) ((op_mode >= 2) && (op_mode <= 3) ##1 (next_state == 4) ##1 !disable_core ##1 (next_state == 4) ##1 1) |-> (next_state == 1));
assert property(@(posedge clk) ((op_mode >= 2) && (op_mode <= 3) ##1 (next_state == 4) ##2 (next_state == 4) ##1 disable_core) |-> (next_state == 1));
assert property(@(posedge clk) ((op_mode >= 2) && (op_mode <= 3) ##1 (next_state == 4) ##2 (next_state == 4) ##1 !op_key_derivation) |-> (next_state == 1));
assert property(@(posedge clk) ((op_mode >= 2) && (op_mode <= 3) ##1 (next_state == 4) ##2 (next_state == 4) ##1 start) |-> (next_state == 1));
assert property(@(posedge clk) ((op_mode >= 2) && (op_mode <= 3) ##1 (next_state == 4) ##2 (next_state == 4) ##1 key_init) |-> (next_state == 1));
assert property(@(posedge clk) ((op_mode >= 2) && (op_mode <= 3) ##1 (next_state == 4) ##1 (aes_mode == 1) ##1 (next_state == 4) ##1 1) |-> (next_state == 1));
assert property(@(posedge clk) ((op_mode >= 2) && (op_mode <= 3) ##1 (next_state == 4) ##2 (aes_mode == 0) && (next_state == 4) ##1 1) |-> (next_state == 1));
assert property(@(posedge clk) ((op_mode >= 2) && (op_mode <= 3) ##1 (next_state == 4) ##2 !mode_cbc && (next_state == 4) ##1 1) |-> (next_state == 1));
assert property(@(posedge clk) ((op_mode >= 2) && (op_mode <= 3) ##1 (next_state == 4) ##1 mode_cbc ##1 (next_state == 4) ##1 1) |-> (next_state == 1));
assert property(@(posedge clk) ((op_mode >= 2) && (op_mode <= 3) ##1 (next_state == 4) ##2 (next_state == 4) ##1 (aes_mode == 2)) |-> (next_state == 1));
assert property(@(posedge clk) ((op_mode >= 2) && (op_mode <= 3) ##1 (next_state == 4) ##2 (next_state == 4) ##1 (op_mode == 0)) |-> (next_state == 1));
assert property(@(posedge clk) ((op_mode >= 2) && (op_mode <= 3) ##1 (next_state == 4) ##2 (next_state == 4) ##1 mode_ctr) |-> (next_state == 1));
assert property(@(posedge clk) ((aes_mode == 0) ##1 !disable_core ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (aes_mode == 2));
assert property(@(posedge clk) ((aes_mode == 0) ##1 !disable_core ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> mode_ctr);
assert property(@(posedge clk) (!disable_core && (op_mode >= 1) && (op_mode <= 3) ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (aes_mode == 2));
assert property(@(posedge clk) (!disable_core && (op_mode >= 1) && (op_mode <= 3) ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> mode_ctr);
assert property(@(posedge clk) ((next_state == 4) ##2 (next_state == 4)) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) ((aes_mode == 3) ##1 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 2) && (aes_mode <= 3));
assert property(@(posedge clk) (mode_ctr ##2 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 2) && (aes_mode <= 3));
assert property(@(posedge clk) ((aes_mode >= 0) && (aes_mode <= 1) ##1 !disable_core ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> mode_ctr);
assert property(@(posedge clk) ((aes_mode >= 0) && (aes_mode <= 1) ##1 !disable_core ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (aes_mode == 2));
assert property(@(posedge clk) (rst_n ##4 1) |-> (op_mode >= 2) && (op_mode <= 3));
assert property(@(posedge clk) (rst_n ##2 1) |-> (op_mode >= 2) && (op_mode <= 3));
assert property(@(posedge clk) (rst_n ##1 1) |-> (op_mode >= 2) && (op_mode <= 3));
assert property(@(posedge clk) (!first_round ##4 1) |-> (op_mode >= 2) && (op_mode <= 3));
assert property(@(posedge clk) (!first_round ##2 1) |-> (op_mode >= 2) && (op_mode <= 3));
assert property(@(posedge clk) ((col_sel == 0) ##4 1) |-> (op_mode >= 2) && (op_mode <= 3));
assert property(@(posedge clk) (!first_round ##1 1) |-> (op_mode >= 2) && (op_mode <= 3));
assert property(@(posedge clk) ((col_sel == 0) ##1 1) |-> (op_mode >= 2) && (op_mode <= 3));
assert property(@(posedge clk) ((col_sel == 0) ##2 1) |-> (op_mode >= 2) && (op_mode <= 3));
assert property(@(posedge clk) ((op_mode == 0) ##2 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 2) && (aes_mode <= 3));
assert property(@(posedge clk) ((operation_mode >= 1) && (operation_mode <= 2) ##1 (aes_mode >= 2) && (aes_mode <= 3) ##1 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 2) && (aes_mode <= 3));
assert property(@(posedge clk) (mode_ctr ##3 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 1) && (aes_mode <= 2));
assert property(@(posedge clk) ((aes_mode == 2) ##3 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 1) && (aes_mode <= 2));
assert property(@(posedge clk) ((op_mode == 3) ##3 1) |-> first_round);
assert property(@(posedge clk) ((op_mode == 3)) |-> (col_sel == 2));
assert property(@(posedge clk) ((op_mode == 3) ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((op_mode == 3) ##4 1) |-> first_round);
assert property(@(posedge clk) ((op_mode == 3) ##2 1) |-> first_round);
assert property(@(posedge clk) ((op_mode == 3) ##1 1) |-> first_round);
assert property(@(posedge clk) ((op_mode == 3)) |-> first_round);
assert property(@(posedge clk) ((next_state == 11) ##1 1) |-> first_round);
assert property(@(posedge clk) ((next_state == 11) ##2 1) |-> first_round);
assert property(@(posedge clk) ((next_state == 11) ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((next_state == 11) ##3 1) |-> first_round);
assert property(@(posedge clk) ((next_state == 11) ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((next_state == 11)) |-> first_round);
assert property(@(posedge clk) ((op_mode == 3) ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((op_mode == 3) ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((next_state == 11)) |-> (col_sel == 2));
assert property(@(posedge clk) ((op_mode == 3) ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((next_state == 11) ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 (aes_mode == 2)) |-> start);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 mode_ctr) |-> key_init);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 mode_ctr) |-> start);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 encrypt_decrypt) |-> key_init);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 (aes_mode == 2)) |-> key_init);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 enc_dec) |-> key_init);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 (op_mode == 0)) |-> start);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 encrypt_decrypt) |-> start);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 enc_dec) |-> start);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 (op_mode == 0)) |-> key_init);
assert property(@(posedge clk) ((aes_mode == 2) ##1 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 1) && (aes_mode <= 2));
assert property(@(posedge clk) (mode_ctr ##1 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 1) && (aes_mode <= 2));
assert property(@(posedge clk) (encrypt_decrypt ##2 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 2) && (aes_mode <= 3));
assert property(@(posedge clk) ((op_mode >= 0) && (op_mode <= 1) ##2 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 2) && (aes_mode <= 3));
assert property(@(posedge clk) (enc_dec ##2 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 2) && (aes_mode <= 3));
assert property(@(posedge clk) ((next_state == 11) ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> start);
assert property(@(posedge clk) ((next_state == 11) ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> key_init);
assert property(@(posedge clk) ((next_state == 11) ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((next_state == 11) ##4 1) |-> first_round);
assert property(@(posedge clk) ((op_mode == 0) ##3 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 1) && (aes_mode <= 2));
assert property(@(posedge clk) ((next_state == 4) ##1 (aes_mode >= 0) && (aes_mode <= 1) && (next_state == 4) ##1 1) |-> start);
assert property(@(posedge clk) ((next_state == 4) ##1 (aes_mode >= 0) && (aes_mode <= 1) && (next_state == 4) ##1 1) |-> key_init);
assert property(@(posedge clk) (!mode_ctr ##1 !disable_core ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (aes_mode == 2));
assert property(@(posedge clk) (!mode_ctr ##1 !disable_core ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> mode_ctr);
assert property(@(posedge clk) (!first_round) |-> (op_mode == 0));
assert property(@(posedge clk) ((col_sel == 0)) |-> (op_mode == 0));
assert property(@(posedge clk) (rst_n) |-> (op_mode == 0));
assert property(@(posedge clk) ((operation_mode >= 1) && (operation_mode <= 2) ##1 !mode_cbc ##1 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 2) && (aes_mode <= 3));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 (operation_mode == 3)) |-> start);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 (operation_mode == 3)) |-> key_init);
assert property(@(posedge clk) ((next_state == 4) ##1 (aes_mode == 0) && (next_state == 4) ##1 1) |-> key_init);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) && mode_cbc ##1 1) |-> key_init);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) && mode_cbc ##1 1) |-> start);
assert property(@(posedge clk) ((next_state == 4) ##1 (aes_mode == 1) && (next_state == 4) ##1 1) |-> start);
assert property(@(posedge clk) ((next_state == 4) ##1 (aes_mode == 0) && (next_state == 4) ##1 1) |-> start);
assert property(@(posedge clk) ((next_state == 4) ##1 (aes_mode == 1) && (next_state == 4) ##1 1) |-> key_init);
assert property(@(posedge clk) ((aes_mode >= 2) && (aes_mode <= 3) && encrypt_decrypt ##3 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 1) && (aes_mode <= 2));
assert property(@(posedge clk) ((aes_mode >= 2) && (aes_mode <= 3) && enc_dec ##3 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 1) && (aes_mode <= 2));
assert property(@(posedge clk) ((aes_mode == 3) && (next_state == 4) ##1 (next_state == 4) ##1 1) |-> start);
assert property(@(posedge clk) ((aes_mode == 3) && (next_state == 4) ##1 (next_state == 4) ##1 1) |-> key_init);
assert property(@(posedge clk) ((op_mode >= 2) && (op_mode <= 3) ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> start);
assert property(@(posedge clk) ((op_mode >= 2) && (op_mode <= 3) ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> key_init);
assert property(@(posedge clk) (!encrypt_decrypt ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> start);
assert property(@(posedge clk) (!enc_dec ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> start);
assert property(@(posedge clk) (!enc_dec ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> key_init);
assert property(@(posedge clk) (!encrypt_decrypt ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> key_init);
assert property(@(posedge clk) ((aes_mode >= 2) && (aes_mode <= 3) && (next_state >= 0) && (next_state <= 1) ##3 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 1) && (aes_mode <= 2));
assert property(@(posedge clk) (!disable_core ##1 (next_state == 4) ##1 (next_state == 4) && disable_core ##1 1) |-> key_init);
assert property(@(posedge clk) (!disable_core ##1 (next_state == 4) ##1 (next_state == 4) && disable_core ##1 1) |-> start);
assert property(@(posedge clk) ((op_mode == 2) ##2 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) ((aes_mode == 2) ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> key_init);
assert property(@(posedge clk) (mode_ctr ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> key_init);
assert property(@(posedge clk) ((aes_mode == 2) ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> start);
assert property(@(posedge clk) (mode_ctr ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> start);
assert property(@(posedge clk) ((aes_mode >= 2) && (aes_mode <= 3) ##2 (op_mode == 0) ##1 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 1) && (aes_mode <= 2));
assert property(@(posedge clk) ((operation_mode == 2) ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> start);
assert property(@(posedge clk) ((operation_mode == 2) ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> key_init);
assert property(@(posedge clk) (!disable_core && (op_mode >= 1) && (op_mode <= 3) ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> key_init);
assert property(@(posedge clk) (!disable_core && (op_mode >= 1) && (op_mode <= 3) ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> start);
assert property(@(posedge clk) ((op_mode == 3) ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> key_init);
assert property(@(posedge clk) ((op_mode == 3) ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> start);
assert property(@(posedge clk) (mode_cbc ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> disable_core);
assert property(@(posedge clk) (!disable_core && !enc_dec ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> key_init);
assert property(@(posedge clk) (!disable_core && !encrypt_decrypt ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> key_init);
assert property(@(posedge clk) (!disable_core && !encrypt_decrypt ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> start);
assert property(@(posedge clk) (!disable_core && !enc_dec ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> start);
assert property(@(posedge clk) (!disable_core && (op_mode >= 2) && (op_mode <= 3) ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> key_init);
assert property(@(posedge clk) (!disable_core && (op_mode >= 2) && (op_mode <= 3) ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> start);
assert property(@(posedge clk) ((next_state == 4) && disable_core ##1 (next_state == 4) ##1 1) |-> disable_core);
assert property(@(posedge clk) ((aes_mode >= 0) && (aes_mode <= 1) ##1 !disable_core ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> start);
assert property(@(posedge clk) (!mode_ctr ##1 !disable_core ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> key_init);
assert property(@(posedge clk) ((aes_mode >= 0) && (aes_mode <= 1) ##1 !disable_core ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> key_init);
assert property(@(posedge clk) (!mode_ctr ##1 !disable_core ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> start);
assert property(@(posedge clk) ((next_state == 4) ##1 !disable_core && (next_state == 4)) |-> (aes_mode >= 2) && (aes_mode <= 3));
assert property(@(posedge clk) (!disable_core ##1 !disable_core ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> start);
assert property(@(posedge clk) (!disable_core && (operation_mode == 3) ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> key_init);
assert property(@(posedge clk) (!disable_core && (operation_mode == 3) ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> start);
assert property(@(posedge clk) (!disable_core ##1 !disable_core ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> key_init);
assert property(@(posedge clk) (!op_key_derivation ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> disable_core);
assert property(@(posedge clk) ((op_mode == 2) ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> key_init);
assert property(@(posedge clk) ((operation_mode >= 0) && (operation_mode <= 1) ##2 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 2) && (aes_mode <= 3));
assert property(@(posedge clk) ((op_mode == 2) ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> start);
assert property(@(posedge clk) (!disable_core && (op_mode == 3) ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> key_init);
assert property(@(posedge clk) (!disable_core && (op_mode == 3) ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> start);
assert property(@(posedge clk) ((aes_mode >= 2) && (aes_mode <= 3) ##2 (next_state == 1) ##1 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 1) && (aes_mode <= 2));
assert property(@(posedge clk) ((operation_mode == 3) ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> disable_core);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 (aes_mode >= 2) && (aes_mode <= 3)) |-> disable_core);
assert property(@(posedge clk) ((aes_mode >= 2) && (aes_mode <= 3) ##2 encrypt_decrypt ##1 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 1) && (aes_mode <= 2));
assert property(@(posedge clk) ((aes_mode >= 2) && (aes_mode <= 3) ##2 (next_state >= 1) && (next_state <= 4) ##1 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 1) && (aes_mode <= 2));
assert property(@(posedge clk) ((aes_mode >= 2) && (aes_mode <= 3) ##2 (op_mode >= 0) && (op_mode <= 1) ##1 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 1) && (aes_mode <= 2));
assert property(@(posedge clk) ((aes_mode >= 2) && (aes_mode <= 3) ##2 enc_dec ##1 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 1) && (aes_mode <= 2));
assert property(@(posedge clk) ((next_state == 4)) |-> (next_state >= 0) && (next_state <= 4));
assert property(@(posedge clk) (start ##2 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 2) && (aes_mode <= 3));
assert property(@(posedge clk) (key_init ##2 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 2) && (aes_mode <= 3));
assert property(@(posedge clk) ((operation_mode >= 1) && (operation_mode <= 2) ##1 disable_core ##1 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 2) && (aes_mode <= 3));
assert property(@(posedge clk) (!mode_cbc && (next_state == 4) ##1 (next_state == 4) ##1 1) |-> disable_core);
assert property(@(posedge clk) (rst_n ##2 1) |-> (aes_mode >= 1) && (aes_mode <= 2));
assert property(@(posedge clk) (rst_n ##3 1) |-> (aes_mode >= 1) && (aes_mode <= 2));
assert property(@(posedge clk) (!first_round ##3 1) |-> (aes_mode >= 1) && (aes_mode <= 2));
assert property(@(posedge clk) ((col_sel == 0) ##1 1) |-> (aes_mode >= 1) && (aes_mode <= 2));
assert property(@(posedge clk) (!first_round ##2 1) |-> (aes_mode >= 1) && (aes_mode <= 2));
assert property(@(posedge clk) (!first_round ##1 1) |-> (aes_mode >= 1) && (aes_mode <= 2));
assert property(@(posedge clk) ((col_sel == 0) ##3 1) |-> (aes_mode >= 1) && (aes_mode <= 2));
assert property(@(posedge clk) ((col_sel == 0) ##2 1) |-> (aes_mode >= 1) && (aes_mode <= 2));
assert property(@(posedge clk) (rst_n ##1 1) |-> (aes_mode >= 1) && (aes_mode <= 2));
assert property(@(posedge clk) ((col_sel == 0) ##2 1) |-> start);
assert property(@(posedge clk) (!first_round ##4 1) |-> key_init);
assert property(@(posedge clk) (rst_n ##2 1) |-> key_init);
assert property(@(posedge clk) (rst_n ##3 1) |-> key_init);
assert property(@(posedge clk) (!first_round ##3 1) |-> start);
assert property(@(posedge clk) (rst_n ##4 1) |-> key_init);
assert property(@(posedge clk) ((next_state == 4) && mode_cbc ##1 (next_state == 4)) |-> (aes_mode >= 2) && (aes_mode <= 3));
assert property(@(posedge clk) ((operation_mode >= 1) && (operation_mode <= 2) ##2 !disable_core && (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 2) && (aes_mode <= 3));
assert property(@(posedge clk) ((col_sel == 0) ##4 1) |-> key_init);
assert property(@(posedge clk) ((col_sel == 0) ##2 1) |-> key_init);
assert property(@(posedge clk) (!first_round ##2 1) |-> key_init);
assert property(@(posedge clk) (!first_round ##2 1) |-> start);
assert property(@(posedge clk) (rst_n ##4 1) |-> start);
assert property(@(posedge clk) ((col_sel == 0) ##3 1) |-> start);
assert property(@(posedge clk) ((col_sel == 0) ##4 1) |-> start);
assert property(@(posedge clk) ((col_sel == 0) ##3 1) |-> key_init);
assert property(@(posedge clk) (!first_round ##4 1) |-> start);
assert property(@(posedge clk) ((aes_mode == 1) && (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 2) && (aes_mode <= 3));
assert property(@(posedge clk) (!first_round ##3 1) |-> key_init);
assert property(@(posedge clk) (rst_n ##2 1) |-> start);
assert property(@(posedge clk) (rst_n ##3 1) |-> start);
assert property(@(posedge clk) (key_init ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> disable_core);
assert property(@(posedge clk) (start ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> disable_core);
assert property(@(posedge clk) ((operation_mode == 1) ##2 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 2) && (aes_mode <= 3));
assert property(@(posedge clk) ((aes_mode == 0) ##1 !disable_core ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> key_init);
assert property(@(posedge clk) ((aes_mode == 0) ##1 !disable_core ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> start);
assert property(@(posedge clk) (!first_round ##1 1) |-> (next_state == 0));
assert property(@(posedge clk) ((aes_mode == 0) && (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 2) && (aes_mode <= 3));
assert property(@(posedge clk) ((col_sel == 0) ##1 1) |-> (next_state == 0));
assert property(@(posedge clk) (!first_round) |-> (next_state == 0));
assert property(@(posedge clk) (rst_n ##1 1) |-> (next_state == 0));
assert property(@(posedge clk) ((col_sel == 0)) |-> (next_state == 0));
assert property(@(posedge clk) (rst_n) |-> (next_state == 0));
assert property(@(posedge clk) ((op_mode == 0) ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> disable_core);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 encrypt_decrypt) |-> disable_core);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 (next_state == 1)) |-> disable_core);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 (aes_mode == 2)) |-> disable_core);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 (op_mode == 0)) |-> disable_core);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 enc_dec) |-> disable_core);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 start) |-> disable_core);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 key_init) |-> disable_core);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 mode_ctr) |-> disable_core);
assert property(@(posedge clk) (!start && (aes_mode >= 2) && (aes_mode <= 3) ##3 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 1) && (aes_mode <= 2));
assert property(@(posedge clk) (!key_init && (aes_mode >= 2) && (aes_mode <= 3) ##3 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 1) && (aes_mode <= 2));
assert property(@(posedge clk) ((aes_mode >= 2) && (aes_mode <= 3) && (next_state == 0) ##3 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 1) && (aes_mode <= 2));
assert property(@(posedge clk) (enc_dec ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> disable_core);
assert property(@(posedge clk) (encrypt_decrypt ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> disable_core);
assert property(@(posedge clk) ((aes_mode == 3) && (next_state == 4) ##1 (next_state == 4) ##1 1) |-> disable_core);
assert property(@(posedge clk) ((aes_mode >= 2) && (aes_mode <= 3) ##2 key_init ##1 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 1) && (aes_mode <= 2));
assert property(@(posedge clk) ((aes_mode >= 2) && (aes_mode <= 3) ##2 start ##1 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 1) && (aes_mode <= 2));
assert property(@(posedge clk) (disable_core ##3 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 2) && (aes_mode <= 3));
assert property(@(posedge clk) ((aes_mode >= 0) && (aes_mode <= 1) && (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 2) && (aes_mode <= 3));
assert property(@(posedge clk) ((aes_mode >= 2) && (aes_mode <= 3) ##2 disable_core ##1 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 1) && (aes_mode <= 2));
assert property(@(posedge clk) ((op_mode == 3) ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> disable_core);
assert property(@(posedge clk) ((next_state == 1) ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> disable_core);
assert property(@(posedge clk) ((aes_mode >= 1) && (aes_mode <= 2) ##1 (operation_mode >= 1) && (operation_mode <= 2) ##2 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 2) && (aes_mode <= 3));
assert property(@(posedge clk) (!encrypt_decrypt ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> disable_core);
assert property(@(posedge clk) (!enc_dec ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> disable_core);
assert property(@(posedge clk) ((op_mode == 0) ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> disable_core);
assert property(@(posedge clk) ((next_state == 4) ##1 (aes_mode >= 0) && (aes_mode <= 1) && (next_state == 4) ##1 1) |-> disable_core);
assert property(@(posedge clk) ((aes_mode >= 2) && (aes_mode <= 3) ##1 disable_core ##2 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 1) && (aes_mode <= 2));
assert property(@(posedge clk) ((next_state == 4) ##1 !disable_core && (next_state == 4) ##1 1) |-> disable_core);
assert property(@(posedge clk) (!first_round) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) (rst_n) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) (!first_round ##4 1) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) (!first_round ##3 1) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) (!first_round ##2 1) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) (!first_round ##1 1) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) ((col_sel == 0) ##4 1) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) (rst_n ##4 1) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) (rst_n ##2 1) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) ((col_sel == 0) ##2 1) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) ((col_sel == 0) ##1 1) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) ((col_sel == 0)) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) (rst_n ##3 1) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) (rst_n ##1 1) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) ((col_sel == 0) ##3 1) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) ((aes_mode == 3) ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (next_state == 0));
assert property(@(posedge clk) ((aes_mode >= 2) && (aes_mode <= 3) ##3 !disable_core && (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 1) && (aes_mode <= 2));
assert property(@(posedge clk) (op_key_derivation ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (next_state == 0));
assert property(@(posedge clk) ((op_mode == 1) ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (next_state == 0));
assert property(@(posedge clk) (mode_ctr ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (next_state == 0));
assert property(@(posedge clk) (start ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> disable_core);
assert property(@(posedge clk) (key_init ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> disable_core);
assert property(@(posedge clk) ((next_state == 11) ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> disable_core);
assert property(@(posedge clk) ((aes_mode == 2) ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (next_state == 0));
assert property(@(posedge clk) ((operation_mode == 0) ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (next_state == 0));
assert property(@(posedge clk) ((next_state == 11) ##3 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 2) && (aes_mode <= 3));
assert property(@(posedge clk) ((aes_mode == 2) ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> disable_core);
assert property(@(posedge clk) (mode_ctr ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> disable_core);
assert property(@(posedge clk) ((aes_mode == 1) && (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (next_state == 0));
assert property(@(posedge clk) ((next_state == 4) && mode_cbc ##1 (next_state == 4) ##1 1) |-> (next_state == 0));
assert property(@(posedge clk) ((aes_mode == 3) ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> disable_core);
assert property(@(posedge clk) (mode_ctr ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> disable_core);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) && mode_cbc ##1 1) |-> disable_core);
assert property(@(posedge clk) ((next_state == 4) ##1 (aes_mode == 1) && (next_state == 4) ##1 1) |-> disable_core);
assert property(@(posedge clk) ((next_state == 4) ##1 (aes_mode == 0) && (next_state == 4) ##1 1) |-> disable_core);
assert property(@(posedge clk) (!first_round ##1 1) |-> disable_core);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 (aes_mode == 3)) |-> disable_core);
assert property(@(posedge clk) ((col_sel == 0) ##2 1) |-> disable_core);
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 (operation_mode == 3)) |-> disable_core);
assert property(@(posedge clk) (rst_n ##4 1) |-> disable_core);
assert property(@(posedge clk) (rst_n ##2 1) |-> disable_core);
assert property(@(posedge clk) (rst_n ##1 1) |-> disable_core);
assert property(@(posedge clk) (!first_round ##4 1) |-> disable_core);
assert property(@(posedge clk) ((col_sel == 0) ##1 1) |-> disable_core);
assert property(@(posedge clk) (!first_round ##2 1) |-> disable_core);
assert property(@(posedge clk) ((col_sel == 0) ##4 1) |-> disable_core);
assert property(@(posedge clk) ((aes_mode == 0) && (next_state == 4) ##1 (next_state == 4) ##1 1) |-> disable_core);
assert property(@(posedge clk) ((operation_mode == 2) && encrypt_decrypt ##4 (next_state == 4)) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) ((aes_mode == 0) && (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (next_state == 0));
assert property(@(posedge clk) ((aes_mode >= 2) && (aes_mode <= 3) ##1 (op_mode == 3) ##2 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 1) && (aes_mode <= 2));
assert property(@(posedge clk) ((op_mode == 1) ##3 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 2) && (aes_mode <= 3));
assert property(@(posedge clk) (op_key_derivation ##3 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 2) && (aes_mode <= 3));
assert property(@(posedge clk) ((op_mode == 2) ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> disable_core);
assert property(@(posedge clk) ((op_mode == 0) ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (next_state == 0));
assert property(@(posedge clk) ((op_mode == 1) ##2 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 2) && (aes_mode <= 3));
assert property(@(posedge clk) (op_key_derivation ##2 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 2) && (aes_mode <= 3));
assert property(@(posedge clk) ((aes_mode >= 0) && (aes_mode <= 1) && (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (next_state == 0));
assert property(@(posedge clk) ((next_state >= 1) && (next_state <= 4) && mode_cbc ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (next_state == 0));
assert property(@(posedge clk) ((aes_mode == 1) && (next_state >= 1) && (next_state <= 4) ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (next_state == 0));
assert property(@(posedge clk) ((next_state == 11) ##2 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 2) && (aes_mode <= 3));
assert property(@(posedge clk) ((next_state >= 0) && (next_state <= 1) ##2 (op_mode == 2) ##1 (next_state == 4) ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) ((aes_mode >= 1) && (aes_mode <= 2) ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (next_state == 0));
assert property(@(posedge clk) ((op_mode >= 0) && (op_mode <= 1) ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (next_state == 0));
assert property(@(posedge clk) ((aes_mode >= 2) && (aes_mode <= 3) && (op_mode == 3) ##2 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) (enc_dec ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (next_state == 0));
assert property(@(posedge clk) (encrypt_decrypt ##2 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (next_state == 0));
assert property(@(posedge clk) ((next_state == 0) ##2 (op_mode == 0) ##1 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) ((operation_mode >= 2) && (operation_mode <= 3) ##2 (op_mode == 0) ##1 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 (op_mode == 2)) |-> (next_state == 0));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 !enc_dec) |-> (next_state == 0));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 !encrypt_decrypt) |-> (next_state == 0));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 !mode_ctr) |-> (next_state == 0));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 (aes_mode == 0)) |-> (next_state == 0));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 (aes_mode == 3)) |-> (next_state == 0));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 !disable_core) |-> (next_state == 0));
assert property(@(posedge clk) (!enc_dec && (aes_mode >= 2) && (aes_mode <= 3) ##2 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) (!encrypt_decrypt && (aes_mode >= 2) && (aes_mode <= 3) ##2 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) ((aes_mode >= 2) && (aes_mode <= 3) ##2 !mode_cbc ##1 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 1) && (aes_mode <= 2));
assert property(@(posedge clk) (!disable_core && (next_state >= 1) && (next_state <= 4) ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (next_state == 0));
assert property(@(posedge clk) ((aes_mode >= 2) && (aes_mode <= 3) && (op_mode >= 1) && (op_mode <= 3) ##2 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) ((next_state == 0) ##2 (op_mode == 2) ##1 (next_state == 4) ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) (!key_init ##2 (op_mode == 2) ##1 (next_state == 4) ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) (!start ##2 (op_mode == 2) ##1 (next_state == 4) ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) ((op_mode == 0) ##3 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) (!key_init ##1 (op_mode == 2) ##1 (next_state == 4) ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) ((next_state == 0) ##1 (op_mode == 2) ##1 (next_state == 4) ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) (!start ##1 (op_mode == 2) ##1 (next_state == 4) ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) (!disable_core && !start ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> start);
assert property(@(posedge clk) (!disable_core && (next_state == 0) ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> start);
assert property(@(posedge clk) (!disable_core && (next_state == 0) ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> key_init);
assert property(@(posedge clk) (!disable_core && !key_init ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> key_init);
assert property(@(posedge clk) (!disable_core && !start ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> key_init);
assert property(@(posedge clk) (!disable_core && !key_init ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> start);
assert property(@(posedge clk) (!mode_ctr && (next_state >= 1) && (next_state <= 4) ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> (next_state == 0));
assert property(@(posedge clk) ((op_mode == 0) ##2 (op_mode == 2) ##1 (next_state == 4) ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) (mode_cbc ##3 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 2) && (aes_mode <= 3));
assert property(@(posedge clk) ((aes_mode == 1) ##3 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 2) && (aes_mode <= 3));
assert property(@(posedge clk) ((next_state >= 0) && (next_state <= 4) ##2 (op_mode == 2) ##1 (next_state == 4) ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) ((next_state >= 0) && (next_state <= 1) ##2 (op_mode == 0) ##1 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) ((aes_mode == 2) ##1 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) (mode_ctr ##1 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) (!start ##1 (aes_mode >= 2) && (aes_mode <= 3) ##2 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) (!key_init ##1 (aes_mode >= 2) && (aes_mode <= 3) ##2 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) ((next_state == 0) ##1 (aes_mode >= 2) && (aes_mode <= 3) ##2 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) (rst_n ##3 1) |-> encrypt_decrypt);
assert property(@(posedge clk) ((col_sel == 0)) |-> (op_mode >= 0) && (op_mode <= 1));
assert property(@(posedge clk) ((col_sel == 0) ##3 1) |-> (op_mode >= 0) && (op_mode <= 1));
assert property(@(posedge clk) (!first_round) |-> (op_mode >= 0) && (op_mode <= 1));
assert property(@(posedge clk) (!first_round ##3 1) |-> (op_mode >= 0) && (op_mode <= 1));
assert property(@(posedge clk) (rst_n ##3 1) |-> (op_mode >= 0) && (op_mode <= 1));
assert property(@(posedge clk) (rst_n ##3 1) |-> enc_dec);
assert property(@(posedge clk) (!first_round ##3 1) |-> enc_dec);
assert property(@(posedge clk) ((col_sel == 0) ##3 1) |-> enc_dec);
assert property(@(posedge clk) (!first_round ##3 1) |-> encrypt_decrypt);
assert property(@(posedge clk) ((col_sel == 0) ##3 1) |-> encrypt_decrypt);
assert property(@(posedge clk) (rst_n) |-> (op_mode >= 0) && (op_mode <= 1));
assert property(@(posedge clk) (!mode_cbc ##3 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) ((aes_mode == 2) ##3 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) (mode_ctr ##3 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) (!mode_ctr && (aes_mode >= 2) && (aes_mode <= 3) ##2 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) ((aes_mode == 3) ##2 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) ((aes_mode == 3) ##3 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) ((operation_mode >= 2) && (operation_mode <= 3) ##1 (aes_mode >= 2) && (aes_mode <= 3) ##2 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) (!disable_core ##1 (aes_mode >= 2) && (aes_mode <= 3) ##2 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) ((aes_mode == 2) ##2 (op_mode == 2) ##1 (next_state == 4) ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) (mode_ctr ##2 (op_mode == 2) ##1 (next_state == 4) ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) ((next_state >= 1) && (next_state <= 4) ##1 (next_state == 4) && disable_core ##1 (next_state == 4) ##1 1) |-> (next_state == 0));
assert property(@(posedge clk) (mode_ctr ##1 (op_mode == 2) ##1 (next_state == 4) ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) ((next_state >= 1) && (next_state <= 4) ##1 (next_state == 4) ##1 (aes_mode == 3) && (next_state == 4) ##1 1) |-> (next_state == 0));
assert property(@(posedge clk) ((next_state >= 1) && (next_state <= 4) ##1 (next_state == 4) ##1 !disable_core && (next_state == 4) ##1 1) |-> (next_state == 0));
assert property(@(posedge clk) ((next_state >= 1) && (next_state <= 4) ##1 (next_state == 4) ##1 !mode_cbc && (next_state == 4) ##1 1) |-> (next_state == 0));
assert property(@(posedge clk) (!op_key_derivation ##2 (op_mode == 2) ##1 (next_state == 4) ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) ((aes_mode >= 1) && (aes_mode <= 2) ##2 (op_mode == 2) ##1 (next_state == 4) ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) (!disable_core ##2 (op_mode == 2) ##1 (next_state == 4) ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) (!first_round) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) (rst_n ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) (rst_n) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) (!first_round ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) ((col_sel == 0) ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) ((col_sel == 0)) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) ((next_state >= 0) && (next_state <= 1) ##1 (aes_mode >= 2) && (aes_mode <= 3) ##2 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) ((aes_mode == 3) && (op_mode == 2) ##1 (next_state == 4) ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) ((aes_mode == 0) ##2 (op_mode == 2) ##1 (next_state == 4) ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) (!disable_core ##1 (op_mode == 2) ##1 (next_state == 4) ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) (!disable_core && (op_mode == 2) ##1 (next_state == 4) ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) ((aes_mode == 0) && (op_mode == 2) ##1 (next_state == 4) ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) ((aes_mode >= 0) && (aes_mode <= 1) ##3 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 2) && (aes_mode <= 3));
assert property(@(posedge clk) ((next_state >= 0) && (next_state <= 4) ##1 (aes_mode >= 2) && (aes_mode <= 3) ##2 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) ((operation_mode == 3) ##2 (op_mode == 2) ##1 (next_state == 4) ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) (!mode_cbc && (op_mode == 2) ##1 (next_state == 4) ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) ((aes_mode >= 2) && (aes_mode <= 3) ##1 disable_core ##1 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) (mode_cbc ##1 (op_mode == 2) ##1 (next_state == 4) ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) ((aes_mode >= 2) && (aes_mode <= 3) ##3 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) (!op_key_derivation ##1 (aes_mode >= 2) && (aes_mode <= 3) ##2 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) ((op_mode == 3) ##1 (op_mode == 2) ##1 (next_state == 4) ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) ((op_mode == 2) ##1 (next_state == 4) ##1 !mode_cbc) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) (!disable_core ##1 (next_state == 4) ##1 (next_state == 4) ##1 1) |-> disable_core);
assert property(@(posedge clk) ((aes_mode >= 2) && (aes_mode <= 3) ##2 (next_state == 4) ##1 (next_state == 4) && disable_core) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) ((op_mode == 2) ##1 (next_state == 4) ##1 !op_key_derivation) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) ((op_mode == 2) ##1 (next_state == 4) ##1 (aes_mode >= 2) && (aes_mode <= 3)) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) ((op_mode == 2) ##1 (next_state == 4) && disable_core ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) ((op_mode == 2) ##1 (next_state == 4) ##1 disable_core) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) ((op_mode == 2) ##1 (aes_mode >= 0) && (aes_mode <= 1) && (next_state == 4) ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) ((op_mode == 2) ##1 (next_state == 4) && mode_cbc ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) ((op_mode == 2) ##1 (aes_mode == 1) && (next_state == 4) ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) ((op_mode == 3) ##2 (op_mode == 2) ##1 (next_state == 4) ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) ((aes_mode >= 2) && (aes_mode <= 3) ##2 !disable_core && (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) ((op_mode == 2) ##1 (next_state == 4) ##1 (operation_mode == 2)) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) ((op_mode == 2) ##1 (aes_mode == 0) && (next_state == 4) ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) ((op_mode == 2) ##2 (op_mode == 2) ##1 (next_state == 4) ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) ((op_mode == 2) ##1 (next_state == 4) ##1 !encrypt_decrypt) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) ((op_mode == 2) ##1 (next_state == 4) ##1 (op_mode == 2)) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) ((op_mode == 2) ##1 (next_state == 4) ##1 (aes_mode == 3)) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) ((op_mode == 2) ##1 (next_state == 4) ##1 !enc_dec) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) ((aes_mode >= 2) && (aes_mode <= 3) ##1 (operation_mode == 3) ##1 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) ((op_mode == 2) ##1 (next_state == 4) ##1 (operation_mode == 3)) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) ((op_mode == 2) ##1 (next_state == 4) ##1 (aes_mode == 0)) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) ((operation_mode >= 2) && (operation_mode <= 3) ##2 (op_mode == 2) ##1 (next_state == 4) ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) (op_key_derivation ##1 (op_mode == 2) ##1 (next_state == 4) ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) ((op_mode == 1) ##1 (op_mode == 2) ##1 (next_state == 4) ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) ((aes_mode >= 2) && (aes_mode <= 3) ##2 (aes_mode == 3) && (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) ((aes_mode >= 0) && (aes_mode <= 1) ##2 (op_mode == 2) ##1 (next_state == 4) ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) ((next_state == 4) ##2 (next_state == 4) ##2 1) |-> (next_state >= 0) && (next_state <= 4));
assert property(@(posedge clk) ((op_mode == 2) && key_init ##1 (next_state == 4) ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) ((op_mode == 2) && start ##1 (next_state == 4) ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##3 (aes_mode >= 1) && (aes_mode <= 2)) |-> (next_state >= 0) && (next_state <= 4));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##3 mode_cbc) |-> (next_state >= 0) && (next_state <= 4));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##3 (aes_mode == 1)) |-> (next_state >= 0) && (next_state <= 4));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##2 (next_state == 1) ##1 1) |-> (next_state >= 0) && (next_state <= 4));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##2 (operation_mode == 0) ##1 1) |-> (next_state >= 0) && (next_state <= 4));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##2 (aes_mode == 2) ##1 1) |-> (next_state >= 0) && (next_state <= 4));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##2 mode_ctr ##1 1) |-> (next_state >= 0) && (next_state <= 4));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##2 (op_mode == 0) ##1 1) |-> (next_state >= 0) && (next_state <= 4));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##2 (operation_mode == 1) ##1 !disable_core) |-> (next_state >= 0) && (next_state <= 4));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##2 (operation_mode == 1) ##1 encrypt_decrypt) |-> (next_state >= 0) && (next_state <= 4));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##2 (operation_mode == 1) ##1 enc_dec) |-> (next_state >= 0) && (next_state <= 4));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 (aes_mode >= 0) && (aes_mode <= 2) ##1 (operation_mode == 1) ##1 1) |-> (next_state >= 0) && (next_state <= 4));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) && disable_core ##2 (operation_mode == 1) ##1 1) |-> (next_state >= 0) && (next_state <= 4));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) && mode_cbc ##3 1) |-> (next_state >= 0) && (next_state <= 4));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 !disable_core ##2 1) |-> (next_state >= 0) && (next_state <= 4));
assert property(@(posedge clk) ((next_state == 4) ##1 (aes_mode == 1) && (next_state == 4) ##3 1) |-> (next_state >= 0) && (next_state <= 4));
assert property(@(posedge clk) ((next_state == 4) ##1 (next_state == 4) ##1 (aes_mode == 0) ##2 1) |-> (next_state >= 0) && (next_state <= 4));
assert property(@(posedge clk) (!encrypt_decrypt ##1 (op_mode == 2) ##1 (next_state == 4) ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) (!enc_dec ##1 (op_mode == 2) ##1 (next_state == 4) ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) ((op_mode >= 2) && (op_mode <= 3) ##1 (op_mode == 2) ##1 (next_state == 4) ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) (!encrypt_decrypt ##2 (op_mode == 2) ##1 (next_state == 4) ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) (!enc_dec ##2 (op_mode == 2) ##1 (next_state == 4) ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) ((next_state == 4)) |-> first_round);
assert property(@(posedge clk) ((next_state == 4)) |-> (col_sel == 2));
assert property(@(posedge clk) (!disable_core && (next_state == 4) ##1 (next_state == 4) ##2 (operation_mode == 1) ##1 1) |-> (next_state >= 0) && (next_state <= 4));
assert property(@(posedge clk) ((next_state == 4) && mode_cbc ##1 (next_state == 4) ##3 1) |-> (next_state >= 0) && (next_state <= 4));
assert property(@(posedge clk) ((aes_mode == 1) && (next_state == 4) ##1 (next_state == 4) ##3 1) |-> (next_state >= 0) && (next_state <= 4));
assert property(@(posedge clk) ((op_mode >= 2) && (op_mode <= 3) ##2 (op_mode == 2) ##1 (next_state == 4) ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) ((next_state == 4) ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((next_state == 4) ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((next_state == 4) ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((next_state == 4) ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((next_state == 4) ##3 1) |-> first_round);
assert property(@(posedge clk) ((next_state == 4) ##2 1) |-> first_round);
assert property(@(posedge clk) ((next_state == 4) ##1 1) |-> first_round);
assert property(@(posedge clk) ((next_state == 4) ##4 1) |-> first_round);
assert property(@(posedge clk) ((col_sel == 0) ##1 1) |-> (next_state >= 0) && (next_state <= 4));
assert property(@(posedge clk) ((col_sel == 0)) |-> (next_state >= 0) && (next_state <= 4));
assert property(@(posedge clk) (!first_round) |-> (next_state >= 0) && (next_state <= 4));
assert property(@(posedge clk) (!first_round ##1 1) |-> (next_state >= 0) && (next_state <= 4));
assert property(@(posedge clk) (!first_round ##2 1) |-> (next_state >= 0) && (next_state <= 4));
assert property(@(posedge clk) (!first_round ##4 1) |-> (next_state >= 0) && (next_state <= 4));
assert property(@(posedge clk) (rst_n ##1 1) |-> (next_state >= 0) && (next_state <= 4));
assert property(@(posedge clk) (rst_n ##2 1) |-> (next_state >= 0) && (next_state <= 4));
assert property(@(posedge clk) (rst_n ##4 1) |-> (next_state >= 0) && (next_state <= 4));
assert property(@(posedge clk) ((col_sel == 0) ##4 1) |-> (next_state >= 0) && (next_state <= 4));
assert property(@(posedge clk) (rst_n) |-> (next_state >= 0) && (next_state <= 4));
assert property(@(posedge clk) ((col_sel == 0) ##2 1) |-> (next_state >= 0) && (next_state <= 4));
assert property(@(posedge clk) ((aes_mode >= 2) && (aes_mode <= 3) ##1 !mode_cbc ##1 (next_state == 4) ##1 (next_state == 4)) |-> (aes_mode >= 0) && (aes_mode <= 1));
assert property(@(posedge clk) ((next_state == 11) ##1 (op_mode == 2) ##1 (next_state == 4) ##1 1) |-> (next_state >= 0) && (next_state <= 1));
assert property(@(posedge clk) (!first_round ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((col_sel == 0) ##3 1) |-> first_round);
assert property(@(posedge clk) ((col_sel == 0) ##4 1) |-> first_round);
assert property(@(posedge clk) (rst_n ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!first_round ##2 1) |-> first_round);
assert property(@(posedge clk) (!first_round ##3 1) |-> first_round);
assert property(@(posedge clk) (!first_round ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) (!first_round ##4 1) |-> first_round);
assert property(@(posedge clk) (!first_round ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) (rst_n ##1 1) |-> first_round);
assert property(@(posedge clk) (rst_n ##2 1) |-> first_round);
assert property(@(posedge clk) ((col_sel == 0) ##1 1) |-> first_round);
assert property(@(posedge clk) ((col_sel == 0) ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((col_sel == 0) ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((col_sel == 0) ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((col_sel == 0) ##1 1) |-> (col_sel == 2));
assert property(@(posedge clk) ((col_sel == 0) ##2 1) |-> first_round);
assert property(@(posedge clk) (!first_round ##1 1) |-> first_round);
assert property(@(posedge clk) (rst_n ##2 1) |-> (col_sel == 2));
assert property(@(posedge clk) (rst_n ##3 1) |-> (col_sel == 2));
assert property(@(posedge clk) (rst_n ##4 1) |-> (col_sel == 2));
assert property(@(posedge clk) (rst_n ##3 1) |-> first_round);
assert property(@(posedge clk) (rst_n ##4 1) |-> first_round);
assert property(@(posedge clk) (!first_round ##4 1) |-> (col_sel == 2));

property a1_gold;
	@(posedge clk) (start == 0) |-> (key_init == 0);
endproperty
assert_a1_gold: assert property(a1_gold);

property a0_gold;
	@(posedge clk) (start == 1) |-> (key_init == 1);
endproperty
assert_a0_gold: assert property(a0_gold);

property a2_gold;
	@(posedge clk) (aes_mode[0] == 0) |-> (mode_cbc == 0);
endproperty
assert_a2_gold: assert property(a2_gold);

property a3_gold;
	@(posedge clk) (aes_mode[0] == 1) |-> (mode_ctr == 0);
endproperty
assert_a3_gold: assert property(a3_gold);

endmodule
