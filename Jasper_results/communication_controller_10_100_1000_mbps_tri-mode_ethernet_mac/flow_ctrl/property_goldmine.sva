module i_flow_ctrl(
input           xon_cpu             ,
input             xon_cpu_dl1             ,
input           Clk                 ,
input           Reset               ,
input             tx_pause_en_dl1         ,
input           tx_pause_en         ,
input             pause_quanta_val_dl2    ,
input           xoff_cpu            ,
input           pause_quanta_val    ,
input           xon_gen_complete    ,
input           xoff_gen_complete   ,
input             pause_apply             ,
input [15:0]      pause_quanta_dl1        ,
input             xoff_gen                ,
input             pause_quanta_val_dl1    ,
input             tx_pause_en_dl2         ,
input             xoff_cpu_dl1            ,
input             xoff_cpu_dl2            ,
input [15:0]      pause_quanta_counter    ,
input             xon_cpu_dl2             ,
input             xon_gen                 ,
input   [15:0]  pause_quanta        ,
input           pause_quanta_sub
);


property a0;
@(posedge Clk) (xoff_gen_complete == 1) |=> (xoff_gen == 0);
endproperty
assert_a0: assert property(a0);

property a1;
@(posedge Clk) (xoff_gen_complete == 0 & xoff_cpu_dl1 == 1 & xoff_cpu_dl2 == 0) |=> (xoff_gen == 1);
endproperty
assert_a1: assert property(a1);

property a3;
@(posedge Clk) (xon_gen_complete == 1) |=> (xon_gen == 0);
endproperty
assert_a3: assert property(a3);

property a4;
@(posedge Clk) (xon_gen_complete == 0 & xon_cpu_dl1 == 1 & xon_cpu_dl2 == 0) |=> (xon_gen == 1);
endproperty
assert_a4: assert property(a4);

endmodule
