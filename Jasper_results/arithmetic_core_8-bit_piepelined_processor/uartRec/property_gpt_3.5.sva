`include "defines.v"
module i_uartRec(
		input [7:0] bReg, bNext,		// data recieved in this..
		// recvd data input
		input [1:0] stateReg, stateNext,	// current and next states
		input rxDoneTick,
		input [3:0] sReg, sNext,		//	counter
		input clk, reset, sTick, rx,
		input [`dataBits-1:0] dOut,
		input [2:0] nReg,
		input [2:0] nNext		// counter
);

assert property(@(posedge clk) (rx & sTick & sReg == 7) |-> (sNext == 0);
assert property(@(posedge clk) (rx & sTick & sReg == 15) |-> (sNext == 0);
assert property(@(posedge clk) (rx & sTick & sReg == 15) |-> (bNext == {rx, bReg[7:1]});
assert property(@(posedge clk) (rx & sTick & sReg == 15 & nReg == (dataBits-1)) |-> (stateNext == stop);
assert property(@(posedge clk) (rx & sTick & sReg == (sbTick-1)) |-> (stateNext == idle);
endmodule