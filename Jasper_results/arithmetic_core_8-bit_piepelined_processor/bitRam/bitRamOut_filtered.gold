property a22;
@(posedge clk) (bitRamRw == 0) ##1 (bitRamAddr[3] == 1 & bitRamAddr[4] == 1 & bitRamAddr[2] == 0) |-> (bitRamOut == 1);
endproperty
assert_a22: assert property(a22);

property a10;
@(posedge clk) (bitRamRw == 0) ##1 (bitRamAddr[5] == 1 & bitRamAddr[3] == 0 & bitRamAddr[1] == 0) |-> (bitRamOut == 0);
endproperty
assert_a10: assert property(a10);

property a14;
@(posedge clk) (bitRamRw == 0) ##1 (bitRamAddr[1] == 1 & bitRamAddr[2] == 0 & bitRamAddr[0] == 0 & bitRamAddr[3] == 0) |-> (bitRamOut == 0);
endproperty
assert_a14: assert property(a14);

property a16;
@(posedge clk) (bitRamRw == 1) ##1 (bitRamAddr[1] == 1 & bitRamAddr[2] == 1 & bitRamAddr[0] == 1 & bitRamAddr[5] == 1 & bitRamAddr[3] == 0) |-> (bitRamOut == 1);
endproperty
assert_a16: assert property(a16);

property a13;
@(posedge clk) (bitRamRw == 0) ##1 (bitRamAddr[2] == 1 & bitRamAddr[1] == 0 & bitRamAddr[0] == 1 & bitRamAddr[4] == 0 & bitRamAddr[3] == 0) |-> (bitRamOut == 0);
endproperty
assert_a13: assert property(a13);

property a20;
@(posedge clk) (bitRamAddr[4] == 0 & bitRamAddr[2] == 0 & bitRamAddr[3] == 0 & bitRamAddr[5] == 0) |-> (bitRamOut == 1);
endproperty
assert_a20: assert property(a20);

property a17;
@(posedge clk) (bitRamAddr[2] == 0 & bitRamAddr[1] == 0 & bitRamAddr[3] == 0 & bitRamAddr[5] == 0) |-> (bitRamOut == 1);
endproperty
assert_a17: assert property(a17);

property a19;
@(posedge clk) (bitRamAddr[3] == 1 & bitRamAddr[1] == 1 & bitRamAddr[2] == 1 & bitRamAddr[0] == 1 & bitRamAddr[4] == 1 & bitRamAddr[5] == 1) |-> (bitRamOut == 1);
endproperty
assert_a19: assert property(a19);

property a9;
@(posedge clk) (bitRamAddr[0] == 0 & bitRamAddr[4] == 1 & bitRamAddr[1] == 0 & bitRamAddr[3] == 1 & bitRamAddr[2] == 0) |-> (bitRamOut == 0);
endproperty
assert_a9: assert property(a9);

property a21;
@(posedge clk) (bitRamRw == 1) ##1 (bitRamAddr[3] == 1 & bitRamIn == 0 & bitRamAddr[1] == 1 & bitRamAddr[0] == 0 & bitRamAddr[2] == 1) |-> (bitRamOut == 1);
endproperty
assert_a21: assert property(a21);

property a23;
@(posedge clk) (bitRamRw == 1) ##1 (bitRamAddr[3] == 1 & bitRamIn == 0 & bitRamAddr[1] == 1 & bitRamAddr[0] == 0 & bitRamAddr[4] == 0) |-> (bitRamOut == 1);
endproperty
assert_a23: assert property(a23);

property a25;
@(posedge clk) (bitRamRw == 0) ##1 (bitRamAddr[4] == 0 & bitRamAddr[0] == 0 & bitRamIn == 0 & bitRamAddr[1] == 0 & bitRamAddr[2] == 1) |-> (bitRamOut == 1);
endproperty
assert_a25: assert property(a25);

property a29;
@(posedge clk) (bitRamRw == 1) ##1 (bitRamAddr[3] == 1 & bitRamIn == 0 & bitRamAddr[1] == 1 & bitRamAddr[4] == 1 & bitRamAddr[5] == 1) |-> (bitRamOut == 1);
endproperty
assert_a29: assert property(a29);

property a32;
@(posedge clk) (bitRamRw == 0) ##1 (bitRamAddr[3] == 1 & bitRamAddr[4] == 1 & bitRamAddr[1] == 1 & bitRamIn == 0 & bitRamAddr[5] == 0) |-> (bitRamOut == 1);
endproperty
assert_a32: assert property(a32);

property a11;
@(posedge clk) (bitRamRw == 1) ##1 (bitRamAddr[2] == 1 & bitRamAddr[1] == 0 & bitRamIn == 1 & bitRamAddr[4] == 1 & bitRamAddr[0] == 1) |-> (bitRamOut == 0);
endproperty
assert_a11: assert property(a11);

property a6;
@(posedge clk) (bitRamRw == 1) ##1 (bitRamAddr[0] == 0 & bitRamAddr[4] == 1 & bitRamAddr[2] == 0 & bitRamIn == 0 & bitRamAddr[3] == 0) |-> (bitRamOut == 0);
endproperty
assert_a6: assert property(a6);

property a8;
@(posedge clk) (bitRamRw == 1) ##1 (bitRamAddr[5] == 0 & bitRamIn == 0 & bitRamAddr[4] == 0 & bitRamAddr[3] == 1 & bitRamAddr[0] == 1) |-> (bitRamOut == 0);
endproperty
assert_a8: assert property(a8);

property a24;
@(posedge clk) (bitRamRw == 0) ##1 (bitRamAddr[3] == 1 & bitRamAddr[4] == 1 & bitRamIn == 1 & bitRamAddr[0] == 1) |-> (bitRamOut == 1);
endproperty
assert_a24: assert property(a24);

property a27;
@(posedge clk) (bitRamRw == 0) ##1 (bitRamAddr[3] == 1 & bitRamIn == 0 & bitRamAddr[5] == 1 & bitRamAddr[0] == 1) |-> (bitRamOut == 1);
endproperty
assert_a27: assert property(a27);

property a33;
@(posedge clk) (bitRamRw == 0) ##1 (bitRamAddr[3] == 1 & bitRamAddr[5] == 1 & bitRamAddr[4] == 1 & bitRamIn == 1) |-> (bitRamOut == 1);
endproperty
assert_a33: assert property(a33);

property a15;
@(posedge clk) (bitRamRw == 1) ##1 (bitRamAddr[1] == 1 & bitRamAddr[2] == 1 & bitRamAddr[0] == 1 & bitRamIn == 0) |-> (bitRamOut == 1);
endproperty
assert_a15: assert property(a15);

property a12;
@(posedge clk) (bitRamRw == 0) ##1 (bitRamAddr[1] == 1 & bitRamIn == 1 & bitRamAddr[3] == 1 & bitRamAddr[4] == 0) |-> (bitRamOut == 0);
endproperty
assert_a12: assert property(a12);

property a1;
@(posedge clk) (bitRamRw == 0) ##1 (bitRamAddr[1] == 0 & bitRamAddr[2] == 1 & bitRamIn == 1 & bitRamAddr[0] == 0) |-> (bitRamOut == 0);
endproperty
assert_a1: assert property(a1);

property a0;
@(posedge clk) (bitRamRw == 0) ##1 (bitRamAddr[1] == 0 & bitRamAddr[2] == 1 & bitRamIn == 1 & bitRamAddr[3] == 0) |-> (bitRamOut == 0);
endproperty
assert_a0: assert property(a0);

property a28;
@(posedge clk) (bitRamAddr[4] == 0 & bitRamAddr[0] == 0 & bitRamIn == 0 & bitRamAddr[5] == 1 & bitRamAddr[1] == 0 & bitRamAddr[2] == 1 & bitRamAddr[3] == 0) |-> (bitRamOut == 1);
endproperty
assert_a28: assert property(a28);

property a30;
@(posedge clk) (bitRamAddr[3] == 1 & bitRamIn == 0 & bitRamAddr[5] == 1 & bitRamAddr[0] == 1 & bitRamAddr[1] == 0 & bitRamAddr[4] == 0) |-> (bitRamOut == 1);
endproperty
assert_a30: assert property(a30);

property a3;
@(posedge clk) (bitRamRw == 0) ##1 (bitRamAddr[5] == 1 & bitRamIn == 1 & bitRamAddr[1] == 0) |-> (bitRamOut == 0);
endproperty
assert_a3: assert property(a3);

property a5;
@(posedge clk) (bitRamRw == 0) ##1 (bitRamAddr[5] == 1 & bitRamIn == 1 & bitRamAddr[2] == 0) |-> (bitRamOut == 0);
endproperty
assert_a5: assert property(a5);

property a26;
@(posedge clk) (bitRamAddr[4] == 0 & bitRamAddr[0] == 0 & bitRamAddr[2] == 0 & bitRamAddr[3] == 0 & bitRamIn == 1) |-> (bitRamOut == 1);
endproperty
assert_a26: assert property(a26);

property a31;
@(posedge clk) (bitRamAddr[1] == 1 & bitRamAddr[2] == 1 & bitRamAddr[5] == 0 & bitRamAddr[4] == 0 & bitRamIn == 1) |-> (bitRamOut == 1);
endproperty
assert_a31: assert property(a31);

property a18;
@(posedge clk) (bitRamAddr[3] == 1 & bitRamAddr[1] == 1 & bitRamIn == 0 & bitRamAddr[4] == 1 & bitRamAddr[0] == 1) |-> (bitRamOut == 1);
endproperty
assert_a18: assert property(a18);

property a2;
@(posedge clk) (bitRamAddr[1] == 0 & bitRamAddr[2] == 1 & bitRamIn == 1 & bitRamAddr[3] == 0 & bitRamAddr[0] == 0) |-> (bitRamOut == 0);
endproperty
assert_a2: assert property(a2);

property a4;
@(posedge clk) (bitRamAddr[1] == 0 & bitRamAddr[2] == 1 & bitRamIn == 1 & bitRamAddr[3] == 0 & bitRamAddr[4] == 1) |-> (bitRamOut == 0);
endproperty
assert_a4: assert property(a4);

property a7;
@(posedge clk) (bitRamAddr[1] == 0 & bitRamAddr[2] == 1 & bitRamIn == 1 & bitRamAddr[0] == 0 & bitRamAddr[4] == 0) |-> (bitRamOut == 0);
endproperty
assert_a7: assert property(a7);

