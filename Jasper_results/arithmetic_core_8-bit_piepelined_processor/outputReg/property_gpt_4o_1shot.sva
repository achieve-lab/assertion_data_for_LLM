`include "defines.v"

module i_outputReg(
input reset, outputRw,
        input [`outputAddrLen-1:0] outputRwAddr,
        input outputWriteIn,
        input DEFAULT_CLOCK,
        input outputReadOut,
        input  [`outputNumber-1:0] outputs,
        
        input [`outputNumber-1 :0] outputReg 
        
);

assert property(@(posedge clk) (reset) |-> (outputReadOut == 1'bz));
assert property(@(posedge clk) (!reset & outputRw) |-> (outputReadOut == outputReg[outputRwAddr]));
assert property(@(posedge clk) (!reset & !outputRw) |-> (outputReg[outputRwAddr] == outputWriteIn));
assert property(@(posedge clk) (!reset & !outputRw) |-> (outputReadOut == 1'bz));
assert property(@(posedge clk) (outputReg[outputRwAddr] == outputWriteIn) |-> (!outputRw));
assert property(@(posedge clk) (outputReadOut == outputReg[outputRwAddr]) |-> (outputRw));
assert property(@(posedge clk) (outputs == outputReg) |-> (!reset));
endmodule