`include "defines.v"

module i_bitNegator(
	input bitIn, bitN,
	input bitOut,
	input DEFAULT_CLOCK,
	input DEFAULT_RESET
);


assert property(@(posedge DEFAULT_CLOCK) (bitIn) |-> bitIn);
assert property(@(posedge DEFAULT_CLOCK) (bitIn) |-> bitIn);
assert property(@(posedge DEFAULT_CLOCK) (bitN) |-> bitN);
assert property(@(posedge DEFAULT_CLOCK) (bitN) |-> bitN);
assert property(@(posedge DEFAULT_CLOCK) (bitOut) |-> bitOut);
assert property(@(posedge DEFAULT_CLOCK) (bitOut) |-> bitOut);
assert property(@(posedge DEFAULT_CLOCK) (bitIn && bitOut ##1 bitN ##1 bitOut ##1 !bitN && !bitOut ##1 !bitIn) |-> bitOut);
assert property(@(posedge DEFAULT_CLOCK) (bitIn && bitOut ##1 bitN ##1 bitOut ##1 !bitIn && !bitN ##1 !bitIn) |-> bitOut);
assert property(@(posedge DEFAULT_CLOCK) (bitIn && bitOut ##1 bitN ##1 bitOut ##1 !bitIn && !bitN ##1 !bitIn) |-> bitOut);
assert property(@(posedge DEFAULT_CLOCK) (bitIn && bitOut ##1 bitN ##1 bitOut ##1 !bitN && !bitOut ##1 !bitIn) |-> bitOut);
assert property(@(posedge DEFAULT_CLOCK) (bitIn && bitOut ##1 bitN ##1 bitOut ##1 !bitN && !bitOut ##1 !bitIn) |-> bitOut);
assert property(@(posedge DEFAULT_CLOCK) (bitIn && bitOut ##1 bitN ##1 bitOut ##1 !bitIn && !bitN ##1 !bitIn) |-> bitOut);
assert property(@(posedge DEFAULT_CLOCK) (bitIn && bitOut ##1 bitN ##1 bitOut ##1 !bitIn && !bitN ##1 !bitIn) |-> bitOut);
assert property(@(posedge DEFAULT_CLOCK) (bitIn && bitOut ##1 bitN ##1 bitOut ##1 !bitN && !bitOut ##1 !bitIn) |-> bitOut);
assert property(@(posedge DEFAULT_CLOCK) (!bitIn && bitOut ##1 bitN ##1 !bitIn && bitOut ##1 !bitN && bitOut ##1 !bitOut) |-> bitN);
assert property(@(posedge DEFAULT_CLOCK) (!bitIn && bitOut ##1 bitN ##1 !bitIn && bitOut ##1 !bitN && bitOut ##1 !bitOut) |-> bitN);
assert property(@(posedge DEFAULT_CLOCK) (!bitIn && bitOut ##1 bitN ##1 !bitIn && bitOut ##1 !bitN && bitOut ##1 !bitOut) |-> bitN);
assert property(@(posedge DEFAULT_CLOCK) (!bitIn && bitOut ##1 bitN ##1 !bitIn && bitOut ##1 !bitN && bitOut ##1 !bitOut) |-> bitN);
assert property(@(posedge DEFAULT_CLOCK) (!bitIn && bitOut ##1 !bitOut && bitN ##1 !bitIn ##1 !bitN && bitOut ##1 1) |-> bitN);
assert property(@(posedge DEFAULT_CLOCK) (!bitIn && bitOut ##1 !bitOut && bitN ##1 !bitIn ##1 !bitN && bitOut ##1 1) |-> bitN);
assert property(@(posedge DEFAULT_CLOCK) (!bitIn && bitOut ##1 bitIn && bitN ##1 !bitIn ##1 !bitN && bitOut ##1 1) |-> bitN);
assert property(@(posedge DEFAULT_CLOCK) (!bitIn && bitOut ##1 bitIn && bitN ##1 !bitIn ##1 !bitN && bitOut ##1 1) |-> bitN);
assert property(@(posedge DEFAULT_CLOCK) (!bitIn && bitOut ##1 bitIn && bitN ##1 !bitIn ##1 !bitN && bitOut ##1 1) |-> bitN);
assert property(@(posedge DEFAULT_CLOCK) (!bitIn && bitOut ##1 !bitOut && bitN ##1 !bitIn ##1 !bitN && bitOut ##1 1) |-> bitN);
assert property(@(posedge DEFAULT_CLOCK) (!bitIn && bitOut ##1 !bitOut && bitN ##1 !bitIn ##1 !bitN && bitOut ##1 1) |-> bitN);
assert property(@(posedge DEFAULT_CLOCK) (!bitIn && bitOut ##1 bitIn && bitN ##1 !bitIn ##1 !bitN && bitOut ##1 1) |-> bitN);
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##1 1) |-> bitOut);
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##4 1) |-> bitOut);
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##1 1) |-> bitOut);
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##4 1) |-> bitOut);
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##2 1) |-> bitN);
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##3 1) |-> bitN);
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##4 1) |-> bitN);
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##4 1) |-> bitN);
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##2 1) |-> bitN);
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##3 1) |-> bitN);
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##1 1) |-> bitIn);
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##3 1) |-> bitIn);
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##2 1) |-> bitIn);
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##1 1) |-> bitIn);
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##3 1) |-> bitIn);
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##2 1) |-> bitIn);
assert property(@(posedge DEFAULT_CLOCK) (!bitIn ##1 bitIn ##1 !bitIn && bitN ##1 !bitOut && bitN ##1 bitN) |-> bitIn);
assert property(@(posedge DEFAULT_CLOCK) (!bitIn ##1 bitIn ##1 !bitIn && bitN ##1 !bitOut && bitN ##1 bitN) |-> bitIn);
assert property(@(posedge DEFAULT_CLOCK) (!bitIn ##1 bitIn ##1 bitN && bitOut ##1 !bitOut && bitN ##1 bitN) |-> bitIn);
assert property(@(posedge DEFAULT_CLOCK) (!bitIn ##1 bitIn ##1 bitN && bitOut ##1 !bitOut && bitN ##1 bitN) |-> bitIn);
assert property(@(posedge DEFAULT_CLOCK) (!bitIn ##1 bitIn ##1 !bitIn && bitN ##1 !bitOut && bitN ##1 bitN) |-> bitIn);
assert property(@(posedge DEFAULT_CLOCK) (!bitIn ##1 bitIn ##1 !bitIn && bitN ##1 !bitOut && bitN ##1 bitN) |-> bitIn);
assert property(@(posedge DEFAULT_CLOCK) (!bitIn ##1 bitIn ##1 bitN && bitOut ##1 !bitOut && bitN ##1 bitN) |-> bitIn);
assert property(@(posedge DEFAULT_CLOCK) (!bitIn ##1 bitIn ##1 bitN && bitOut ##1 !bitOut && bitN ##1 bitN) |-> bitIn);

endmodule
