parameter DATA_WIDTH = 8;

module i_dff_3_pipe(
    input [DATA_WIDTH-1:0] q0,
    input [DATA_WIDTH-1:0] q2,
    input [DATA_WIDTH-1:0] d0,
    input [DATA_WIDTH-1:0] d2,
    input [DATA_WIDTH-1:0] q1,
    input [DATA_WIDTH-1:0] d1,
    input clk,
    input rst_n
);

assert property(@(posedge clk) (rst_n == 0) |-> (q0 == 0));
assert property(@(posedge clk) (rst_n == 0) |-> (q1 == 0));
assert property(@(posedge clk) (rst_n == 0) |-> (q2 == 0));
assert property(@(posedge clk) (rst_n == 1) ##1 (q0 == d0));
assert property(@(posedge clk) (rst_n == 1) ##1 (q1 == d1));
assert property(@(posedge clk) (rst_n == 1) ##1 (q2 == d2));
endmodule