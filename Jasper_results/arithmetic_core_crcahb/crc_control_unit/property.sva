module i_crc_control_unit(
 input byte_en,
 input [1:0] byte_sel,
input [2:0] state_byte,
 input [1:0] size_in,
 input read_wait,
 input write,
 input bypass_size,
 input rst_n,
 input clk,
input [2:0] state_reset,
 input clear_crc_init_sel,
input [2:0] next_state_reset,
 input reset_pending,
input [1:0] next_state_full,
 input reset_chain,
 input set_crc_init_sel,
 input buffer_full,
input [1:0] state_full,
input last_byte,
 input bypass_byte0,
 input crc_out_en,
input has_data,
input [2:0] next_state_byte
);

assert property(@(posedge clk) ((state_byte == 4)) |-> bypass_byte0);
assert property(@(posedge clk) ((next_state_reset == 0) ##1 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((byte_sel == 0) ##1 1) |-> bypass_byte0);
assert property(@(posedge clk) ((next_state_byte >= 0) && (next_state_byte <= 4) ##1 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!byte_en ##1 1) |-> bypass_byte0);
assert property(@(posedge clk) ((next_state_full >= 0) && (next_state_full <= 1) ##1 1) |-> bypass_byte0);
assert property(@(posedge clk) (clk ##1 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!crc_out_en ##1 1) |-> bypass_byte0);
assert property(@(posedge clk) (!read_wait ##1 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!set_crc_init_sel ##1 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!rst_n) |-> (state_byte == 4));
assert property(@(posedge clk) (!has_data ##1 1) |-> bypass_byte0);
assert property(@(posedge clk) (bypass_byte0) |-> (state_byte == 4));
assert property(@(posedge clk) (!bypass_size ##1 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!last_byte ##1 1) |-> bypass_byte0);
assert property(@(posedge clk) (!bypass_size ##1 1) |-> bypass_byte0);
assert property(@(posedge clk) ((size_in >= 0) && (size_in <= 3) ##1 1) |-> bypass_byte0);
assert property(@(posedge clk) ((state_full == 0) ##1 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!reset_pending ##1 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!crc_out_en ##1 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!read_wait ##1 1) |-> bypass_byte0);
assert property(@(posedge clk) ((next_state_byte >= 0) && (next_state_byte <= 4) ##1 1) |-> bypass_byte0);
assert property(@(posedge clk) (!buffer_full ##1 1) |-> bypass_byte0);
assert property(@(posedge clk) (!set_crc_init_sel ##1 1) |-> bypass_byte0);
assert property(@(posedge clk) (!reset_pending ##1 1) |-> bypass_byte0);
assert property(@(posedge clk) ((state_full == 0) ##1 1) |-> bypass_byte0);
assert property(@(posedge clk) (!rst_n) |-> bypass_byte0);
assert property(@(posedge clk) ((state_byte >= 0) && (state_byte <= 4) ##1 1) |-> bypass_byte0);
assert property(@(posedge clk) (!last_byte ##1 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((state_reset == 0) ##1 1) |-> (state_byte == 4));
assert property(@(posedge clk) (clk ##1 1) |-> bypass_byte0);
assert property(@(posedge clk) ((state_byte >= 0) && (state_byte <= 4) ##1 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((size_in >= 0) && (size_in <= 3) ##1 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((state_reset == 0) ##1 1) |-> bypass_byte0);
assert property(@(posedge clk) ((next_state_reset == 0) ##1 1) |-> bypass_byte0);
assert property(@(posedge clk) ((next_state_full >= 0) && (next_state_full <= 1) ##1 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!byte_en ##1 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((byte_sel == 0) ##1 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!buffer_full ##1 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!has_data ##1 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!last_byte ##2 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!set_crc_init_sel ##2 1) |-> bypass_byte0);
assert property(@(posedge clk) (!byte_en ##2 1) |-> bypass_byte0);
assert property(@(posedge clk) ((next_state_full >= 0) && (next_state_full <= 1) ##2 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!read_wait ##2 1) |-> bypass_byte0);
assert property(@(posedge clk) (!last_byte ##2 1) |-> bypass_byte0);
assert property(@(posedge clk) (clk ##2 1) |-> bypass_byte0);
assert property(@(posedge clk) (!read_wait ##2 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((state_byte >= 0) && (state_byte <= 4) ##2 1) |-> bypass_byte0);
assert property(@(posedge clk) (bypass_byte0 ##1 1) |-> bypass_byte0);
assert property(@(posedge clk) (!byte_en ##2 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!rst_n ##1 1) |-> bypass_byte0);
assert property(@(posedge clk) ((state_reset == 0) ##2 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((size_in >= 0) && (size_in <= 3) ##2 1) |-> bypass_byte0);
assert property(@(posedge clk) ((state_byte == 4) ##1 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!has_data ##2 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((next_state_reset == 0) ##2 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!crc_out_en ##2 1) |-> bypass_byte0);
assert property(@(posedge clk) ((state_byte >= 0) && (state_byte <= 4) ##2 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((next_state_full >= 0) && (next_state_full <= 1) ##2 1) |-> bypass_byte0);
assert property(@(posedge clk) (!bypass_size ##2 1) |-> bypass_byte0);
assert property(@(posedge clk) ((size_in >= 0) && (size_in <= 3) ##2 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!crc_out_en ##2 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((next_state_byte >= 0) && (next_state_byte <= 4) ##2 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((byte_sel == 0) ##2 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!buffer_full ##2 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!bypass_size ##2 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((next_state_byte >= 0) && (next_state_byte <= 4) ##2 1) |-> bypass_byte0);
assert property(@(posedge clk) (!rst_n ##1 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!set_crc_init_sel ##2 1) |-> (state_byte == 4));
assert property(@(posedge clk) (bypass_byte0 ##1 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!buffer_full ##2 1) |-> bypass_byte0);
assert property(@(posedge clk) ((next_state_reset == 0) ##2 1) |-> bypass_byte0);
assert property(@(posedge clk) (!has_data ##2 1) |-> bypass_byte0);
assert property(@(posedge clk) ((state_reset == 0) ##2 1) |-> bypass_byte0);
assert property(@(posedge clk) (!reset_pending ##2 1) |-> bypass_byte0);
assert property(@(posedge clk) (!reset_pending ##2 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((state_full == 0) ##2 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((state_full == 0) ##2 1) |-> bypass_byte0);
assert property(@(posedge clk) (clk ##2 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((state_byte == 4) ##1 1) |-> bypass_byte0);
assert property(@(posedge clk) ((byte_sel == 0) ##2 1) |-> bypass_byte0);
assert property(@(posedge clk) ((byte_sel == 0) ##3 1) |-> bypass_byte0);
assert property(@(posedge clk) ((state_byte == 4) ##2 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((next_state_byte >= 0) && (next_state_byte <= 4) ##3 1) |-> bypass_byte0);
assert property(@(posedge clk) ((size_in >= 0) && (size_in <= 3) ##3 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((state_reset == 0) ##3 1) |-> bypass_byte0);
assert property(@(posedge clk) (!last_byte ##3 1) |-> bypass_byte0);
assert property(@(posedge clk) (!rst_n ##2 1) |-> bypass_byte0);
assert property(@(posedge clk) (!reset_pending ##3 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((state_full == 0) ##3 1) |-> (state_byte == 4));
assert property(@(posedge clk) (clk ##3 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((next_state_full >= 0) && (next_state_full <= 1) ##3 1) |-> bypass_byte0);
assert property(@(posedge clk) (!has_data ##3 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!buffer_full ##3 1) |-> bypass_byte0);
assert property(@(posedge clk) ((next_state_byte >= 0) && (next_state_byte <= 4) ##3 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((byte_sel == 0) ##3 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!read_wait ##3 1) |-> bypass_byte0);
assert property(@(posedge clk) (!byte_en ##3 1) |-> bypass_byte0);
assert property(@(posedge clk) (!buffer_full ##3 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((state_byte >= 0) && (state_byte <= 4) ##3 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((next_state_reset == 0) ##3 1) |-> bypass_byte0);
assert property(@(posedge clk) ((state_byte >= 0) && (state_byte <= 4) ##3 1) |-> bypass_byte0);
assert property(@(posedge clk) (!read_wait ##3 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((next_state_full >= 0) && (next_state_full <= 1) ##3 1) |-> (state_byte == 4));
assert property(@(posedge clk) (bypass_byte0 ##2 1) |-> bypass_byte0);
assert property(@(posedge clk) (!set_crc_init_sel ##3 1) |-> bypass_byte0);
assert property(@(posedge clk) (!has_data ##3 1) |-> bypass_byte0);
assert property(@(posedge clk) ((state_byte == 4) ##2 1) |-> bypass_byte0);
assert property(@(posedge clk) (clk ##3 1) |-> bypass_byte0);
assert property(@(posedge clk) ((state_reset == 0) ##3 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!last_byte ##3 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((next_state_reset == 0) ##3 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((state_full == 0) ##3 1) |-> bypass_byte0);
assert property(@(posedge clk) (!byte_en ##3 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!bypass_size ##3 1) |-> bypass_byte0);
assert property(@(posedge clk) (bypass_byte0 ##2 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!crc_out_en ##3 1) |-> bypass_byte0);
assert property(@(posedge clk) (!set_crc_init_sel ##3 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!bypass_size ##3 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!crc_out_en ##3 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((size_in >= 0) && (size_in <= 3) ##3 1) |-> bypass_byte0);
assert property(@(posedge clk) (!rst_n ##2 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!reset_pending ##3 1) |-> bypass_byte0);
assert property(@(posedge clk) (!crc_out_en ##4 1) |-> bypass_byte0);
assert property(@(posedge clk) (clk ##4 1) |-> bypass_byte0);
assert property(@(posedge clk) ((state_byte >= 0) && (state_byte <= 4) ##4 1) |-> bypass_byte0);
assert property(@(posedge clk) ((next_state_reset == 0) ##4 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!read_wait ##4 1) |-> bypass_byte0);
assert property(@(posedge clk) (!set_crc_init_sel ##4 1) |-> bypass_byte0);
assert property(@(posedge clk) ((next_state_full >= 0) && (next_state_full <= 1) ##4 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((state_byte == 4) ##3 1) |-> bypass_byte0);
assert property(@(posedge clk) (!byte_en ##4 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!has_data ##4 1) |-> bypass_byte0);
assert property(@(posedge clk) ((byte_sel == 0) ##4 1) |-> (state_byte == 4));
assert property(@(posedge clk) (bypass_byte0 ##3 1) |-> bypass_byte0);
assert property(@(posedge clk) ((state_reset == 0) ##4 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((state_full == 0) ##4 1) |-> bypass_byte0);
assert property(@(posedge clk) (!buffer_full ##4 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!reset_pending ##4 1) |-> bypass_byte0);
assert property(@(posedge clk) ((state_byte == 4) ##3 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!has_data ##4 1) |-> (state_byte == 4));
assert property(@(posedge clk) (bypass_byte0 ##3 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((state_byte >= 0) && (state_byte <= 4) ##4 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!last_byte ##4 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!bypass_size ##4 1) |-> bypass_byte0);
assert property(@(posedge clk) (!buffer_full ##4 1) |-> bypass_byte0);
assert property(@(posedge clk) ((size_in >= 0) && (size_in <= 3) ##4 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((next_state_reset == 0) ##4 1) |-> bypass_byte0);
assert property(@(posedge clk) (!last_byte ##4 1) |-> bypass_byte0);
assert property(@(posedge clk) ((state_reset == 0) ##4 1) |-> bypass_byte0);
assert property(@(posedge clk) (!bypass_size ##4 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!set_crc_init_sel ##4 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((next_state_byte >= 0) && (next_state_byte <= 4) ##4 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((byte_sel == 0) ##4 1) |-> bypass_byte0);
assert property(@(posedge clk) ((size_in >= 0) && (size_in <= 3) ##4 1) |-> bypass_byte0);
assert property(@(posedge clk) (!crc_out_en ##4 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!rst_n ##3 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!byte_en ##4 1) |-> bypass_byte0);
assert property(@(posedge clk) ((next_state_full >= 0) && (next_state_full <= 1) ##4 1) |-> bypass_byte0);
assert property(@(posedge clk) (!read_wait ##4 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((next_state_byte >= 0) && (next_state_byte <= 4) ##4 1) |-> bypass_byte0);
assert property(@(posedge clk) (!rst_n ##3 1) |-> bypass_byte0);
assert property(@(posedge clk) (!reset_pending ##4 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((state_full == 0) ##4 1) |-> (state_byte == 4));
assert property(@(posedge clk) (clk ##4 1) |-> (state_byte == 4));
assert property(@(posedge clk) (bypass_byte0 ##4 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((state_byte == 4) ##4 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((state_byte == 4) ##4 1) |-> bypass_byte0);
assert property(@(posedge clk) (!rst_n ##4 1) |-> bypass_byte0);
assert property(@(posedge clk) (!rst_n ##4 1) |-> (state_byte == 4));
assert property(@(posedge clk) (bypass_byte0 ##4 1) |-> bypass_byte0);
assert property(@(posedge clk) ((size_in >= 1) && (size_in <= 3)) |-> bypass_byte0);
assert property(@(posedge clk) ((size_in >= 1) && (size_in <= 3)) |-> (state_byte == 4));
assert property(@(posedge clk) ((size_in >= 1) && (size_in <= 3) ##1 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((size_in >= 1) && (size_in <= 3) ##1 1) |-> bypass_byte0);
assert property(@(posedge clk) ((size_in >= 1) && (size_in <= 3) ##2 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((size_in >= 1) && (size_in <= 3) ##2 1) |-> bypass_byte0);
assert property(@(posedge clk) ((size_in >= 1) && (size_in <= 3) ##3 1) |-> bypass_byte0);
assert property(@(posedge clk) ((size_in >= 1) && (size_in <= 3) ##4 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((size_in >= 1) && (size_in <= 3) ##4 1) |-> bypass_byte0);
assert property(@(posedge clk) ((size_in >= 1) && (size_in <= 3) ##3 1) |-> (state_byte == 4));
assert property(@(posedge clk) (clear_crc_init_sel) |-> reset_chain);
assert property(@(posedge clk) (reset_chain) |-> clear_crc_init_sel);
assert property(@(posedge clk) ((next_state_full == 1)) |-> write);
assert property(@(posedge clk) (write) |-> (next_state_full == 1));
assert property(@(posedge clk) ((next_state_byte == 0) && (state_byte == 4)) |-> (next_state_full == 1));
assert property(@(posedge clk) ((next_state_byte == 0) && bypass_byte0) |-> (next_state_full == 1));
assert property(@(posedge clk) ((next_state_byte == 0) && (state_byte == 4)) |-> write);
assert property(@(posedge clk) (!rst_n && (next_state_byte == 0)) |-> write);
assert property(@(posedge clk) ((next_state_byte == 0) && bypass_byte0) |-> write);
assert property(@(posedge clk) (!rst_n && (next_state_byte == 0)) |-> (next_state_full == 1));
assert property(@(posedge clk) (write) |-> (next_state_byte == 0));
assert property(@(posedge clk) ((next_state_full == 1)) |-> (next_state_byte == 0));
assert property(@(posedge clk) (!write) |-> (next_state_full == 0));
assert property(@(posedge clk) (!write && (state_byte == 4)) |-> (next_state_byte == 4));
assert property(@(posedge clk) (!write && bypass_byte0) |-> (next_state_byte == 4));
assert property(@(posedge clk) (!rst_n && !write) |-> (next_state_byte == 4));
assert property(@(posedge clk) ((next_state_byte == 4)) |-> (next_state_full == 0));
assert property(@(posedge clk) ((size_in >= 2) && (size_in <= 3)) |-> (size_in >= 1) && (size_in <= 3));
assert property(@(posedge clk) (clear_crc_init_sel ##1 1) |-> (state_byte == 4));
assert property(@(posedge clk) (reset_chain ##3 1) |-> (state_byte == 4));
assert property(@(posedge clk) (reset_chain ##2 1) |-> (state_byte == 4));
assert property(@(posedge clk) (clear_crc_init_sel ##2 1) |-> (state_byte == 4));
assert property(@(posedge clk) (clear_crc_init_sel) |-> (state_byte == 4));
assert property(@(posedge clk) (reset_chain) |-> bypass_byte0);
assert property(@(posedge clk) (reset_chain ##1 1) |-> (state_byte == 4));
assert property(@(posedge clk) (reset_chain) |-> (state_byte == 4));
assert property(@(posedge clk) (clear_crc_init_sel ##3 1) |-> (state_byte == 4));
assert property(@(posedge clk) (clear_crc_init_sel ##3 1) |-> bypass_byte0);
assert property(@(posedge clk) (reset_chain ##2 1) |-> bypass_byte0);
assert property(@(posedge clk) (clear_crc_init_sel ##1 1) |-> bypass_byte0);
assert property(@(posedge clk) (reset_chain ##3 1) |-> bypass_byte0);
assert property(@(posedge clk) (clear_crc_init_sel) |-> bypass_byte0);
assert property(@(posedge clk) (clear_crc_init_sel ##2 1) |-> bypass_byte0);
assert property(@(posedge clk) (reset_chain ##1 1) |-> bypass_byte0);
assert property(@(posedge clk) (reset_chain ##4 1) |-> bypass_byte0);
assert property(@(posedge clk) (clear_crc_init_sel ##4 1) |-> (state_byte == 4));
assert property(@(posedge clk) (clear_crc_init_sel ##4 1) |-> bypass_byte0);
assert property(@(posedge clk) (reset_chain ##4 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((next_state_full == 1)) |-> bypass_byte0);
assert property(@(posedge clk) ((next_state_byte == 0) ##1 1) |-> (state_byte == 4));
assert property(@(posedge clk) (write) |-> (state_byte == 4));
assert property(@(posedge clk) ((next_state_byte == 0) ##1 1) |-> bypass_byte0);
assert property(@(posedge clk) ((next_state_full == 1)) |-> (state_byte == 4));
assert property(@(posedge clk) (write) |-> bypass_byte0);
assert property(@(posedge clk) ((next_state_full == 1) ##1 1) |-> bypass_byte0);
assert property(@(posedge clk) ((next_state_byte == 0) ##2 1) |-> bypass_byte0);
assert property(@(posedge clk) ((next_state_byte == 0) ##2 1) |-> (state_byte == 4));
assert property(@(posedge clk) (write ##1 1) |-> bypass_byte0);
assert property(@(posedge clk) ((next_state_full == 1) ##1 1) |-> (state_byte == 4));
assert property(@(posedge clk) (write ##1 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((next_state_full == 1) ##2 1) |-> (state_byte == 4));
assert property(@(posedge clk) (write ##2 1) |-> bypass_byte0);
assert property(@(posedge clk) ((next_state_byte == 0) ##4 1) |-> (state_byte == 4));
assert property(@(posedge clk) (write ##2 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((next_state_byte == 0) ##3 1) |-> bypass_byte0);
assert property(@(posedge clk) ((next_state_byte == 0) ##4 1) |-> bypass_byte0);
assert property(@(posedge clk) ((next_state_full == 1) ##2 1) |-> bypass_byte0);
assert property(@(posedge clk) ((next_state_byte == 0) ##3 1) |-> (state_byte == 4));
assert property(@(posedge clk) (write ##4 1) |-> (state_byte == 4));
assert property(@(posedge clk) (write ##3 1) |-> (state_byte == 4));
assert property(@(posedge clk) (write ##4 1) |-> bypass_byte0);
assert property(@(posedge clk) ((next_state_full == 1) ##4 1) |-> bypass_byte0);
assert property(@(posedge clk) ((next_state_full == 1) ##4 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((next_state_full == 1) ##3 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((next_state_full == 1) ##3 1) |-> bypass_byte0);
assert property(@(posedge clk) (write ##3 1) |-> bypass_byte0);
assert property(@(posedge clk) (!write ##1 1) |-> bypass_byte0);
assert property(@(posedge clk) (!write ##2 1) |-> bypass_byte0);
assert property(@(posedge clk) ((next_state_full == 0) ##1 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((next_state_full == 0) ##2 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!write ##3 1) |-> bypass_byte0);
assert property(@(posedge clk) (!write ##2 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((next_state_full == 0) ##3 1) |-> bypass_byte0);
assert property(@(posedge clk) ((next_state_full == 0) ##3 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((next_state_full == 0) ##1 1) |-> bypass_byte0);
assert property(@(posedge clk) (!write ##1 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!write ##3 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((next_state_full == 0) ##2 1) |-> bypass_byte0);
assert property(@(posedge clk) ((next_state_full == 0) ##4 1) |-> bypass_byte0);
assert property(@(posedge clk) ((next_state_byte == 4) ##3 1) |-> bypass_byte0);
assert property(@(posedge clk) ((next_state_byte == 4) ##1 1) |-> bypass_byte0);
assert property(@(posedge clk) ((next_state_byte == 4) ##3 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((next_state_byte == 4) ##2 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((next_state_byte == 4) ##1 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((next_state_byte == 4)) |-> (state_byte == 4));
assert property(@(posedge clk) ((next_state_byte == 4)) |-> bypass_byte0);
assert property(@(posedge clk) (!write ##4 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!write ##4 1) |-> bypass_byte0);
assert property(@(posedge clk) ((next_state_byte == 4) ##2 1) |-> bypass_byte0);
assert property(@(posedge clk) ((next_state_full == 0) ##4 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((next_state_byte == 4) ##4 1) |-> bypass_byte0);
assert property(@(posedge clk) ((next_state_byte == 4) ##4 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!reset_chain ##1 1) |-> bypass_byte0);
assert property(@(posedge clk) (!clear_crc_init_sel ##1 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!reset_chain ##1 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!clear_crc_init_sel ##1 1) |-> bypass_byte0);
assert property(@(posedge clk) (!clear_crc_init_sel ##2 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!reset_chain ##2 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!clear_crc_init_sel ##2 1) |-> bypass_byte0);
assert property(@(posedge clk) (!reset_chain ##2 1) |-> bypass_byte0);
assert property(@(posedge clk) (!reset_chain ##3 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!reset_chain ##4 1) |-> bypass_byte0);
assert property(@(posedge clk) (!clear_crc_init_sel ##4 1) |-> bypass_byte0);
assert property(@(posedge clk) (!reset_chain ##4 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!clear_crc_init_sel ##4 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!clear_crc_init_sel ##3 1) |-> bypass_byte0);
assert property(@(posedge clk) (!reset_chain ##3 1) |-> bypass_byte0);
assert property(@(posedge clk) (!clear_crc_init_sel ##3 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((size_in >= 2) && (size_in <= 3) ##1 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((size_in >= 2) && (size_in <= 3) ##1 1) |-> bypass_byte0);
assert property(@(posedge clk) ((size_in >= 2) && (size_in <= 3) ##2 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((size_in >= 2) && (size_in <= 3) ##2 1) |-> bypass_byte0);
assert property(@(posedge clk) ((size_in >= 2) && (size_in <= 3) ##4 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((size_in >= 2) && (size_in <= 3) ##4 1) |-> bypass_byte0);
assert property(@(posedge clk) ((size_in >= 2) && (size_in <= 3) ##3 1) |-> bypass_byte0);
assert property(@(posedge clk) ((size_in >= 2) && (size_in <= 3) ##3 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!write && (size_in >= 1) && (size_in <= 3)) |-> (next_state_byte == 4));
assert property(@(posedge clk) ((next_state_byte == 0) && reset_chain) |-> (next_state_full == 1));
assert property(@(posedge clk) ((next_state_byte == 0) && reset_chain) |-> write);
assert property(@(posedge clk) ((next_state_byte == 0) && (size_in >= 1) && (size_in <= 2)) |-> (next_state_full == 1));
assert property(@(posedge clk) ((next_state_byte == 0) && (size_in >= 1) && (size_in <= 2)) |-> write);
assert property(@(posedge clk) ((size_in == 1)) |-> (size_in >= 1) && (size_in <= 3));
assert property(@(posedge clk) (!write && clear_crc_init_sel) |-> (next_state_byte == 4));
assert property(@(posedge clk) (!write && reset_chain) |-> (next_state_byte == 4));
assert property(@(posedge clk) ((size_in == 2)) |-> (size_in >= 2) && (size_in <= 3));
assert property(@(posedge clk) ((size_in == 2)) |-> (size_in >= 1) && (size_in <= 3));
assert property(@(posedge clk) ((size_in == 3)) |-> (size_in >= 2) && (size_in <= 3));
assert property(@(posedge clk) ((next_state_byte == 0) && (size_in >= 2) && (size_in <= 3)) |-> write);
assert property(@(posedge clk) ((next_state_byte == 0) && (size_in >= 2) && (size_in <= 3)) |-> (next_state_full == 1));
assert property(@(posedge clk) ((size_in == 3)) |-> (size_in >= 1) && (size_in <= 3));
assert property(@(posedge clk) ((size_in == 0) ##3 1) |-> bypass_byte0);
assert property(@(posedge clk) ((size_in == 0) ##3 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((size_in == 0) ##2 1) |-> bypass_byte0);
assert property(@(posedge clk) ((size_in == 0) ##1 1) |-> bypass_byte0);
assert property(@(posedge clk) ((size_in == 0) ##2 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((size_in == 0) ##1 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((size_in == 0) ##4 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((size_in == 0) ##4 1) |-> bypass_byte0);
assert property(@(posedge clk) ((next_state_byte == 0) && (size_in == 1)) |-> (next_state_full == 1));
assert property(@(posedge clk) ((next_state_byte == 0) && (size_in == 1)) |-> write);
assert property(@(posedge clk) ((size_in == 1) ##4 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((size_in == 1) ##3 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((size_in == 1)) |-> (state_byte == 4));
assert property(@(posedge clk) ((size_in == 1)) |-> bypass_byte0);
assert property(@(posedge clk) ((size_in == 1) ##2 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((size_in == 1) ##2 1) |-> bypass_byte0);
assert property(@(posedge clk) ((size_in == 1) ##4 1) |-> bypass_byte0);
assert property(@(posedge clk) ((size_in == 1) ##3 1) |-> bypass_byte0);
assert property(@(posedge clk) ((size_in == 1) ##1 1) |-> bypass_byte0);
assert property(@(posedge clk) ((size_in == 1) ##1 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!write && (size_in == 2)) |-> (next_state_byte == 4));
assert property(@(posedge clk) (!write && (size_in == 3)) |-> (next_state_byte == 4));
assert property(@(posedge clk) ((next_state_byte == 0) && (size_in == 3)) |-> write);
assert property(@(posedge clk) ((next_state_byte == 0) && (size_in == 3)) |-> (next_state_full == 1));
assert property(@(posedge clk) (!write && (size_in == 1)) |-> (next_state_byte == 4));
assert property(@(posedge clk) ((next_state_byte == 0) && (size_in == 2)) |-> write);
assert property(@(posedge clk) ((next_state_byte == 0) && (size_in == 2)) |-> (next_state_full == 1));
assert property(@(posedge clk) ((size_in == 2)) |-> bypass_byte0);
assert property(@(posedge clk) ((size_in == 2)) |-> (state_byte == 4));
assert property(@(posedge clk) ((size_in == 2) ##4 1) |-> bypass_byte0);
assert property(@(posedge clk) ((size_in == 2) ##3 1) |-> bypass_byte0);
assert property(@(posedge clk) ((size_in == 2) ##1 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((size_in == 2) ##4 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((size_in == 2) ##2 1) |-> bypass_byte0);
assert property(@(posedge clk) ((size_in == 2) ##3 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((size_in == 2) ##2 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((size_in == 2) ##1 1) |-> bypass_byte0);
assert property(@(posedge clk) ((size_in == 3)) |-> (state_byte == 4));
assert property(@(posedge clk) ((size_in == 3) ##1 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((size_in == 3) ##1 1) |-> bypass_byte0);
assert property(@(posedge clk) ((size_in == 3)) |-> bypass_byte0);
assert property(@(posedge clk) ((size_in == 3) ##2 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((size_in == 3) ##2 1) |-> bypass_byte0);
assert property(@(posedge clk) ((size_in == 3) ##4 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((size_in == 3) ##3 1) |-> bypass_byte0);
assert property(@(posedge clk) ((size_in == 3) ##3 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((size_in == 3) ##4 1) |-> bypass_byte0);
assert property(@(posedge clk) ((size_in == 3) && write ##1 (size_in == 3) ##1 (size_in == 1) ##2 1) |-> (size_in >= 2) && (size_in <= 3));
assert property(@(posedge clk) ((next_state_byte == 0) && (size_in == 3) ##1 (size_in == 3) ##1 (size_in == 1) ##2 1) |-> (size_in >= 2) && (size_in <= 3));
assert property(@(posedge clk) ((next_state_full == 1) && (size_in == 3) ##1 (size_in == 3) ##1 (size_in == 1) ##2 1) |-> (size_in >= 2) && (size_in <= 3));
assert property(@(posedge clk) (rst_n) |-> (state_byte == 0));
assert property(@(posedge clk) (!write && (next_state_byte == 0)) |-> rst_n);
assert property(@(posedge clk) ((next_state_byte == 0) && (next_state_full == 0)) |-> rst_n);
assert property(@(posedge clk) (!bypass_byte0) |-> rst_n);
assert property(@(posedge clk) ((state_byte == 0)) |-> rst_n);
assert property(@(posedge clk) ((next_state_byte == 0) && (next_state_full == 0)) |-> (state_byte == 0));
assert property(@(posedge clk) (!write && (next_state_byte == 0)) |-> (state_byte == 0));
assert property(@(posedge clk) (!bypass_byte0) |-> (state_byte == 0));
assert property(@(posedge clk) ((size_in == 3) ##2 (size_in == 3) && write ##1 (size_in == 1) && write ##1 1) |-> (size_in == 3));
assert property(@(posedge clk) ((size_in == 3) ##2 (size_in == 3) && write ##1 (next_state_full == 1) && (size_in == 1) ##1 1) |-> (size_in == 3));
assert property(@(posedge clk) ((size_in == 3) ##2 (size_in == 3) && write ##1 (next_state_byte == 0) && (size_in == 1) ##1 1) |-> (size_in == 3));
assert property(@(posedge clk) ((size_in == 3) ##2 (size_in == 3) && write ##1 (size_in == 1) && clear_crc_init_sel ##1 1) |-> (size_in == 3));
assert property(@(posedge clk) ((size_in == 3) ##1 reset_chain ##1 (size_in == 3) ##1 (size_in == 1) ##1 (next_state_byte == 4)) |-> (size_in == 3));
assert property(@(posedge clk) ((size_in == 3) ##1 reset_chain ##1 (size_in == 3) ##1 (size_in == 1) ##1 (next_state_full == 0)) |-> (size_in == 3));
assert property(@(posedge clk) ((size_in == 3) ##1 reset_chain ##1 (size_in == 3) ##1 (size_in == 1) ##1 !write) |-> (size_in == 3));
assert property(@(posedge clk) ((size_in == 3) ##1 reset_chain ##1 (size_in == 3) && write ##1 (size_in == 1) ##1 clear_crc_init_sel) |-> (size_in == 3));
assert property(@(posedge clk) ((size_in == 3) ##1 reset_chain ##1 (size_in == 3) && write ##1 (size_in == 1) ##1 reset_chain) |-> (size_in == 3));
assert property(@(posedge clk) ((size_in == 3) ##1 reset_chain ##1 !reset_chain && (size_in == 3) && write ##1 (size_in == 1) ##1 1) |-> (size_in == 3));
assert property(@(posedge clk) ((size_in == 3) ##1 reset_chain ##1 !clear_crc_init_sel && (size_in == 3) && write ##1 (size_in == 1) ##1 1) |-> (size_in == 3));
assert property(@(posedge clk) ((size_in == 3) ##1 (size_in == 2) ##1 (size_in == 3) && write ##1 (size_in == 1) ##1 1) |-> (size_in == 3));
assert property(@(posedge clk) (!reset_chain && (size_in == 3) ##2 (size_in == 3) && write ##1 (size_in == 1) ##1 1) |-> (size_in == 3));
assert property(@(posedge clk) (!clear_crc_init_sel && (size_in == 3) ##2 (size_in == 3) && write ##1 (size_in == 1) ##1 1) |-> (size_in == 3));
assert property(@(posedge clk) ((next_state_byte == 0) && (size_in == 3) ##1 reset_chain ##1 (size_in == 3) && write ##1 (size_in == 1) ##1 1) |-> (size_in == 3));
assert property(@(posedge clk) ((next_state_full == 1) && (size_in == 3) ##1 reset_chain ##1 (size_in == 3) && write ##1 (size_in == 1) ##1 1) |-> (size_in == 3));
assert property(@(posedge clk) ((size_in == 3) && write ##1 reset_chain ##1 (size_in == 3) && write ##1 (size_in == 1) ##1 1) |-> (size_in == 3));
assert property(@(posedge clk) ((state_byte == 0) ##2 1) |-> (size_in == 3));
assert property(@(posedge clk) (rst_n ##2 1) |-> (size_in == 3));
assert property(@(posedge clk) (!bypass_byte0 ##2 1) |-> (size_in == 3));
assert property(@(posedge clk) (!bypass_byte0 ##3 1) |-> (size_in == 1));
assert property(@(posedge clk) ((state_byte == 0) ##3 1) |-> (size_in == 1));
assert property(@(posedge clk) ((state_byte == 0) ##4 1) |-> (size_in == 1));
assert property(@(posedge clk) (rst_n ##3 1) |-> (size_in == 1));
assert property(@(posedge clk) (rst_n ##4 1) |-> (size_in == 1));
assert property(@(posedge clk) (!bypass_byte0 ##4 1) |-> (size_in == 1));
assert property(@(posedge clk) ((state_byte == 0)) |-> (size_in == 0));
assert property(@(posedge clk) ((state_byte == 0) ##1 1) |-> (size_in == 0));
assert property(@(posedge clk) (!bypass_byte0 ##1 1) |-> (size_in == 0));
assert property(@(posedge clk) (!bypass_byte0) |-> (size_in == 0));
assert property(@(posedge clk) (rst_n ##1 1) |-> (size_in == 0));
assert property(@(posedge clk) (rst_n) |-> (size_in == 0));
assert property(@(posedge clk) (!clear_crc_init_sel && (size_in == 3) ##1 (size_in == 3) ##1 (size_in == 3) ##1 (size_in == 3) ##1 1) |-> (size_in == 2));
assert property(@(posedge clk) (!reset_chain && (size_in == 3) ##1 (size_in == 3) ##1 (size_in == 3) ##1 (size_in == 3) ##1 1) |-> (size_in == 2));
assert property(@(posedge clk) ((size_in == 3) ##1 (next_state_full == 1) && (size_in == 3) ##1 (size_in == 3) ##1 (size_in == 3) ##1 1) |-> (size_in == 2));
assert property(@(posedge clk) ((size_in == 3) ##1 (size_in == 3) && write ##1 (size_in == 3) ##1 (size_in == 3) ##1 1) |-> (size_in == 2));
assert property(@(posedge clk) ((size_in == 3) ##1 (next_state_byte == 0) && (size_in == 3) ##1 (size_in == 3) ##1 (size_in == 3) ##1 1) |-> (size_in == 2));
assert property(@(posedge clk) ((size_in == 3) ##1 (size_in == 3) ##1 !reset_chain && (size_in == 3) ##1 (size_in == 3) ##1 1) |-> (size_in == 2));
assert property(@(posedge clk) ((size_in == 3) ##1 (size_in == 3) ##1 !clear_crc_init_sel && (size_in == 3) ##1 (size_in == 3) ##1 1) |-> (size_in == 2));
assert property(@(posedge clk) ((size_in == 3) ##1 (size_in == 3) ##1 (size_in == 3) ##1 (size_in == 3) ##1 (next_state_full == 1)) |-> (size_in == 2));
assert property(@(posedge clk) ((size_in == 3) ##1 !clear_crc_init_sel && (size_in == 3) ##1 !reset_chain && (size_in == 0) ##1 (size_in == 3) ##1 1) |-> (size_in == 1));
assert property(@(posedge clk) ((size_in == 3) ##1 !reset_chain && (size_in == 3) ##1 !reset_chain && (size_in == 0) ##1 (size_in == 3) ##1 1) |-> (size_in == 1));
assert property(@(posedge clk) ((size_in == 3) ##1 (size_in == 3) ##1 (size_in == 3) ##1 (size_in == 3) ##1 (next_state_byte == 0)) |-> (size_in == 2));
assert property(@(posedge clk) ((size_in == 3) ##1 (size_in == 3) ##1 (size_in == 3) ##1 (size_in == 3) ##1 write) |-> (size_in == 2));
assert property(@(posedge clk) ((size_in == 3) ##1 (next_state_full == 1) && (size_in == 3) ##1 (size_in == 0) ##1 (size_in == 3) ##1 1) |-> (size_in == 1));
assert property(@(posedge clk) ((size_in == 3) ##1 (next_state_byte == 0) && (size_in == 3) ##1 (size_in == 0) ##1 (size_in == 3) ##1 1) |-> (size_in == 1));
assert property(@(posedge clk) ((size_in == 3) ##1 (size_in == 3) && write ##1 (size_in == 0) ##1 (size_in == 3) ##1 1) |-> (size_in == 1));
assert property(@(posedge clk) (!clear_crc_init_sel && (size_in == 2) ##1 (size_in == 2) ##1 (size_in == 3) ##1 (size_in == 1) ##1 1) |-> (size_in == 0));
assert property(@(posedge clk) (!reset_chain && (size_in == 2) ##1 (size_in == 2) ##1 (size_in == 3) ##1 (size_in == 1) ##1 1) |-> (size_in == 0));
assert property(@(posedge clk) ((size_in == 3) ##1 (size_in == 3) ##1 !write && (size_in == 1) ##1 (size_in == 1) ##1 1) |-> (size_in >= 2) && (size_in <= 3));
assert property(@(posedge clk) ((size_in == 3) ##1 (size_in == 3) ##1 !reset_chain && (next_state_byte == 0) && (size_in == 0) ##1 (size_in == 3) ##1 1) |-> (size_in == 1));
assert property(@(posedge clk) ((size_in == 3) ##1 (size_in == 3) ##1 !reset_chain && (next_state_full == 1) && (size_in == 0) ##1 (size_in == 3) ##1 1) |-> (size_in == 1));
assert property(@(posedge clk) ((size_in == 3) ##1 (size_in == 3) ##1 !reset_chain && (size_in == 0) && write ##1 (size_in == 3) ##1 1) |-> (size_in == 1));
assert property(@(posedge clk) ((size_in == 3) ##1 (size_in == 3) ##1 (next_state_full == 0) && (size_in == 1) ##1 (size_in == 1) ##1 1) |-> (size_in >= 2) && (size_in <= 3));
assert property(@(posedge clk) ((size_in == 3) ##1 (size_in == 3) ##1 (next_state_byte == 4) && (size_in == 1) ##1 (size_in == 1) ##1 1) |-> (size_in >= 2) && (size_in <= 3));
assert property(@(posedge clk) ((size_in == 3) ##1 (size_in == 3) ##1 (size_in == 1) ##1 !reset_chain && (size_in == 1) ##1 1) |-> (size_in >= 2) && (size_in <= 3));
assert property(@(posedge clk) ((size_in == 3) ##1 (size_in == 3) ##1 (size_in == 1) ##1 !clear_crc_init_sel && (size_in == 1) ##1 1) |-> (size_in >= 2) && (size_in <= 3));
assert property(@(posedge clk) ((size_in == 3) ##1 (size_in == 3) && clear_crc_init_sel ##1 (size_in == 1) ##1 (size_in == 1) ##1 1) |-> (size_in >= 2) && (size_in <= 3));
assert property(@(posedge clk) ((size_in == 3) ##1 (next_state_full == 1) && (size_in == 3) ##1 (size_in == 1) ##1 (size_in == 1) ##1 1) |-> (size_in >= 2) && (size_in <= 3));
assert property(@(posedge clk) ((size_in == 3) ##1 (next_state_byte == 0) && (size_in == 3) ##1 (size_in == 1) ##1 (size_in == 1) ##1 1) |-> (size_in >= 2) && (size_in <= 3));
assert property(@(posedge clk) ((size_in == 3) ##1 (size_in == 3) && write ##1 (size_in == 1) ##1 (size_in == 1) ##1 1) |-> (size_in >= 2) && (size_in <= 3));
assert property(@(posedge clk) ((size_in == 2) ##1 (size_in == 2) && clear_crc_init_sel ##1 (size_in == 3) ##1 (size_in == 1) ##1 1) |-> (size_in == 0));
assert property(@(posedge clk) ((size_in == 2) ##1 (size_in == 2) ##1 !clear_crc_init_sel && (size_in == 3) ##1 (size_in == 1) ##1 1) |-> (size_in == 0));
assert property(@(posedge clk) ((size_in == 2) ##1 (size_in == 2) ##1 !reset_chain && (size_in == 3) ##1 (size_in == 1) ##1 1) |-> (size_in == 0));
assert property(@(posedge clk) ((size_in == 2) ##1 (size_in == 2) ##1 (size_in == 3) ##1 !reset_chain && (size_in == 1) ##1 1) |-> (size_in == 0));
assert property(@(posedge clk) ((size_in == 2) ##1 (size_in == 2) ##1 (size_in == 3) ##1 !clear_crc_init_sel && (size_in == 1) ##1 1) |-> (size_in == 0));
assert property(@(posedge clk) (!bypass_byte0 ##2 1) |-> (size_in >= 2) && (size_in <= 3));
assert property(@(posedge clk) (rst_n ##2 1) |-> (size_in >= 2) && (size_in <= 3));
assert property(@(posedge clk) ((state_byte == 0) ##2 1) |-> (size_in >= 2) && (size_in <= 3));
assert property(@(posedge clk) (rst_n ##4 1) |-> (next_state_full == 0));
assert property(@(posedge clk) (!bypass_byte0) |-> (next_state_full == 0));
assert property(@(posedge clk) (rst_n ##3 1) |-> (next_state_full == 0));
assert property(@(posedge clk) (rst_n) |-> (next_state_full == 0));
assert property(@(posedge clk) ((state_byte == 0) ##4 1) |-> (next_state_full == 0));
assert property(@(posedge clk) ((state_byte == 0) ##3 1) |-> (next_state_full == 0));
assert property(@(posedge clk) ((state_byte == 0)) |-> (next_state_full == 0));
assert property(@(posedge clk) (rst_n ##3 1) |-> (next_state_byte == 4));
assert property(@(posedge clk) ((state_byte == 0) ##4 1) |-> (next_state_byte == 4));
assert property(@(posedge clk) (!bypass_byte0 ##3 1) |-> (next_state_full == 0));
assert property(@(posedge clk) ((state_byte == 0) ##3 1) |-> (next_state_byte == 4));
assert property(@(posedge clk) (!bypass_byte0 ##4 1) |-> (next_state_byte == 4));
assert property(@(posedge clk) (!bypass_byte0 ##4 1) |-> (next_state_full == 0));
assert property(@(posedge clk) (rst_n ##4 1) |-> (next_state_byte == 4));
assert property(@(posedge clk) (!bypass_byte0 ##3 1) |-> (next_state_byte == 4));
assert property(@(posedge clk) ((state_byte == 0) ##1 1) |-> (next_state_byte == 0));
assert property(@(posedge clk) ((state_byte == 0) ##2 1) |-> (next_state_full == 1));
assert property(@(posedge clk) (!bypass_byte0 ##1 1) |-> write);
assert property(@(posedge clk) (rst_n) |-> (next_state_byte == 0));
assert property(@(posedge clk) (rst_n ##1 1) |-> (next_state_full == 1));
assert property(@(posedge clk) (rst_n ##2 1) |-> (next_state_full == 1));
assert property(@(posedge clk) (!bypass_byte0 ##1 1) |-> (next_state_full == 1));
assert property(@(posedge clk) ((state_byte == 0)) |-> (next_state_byte == 0));
assert property(@(posedge clk) ((state_byte == 0) ##2 1) |-> (next_state_byte == 0));
assert property(@(posedge clk) (!bypass_byte0 ##2 1) |-> (next_state_full == 1));
assert property(@(posedge clk) (rst_n ##1 1) |-> write);
assert property(@(posedge clk) (rst_n ##2 1) |-> (next_state_byte == 0));
assert property(@(posedge clk) ((state_byte == 0) ##1 1) |-> (next_state_full == 1));
assert property(@(posedge clk) (rst_n ##1 1) |-> (next_state_byte == 0));
assert property(@(posedge clk) (!bypass_byte0) |-> (next_state_byte == 0));
assert property(@(posedge clk) (!bypass_byte0 ##2 1) |-> write);
assert property(@(posedge clk) (!bypass_byte0 ##1 1) |-> (next_state_byte == 0));
assert property(@(posedge clk) (!bypass_byte0 ##2 1) |-> (next_state_byte == 0));
assert property(@(posedge clk) ((state_byte == 0) ##1 1) |-> write);
assert property(@(posedge clk) ((state_byte == 0) ##2 1) |-> write);
assert property(@(posedge clk) (rst_n ##2 1) |-> write);
assert property(@(posedge clk) ((size_in == 0) ##1 (next_state_full == 1) && (size_in == 3) ##2 (size_in == 3) ##1 1) |-> clear_crc_init_sel);
assert property(@(posedge clk) ((size_in == 0) ##1 (next_state_full == 1) && (size_in == 3) ##2 (size_in == 3) ##1 1) |-> reset_chain);
assert property(@(posedge clk) ((size_in == 0) ##1 (next_state_byte == 0) && (size_in == 3) ##2 (size_in == 3) ##1 1) |-> reset_chain);
assert property(@(posedge clk) ((size_in == 0) ##1 (size_in == 3) && write ##2 (size_in == 3) ##1 1) |-> reset_chain);
assert property(@(posedge clk) ((size_in == 0) ##1 (next_state_byte == 0) && (size_in == 3) ##2 (size_in == 3) ##1 1) |-> clear_crc_init_sel);
assert property(@(posedge clk) ((size_in == 0) ##1 (size_in == 3) && write ##2 (size_in == 3) ##1 1) |-> clear_crc_init_sel);
assert property(@(posedge clk) ((size_in == 0) ##1 (size_in == 3) ##2 (size_in == 3) ##1 write) |-> reset_chain);
assert property(@(posedge clk) ((size_in == 0) ##1 (size_in == 3) ##2 (size_in == 3) ##1 (next_state_full == 1)) |-> reset_chain);
assert property(@(posedge clk) ((size_in == 0) ##1 (size_in == 3) ##2 (size_in == 3) ##1 (next_state_full == 1)) |-> clear_crc_init_sel);
assert property(@(posedge clk) ((size_in == 0) ##1 (size_in == 3) ##2 (size_in == 3) ##1 (next_state_byte == 0)) |-> clear_crc_init_sel);
assert property(@(posedge clk) ((size_in == 0) ##1 (size_in == 3) ##2 (size_in == 3) ##1 write) |-> clear_crc_init_sel);
assert property(@(posedge clk) ((size_in == 0) ##1 (size_in == 3) ##2 (size_in == 3) ##1 (next_state_byte == 0)) |-> reset_chain);
assert property(@(posedge clk) ((state_byte == 0) ##1 1) |-> clear_crc_init_sel);
assert property(@(posedge clk) (!bypass_byte0 ##4 1) |-> clear_crc_init_sel);
assert property(@(posedge clk) (!bypass_byte0 ##3 1) |-> clear_crc_init_sel);
assert property(@(posedge clk) (!bypass_byte0 ##1 1) |-> clear_crc_init_sel);
assert property(@(posedge clk) (rst_n ##4 1) |-> clear_crc_init_sel);
assert property(@(posedge clk) (rst_n ##3 1) |-> clear_crc_init_sel);
assert property(@(posedge clk) (rst_n ##2 1) |-> clear_crc_init_sel);
assert property(@(posedge clk) (rst_n ##1 1) |-> clear_crc_init_sel);
assert property(@(posedge clk) ((state_byte == 0) ##4 1) |-> clear_crc_init_sel);
assert property(@(posedge clk) ((state_byte == 0) ##2 1) |-> clear_crc_init_sel);
assert property(@(posedge clk) (!bypass_byte0 ##2 1) |-> clear_crc_init_sel);
assert property(@(posedge clk) ((state_byte == 0) ##1 1) |-> reset_chain);
assert property(@(posedge clk) ((state_byte == 0) ##3 1) |-> clear_crc_init_sel);
assert property(@(posedge clk) (rst_n ##4 1) |-> reset_chain);
assert property(@(posedge clk) (rst_n ##3 1) |-> reset_chain);
assert property(@(posedge clk) (rst_n ##2 1) |-> reset_chain);
assert property(@(posedge clk) (!bypass_byte0 ##1 1) |-> reset_chain);
assert property(@(posedge clk) (rst_n ##1 1) |-> reset_chain);
assert property(@(posedge clk) (!bypass_byte0 ##2 1) |-> reset_chain);
assert property(@(posedge clk) (!bypass_byte0 ##3 1) |-> reset_chain);
assert property(@(posedge clk) (!bypass_byte0 ##4 1) |-> reset_chain);
assert property(@(posedge clk) ((state_byte == 0) ##4 1) |-> reset_chain);
assert property(@(posedge clk) ((state_byte == 0) ##3 1) |-> reset_chain);
assert property(@(posedge clk) ((state_byte == 0) ##2 1) |-> reset_chain);
assert property(@(posedge clk) ((size_in == 0) ##1 (size_in == 3) ##1 write ##1 (size_in == 3) ##1 1) |-> clear_crc_init_sel);
assert property(@(posedge clk) ((size_in == 0) ##1 (size_in == 3) ##1 (next_state_byte == 0) ##1 (size_in == 3) ##1 1) |-> clear_crc_init_sel);
assert property(@(posedge clk) ((size_in == 0) ##1 (size_in == 3) ##1 (next_state_full == 1) ##1 (size_in == 3) ##1 1) |-> clear_crc_init_sel);
assert property(@(posedge clk) ((size_in == 0) ##1 (size_in == 3) ##1 (next_state_full == 1) ##1 (size_in == 3) ##1 1) |-> reset_chain);
assert property(@(posedge clk) ((size_in == 0) ##1 (size_in == 3) ##1 write ##1 (size_in == 3) ##1 1) |-> reset_chain);
assert property(@(posedge clk) ((size_in == 0) ##1 (size_in == 3) ##1 (next_state_byte == 0) ##1 (size_in == 3) ##1 1) |-> reset_chain);
assert property(@(posedge clk) ((size_in == 0) ##1 (size_in == 3) ##1 (size_in == 0) ##1 (size_in == 3) ##1 1) |-> clear_crc_init_sel);
assert property(@(posedge clk) ((size_in == 0) ##1 (size_in == 3) ##1 (size_in == 0) ##1 (size_in == 3) ##1 1) |-> reset_chain);
assert property(@(posedge clk) ((size_in == 0) ##1 (size_in == 3) && clear_crc_init_sel ##1 !reset_chain ##1 (size_in == 3) ##1 1) |-> reset_chain);
assert property(@(posedge clk) ((size_in == 0) ##1 (size_in == 3) && clear_crc_init_sel ##1 !reset_chain ##1 (size_in == 3) ##1 1) |-> clear_crc_init_sel);
assert property(@(posedge clk) ((size_in == 0) ##1 (size_in == 3) ##2 (size_in == 3) ##1 (size_in == 3)) |-> reset_chain);
assert property(@(posedge clk) ((size_in == 0) ##1 (size_in == 3) ##1 (size_in == 1) ##1 (size_in == 3) ##1 1) |-> clear_crc_init_sel);
assert property(@(posedge clk) ((size_in == 0) ##1 (size_in == 3) ##1 (size_in == 1) ##1 (size_in == 3) ##1 1) |-> reset_chain);
assert property(@(posedge clk) ((size_in == 0) ##1 (size_in == 3) ##2 (size_in == 3) ##1 (size_in == 3)) |-> clear_crc_init_sel);
assert property(@(posedge clk) (!reset_chain && (size_in == 0) ##1 (size_in == 3) ##2 (size_in == 3) ##1 1) |-> reset_chain);
assert property(@(posedge clk) (!reset_chain && (size_in == 0) ##1 (size_in == 3) ##2 (size_in == 3) ##1 1) |-> clear_crc_init_sel);
assert property(@(posedge clk) (!clear_crc_init_sel && (size_in == 0) ##1 (size_in == 3) ##2 (size_in == 3) ##1 1) |-> reset_chain);
assert property(@(posedge clk) (!clear_crc_init_sel && (size_in == 0) ##1 (size_in == 3) ##2 (size_in == 3) ##1 1) |-> clear_crc_init_sel);
assert property(@(posedge clk) ((size_in == 1) ##1 (size_in == 3) ##1 (size_in == 2) ##1 (size_in == 3) ##1 1) |-> (size_in >= 1) && (size_in <= 3));
assert property(@(posedge clk) ((size_in == 2) ##1 (size_in == 3) ##1 (size_in == 2) ##1 (size_in == 3) ##1 1) |-> (size_in >= 1) && (size_in <= 3));
assert property(@(posedge clk) ((next_state_byte == 0) ##1 (size_in == 3) ##1 (size_in == 3) ##1 (size_in == 3) ##1 1) |-> (size_in >= 1) && (size_in <= 3));
assert property(@(posedge clk) ((next_state_byte == 0) ##1 (size_in == 3) ##1 !write ##1 (size_in == 3) ##1 1) |-> (size_in >= 1) && (size_in <= 3));
assert property(@(posedge clk) ((next_state_byte == 0) ##1 (size_in == 3) ##1 (next_state_full == 0) ##1 (size_in == 3) ##1 1) |-> (size_in >= 1) && (size_in <= 3));
assert property(@(posedge clk) ((next_state_byte == 0) ##1 (size_in == 3) ##1 (next_state_byte == 4) ##1 (size_in == 3) ##1 1) |-> (size_in >= 1) && (size_in <= 3));
assert property(@(posedge clk) ((next_state_byte == 0) ##1 (size_in == 3) ##2 !clear_crc_init_sel && (size_in == 3) ##1 1) |-> (size_in >= 1) && (size_in <= 3));
assert property(@(posedge clk) ((next_state_byte == 0) ##1 (size_in == 3) ##2 !reset_chain && (size_in == 3) ##1 1) |-> (size_in >= 1) && (size_in <= 3));
assert property(@(posedge clk) ((next_state_byte == 0) ##1 (size_in == 3) ##2 (size_in == 3) ##1 !clear_crc_init_sel) |-> (size_in >= 1) && (size_in <= 3));
assert property(@(posedge clk) ((next_state_byte == 0) ##1 (size_in == 3) ##2 (size_in == 3) ##1 !reset_chain) |-> (size_in >= 1) && (size_in <= 3));
assert property(@(posedge clk) ((next_state_byte == 0) && (size_in == 1) ##1 (size_in == 3) ##2 (size_in == 3) ##1 1) |-> (size_in >= 1) && (size_in <= 3));
assert property(@(posedge clk) ((next_state_byte == 0) ##1 (size_in == 3) ##2 !write && (size_in == 3) ##1 1) |-> (size_in >= 1) && (size_in <= 3));
assert property(@(posedge clk) ((next_state_byte == 0) ##1 (size_in == 3) ##2 (next_state_byte == 4) && (size_in == 3) ##1 1) |-> (size_in >= 1) && (size_in <= 3));
assert property(@(posedge clk) ((next_state_byte == 0) ##1 (size_in == 3) ##2 (next_state_full == 0) && (size_in == 3) ##1 1) |-> (size_in >= 1) && (size_in <= 3));
assert property(@(posedge clk) ((next_state_byte == 0) ##1 (size_in == 3) ##1 !reset_chain ##1 (size_in == 3) ##1 1) |-> (size_in >= 1) && (size_in <= 3));
assert property(@(posedge clk) ((next_state_byte == 0) ##1 (size_in == 3) ##1 !clear_crc_init_sel ##1 (size_in == 3) ##1 1) |-> (size_in >= 1) && (size_in <= 3));
assert property(@(posedge clk) ((next_state_byte == 0) ##1 (size_in == 3) ##2 (size_in == 3) ##1 (next_state_byte == 4)) |-> (size_in >= 1) && (size_in <= 3));
assert property(@(posedge clk) ((next_state_byte == 0) ##1 (size_in == 3) ##2 (size_in == 3) ##1 !write) |-> (size_in >= 1) && (size_in <= 3));
assert property(@(posedge clk) ((next_state_byte == 0) ##1 (size_in == 3) ##2 (size_in == 3) ##1 (next_state_full == 0)) |-> (size_in >= 1) && (size_in <= 3));
assert property(@(posedge clk) ((next_state_byte == 0) ##1 (size_in == 3) ##1 (size_in == 1) ##1 (size_in == 3) ##1 1) |-> (size_in >= 1) && (size_in <= 3));
assert property(@(posedge clk) ((next_state_byte == 0) && (size_in == 2) ##1 (size_in == 3) ##2 (size_in == 3) ##1 1) |-> (size_in >= 1) && (size_in <= 3));
assert property(@(posedge clk) ((next_state_byte == 0) ##1 !clear_crc_init_sel && (size_in == 3) ##2 (size_in == 3) ##1 1) |-> (size_in >= 1) && (size_in <= 3));
assert property(@(posedge clk) ((next_state_byte == 0) ##1 !reset_chain && (size_in == 3) ##2 (size_in == 3) ##1 1) |-> (size_in >= 1) && (size_in <= 3));
assert property(@(posedge clk) (!clear_crc_init_sel && (next_state_byte == 0) ##1 (size_in == 3) ##2 (size_in == 3) ##1 1) |-> (size_in >= 1) && (size_in <= 3));
assert property(@(posedge clk) (!reset_chain && (next_state_byte == 0) ##1 (size_in == 3) ##2 (size_in == 3) ##1 1) |-> (size_in >= 1) && (size_in <= 3));
assert property(@(posedge clk) ((next_state_byte == 0) ##1 (next_state_byte == 4) && (size_in == 3) ##2 (size_in == 3) ##1 1) |-> (size_in >= 1) && (size_in <= 3));
assert property(@(posedge clk) ((next_state_byte == 0) ##1 (next_state_full == 0) && (size_in == 3) ##2 (size_in == 3) ##1 1) |-> (size_in >= 1) && (size_in <= 3));
assert property(@(posedge clk) ((next_state_byte == 0) ##1 !write && (size_in == 3) ##2 (size_in == 3) ##1 1) |-> (size_in >= 1) && (size_in <= 3));
assert property(@(posedge clk) ((next_state_byte == 0) ##1 (size_in == 3) ##1 (size_in == 0) ##1 (size_in == 3) ##1 1) |-> (size_in >= 1) && (size_in <= 3));
assert property(@(posedge clk) (rst_n ##3 1) |-> (size_in >= 1) && (size_in <= 3));
assert property(@(posedge clk) ((state_byte == 0) ##2 1) |-> (size_in >= 1) && (size_in <= 3));
assert property(@(posedge clk) ((state_byte == 0) ##3 1) |-> (size_in >= 1) && (size_in <= 3));
assert property(@(posedge clk) ((state_byte == 0) ##4 1) |-> (size_in >= 1) && (size_in <= 3));
assert property(@(posedge clk) (rst_n ##2 1) |-> (size_in >= 1) && (size_in <= 3));
assert property(@(posedge clk) (!bypass_byte0 ##2 1) |-> (size_in >= 1) && (size_in <= 3));
assert property(@(posedge clk) (!bypass_byte0 ##3 1) |-> (size_in >= 1) && (size_in <= 3));
assert property(@(posedge clk) (!bypass_byte0 ##4 1) |-> (size_in >= 1) && (size_in <= 3));
assert property(@(posedge clk) (rst_n ##4 1) |-> (size_in >= 1) && (size_in <= 3));
assert property(@(posedge clk) ((next_state_byte == 0) && (size_in == 0) ##1 (size_in == 3) ##2 (size_in == 3) ##1 1) |-> (size_in >= 1) && (size_in <= 3));
assert property(@(posedge clk) (rst_n ##4 1) |-> bypass_byte0);
assert property(@(posedge clk) ((state_byte == 0) ##1 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((state_byte == 0) ##2 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((state_byte == 0) ##3 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((state_byte == 0) ##4 1) |-> (state_byte == 4));
assert property(@(posedge clk) (rst_n ##1 1) |-> (state_byte == 4));
assert property(@(posedge clk) (rst_n ##2 1) |-> (state_byte == 4));
assert property(@(posedge clk) (rst_n ##3 1) |-> (state_byte == 4));
assert property(@(posedge clk) (rst_n ##4 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!bypass_byte0 ##1 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!bypass_byte0 ##2 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!bypass_byte0 ##4 1) |-> bypass_byte0);
assert property(@(posedge clk) (rst_n ##3 1) |-> bypass_byte0);
assert property(@(posedge clk) (rst_n ##2 1) |-> bypass_byte0);
assert property(@(posedge clk) (rst_n ##1 1) |-> bypass_byte0);
assert property(@(posedge clk) ((state_byte == 0) ##3 1) |-> bypass_byte0);
assert property(@(posedge clk) ((state_byte == 0) ##2 1) |-> bypass_byte0);
assert property(@(posedge clk) (!bypass_byte0 ##1 1) |-> bypass_byte0);
assert property(@(posedge clk) ((state_byte == 0) ##1 1) |-> bypass_byte0);
assert property(@(posedge clk) (!bypass_byte0 ##2 1) |-> bypass_byte0);
assert property(@(posedge clk) (!bypass_byte0 ##4 1) |-> (state_byte == 4));
assert property(@(posedge clk) (!bypass_byte0 ##3 1) |-> bypass_byte0);
assert property(@(posedge clk) (!bypass_byte0 ##3 1) |-> (state_byte == 4));
assert property(@(posedge clk) ((state_byte == 0) ##4 1) |-> bypass_byte0);
endmodule
