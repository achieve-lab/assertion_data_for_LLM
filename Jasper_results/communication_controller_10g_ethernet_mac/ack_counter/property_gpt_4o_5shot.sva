module i_ack_counter(
input ready,
input tx_ack,
input [15:0] counter,
input tx_start,
input start_count,
input [15:0] max_count,
input clock,
input reset,
input start_count_del
);

assert property(@(posedge clock) (reset) |-> (start_count == 0));
assert property(@(posedge clock) (tx_start) |-> (start_count == 1));
assert property(@(posedge clock) ((counter == max_count) & !ready) |-> (start_count == 0));
assert property(@(posedge clock) (reset) |-> (counter == 0));
assert property(@(posedge clock) (counter == max_count) |-> (counter == 0));
assert property(@(posedge clock) (start_count) |-> (counter == counter + 1));
assert property(@(posedge clock) (reset) |-> (start_count_del == 0 && tx_ack == 0));
assert property(@(posedge clock) (start_count_del) |-> (tx_ack == ~start_count));
endmodule