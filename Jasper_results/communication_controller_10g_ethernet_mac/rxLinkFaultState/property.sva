module i_rxLinkFaultState(
    input  get_one_fault,
    input[1:0] last_seq_type,
    input[2:0] linkstate, linkstate_next,
    input      seq_cnt,
    input      reset_col_cnt,
    input     seq_cnt_3,
    input local_fault,
    input  fault_type,
    input remote_fault,
    input     col_cnt_64,
    input rxclk,
    input[1:0] seq_type,
    input  no_new_type,
    input reset,
    input[5:0] col_cnt,
    input[1:0] link_fault
);

assert property(@(posedge rxclk) (reset_col_cnt ##1 1) |-> (col_cnt == 0));
assert property(@(posedge rxclk) (get_one_fault ##1 1) |-> reset_col_cnt);
assert property(@(posedge rxclk) (get_one_fault ##2 1) |-> (col_cnt == 0));
assert property(@(posedge rxclk) ((linkstate == 1)) |-> (linkstate >= 1) && (linkstate <= 2));
assert property(@(posedge rxclk) ((linkstate == 1)) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((linkstate == 1) ##3 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) (!seq_cnt) |-> (link_fault == 0));
assert property(@(posedge rxclk) (!seq_cnt ##1 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) (remote_fault) |-> fault_type);
assert property(@(posedge rxclk) (fault_type) |-> remote_fault);
assert property(@(posedge rxclk) (fault_type ##1 1) |-> (seq_type == 1));
assert property(@(posedge rxclk) (remote_fault ##1 1) |-> (seq_type == 1));
assert property(@(posedge rxclk) ((seq_type == 1) ##1 1) |-> (last_seq_type == 1));
assert property(@(posedge rxclk) (fault_type) |-> get_one_fault);
assert property(@(posedge rxclk) (remote_fault) |-> get_one_fault);
assert property(@(posedge rxclk) (local_fault) |-> get_one_fault);
assert property(@(posedge rxclk) (fault_type ##2 1) |-> (last_seq_type == 1));
assert property(@(posedge rxclk) (remote_fault ##2 1) |-> (last_seq_type == 1));
assert property(@(posedge rxclk) ((seq_type == 0) ##1 1) |-> (last_seq_type == 0));
assert property(@(posedge rxclk) (!remote_fault ##1 1) |-> (seq_type == 0));
assert property(@(posedge rxclk) (!fault_type ##1 1) |-> (seq_type == 0));
assert property(@(posedge rxclk) (!remote_fault ##2 1) |-> (last_seq_type == 0));
assert property(@(posedge rxclk) (!fault_type ##2 1) |-> (last_seq_type == 0));
assert property(@(posedge rxclk) ((seq_type == 1)) |-> reset_col_cnt);
assert property(@(posedge rxclk) ((last_seq_type == 1)) |-> (col_cnt == 0));
assert property(@(posedge rxclk) (remote_fault ##1 1) |-> reset_col_cnt);
assert property(@(posedge rxclk) (fault_type ##1 1) |-> reset_col_cnt);
assert property(@(posedge rxclk) ((seq_type == 1) ##1 1) |-> (col_cnt == 0));
assert property(@(posedge rxclk) (remote_fault ##2 1) |-> (col_cnt == 0));
assert property(@(posedge rxclk) (fault_type ##2 1) |-> (col_cnt == 0));
assert property(@(posedge rxclk) (local_fault ##1 1) |-> reset_col_cnt);
assert property(@(posedge rxclk) (local_fault ##2 1) |-> (col_cnt == 0));
assert property(@(posedge rxclk) ((last_seq_type == 0)) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((last_seq_type == 0) ##1 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((last_seq_type == 0) ##2 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((seq_type == 0) ##1 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((seq_type == 0) ##3 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((seq_type == 0) ##2 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) (!remote_fault ##4 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) (!remote_fault ##3 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) (!remote_fault ##2 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) (!fault_type ##2 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) (!fault_type ##4 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) (!fault_type ##3 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) (!no_new_type ##1 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) (!no_new_type ##2 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) (seq_cnt ##2 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) (!get_one_fault ##1 1) |-> (seq_type == 0));
assert property(@(posedge rxclk) (!get_one_fault ##2 1) |-> (last_seq_type == 0));
assert property(@(posedge rxclk) ((linkstate == 2)) |-> reset_col_cnt);
assert property(@(posedge rxclk) ((linkstate == 2) ##1 1) |-> reset_col_cnt);
assert property(@(posedge rxclk) ((linkstate == 2) ##1 1) |-> (col_cnt == 0));
assert property(@(posedge rxclk) ((linkstate == 2) ##2 1) |-> (col_cnt == 0));
assert property(@(posedge rxclk) (!reset_col_cnt) |-> (seq_type == 0));
assert property(@(posedge rxclk) (!reset_col_cnt ##1 1) |-> (last_seq_type == 0));
assert property(@(posedge rxclk) ((linkstate == 2) ##1 1) |-> (linkstate >= 1) && (linkstate <= 2));
assert property(@(posedge rxclk) ((linkstate == 2) ##1 1) |-> (linkstate == 1));
assert property(@(posedge rxclk) ((linkstate == 2)) |-> (linkstate >= 1) && (linkstate <= 2));
assert property(@(posedge rxclk) ((linkstate == 2) ##2 1) |-> (linkstate >= 1) && (linkstate <= 2));
assert property(@(posedge rxclk) ((col_cnt >= 1) && (col_cnt <= 2)) |-> (col_cnt >= 1) && (col_cnt <= 4));
assert property(@(posedge rxclk) (!get_one_fault ##4 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) (!get_one_fault ##1 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) (!get_one_fault ##2 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) (!get_one_fault ##3 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((linkstate == 2) ##1 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((linkstate == 2)) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((linkstate == 2) ##4 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((linkstate == 2) ##2 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((col_cnt == 1)) |-> (col_cnt >= 1) && (col_cnt <= 2));
assert property(@(posedge rxclk) ((col_cnt == 1)) |-> (col_cnt >= 1) && (col_cnt <= 4));
assert property(@(posedge rxclk) ((col_cnt == 1)) |-> (last_seq_type == 0));
assert property(@(posedge rxclk) ((col_cnt >= 2) && (col_cnt <= 4)) |-> (last_seq_type == 0));
assert property(@(posedge rxclk) (!reset_col_cnt ##3 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) (!reset_col_cnt ##2 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) (!reset_col_cnt ##1 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) (!reset_col_cnt) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((link_fault == 1)) |-> (linkstate == 0));
assert property(@(posedge rxclk) ((link_fault == 1)) |-> seq_cnt);
assert property(@(posedge rxclk) ((link_fault == 1)) |-> (last_seq_type == 1));
assert property(@(posedge rxclk) ((col_cnt == 2)) |-> (col_cnt >= 1) && (col_cnt <= 2));
assert property(@(posedge rxclk) ((col_cnt == 2)) |-> (col_cnt >= 1) && (col_cnt <= 4));
assert property(@(posedge rxclk) ((linkstate == 0) ##1 1) |-> reset_col_cnt);
assert property(@(posedge rxclk) ((col_cnt == 2)) |-> (last_seq_type == 0));
assert property(@(posedge rxclk) ((linkstate == 0) ##2 1) |-> (col_cnt == 0));
assert property(@(posedge rxclk) ((linkstate == 0) ##1 1) |-> (col_cnt == 0));
assert property(@(posedge rxclk) ((col_cnt >= 3) && (col_cnt <= 4)) |-> (col_cnt >= 1) && (col_cnt <= 4));
assert property(@(posedge rxclk) ((col_cnt == 3)) |-> (col_cnt >= 3) && (col_cnt <= 4));
assert property(@(posedge rxclk) (!local_fault ##1 (col_cnt == 2) && (seq_type == 0) ##1 1) |-> (col_cnt == 3));
assert property(@(posedge rxclk) (!reset_col_cnt && (col_cnt == 2) ##1 1) |-> (col_cnt == 3));
assert property(@(posedge rxclk) (!get_one_fault ##1 (col_cnt == 2) ##1 1) |-> (col_cnt == 3));
assert property(@(posedge rxclk) ((col_cnt == 3)) |-> (col_cnt >= 1) && (col_cnt <= 4));
assert property(@(posedge rxclk) ((col_cnt >= 3) && (col_cnt <= 4)) |-> (last_seq_type == 0));
assert property(@(posedge rxclk) ((last_seq_type == 0) ##3 (col_cnt == 2) && (seq_type == 0) ##1 1) |-> (col_cnt == 3));
assert property(@(posedge rxclk) (!seq_cnt && (col_cnt == 2) ##1 1) |-> (col_cnt == 3));
assert property(@(posedge rxclk) ((col_cnt == 3)) |-> (last_seq_type == 0));
assert property(@(posedge rxclk) (!get_one_fault ##1 (col_cnt == 3) ##1 1) |-> (col_cnt == 4));
assert property(@(posedge rxclk) (!reset_col_cnt && (col_cnt == 3) ##1 1) |-> (col_cnt == 4));
assert property(@(posedge rxclk) (!reset_col_cnt && (col_cnt == 3) ##1 1) |-> (col_cnt >= 3) && (col_cnt <= 4));
assert property(@(posedge rxclk) (!get_one_fault ##1 (col_cnt == 3) ##1 1) |-> (col_cnt >= 3) && (col_cnt <= 4));
assert property(@(posedge rxclk) (!get_one_fault && (col_cnt == 2) && (seq_type == 0) ##1 1) |-> (col_cnt == 3));
assert property(@(posedge rxclk) ((col_cnt == 4)) |-> (col_cnt >= 3) && (col_cnt <= 4));
assert property(@(posedge rxclk) ((col_cnt == 2) ##1 !reset_col_cnt) |-> (col_cnt == 3));
assert property(@(posedge rxclk) ((col_cnt == 4)) |-> (col_cnt >= 1) && (col_cnt <= 4));
assert property(@(posedge rxclk) ((col_cnt == 4) ##4 1) |-> (linkstate == 2));
assert property(@(posedge rxclk) (!reset_col_cnt && (linkstate == 0)) |-> reset);
assert property(@(posedge rxclk) (seq_cnt ##3 (col_cnt == 3) ##1 (linkstate == 0)) |-> (col_cnt == 4));
assert property(@(posedge rxclk) (seq_cnt ##2 (col_cnt == 3) ##1 (linkstate == 0)) |-> (col_cnt == 4));
assert property(@(posedge rxclk) (seq_cnt ##1 (col_cnt == 3) ##1 (linkstate == 0)) |-> (col_cnt == 4));
assert property(@(posedge rxclk) (seq_cnt ##1 (col_cnt == 3) ##1 (linkstate == 0)) |-> (col_cnt >= 3) && (col_cnt <= 4));
assert property(@(posedge rxclk) (seq_cnt ##2 (col_cnt == 3) ##1 (linkstate == 0)) |-> (col_cnt >= 3) && (col_cnt <= 4));
assert property(@(posedge rxclk) (seq_cnt ##3 (col_cnt == 3) ##1 (linkstate == 0)) |-> (col_cnt >= 3) && (col_cnt <= 4));
assert property(@(posedge rxclk) (!local_fault ##1 (col_cnt == 3) ##1 (linkstate == 0)) |-> (col_cnt == 4));
assert property(@(posedge rxclk) (!local_fault ##1 (col_cnt == 3) ##1 (linkstate == 0)) |-> (col_cnt >= 3) && (col_cnt <= 4));
assert property(@(posedge rxclk) (!seq_cnt && (col_cnt == 3) ##1 1) |-> (col_cnt >= 3) && (col_cnt <= 4));
assert property(@(posedge rxclk) (!local_fault && (col_cnt == 2) && (seq_type == 0) ##1 !seq_cnt) |-> (col_cnt == 3));
assert property(@(posedge rxclk) ((last_seq_type == 0) ##2 (col_cnt == 2) && (seq_type == 0) ##1 !seq_cnt) |-> (col_cnt == 3));
assert property(@(posedge rxclk) ((col_cnt == 2) && (seq_type == 0) ##1 !seq_cnt && local_fault) |-> (col_cnt == 3));
assert property(@(posedge rxclk) ((col_cnt == 2) && (linkstate == 1) ##1 !seq_cnt) |-> (col_cnt == 3));
assert property(@(posedge rxclk) (!seq_cnt ##1 (col_cnt == 2) ##1 !seq_cnt) |-> (col_cnt == 3));
assert property(@(posedge rxclk) (!seq_cnt ##2 (col_cnt == 2) ##1 !seq_cnt) |-> (col_cnt == 3));
assert property(@(posedge rxclk) (!seq_cnt ##3 (col_cnt == 2) ##1 !seq_cnt) |-> (col_cnt == 3));
assert property(@(posedge rxclk) ((seq_type == 0) ##3 (col_cnt == 2) ##1 !seq_cnt && remote_fault) |-> (col_cnt == 3));
assert property(@(posedge rxclk) (no_new_type ##2 (col_cnt == 2) && (seq_type == 0) ##1 !seq_cnt) |-> (col_cnt == 3));
assert property(@(posedge rxclk) ((seq_type == 0) ##3 (col_cnt == 2) && (seq_type == 0) ##1 !seq_cnt) |-> (col_cnt == 3));
assert property(@(posedge rxclk) (!local_fault ##1 (col_cnt == 3) ##3 (linkstate == 0)) |-> (link_fault == 1));
assert property(@(posedge rxclk) ((col_cnt == 3) ##2 !local_fault && (col_cnt == 1) ##1 1) |-> (col_cnt == 2));
assert property(@(posedge rxclk) ((col_cnt == 3) ##2 (col_cnt == 1) ##1 (linkstate == 0)) |-> (col_cnt == 2));
assert property(@(posedge rxclk) ((col_cnt == 3) ##2 (col_cnt == 1) && no_new_type ##1 1) |-> (col_cnt == 2));
assert property(@(posedge rxclk) ((col_cnt == 3) ##2 (col_cnt == 1) ##1 !no_new_type) |-> (col_cnt == 2));
assert property(@(posedge rxclk) ((col_cnt == 3) ##1 !fault_type ##1 (col_cnt == 1) ##1 1) |-> (col_cnt == 2));
assert property(@(posedge rxclk) ((col_cnt == 3) ##2 (col_cnt == 1) ##1 (last_seq_type == 0)) |-> (col_cnt == 2));
assert property(@(posedge rxclk) ((col_cnt == 3) ##1 !local_fault ##1 (col_cnt == 1) ##1 1) |-> (col_cnt == 2));
assert property(@(posedge rxclk) ((col_cnt == 3) ##2 (col_cnt == 1) && (seq_type == 0) ##1 1) |-> (col_cnt == 2));
assert property(@(posedge rxclk) ((col_cnt == 3) ##2 (col_cnt == 1) && (linkstate == 1) ##1 1) |-> (col_cnt == 2));
assert property(@(posedge rxclk) ((col_cnt == 3) ##2 (col_cnt == 1) ##1 seq_cnt) |-> (col_cnt == 2));
assert property(@(posedge rxclk) ((col_cnt == 3) ##1 !remote_fault ##1 (col_cnt == 1) ##1 1) |-> (col_cnt == 2));
assert property(@(posedge rxclk) ((col_cnt == 3) ##1 !seq_cnt ##2 (linkstate == 0)) |-> (link_fault == 1));
assert property(@(posedge rxclk) ((col_cnt == 3) ##2 (seq_type == 1) ##1 (linkstate == 0)) |-> (link_fault == 1));
assert property(@(posedge rxclk) ((col_cnt == 3) && remote_fault ##3 (linkstate == 0)) |-> (link_fault == 1));
assert property(@(posedge rxclk) ((col_cnt == 3) && fault_type ##3 (linkstate == 0)) |-> (link_fault == 1));
assert property(@(posedge rxclk) ((col_cnt == 3) ##1 get_one_fault ##2 (linkstate == 0)) |-> (link_fault == 1));
assert property(@(posedge rxclk) ((col_cnt == 3) && get_one_fault ##3 (linkstate == 0)) |-> (link_fault == 1));
assert property(@(posedge rxclk) ((col_cnt == 3) ##3 (linkstate == 0) && no_new_type) |-> (link_fault == 1));
assert property(@(posedge rxclk) ((col_cnt == 3) ##1 no_new_type ##2 (linkstate == 0)) |-> (link_fault == 1));
assert property(@(posedge rxclk) ((col_cnt == 3) ##2 (col_cnt == 0) ##1 (linkstate == 0)) |-> (link_fault == 1));
assert property(@(posedge rxclk) ((col_cnt == 3) ##1 remote_fault ##2 (linkstate == 0)) |-> (link_fault == 1));
assert property(@(posedge rxclk) ((col_cnt == 3) ##3 !fault_type && (linkstate == 0)) |-> (link_fault == 1));
assert property(@(posedge rxclk) ((col_cnt == 3) ##1 fault_type ##2 (linkstate == 0)) |-> (link_fault == 1));
assert property(@(posedge rxclk) ((col_cnt == 3) ##3 (last_seq_type == 1) && (linkstate == 0)) |-> (link_fault == 1));
assert property(@(posedge rxclk) (seq_cnt ##1 (col_cnt == 3) ##3 (linkstate == 0)) |-> (link_fault == 1));
assert property(@(posedge rxclk) ((col_cnt == 3) ##1 (seq_type == 1) ##2 (linkstate == 0)) |-> (link_fault == 1));
assert property(@(posedge rxclk) ((col_cnt == 3) && (linkstate == 0) ##3 (linkstate == 0)) |-> (link_fault == 1));
assert property(@(posedge rxclk) ((col_cnt == 3) ##3 !remote_fault && (linkstate == 0)) |-> (link_fault == 1));
assert property(@(posedge rxclk) ((col_cnt == 3) && local_fault ##3 (linkstate == 0)) |-> (link_fault == 1));
assert property(@(posedge rxclk) ((col_cnt == 3) ##1 local_fault ##2 (linkstate == 0)) |-> (link_fault == 1));
assert property(@(posedge rxclk) ((col_cnt == 3) ##2 local_fault ##1 (linkstate == 0)) |-> (link_fault == 1));
assert property(@(posedge rxclk) ((col_cnt == 3) ##3 !local_fault && (linkstate == 0)) |-> (link_fault == 1));
assert property(@(posedge rxclk) ((col_cnt == 3) ##3 !get_one_fault && (linkstate == 0)) |-> (link_fault == 1));
assert property(@(posedge rxclk) ((col_cnt == 3) ##1 reset_col_cnt ##2 (linkstate == 0)) |-> (link_fault == 1));
assert property(@(posedge rxclk) ((col_cnt == 3) ##2 (last_seq_type == 1) ##1 (linkstate == 0)) |-> (link_fault == 1));
assert property(@(posedge rxclk) ((col_cnt == 3) ##2 reset_col_cnt ##1 (linkstate == 0)) |-> (link_fault == 1));
assert property(@(posedge rxclk) ((col_cnt == 3) ##3 (col_cnt == 0) && (linkstate == 0)) |-> (link_fault == 1));
assert property(@(posedge rxclk) (seq_cnt ##4 (col_cnt == 4)) |-> (linkstate == 0));
assert property(@(posedge rxclk) (seq_cnt ##2 (col_cnt == 4)) |-> (linkstate == 0));
assert property(@(posedge rxclk) (seq_cnt ##3 (col_cnt == 4)) |-> (linkstate == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) && remote_fault) |-> (linkstate == 0));
assert property(@(posedge rxclk) (!local_fault ##1 (col_cnt == 4)) |-> (linkstate == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) && fault_type) |-> (linkstate == 0));
assert property(@(posedge rxclk) (reset ##1 1) |-> (linkstate == 0));
assert property(@(posedge rxclk) (reset) |-> (linkstate == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 seq_cnt ##2 1) |-> (col_cnt == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 get_one_fault ##3 1) |-> (col_cnt == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 no_new_type ##3 1) |-> (col_cnt == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) ##4 !no_new_type) |-> (col_cnt == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) ##3 (seq_type == 0) ##1 1) |-> (col_cnt == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 (seq_type == 1) ##2 1) |-> (col_cnt == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 !seq_cnt ##3 1) |-> (col_cnt == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 (seq_type == 1) ##3 1) |-> (col_cnt == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) ##4 (last_seq_type == 0)) |-> (col_cnt == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) ##3 (last_seq_type == 1) ##1 1) |-> (col_cnt == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 (last_seq_type == 1) ##2 1) |-> (col_cnt == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 !fault_type ##2 1) |-> (col_cnt == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) && fault_type ##4 1) |-> (col_cnt == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) ##4 !local_fault) |-> (col_cnt == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) ##3 local_fault ##1 1) |-> (col_cnt == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 !local_fault ##2 1) |-> (col_cnt == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 local_fault ##3 1) |-> (col_cnt == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 (linkstate == 1) ##3 1) |-> (col_cnt == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) && (linkstate == 0) ##4 1) |-> (col_cnt == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) ##3 !reset_col_cnt ##1 1) |-> (col_cnt == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 !remote_fault ##2 1) |-> (col_cnt == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 remote_fault ##3 1) |-> (col_cnt == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) && remote_fault ##4 1) |-> (col_cnt == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 !get_one_fault ##2 1) |-> (col_cnt == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 fault_type ##3 1) |-> (col_cnt == 1));
assert property(@(posedge rxclk) (seq_cnt ##1 (col_cnt == 4)) |-> (linkstate == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 (last_seq_type == 1) ##2 1) |-> (col_cnt >= 1) && (col_cnt <= 2));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 !fault_type ##2 1) |-> (col_cnt >= 1) && (col_cnt <= 2));
assert property(@(posedge rxclk) ((col_cnt == 4) ##3 (last_seq_type == 1) ##1 1) |-> (col_cnt >= 1) && (col_cnt <= 2));
assert property(@(posedge rxclk) ((col_cnt == 4) ##3 !reset_col_cnt ##1 1) |-> (col_cnt >= 1) && (col_cnt <= 2));
assert property(@(posedge rxclk) ((col_cnt == 4) ##4 (last_seq_type == 0)) |-> (col_cnt >= 1) && (col_cnt <= 2));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 (seq_type == 1) ##3 1) |-> (col_cnt >= 1) && (col_cnt <= 2));
assert property(@(posedge rxclk) ((col_cnt == 4) ##3 (seq_type == 0) ##1 1) |-> (col_cnt >= 1) && (col_cnt <= 2));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 seq_cnt ##2 1) |-> (col_cnt >= 1) && (col_cnt <= 2));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 (seq_type == 1) ##2 1) |-> (col_cnt >= 1) && (col_cnt <= 2));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 !seq_cnt ##3 1) |-> (col_cnt >= 1) && (col_cnt <= 2));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 fault_type ##3 1) |-> (col_cnt >= 1) && (col_cnt <= 2));
assert property(@(posedge rxclk) ((col_cnt == 4) ##4 !local_fault) |-> (col_cnt >= 1) && (col_cnt <= 2));
assert property(@(posedge rxclk) ((col_cnt == 4) ##3 local_fault ##1 1) |-> (col_cnt >= 1) && (col_cnt <= 2));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 no_new_type ##3 1) |-> (col_cnt >= 1) && (col_cnt <= 2));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 !local_fault ##2 1) |-> (col_cnt >= 1) && (col_cnt <= 2));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 local_fault ##3 1) |-> (col_cnt >= 1) && (col_cnt <= 2));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 (linkstate == 1) ##3 1) |-> (col_cnt >= 1) && (col_cnt <= 2));
assert property(@(posedge rxclk) ((col_cnt == 4) && (linkstate == 0) ##4 1) |-> (col_cnt >= 1) && (col_cnt <= 2));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 !remote_fault ##2 1) |-> (col_cnt >= 1) && (col_cnt <= 2));
assert property(@(posedge rxclk) ((col_cnt == 4) && remote_fault ##4 1) |-> (col_cnt >= 1) && (col_cnt <= 2));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 !get_one_fault ##2 1) |-> (col_cnt >= 1) && (col_cnt <= 2));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 get_one_fault ##3 1) |-> (col_cnt >= 1) && (col_cnt <= 2));
assert property(@(posedge rxclk) ((col_cnt == 4) ##4 !no_new_type) |-> (col_cnt >= 1) && (col_cnt <= 2));
assert property(@(posedge rxclk) ((col_cnt == 4) && fault_type ##4 1) |-> (col_cnt >= 1) && (col_cnt <= 2));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 remote_fault ##3 1) |-> (col_cnt >= 1) && (col_cnt <= 2));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 !get_one_fault ##2 1) |-> (col_cnt >= 1) && (col_cnt <= 4));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 (last_seq_type == 1) ##2 1) |-> (col_cnt >= 1) && (col_cnt <= 4));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 !fault_type ##2 1) |-> (col_cnt >= 1) && (col_cnt <= 4));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 fault_type ##3 1) |-> (col_cnt >= 1) && (col_cnt <= 4));
assert property(@(posedge rxclk) ((col_cnt == 4) ##4 !local_fault) |-> (col_cnt >= 1) && (col_cnt <= 4));
assert property(@(posedge rxclk) ((col_cnt == 4) ##3 local_fault ##1 1) |-> (col_cnt >= 1) && (col_cnt <= 4));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 !local_fault ##2 1) |-> (col_cnt >= 1) && (col_cnt <= 4));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 local_fault ##3 1) |-> (col_cnt >= 1) && (col_cnt <= 4));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 (linkstate == 1) ##3 1) |-> (col_cnt >= 1) && (col_cnt <= 4));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 no_new_type ##3 1) |-> (col_cnt >= 1) && (col_cnt <= 4));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 !remote_fault ##2 1) |-> (col_cnt >= 1) && (col_cnt <= 4));
assert property(@(posedge rxclk) ((col_cnt == 4) ##4 (last_seq_type == 0)) |-> (col_cnt >= 1) && (col_cnt <= 4));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 (seq_type == 1) ##3 1) |-> (col_cnt >= 1) && (col_cnt <= 4));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 !seq_cnt ##3 1) |-> (col_cnt >= 1) && (col_cnt <= 4));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 (seq_type == 1) ##2 1) |-> (col_cnt >= 1) && (col_cnt <= 4));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 seq_cnt ##2 1) |-> (col_cnt >= 1) && (col_cnt <= 4));
assert property(@(posedge rxclk) ((col_cnt == 4) ##3 (seq_type == 0) ##1 1) |-> (col_cnt >= 1) && (col_cnt <= 4));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 get_one_fault ##3 1) |-> (col_cnt >= 1) && (col_cnt <= 4));
assert property(@(posedge rxclk) ((col_cnt == 4) ##4 !no_new_type) |-> (col_cnt >= 1) && (col_cnt <= 4));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 remote_fault ##3 1) |-> (col_cnt >= 1) && (col_cnt <= 4));
assert property(@(posedge rxclk) ((col_cnt == 4) ##3 (last_seq_type == 1) ##1 1) |-> (col_cnt >= 1) && (col_cnt <= 4));
assert property(@(posedge rxclk) ((col_cnt == 4) && fault_type ##4 1) |-> (col_cnt >= 1) && (col_cnt <= 4));
assert property(@(posedge rxclk) ((col_cnt == 4) && remote_fault ##4 1) |-> (col_cnt >= 1) && (col_cnt <= 4));
assert property(@(posedge rxclk) ((col_cnt == 4) && (linkstate == 0) ##4 1) |-> (col_cnt >= 1) && (col_cnt <= 4));
assert property(@(posedge rxclk) (!seq_cnt ##3 (col_cnt == 4) ##1 1) |-> (linkstate == 2));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 !no_new_type) |-> (linkstate == 2));
assert property(@(posedge rxclk) (reset ##3 1) |-> (linkstate == 2));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 seq_cnt) |-> (linkstate == 2));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 (seq_type == 0)) |-> (linkstate == 2));
assert property(@(posedge rxclk) (!seq_cnt ##1 (col_cnt == 4) ##1 1) |-> (linkstate == 2));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 !remote_fault) |-> (linkstate == 2));
assert property(@(posedge rxclk) (!remote_fault && (col_cnt == 4) ##1 1) |-> (linkstate == 2));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 !get_one_fault) |-> (linkstate == 2));
assert property(@(posedge rxclk) ((col_cnt == 4) && (linkstate == 1) ##1 1) |-> (linkstate == 2));
assert property(@(posedge rxclk) (!fault_type && (col_cnt == 4) ##1 1) |-> (linkstate == 2));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 !fault_type) |-> (linkstate == 2));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 !local_fault) |-> (linkstate == 2));
assert property(@(posedge rxclk) (!seq_cnt ##2 (col_cnt == 4) ##1 1) |-> (linkstate == 2));
assert property(@(posedge rxclk) (local_fault ##1 (col_cnt == 4) ##1 1) |-> (linkstate == 2));
assert property(@(posedge rxclk) ((col_cnt == 4) ##4 1) |-> seq_cnt);
assert property(@(posedge rxclk) ((col_cnt == 4) ##3 1) |-> seq_cnt);
assert property(@(posedge rxclk) ((col_cnt == 4)) |-> seq_cnt);
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 !fault_type) |-> seq_cnt);
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 !local_fault) |-> seq_cnt);
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 (seq_type == 0)) |-> seq_cnt);
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 !no_new_type) |-> seq_cnt);
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 !remote_fault) |-> seq_cnt);
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 (linkstate == 2)) |-> seq_cnt);
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 !get_one_fault) |-> seq_cnt);
assert property(@(posedge rxclk) (!fault_type && (col_cnt == 4) ##1 1) |-> seq_cnt);
assert property(@(posedge rxclk) (!remote_fault && (col_cnt == 4) ##1 1) |-> seq_cnt);
assert property(@(posedge rxclk) ((col_cnt == 4) && (linkstate == 1) ##1 1) |-> seq_cnt);
assert property(@(posedge rxclk) (local_fault ##1 (col_cnt == 4) ##1 1) |-> seq_cnt);
assert property(@(posedge rxclk) (!seq_cnt ##2 (col_cnt == 4) ##2 1) |-> (seq_type == 0));
assert property(@(posedge rxclk) (seq_cnt ##2 (col_cnt == 4) ##2 1) |-> (seq_type == 1));
assert property(@(posedge rxclk) (!seq_cnt ##1 (col_cnt == 4) ##2 1) |-> (seq_type == 0));
assert property(@(posedge rxclk) (seq_cnt ##1 (col_cnt == 4) ##2 1) |-> (seq_type == 1));
assert property(@(posedge rxclk) ((col_cnt == 4)) |-> (last_seq_type == 0));
assert property(@(posedge rxclk) ((col_cnt == 4)) |-> local_fault);
assert property(@(posedge rxclk) ((col_cnt == 4) ##4 1) |-> (seq_type == 1));
assert property(@(posedge rxclk) ((col_cnt == 4)) |-> (seq_type == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) ##3 1) |-> remote_fault);
assert property(@(posedge rxclk) ((col_cnt == 4) ##4 1) |-> remote_fault);
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 1) |-> (last_seq_type == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) ##4 1) |-> fault_type);
assert property(@(posedge rxclk) ((col_cnt == 4) ##3 1) |-> fault_type);
assert property(@(posedge rxclk) (seq_cnt ##1 (col_cnt == 4)) |-> remote_fault);
assert property(@(posedge rxclk) (seq_cnt ##1 (col_cnt == 4)) |-> fault_type);
assert property(@(posedge rxclk) (reset ##1 1) |-> (seq_type == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 no_new_type ##3 1) |-> (last_seq_type == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##4 !no_new_type) |-> (last_seq_type == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 fault_type ##3 1) |-> (last_seq_type == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 get_one_fault ##3 1) |-> (last_seq_type == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 remote_fault ##3 1) |-> (last_seq_type == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 local_fault ##3 1) |-> (last_seq_type == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 (linkstate == 1) ##3 1) |-> (last_seq_type == 0));
assert property(@(posedge rxclk) (reset) |-> (seq_type == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 !seq_cnt ##3 1) |-> (last_seq_type == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##4 !local_fault) |-> (last_seq_type == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 (seq_type == 1) ##3 1) |-> (last_seq_type == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 local_fault) |-> (seq_type == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##3 local_fault ##1 1) |-> (last_seq_type == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 !local_fault ##2 1) |-> (last_seq_type == 0));
assert property(@(posedge rxclk) (!fault_type && (col_cnt == 4) ##2 1) |-> (seq_type == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) && fault_type ##4 1) |-> (last_seq_type == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 (last_seq_type == 1) ##2 1) |-> (last_seq_type == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##3 (last_seq_type == 1) ##1 1) |-> (last_seq_type == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 (seq_type == 1) ##2 1) |-> (last_seq_type == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 seq_cnt ##2 1) |-> (last_seq_type == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 (last_seq_type == 0)) |-> (seq_type == 0));
assert property(@(posedge rxclk) (reset ##2 1) |-> (last_seq_type == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 !local_fault ##1 1) |-> (seq_type == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 (linkstate == 2) ##1 1) |-> (seq_type == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) && (linkstate == 0) ##4 1) |-> (last_seq_type == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 fault_type) |-> (seq_type == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 get_one_fault) |-> (seq_type == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 (seq_type == 0) ##1 1) |-> (seq_type == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 seq_cnt ##1 1) |-> (seq_type == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 !seq_cnt) |-> (seq_type == 0));
assert property(@(posedge rxclk) (reset) |-> (last_seq_type == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) && remote_fault ##4 1) |-> (last_seq_type == 0));
assert property(@(posedge rxclk) (reset ##1 1) |-> (last_seq_type == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 !no_new_type ##1 1) |-> (seq_type == 0));
assert property(@(posedge rxclk) (!remote_fault && (col_cnt == 4) ##2 1) |-> (seq_type == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 remote_fault) |-> (seq_type == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) && (linkstate == 1) ##2 1) |-> (seq_type == 0));
assert property(@(posedge rxclk) (!local_fault ##1 (col_cnt == 4) ##2 1) |-> (last_seq_type == 1));
assert property(@(posedge rxclk) (seq_cnt ##1 (col_cnt == 4) ##3 1) |-> local_fault);
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 !seq_cnt ##2 1) |-> local_fault);
assert property(@(posedge rxclk) ((col_cnt == 4) ##3 (last_seq_type == 1)) |-> local_fault);
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 remote_fault ##2 1) |-> local_fault);
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 get_one_fault ##2 1) |-> local_fault);
assert property(@(posedge rxclk) ((col_cnt == 4) ##3 (seq_type == 0)) |-> local_fault);
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 (linkstate == 1) ##2 1) |-> local_fault);
assert property(@(posedge rxclk) ((col_cnt == 4) ##3 !reset_col_cnt) |-> local_fault);
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 (seq_type == 1) ##2 1) |-> local_fault);
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 local_fault ##2 1) |-> local_fault);
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 no_new_type ##2 1) |-> local_fault);
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 fault_type ##2 1) |-> local_fault);
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 !seq_cnt ##1 1) |-> (seq_type == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 (last_seq_type == 1)) |-> (seq_type == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 seq_cnt) |-> (seq_type == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 (last_seq_type == 1) ##1 1) |-> local_fault);
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 !fault_type ##1 1) |-> local_fault);
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 (seq_type == 1) ##1 1) |-> local_fault);
assert property(@(posedge rxclk) ((col_cnt == 4) && (linkstate == 0) ##3 1) |-> local_fault);
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 !remote_fault ##1 1) |-> local_fault);
assert property(@(posedge rxclk) ((col_cnt == 4) && fault_type ##3 1) |-> local_fault);
assert property(@(posedge rxclk) ((col_cnt == 4) && remote_fault ##3 1) |-> local_fault);
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 !get_one_fault ##1 1) |-> local_fault);
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 (seq_type == 1) ##1 1) |-> (seq_type == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 !fault_type) |-> (seq_type == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 !local_fault) |-> (seq_type == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 local_fault ##1 1) |-> (seq_type == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 (linkstate == 1) ##1 1) |-> (seq_type == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 !remote_fault) |-> (seq_type == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 !get_one_fault) |-> (seq_type == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 get_one_fault ##1 1) |-> (seq_type == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 no_new_type ##1 1) |-> (seq_type == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 seq_cnt ##1 1) |-> local_fault);
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 !local_fault ##1 1) |-> local_fault);
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 (seq_type == 1)) |-> (last_seq_type == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 seq_cnt) |-> (last_seq_type == 1));
assert property(@(posedge rxclk) (reset ##4 1) |-> (last_seq_type == 1));
assert property(@(posedge rxclk) (reset ##3 1) |-> (last_seq_type == 1));
assert property(@(posedge rxclk) (seq_cnt ##3 (col_cnt == 4)) |-> fault_type);
assert property(@(posedge rxclk) ((col_cnt == 4) && remote_fault ##2 1) |-> (seq_type == 1));
assert property(@(posedge rxclk) (reset ##4 1) |-> local_fault);
assert property(@(posedge rxclk) ((col_cnt == 4) && (linkstate == 0) ##2 1) |-> (seq_type == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 !fault_type) |-> (last_seq_type == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) && (linkstate == 0)) |-> remote_fault);
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 !get_one_fault) |-> (last_seq_type == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) && (linkstate == 0)) |-> fault_type);
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 !remote_fault) |-> (last_seq_type == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 !local_fault) |-> (last_seq_type == 1));
assert property(@(posedge rxclk) (local_fault ##1 (col_cnt == 4) ##2 1) |-> (seq_type == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) && (linkstate == 0) ##2 1) |-> (last_seq_type == 1));
assert property(@(posedge rxclk) (reset ##3 1) |-> local_fault);
assert property(@(posedge rxclk) (reset ##2 1) |-> local_fault);
assert property(@(posedge rxclk) (seq_cnt ##3 (col_cnt == 4)) |-> remote_fault);
assert property(@(posedge rxclk) ((col_cnt == 4) && fault_type ##2 1) |-> (seq_type == 1));
assert property(@(posedge rxclk) (reset ##2 1) |-> remote_fault);
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 fault_type ##1 1) |-> (last_seq_type == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 local_fault ##1 1) |-> (last_seq_type == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 (linkstate == 1) ##1 1) |-> (last_seq_type == 1));
assert property(@(posedge rxclk) (reset ##4 1) |-> (seq_type == 1));
assert property(@(posedge rxclk) (reset ##1 1) |-> remote_fault);
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 !seq_cnt ##1 1) |-> (last_seq_type == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 remote_fault ##1 1) |-> (last_seq_type == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 no_new_type ##1 1) |-> (last_seq_type == 1));
assert property(@(posedge rxclk) (reset ##3 1) |-> fault_type);
assert property(@(posedge rxclk) (reset ##3 1) |-> (seq_type == 1));
assert property(@(posedge rxclk) (reset ##2 1) |-> (seq_type == 1));
assert property(@(posedge rxclk) (reset ##3 1) |-> remote_fault);
assert property(@(posedge rxclk) (reset ##2 1) |-> fault_type);
assert property(@(posedge rxclk) (reset ##1 1) |-> fault_type);
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 get_one_fault ##1 1) |-> (last_seq_type == 1));
assert property(@(posedge rxclk) (!local_fault ##1 (col_cnt == 4)) |-> remote_fault);
assert property(@(posedge rxclk) (seq_cnt ##4 (col_cnt == 4)) |-> remote_fault);
assert property(@(posedge rxclk) (seq_cnt ##2 (col_cnt == 4) ##2 1) |-> (last_seq_type == 1));
assert property(@(posedge rxclk) (seq_cnt ##4 (col_cnt == 4)) |-> fault_type);
assert property(@(posedge rxclk) (!local_fault ##1 (col_cnt == 4)) |-> fault_type);
assert property(@(posedge rxclk) (seq_cnt ##2 (col_cnt == 4)) |-> fault_type);
assert property(@(posedge rxclk) (seq_cnt ##2 (col_cnt == 4)) |-> remote_fault);
assert property(@(posedge rxclk) (!local_fault ##1 (col_cnt == 4) ##2 1) |-> (seq_type == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 1) |-> no_new_type);
assert property(@(posedge rxclk) (seq_cnt ##1 (col_cnt == 4) ##1 1) |-> no_new_type);
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 fault_type) |-> no_new_type);
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 (linkstate == 1)) |-> no_new_type);
assert property(@(posedge rxclk) ((col_cnt == 4) && (linkstate == 0) ##1 1) |-> no_new_type);
assert property(@(posedge rxclk) (reset ##3 1) |-> no_new_type);
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 local_fault) |-> no_new_type);
assert property(@(posedge rxclk) ((col_cnt == 4) && fault_type ##1 1) |-> no_new_type);
assert property(@(posedge rxclk) (reset ##4 1) |-> no_new_type);
assert property(@(posedge rxclk) (seq_cnt ##2 (col_cnt == 4) ##1 1) |-> no_new_type);
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 !seq_cnt) |-> no_new_type);
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 get_one_fault) |-> no_new_type);
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 (seq_type == 1)) |-> no_new_type);
assert property(@(posedge rxclk) ((col_cnt == 4) && remote_fault ##1 1) |-> no_new_type);
assert property(@(posedge rxclk) (reset ##1 1) |-> no_new_type);
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 remote_fault) |-> no_new_type);
assert property(@(posedge rxclk) (!local_fault ##1 (col_cnt == 4) ##1 1) |-> no_new_type);
assert property(@(posedge rxclk) (seq_cnt ##3 (col_cnt == 4) ##1 1) |-> no_new_type);
assert property(@(posedge rxclk) (seq_cnt ##1 (col_cnt == 4) ##2 1) |-> (last_seq_type == 1));
assert property(@(posedge rxclk) (!seq_cnt ##1 (col_cnt == 4) ##1 1) |-> seq_cnt);
assert property(@(posedge rxclk) (local_fault ##1 (col_cnt == 4)) |-> (linkstate == 1));
assert property(@(posedge rxclk) (!seq_cnt ##2 (col_cnt == 4)) |-> (linkstate == 1));
assert property(@(posedge rxclk) (local_fault ##1 (col_cnt == 4) ##2 1) |-> get_one_fault);
assert property(@(posedge rxclk) (!seq_cnt ##4 (col_cnt == 4)) |-> (linkstate == 1));
assert property(@(posedge rxclk) (!seq_cnt ##3 (col_cnt == 4)) |-> (linkstate == 1));
assert property(@(posedge rxclk) ((col_cnt == 1)) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((col_cnt == 1) ##1 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((col_cnt == 1) ##2 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##3 1) |-> (linkstate == 1));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 1) |-> (linkstate == 1));
assert property(@(posedge rxclk) (!remote_fault && (col_cnt == 4)) |-> (linkstate == 1));
assert property(@(posedge rxclk) (!fault_type && (col_cnt == 4)) |-> (linkstate == 1));
assert property(@(posedge rxclk) (reset ##4 1) |-> (linkstate == 1));
assert property(@(posedge rxclk) (reset ##2 1) |-> (linkstate == 1));
assert property(@(posedge rxclk) (!seq_cnt ##3 (col_cnt == 4) ##1 1) |-> seq_cnt);
assert property(@(posedge rxclk) (!seq_cnt ##1 (col_cnt == 4)) |-> (linkstate == 1));
assert property(@(posedge rxclk) (!seq_cnt ##2 (col_cnt == 4) ##1 1) |-> seq_cnt);
assert property(@(posedge rxclk) ((link_fault == 1)) |-> reset_col_cnt);
assert property(@(posedge rxclk) ((link_fault == 1) ##1 1) |-> reset_col_cnt);
assert property(@(posedge rxclk) ((link_fault == 1) ##1 1) |-> (col_cnt == 0));
assert property(@(posedge rxclk) ((link_fault == 1)) |-> (col_cnt == 0));
assert property(@(posedge rxclk) ((link_fault == 1) ##2 1) |-> (col_cnt == 0));
assert property(@(posedge rxclk) ((linkstate == 0) ##4 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((linkstate == 0) ##2 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((linkstate == 0) ##1 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((col_cnt == 4)) |-> get_one_fault);
assert property(@(posedge rxclk) ((col_cnt == 4) ##3 1) |-> get_one_fault);
assert property(@(posedge rxclk) ((col_cnt == 4) ##4 1) |-> get_one_fault);
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 !seq_cnt) |-> get_one_fault);
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 (last_seq_type == 0)) |-> get_one_fault);
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 (seq_type == 0)) |-> get_one_fault);
assert property(@(posedge rxclk) ((col_cnt == 4) && (linkstate == 1) ##2 1) |-> get_one_fault);
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 seq_cnt ##1 1) |-> get_one_fault);
assert property(@(posedge rxclk) (!seq_cnt ##1 (col_cnt == 4) ##2 1) |-> get_one_fault);
assert property(@(posedge rxclk) (!seq_cnt ##2 (col_cnt == 4) ##2 1) |-> get_one_fault);
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 !no_new_type ##1 1) |-> get_one_fault);
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 !fault_type ##1 1) |-> get_one_fault);
assert property(@(posedge rxclk) (!fault_type && (col_cnt == 4) ##2 1) |-> get_one_fault);
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 !local_fault ##1 1) |-> get_one_fault);
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 (linkstate == 2) ##1 1) |-> get_one_fault);
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 !remote_fault ##1 1) |-> get_one_fault);
assert property(@(posedge rxclk) (!remote_fault && (col_cnt == 4) ##2 1) |-> get_one_fault);
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 (seq_type == 0) ##1 1) |-> get_one_fault);
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 !get_one_fault ##1 1) |-> get_one_fault);
assert property(@(posedge rxclk) (reset ##1 1) |-> get_one_fault);
assert property(@(posedge rxclk) (reset ##3 1) |-> get_one_fault);
assert property(@(posedge rxclk) (reset ##4 1) |-> get_one_fault);
assert property(@(posedge rxclk) (reset ##2 1) |-> get_one_fault);
assert property(@(posedge rxclk) (!local_fault ##1 (col_cnt == 4) ##3 1) |-> local_fault);
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 1) |-> reset_col_cnt);
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 1) |-> reset_col_cnt);
assert property(@(posedge rxclk) ((col_cnt == 4)) |-> reset_col_cnt);
assert property(@(posedge rxclk) ((col_cnt == 4) ##4 1) |-> reset_col_cnt);
assert property(@(posedge rxclk) ((col_cnt == 4) ##3 !local_fault) |-> reset_col_cnt);
assert property(@(posedge rxclk) ((col_cnt == 4) ##3 (last_seq_type == 0)) |-> reset_col_cnt);
assert property(@(posedge rxclk) ((col_cnt == 4) && (linkstate == 1) ##3 1) |-> reset_col_cnt);
assert property(@(posedge rxclk) (!seq_cnt ##1 (col_cnt == 4) ##3 1) |-> reset_col_cnt);
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 (last_seq_type == 0) ##1 1) |-> reset_col_cnt);
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 !fault_type ##2 1) |-> reset_col_cnt);
assert property(@(posedge rxclk) (!fault_type && (col_cnt == 4) ##3 1) |-> reset_col_cnt);
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 !no_new_type ##2 1) |-> reset_col_cnt);
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 (seq_type == 0) ##2 1) |-> reset_col_cnt);
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 seq_cnt ##2 1) |-> reset_col_cnt);
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 !get_one_fault ##2 1) |-> reset_col_cnt);
assert property(@(posedge rxclk) (!remote_fault && (col_cnt == 4) ##3 1) |-> reset_col_cnt);
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 (seq_type == 0) ##1 1) |-> reset_col_cnt);
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 !seq_cnt ##1 1) |-> reset_col_cnt);
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 !remote_fault ##2 1) |-> reset_col_cnt);
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 (linkstate == 2) ##2 1) |-> reset_col_cnt);
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 !local_fault ##2 1) |-> reset_col_cnt);
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 1) |-> (col_cnt == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 1) |-> (col_cnt == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##3 1) |-> (col_cnt == 0));
assert property(@(posedge rxclk) (reset ##3 1) |-> reset_col_cnt);
assert property(@(posedge rxclk) (reset ##1 1) |-> reset_col_cnt);
assert property(@(posedge rxclk) (reset ##3 1) |-> (col_cnt == 0));
assert property(@(posedge rxclk) (reset ##2 1) |-> (col_cnt == 0));
assert property(@(posedge rxclk) (reset ##1 1) |-> (col_cnt == 0));
assert property(@(posedge rxclk) (reset ##4 1) |-> (col_cnt == 0));
assert property(@(posedge rxclk) (reset ##2 1) |-> reset_col_cnt);
assert property(@(posedge rxclk) (reset) |-> (col_cnt == 0));
assert property(@(posedge rxclk) (reset ##4 1) |-> reset_col_cnt);
assert property(@(posedge rxclk) (!remote_fault && (col_cnt == 4) ##4 1) |-> (col_cnt == 0));
assert property(@(posedge rxclk) (!fault_type && (col_cnt == 4) ##4 1) |-> (col_cnt == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##4 local_fault) |-> (col_cnt == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##4 no_new_type) |-> (col_cnt == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) && (linkstate == 1) ##4 1) |-> (col_cnt == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 !get_one_fault ##3 1) |-> (col_cnt == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 (seq_type == 0) ##3 1) |-> (col_cnt == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##3 (last_seq_type == 0) ##1 1) |-> (col_cnt == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 (last_seq_type == 0) ##2 1) |-> (col_cnt == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 !fault_type ##3 1) |-> (col_cnt == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##3 !local_fault ##1 1) |-> (col_cnt == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 !local_fault ##3 1) |-> (col_cnt == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 (seq_type == 0) ##2 1) |-> (col_cnt == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 !seq_cnt ##2 1) |-> (col_cnt == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 (linkstate == 2) ##3 1) |-> (col_cnt == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 !remote_fault ##3 1) |-> (col_cnt == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 !no_new_type ##3 1) |-> (col_cnt == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 seq_cnt ##3 1) |-> (col_cnt == 0));
assert property(@(posedge rxclk) ((col_cnt >= 2) && (col_cnt <= 4) ##2 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((col_cnt >= 2) && (col_cnt <= 4) ##1 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((col_cnt >= 2) && (col_cnt <= 4)) |-> (link_fault == 0));
assert property(@(posedge rxclk) (!seq_cnt ##4 (col_cnt == 4)) |-> (linkstate >= 1) && (linkstate <= 2));
assert property(@(posedge rxclk) (!seq_cnt ##2 (col_cnt == 4)) |-> (linkstate >= 1) && (linkstate <= 2));
assert property(@(posedge rxclk) (!seq_cnt ##3 (col_cnt == 4)) |-> (linkstate >= 1) && (linkstate <= 2));
assert property(@(posedge rxclk) ((col_cnt >= 3) && (col_cnt <= 4) ##2 1) |-> (linkstate >= 1) && (linkstate <= 2));
assert property(@(posedge rxclk) ((col_cnt == 3) ##2 1) |-> (linkstate >= 1) && (linkstate <= 2));
assert property(@(posedge rxclk) ((col_cnt == 2)) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((col_cnt == 2) ##1 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((col_cnt == 2) ##2 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 1) |-> (linkstate >= 1) && (linkstate <= 2));
assert property(@(posedge rxclk) ((col_cnt == 4) ##4 1) |-> (linkstate >= 1) && (linkstate <= 2));
assert property(@(posedge rxclk) ((col_cnt == 4) ##3 1) |-> (linkstate >= 1) && (linkstate <= 2));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 1) |-> (linkstate >= 1) && (linkstate <= 2));
assert property(@(posedge rxclk) (!fault_type && (col_cnt == 4)) |-> (linkstate >= 1) && (linkstate <= 2));
assert property(@(posedge rxclk) (local_fault ##1 (col_cnt == 4)) |-> (linkstate >= 1) && (linkstate <= 2));
assert property(@(posedge rxclk) (!remote_fault && (col_cnt == 4)) |-> (linkstate >= 1) && (linkstate <= 2));
assert property(@(posedge rxclk) (reset ##2 1) |-> (linkstate >= 1) && (linkstate <= 2));
assert property(@(posedge rxclk) (reset ##3 1) |-> (linkstate >= 1) && (linkstate <= 2));
assert property(@(posedge rxclk) (reset ##4 1) |-> (linkstate >= 1) && (linkstate <= 2));
assert property(@(posedge rxclk) ((link_fault == 1) ##4 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((link_fault == 1) ##2 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((link_fault == 1) ##1 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) (!seq_cnt ##1 (col_cnt == 4)) |-> (linkstate >= 1) && (linkstate <= 2));
assert property(@(posedge rxclk) (local_fault ##1 (col_cnt == 4) ##3 1) |-> reset_col_cnt);
assert property(@(posedge rxclk) ((col_cnt >= 3) && (col_cnt <= 4) ##2 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((col_cnt >= 3) && (col_cnt <= 4)) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((col_cnt >= 3) && (col_cnt <= 4) ##4 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((col_cnt >= 3) && (col_cnt <= 4) ##1 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((col_cnt == 3)) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((col_cnt == 3) ##2 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((col_cnt == 3) ##1 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((col_cnt == 3) ##4 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) (local_fault ##1 (col_cnt == 3) ##3 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((col_cnt == 3) ##3 get_one_fault) |-> (link_fault == 0));
assert property(@(posedge rxclk) (!seq_cnt ##1 (col_cnt == 3) ##3 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((col_cnt == 3) ##3 local_fault) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((col_cnt == 3) ##3 remote_fault) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((col_cnt == 3) ##3 fault_type) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((col_cnt == 3) ##2 !local_fault ##1 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) (!local_fault && (col_cnt == 3) ##3 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((col_cnt == 3) ##3 (seq_type == 0)) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((col_cnt == 3) ##3 !no_new_type) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((col_cnt == 3) ##2 !remote_fault ##1 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((col_cnt == 3) ##2 !fault_type ##1 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((col_cnt == 3) ##1 !local_fault ##2 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((col_cnt == 3) && no_new_type ##3 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##4 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((col_cnt == 4)) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##3 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##2 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) ((col_cnt == 4) ##1 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) (!seq_cnt && (col_cnt == 3) ##3 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) (reset ##4 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) (reset ##3 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) (reset ##2 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) (reset ##1 1) |-> (link_fault == 0));
assert property(@(posedge rxclk) (reset) |-> (link_fault == 0));
endmodule