module i_cavlc_read_total_zeros(
input   chroma_DC_sel,
input     [3:0]   len_comb,
input     [3:0]   TotalZeros_G3,
input     [0:2]   rbsp_chroma_DC,         
input   ena,
input     [1:0]   len_chroma_DC,
input     [3:0]   TotalZeros_LE3,
input     [0:5]   rbsp_G3,        
input   [0:8]   rbsp,
input     [1:0]   TotalZeros_chroma_DC,
input     [0:8]   rbsp_LE3,       
input     [3:0]   len_LE3,
input   sel,
input DEFAULT_CLOCK,
input DEFAULT_RESET,
input  [3:0]   TotalZeros_comb,
input     [2:0]   len_G3,
input   [3:0]   TotalCoeff
);

assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC >= 0) && (len_chroma_DC <= 2)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC >= 0) && (len_chroma_DC <= 1)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 1)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 1)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC >= 0) && (len_chroma_DC <= 1)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 1)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 511)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 485) && (rbsp_LE3 <= 511)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 504) && (rbsp_LE3 <= 511)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 485) && (rbsp_LE3 <= 511)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 504) && (rbsp_LE3 <= 511)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 511)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 511)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 0)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7)) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 41) && (rbsp_G3 <= 63)) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 0) && (TotalZeros_comb <= 2)) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 5) && (rbsp_chroma_DC <= 7)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 50) && (rbsp_G3 <= 63)) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 52) && (rbsp_G3 <= 63)) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 0)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 55) && (rbsp_G3 <= 63)) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 0)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 55) && (rbsp_G3 <= 63)) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 0) && (len_comb <= 1)) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 0) && (TotalZeros_comb <= 1)) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 58) && (rbsp_G3 <= 63)) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC == 7)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 0) && (len_comb <= 1)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 0) && (TotalZeros_comb <= 1)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 0)) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 0)) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 0)) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 0)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 0)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 0)) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 0)) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 0)) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 0)) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 0)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 0)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 0)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11)) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1)) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15)) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) (ena) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 254)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) (sel) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 7)) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 5)) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 4)) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 4)) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1)) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3)) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3)) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 511)) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) (!sel) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) (!sel) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) (!ena) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) (!ena) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) (!sel) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) (!sel) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) (!sel) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) (!ena) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) (!ena) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6)) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 254) && (rbsp <= 511)) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) (!sel) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 254) && (rbsp <= 511)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) (!ena) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) (!ena) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 7)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) (!sel) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 254) && (rbsp <= 511)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 511)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 4)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) (!sel) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 254) && (rbsp <= 511)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 254) && (rbsp <= 511) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 511) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) (!ena) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) (!ena) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1)) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 10) && (TotalCoeff <= 15)) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 346)) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 178)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 10)) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 9)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 11) && (TotalCoeff <= 15)) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 11) && (TotalCoeff <= 15)) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 4)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 10) && (TotalCoeff <= 15)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 3) && (TotalCoeff <= 7)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 5) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511)) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1)) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1)) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1)) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 177) && (rbsp <= 341)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 252) && (rbsp <= 381)) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 127) && (rbsp <= 254)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 382)) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 128) && (rbsp <= 251)) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 178) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 178) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 1) && (TotalZeros_G3 <= 2)) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 1) && (TotalZeros_LE3 <= 4)) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2)) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1)) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1)) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 1) && (TotalZeros_LE3 <= 2)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 1) && (TotalZeros_LE3 <= 2)) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 0)) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 1)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 1)) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 7)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 7) && (TotalCoeff <= 11) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 7) && (TotalCoeff <= 11) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1)) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0)) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 3)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0)) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0)) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 3)) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 9)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 344) && (rbsp <= 511)) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 12) && (TotalCoeff <= 15)) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 12) && (TotalCoeff <= 15)) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 12) && (TotalCoeff <= 15)) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 4) && (TotalCoeff <= 7)) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 10) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 127)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 126)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 349) && (rbsp <= 511)) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 349) && (rbsp <= 511)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 287) && (rbsp <= 396)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 382) && (rbsp <= 511)) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 384) && (rbsp <= 511)) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 188) && (rbsp <= 285)) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6)) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 10)) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4)) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4)) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 4) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 253) && (rbsp <= 382)) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 253) && (rbsp <= 382)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 341) && (rbsp <= 511) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3)) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3)) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3)) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 258) && (rbsp <= 346)) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 346) && (rbsp <= 511)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 344) && (rbsp <= 511) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 344) && (rbsp <= 511)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 397) && (rbsp <= 511)) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) ##2 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 7) && (TotalCoeff <= 9)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 95) && (rbsp <= 187)) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 341)) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 346) && (rbsp <= 511) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 340)) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 90) && (rbsp <= 178)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 4) && (TotalCoeff <= 6)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 2)) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 13) && (TotalCoeff <= 15)) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 2)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 3) && (TotalCoeff <= 5)) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 238) && (rbsp <= 373)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 3) && (TotalCoeff <= 5)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 237) && (rbsp <= 372) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 1) && (TotalCoeff <= 3)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 8)) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 2)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 2)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 2)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 2)) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 89) && (rbsp <= 171)) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 172) && (rbsp <= 254)) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 89) && (rbsp <= 171)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 172) && (rbsp <= 254)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 355) && (rbsp <= 511) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 253) && (rbsp <= 382)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 12) && (TotalCoeff <= 14)) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 93)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 252) && (rbsp <= 381) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 256)) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 89)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 87)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 87)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 341) && (rbsp <= 427)) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 344) && (rbsp <= 428)) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 252) && (rbsp <= 318)) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 428) && (rbsp <= 511)) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 9)) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 9)) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1)) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1)) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 430) && (rbsp <= 511)) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 429) && (rbsp <= 511)) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 429)) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 187) && (rbsp <= 254)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 186) && (rbsp <= 251)) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 9) && (TotalCoeff <= 10)) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 117) && (rbsp <= 178)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 435) && (rbsp <= 511)) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 7) && (TotalCoeff <= 10) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 1)) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 10) && (TotalCoeff <= 11)) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 10) && (TotalCoeff <= 11)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 10) && (TotalCoeff <= 11)) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 10) && (TotalCoeff <= 11)) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 126) && (rbsp <= 186)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 14) && (TotalCoeff <= 15)) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 10) && (TotalCoeff <= 11)) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 14) && (TotalCoeff <= 15)) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 445) && (rbsp <= 511)) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 6)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 384) && (rbsp <= 511)) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 14) && (TotalCoeff <= 15)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 14) && (TotalCoeff <= 15)) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 14) && (TotalCoeff <= 15)) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 128) && (rbsp <= 185)) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 4) && (TotalCoeff <= 5)) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 2) && (TotalCoeff <= 3)) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 384) && (rbsp <= 511)) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 319) && (rbsp <= 381)) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 3) && (TotalCoeff <= 4)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 235) && (rbsp <= 291)) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 384) && (rbsp <= 511)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 4) && (TotalCoeff <= 5)) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 104) && (rbsp <= 156)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 287) && (rbsp <= 340)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 292) && (rbsp <= 346)) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 3) && (TotalCoeff <= 6) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 3) && (TotalCoeff <= 4)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 363) && (rbsp <= 433)) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 2) && (TotalCoeff <= 5) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 1) && (TotalCoeff <= 2)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 1) && (TotalCoeff <= 2)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 11) && (TotalCoeff <= 12)) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 66) && (rbsp <= 127)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 1) && (TotalCoeff <= 2)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 1)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 451) && (rbsp <= 511)) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 7) && (TotalCoeff <= 8)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 1)) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 306) && (rbsp <= 362)) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 1)) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 66) && (rbsp <= 125)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 232)) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 7)) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 373) && (rbsp <= 511) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 373) && (rbsp <= 511) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 373) && (rbsp <= 511) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 235) && (rbsp <= 285)) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 64)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 12) && (TotalCoeff <= 13)) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 7)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 13) && (TotalCoeff <= 14)) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 305)) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 7)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 7)) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 7)) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 12) && (TotalCoeff <= 13)) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 64)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 252) && (rbsp <= 299)) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 374) && (rbsp <= 511)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 375) && (rbsp <= 511)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 455) && (rbsp <= 511)) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 157) && (rbsp <= 207)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 258) && (rbsp <= 301)) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 134) && (rbsp <= 178)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 140) && (rbsp <= 187)) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 58)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 397) && (rbsp <= 511)) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 341) && (rbsp <= 396)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 59) && (rbsp <= 116)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 2) && (len_comb <= 7)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 297) && (rbsp <= 340)) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 188) && (rbsp <= 232)) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 376) && (rbsp <= 511) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 381) && (rbsp <= 511)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 400)) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 2) && (len_comb <= 7)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 129) && (rbsp <= 171)) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 382) && (rbsp <= 443)) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 463) && (rbsp <= 511)) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 1) && (TotalZeros_comb <= 2)) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 302) && (rbsp <= 346)) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 95) && (rbsp <= 139)) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 101) && (rbsp <= 205) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 1) && (TotalZeros_comb <= 2)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 296)) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 1) && (TotalZeros_comb <= 2)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 168) && (rbsp <= 209)) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 466) && (rbsp <= 511)) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 128) && (rbsp <= 167)) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 212) && (rbsp <= 254)) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 300) && (rbsp <= 341)) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 209) && (rbsp <= 254)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 140) && (rbsp <= 178)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 50)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 48)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 212) && (rbsp <= 251)) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 89) && (rbsp <= 132)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 213) && (rbsp <= 251)) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 288) && (rbsp <= 397) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 172) && (rbsp <= 209)) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 52) && (rbsp <= 102)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 401) && (rbsp <= 454)) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 384) && (rbsp <= 511)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 216) && (rbsp <= 256)) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 212) && (rbsp <= 313) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 397) && (rbsp <= 449)) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 102) && (rbsp <= 139)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 355) && (rbsp <= 396)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 44)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 44)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 9)) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 9)) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 9)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 341) && (rbsp <= 382)) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 49) && (rbsp <= 93)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 307) && (rbsp <= 341)) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 44) && (rbsp <= 87)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 215) && (rbsp <= 251)) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 11)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 89) && (rbsp <= 128)) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 9)) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 42)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 384) && (rbsp <= 511) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 46) && (rbsp <= 87)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 46) && (rbsp <= 87)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 89) && (rbsp <= 127)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 9)) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 215)) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 384) && (rbsp <= 511) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 223) && (rbsp <= 321) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 475) && (rbsp <= 511)) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 475) && (rbsp <= 511)) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 344) && (rbsp <= 381)) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 252) && (rbsp <= 285)) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 214)) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 293) && (rbsp <= 321)) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 428) && (rbsp <= 472)) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 384) && (rbsp <= 427)) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 11)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 11)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 126) && (rbsp <= 156)) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 277) && (rbsp <= 306)) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 15)) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 15)) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 15)) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 1)) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 1)) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 219) && (rbsp <= 253)) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 254) && (rbsp <= 285)) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 318) && (rbsp <= 352)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 287) && (rbsp <= 317)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 421) && (rbsp <= 464)) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 188) && (rbsp <= 218)) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 287) && (rbsp <= 316)) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 15)) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 263) && (rbsp <= 292)) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 1)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 8)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 212)) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 8)) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 8)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 15)) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 2) && (TotalZeros_comb <= 4)) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 311) && (rbsp <= 340)) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 435) && (rbsp <= 472)) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 287) && (rbsp <= 314)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 419) && (rbsp <= 462)) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 11)) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 11)) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 40)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 89) && (rbsp <= 121)) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 283) && (rbsp <= 310)) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 122) && (rbsp <= 148)) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 95) && (rbsp <= 125)) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 277) && (rbsp <= 301)) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 209) && (rbsp <= 309) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 8)) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 6)) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 6)) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 6)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 6)) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 66) && (rbsp <= 101)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 317) && (rbsp <= 346)) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 11)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 8)) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3)) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 6)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 6)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 2) && (TotalZeros_comb <= 4)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 224) && (rbsp <= 254)) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 2)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 5)) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 5)) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 382) && (rbsp <= 420)) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 2)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 5)) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 381) && (rbsp <= 417)) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 380)) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 2)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 5)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 10)) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 2) && (TotalZeros_comb <= 4)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 32) && (rbsp <= 64)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 206)) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 410) && (rbsp <= 511)) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 10)) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 2)) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 11)) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3)) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 4)) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 3)) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 4)) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 32) && (rbsp <= 62)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 98) && (rbsp <= 127)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 3)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 4)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 3)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 4)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 3)) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2)) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2)) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2)) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 0)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 282)) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 261) && (rbsp <= 285)) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 6)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 1) && (rbsp_G3 <= 40)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 0)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 0)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 128) && (rbsp <= 151)) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 0)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 1) && (rbsp_G3 <= 40)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 206) && (rbsp <= 306)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 6)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 0)) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 32) && (rbsp <= 61)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 13)) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 5)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 2)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 13)) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 13)) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 10)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 5)) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 3) && (len_comb <= 7)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 291) && (rbsp <= 313)) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 135) && (rbsp <= 158)) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 157) && (rbsp <= 187)) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 482) && (rbsp <= 511)) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 451) && (rbsp <= 481)) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 3)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 4)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 6)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3)) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 6)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 4)) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 1)) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 1)) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 1)) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 1)) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 1)) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 1)) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 1)) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 397) && (rbsp <= 433)) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 315) && (rbsp <= 341)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 382) && (rbsp <= 415)) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 64) && (rbsp <= 96)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 10)) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 0)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2)) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 0)) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 172) && (rbsp <= 196)) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 1)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 314) && (rbsp <= 340)) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 160) && (rbsp <= 187)) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 1)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 2)) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 1)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 1)) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 13)) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 355) && (rbsp <= 381)) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 3)) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 235) && (rbsp <= 262)) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 29) && (rbsp <= 57)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 62) && (rbsp <= 93)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 153) && (rbsp <= 178)) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 326) && (rbsp <= 352)) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 14)) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 0)) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 13)) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 2)) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 1)) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 14)) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 485) && (rbsp <= 511)) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 58) && (rbsp <= 87)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 197) && (rbsp <= 223)) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 485) && (rbsp <= 511)) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 455) && (rbsp <= 483)) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 26) && (rbsp <= 50)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 104) && (rbsp <= 127)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 1)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 1)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 1)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 1)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 370) && (rbsp <= 397)) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 341) && (rbsp <= 369)) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 131) && (rbsp <= 151)) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 12)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 12)) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 12)) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 486) && (rbsp <= 511)) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 235) && (rbsp <= 260)) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 486) && (rbsp <= 511)) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 207) && (rbsp <= 232)) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 457) && (rbsp <= 483)) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 188) && (rbsp <= 207)) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 424) && (rbsp <= 454)) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 188) && (rbsp <= 207)) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 344) && (rbsp <= 369)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 302) && (rbsp <= 325)) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 1)) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 30)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 209) && (rbsp <= 232)) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 3) && (rbsp_chroma_DC <= 5)) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 209) && (rbsp <= 232)) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 382) && (rbsp <= 408)) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 460) && (rbsp <= 485)) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 30)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 7)) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 7)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 30)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 14)) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 461) && (rbsp <= 485)) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 360) && (rbsp <= 382)) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 26) && (rbsp <= 48)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 134) && (rbsp <= 150)) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 416) && (rbsp <= 449)) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 370) && (rbsp <= 396)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 12)) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 460) && (rbsp <= 483)) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 252) && (rbsp <= 276)) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 12)) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 399) && (rbsp <= 427)) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 28)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 111) && (rbsp <= 130)) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 114) && (rbsp <= 134)) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 324) && (rbsp <= 346)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 52) && (rbsp <= 77)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 7)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 324) && (rbsp <= 346)) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 31)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 384) && (rbsp <= 406)) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 372) && (rbsp <= 396)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 7)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 3)) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 3)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 22) && (rbsp <= 44)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 22) && (rbsp <= 44)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 305) && (rbsp <= 321)) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 305) && (rbsp <= 321)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 371)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 428) && (rbsp <= 456)) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 149) && (rbsp <= 171)) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 113) && (rbsp <= 132)) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 414) && (rbsp <= 511)) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 66) && (rbsp <= 87)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 140) && (rbsp <= 155)) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 307) && (rbsp <= 408)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 307) && (rbsp <= 408) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 114) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 114) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 26) && (rbsp_G3 <= 49)) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 24)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 2)) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 2)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 359) && (rbsp <= 377)) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 235) && (rbsp <= 254)) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 2)) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 287) && (rbsp <= 303)) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 287) && (rbsp <= 303)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 49) && (rbsp <= 70)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 397) && (rbsp <= 421)) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 309) && (rbsp <= 410)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 400) && (rbsp <= 511)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 2) && (TotalZeros_comb <= 3)) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 435) && (rbsp <= 458)) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 361) && (rbsp <= 378)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 435) && (rbsp <= 458)) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 79) && (rbsp <= 102)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 3)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 324) && (rbsp <= 417)) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 92) && (rbsp <= 187) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 22)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 272)) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 274) && (rbsp <= 290)) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 324) && (rbsp <= 417)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 1) && (rbsp_G3 <= 26)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 1) && (rbsp_chroma_DC <= 2)) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 73) && (rbsp <= 93)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 110) && (rbsp <= 125)) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 153) && (rbsp <= 171)) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 169) && (rbsp <= 187)) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 324) && (rbsp <= 341)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 22)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 89) && (rbsp <= 110)) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 4)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 271)) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 22)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 114) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 26) && (rbsp_G3 <= 49)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 2)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 89) && (rbsp <= 109)) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 324) && (rbsp <= 340)) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 114) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 397) && (rbsp <= 511) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 1) && (rbsp_G3 <= 24)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 33) && (rbsp_G3 <= 51)) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 2) && (rbsp_chroma_DC <= 3)) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 19)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 19)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 28) && (rbsp_G3 <= 50)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 2) && (rbsp_chroma_DC <= 3)) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 5) && (TotalZeros_comb <= 11)) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 5) && (TotalZeros_comb <= 11)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 272) && (rbsp <= 285)) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 95) && (rbsp <= 113)) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 46) && (rbsp <= 64)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 95) && (rbsp <= 112)) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 151) && (rbsp <= 168)) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 410) && (rbsp <= 433)) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 424) && (rbsp <= 511)) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 46) && (rbsp <= 62)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 414) && (rbsp <= 433)) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 172) && (rbsp <= 187)) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 32) && (rbsp_G3 <= 51)) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##1 !sel ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 34) && (rbsp_G3 <= 52)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 442) && (rbsp <= 460)) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 341) && (rbsp <= 359)) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 379) && (rbsp <= 396)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 344) && (rbsp <= 360)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 394) && (rbsp <= 410)) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 341) && (rbsp <= 358)) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 126) && (rbsp <= 139)) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 115) && (rbsp <= 126)) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 156) && (rbsp <= 171)) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 399) && (rbsp <= 511) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 33) && (rbsp_G3 <= 51)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 16) && (rbsp_G3 <= 32)) |-> (rbsp_G3 >= 16) && (rbsp_G3 <= 32));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 378) && (rbsp <= 393)) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 408) && (rbsp <= 427)) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 127) && (rbsp <= 139)) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 5) && (TotalZeros_comb <= 11)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 36) && (rbsp_G3 <= 49)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 1)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 419) && (rbsp <= 511)) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 32) && (rbsp_G3 <= 46)) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 5) && (TotalZeros_comb <= 11)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 23) && (rbsp_G3 <= 40)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 4)) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 79) && (rbsp <= 93)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 16) && (rbsp_G3 <= 31)) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 37) && (rbsp_G3 <= 49)) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 64) && (rbsp <= 77)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 397) && (rbsp <= 410)) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 314) && (rbsp <= 414)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 419) && (rbsp <= 511)) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 414) && (rbsp <= 427)) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 419) && (rbsp <= 511)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 15)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 42) && (rbsp_G3 <= 54)) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 15) && (rbsp_G3 <= 28)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 5) && (TotalZeros_comb <= 7)) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 12) && (rbsp_G3 <= 24)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 2)) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 2)) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 104) && (rbsp <= 114)) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 240) && (rbsp <= 325) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 15)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 15) && (rbsp_G3 <= 33)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1)) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 14)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 14));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 14) && (rbsp_G3 <= 26)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 4) && (TotalCoeff <= 6) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 4) && (TotalCoeff <= 6) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 13)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 6) && (TotalZeros_comb <= 11)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 89) && (rbsp <= 102)) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 12) && (rbsp_G3 <= 23)) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 15) && (rbsp_G3 <= 32)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 15) && (rbsp_G3 <= 31)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 339)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC == 1)) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 28) && (rbsp_G3 <= 40)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC == 1)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 339)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 339)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 427) && (rbsp <= 511)) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC == 1)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 30) && (rbsp_G3 <= 41)) |-> (rbsp_G3 >= 30) && (rbsp_G3 <= 41));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 5) && (TotalZeros_comb <= 6)) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 42) && (rbsp_G3 <= 51)) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 339)) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 15) && (rbsp_G3 <= 24)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 41) && (rbsp_G3 <= 54)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 43) && (rbsp_G3 <= 51)) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 11)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC == 3)) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC == 3)) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC == 3)) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 428) && (rbsp <= 441)) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 11)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC == 3)) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC == 3)) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC == 3)) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 41) && (rbsp_G3 <= 54)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC == 2)) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC == 2)) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 6) && (TotalZeros_G3 <= 9)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 10)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 48) && (rbsp_G3 <= 56)) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC == 2)) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 44) && (rbsp_G3 <= 55)) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 10)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 6) && (rbsp_G3 <= 15)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 16) && (rbsp_G3 <= 23)) |-> (rbsp_G3 >= 16) && (rbsp_G3 <= 32));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 26) && (rbsp_G3 <= 36)) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 3)) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 14) && (rbsp_G3 <= 26)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 24) && (rbsp_G3 <= 34)) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 18) && (rbsp_G3 <= 31)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 14)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 6) && (rbsp_G3 <= 15)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 339)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 14) && (rbsp_G3 <= 26)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 394)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 42) && (rbsp_G3 <= 48)) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 33) && (rbsp_G3 <= 41)) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 43) && (rbsp_G3 <= 49)) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 17) && (rbsp_G3 <= 23)) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 50) && (rbsp_G3 <= 57)) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 4) && (TotalCoeff <= 6) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 2) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 4) && (TotalCoeff <= 6) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 1) && (rbsp_G3 <= 14)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 43) && (rbsp_G3 <= 49)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 394)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 22) && (rbsp_G3 <= 31)) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 32) && (rbsp_G3 <= 40)) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 394)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 1) && (rbsp_G3 <= 14)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 4) && (len_comb <= 7)) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 7) && (rbsp_G3 <= 14)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 14));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 26) && (rbsp_G3 <= 34)) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 7) && (rbsp_G3 <= 14)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 11)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 4) && (len_comb <= 7)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 2) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 2) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 2)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 2) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC == 4)) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 1) && (rbsp_G3 <= 13)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 28) && (rbsp_G3 <= 40)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC == 4)) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 394)) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 32) && (rbsp_G3 <= 43)) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 15) && (rbsp_G3 <= 21)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 36) && (rbsp_G3 <= 42)) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 28) && (rbsp_G3 <= 40)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 1) && (rbsp_G3 <= 13)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 36) && (rbsp_G3 <= 42)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 44) && (rbsp_G3 <= 49)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 339)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 41) && (rbsp_G3 <= 46)) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 20) && (rbsp_G3 <= 31)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 3) && (TotalCoeff <= 5) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 9)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 339)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 24) && (rbsp_G3 <= 32)) |-> (rbsp_G3 >= 16) && (rbsp_G3 <= 32));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 5)) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 42) && (rbsp_G3 <= 46)) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 7) && (rbsp_G3 <= 13)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 12) && (rbsp_G3 <= 18)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 19) && (rbsp_G3 <= 24)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 9)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 339)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 16) && (rbsp_G3 <= 21)) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 42) && (rbsp_G3 <= 46)) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 3) && (TotalCoeff <= 5) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 36) && (rbsp_G3 <= 41)) |-> (rbsp_G3 >= 30) && (rbsp_G3 <= 41));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 22) && (rbsp_G3 <= 28)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 44) && (rbsp_G3 <= 48)) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 21) && (rbsp_G3 <= 26)) |-> (rbsp_G3 >= 16) && (rbsp_G3 <= 32));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 37) && (rbsp_G3 <= 42)) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 7) && (TotalZeros_G3 <= 11)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 48) && (rbsp_G3 <= 53)) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 28) && (rbsp_G3 <= 34)) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 53) && (rbsp_G3 <= 58)) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 339)) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 21) && (rbsp_G3 <= 26)) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 339)) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 8) && (rbsp_G3 <= 17)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##2 (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 394)) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 16) && (rbsp_G3 <= 20)) |-> (rbsp_G3 >= 16) && (rbsp_G3 <= 32));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 8) && (TotalZeros_comb <= 11)) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 6) && (rbsp_G3 <= 11)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 3) && (TotalZeros_LE3 <= 9)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 3) && (TotalZeros_LE3 <= 9)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 54) && (rbsp_G3 <= 58)) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 6) && (rbsp_G3 <= 11)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 54) && (rbsp_G3 <= 58)) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 48) && (rbsp_G3 <= 52)) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 394)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 3) && (TotalZeros_LE3 <= 9)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 394)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 16) && (rbsp_G3 <= 20)) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 256) && (rbsp_LE3 <= 373)) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 32) && (rbsp_G3 <= 37)) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 3) && (TotalZeros_LE3 <= 9)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 394)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 394)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 136)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 394)) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 7) && (TotalZeros_G3 <= 9)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 4) && (len_G3 <= 6)) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 394)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 30) && (rbsp_G3 <= 34)) |-> (rbsp_G3 >= 30) && (rbsp_G3 <= 41));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 136)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 6)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 14));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 20) && (rbsp_G3 <= 23)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 49) && (rbsp_G3 <= 54)) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 20) && (rbsp_G3 <= 23)) |-> (rbsp_G3 >= 16) && (rbsp_G3 <= 32));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 37) && (rbsp_G3 <= 41)) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 6)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 4) && (len_G3 <= 6)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 30) && (rbsp_G3 <= 34)) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 4) && (len_G3 <= 6)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 6) && (rbsp_G3 <= 10)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 136)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 20) && (rbsp_G3 <= 23)) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 36) && (rbsp_G3 <= 39)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 136)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) && (rbsp >= 256) && (rbsp <= 511) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 136)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 394)) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 115)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2)) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 8) && (TotalZeros_comb <= 9)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 15) && (rbsp_G3 <= 19)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 4)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 44) && (rbsp_G3 <= 46)) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 6) && (rbsp_G3 <= 9)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 10) && (rbsp_G3 <= 15)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 6)) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 8) && (TotalZeros_comb <= 9)) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 37) && (rbsp_G3 <= 40)) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 48) && (rbsp_G3 <= 51)) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 44) && (rbsp_G3 <= 46)) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 4)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2)) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2)) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2)) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2)) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 6)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 8) && (TotalZeros_G3 <= 11)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 2) && (TotalZeros_LE3 <= 4)) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2)) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 4) && (len_G3 <= 5)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 136)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 6)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 44) && (rbsp_G3 <= 46)) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 4)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 4)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 8) && (rbsp_G3 <= 11)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2)) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 256) && (rbsp_LE3 <= 339)) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 15) && (rbsp_G3 <= 19)) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 44) && (rbsp_G3 <= 46)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 4)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 115)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 115)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 30) && (rbsp_G3 <= 34)) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 20) && (rbsp_G3 <= 22)) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 21) && (rbsp_G3 <= 24)) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 373)) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 115)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 136)) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 394)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 16) && (rbsp_G3 <= 22)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7)) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4)) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7)) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 339)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 24) && (rbsp_G3 <= 28)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 50) && (rbsp_G3 <= 54)) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 28) && (rbsp_G3 <= 32)) |-> (rbsp_G3 >= 16) && (rbsp_G3 <= 32));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 24) && (rbsp_G3 <= 28)) |-> (rbsp_G3 >= 16) && (rbsp_G3 <= 32));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 16) && (rbsp_G3 <= 19)) |-> (rbsp_G3 >= 16) && (rbsp_G3 <= 32));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 3) && (TotalZeros_LE3 <= 5)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 3) && (TotalZeros_LE3 <= 5)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 45) && (rbsp_G3 <= 46)) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 86)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC == 0)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 6) && (rbsp_G3 <= 9)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 4)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 86)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC == 0)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 24) && (rbsp_G3 <= 28)) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 11) && (rbsp_G3 <= 15)) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 15) && (rbsp_G3 <= 18)) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 37) && (rbsp_G3 <= 39)) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 32) && (rbsp_G3 <= 36)) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 12) && (rbsp_G3 <= 16)) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 339)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC == 0)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 16) && (rbsp_G3 <= 19)) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 394)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2)) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 115)) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 4) && (len_comb <= 7)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 67)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 6)) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 67)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 339)) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 8) && (TotalZeros_G3 <= 9)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 6)) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 288)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 33) && (rbsp_G3 <= 36)) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 3) && (TotalZeros_LE3 <= 4)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 6)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 11)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 50) && (rbsp_G3 <= 53)) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 10) && (rbsp_G3 <= 14)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC == 0)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 28) && (rbsp_G3 <= 31)) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 11) && (rbsp_G3 <= 14)) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 16) && (rbsp_G3 <= 18)) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 339)) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 50) && (rbsp_G3 <= 53)) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 28) && (rbsp_G3 <= 31)) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 43) && (rbsp_G3 <= 45)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 40) && (rbsp_G3 <= 43)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 339)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 67)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 3) && (TotalZeros_LE3 <= 4)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 339)) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 16) && (rbsp_G3 <= 18)) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 23) && (rbsp_G3 <= 26)) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 28) && (rbsp_G3 <= 31)) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 19) && (rbsp_G3 <= 21)) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 339)) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 38) && (rbsp_G3 <= 41)) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 3) && (TotalZeros_LE3 <= 4)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 67)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5)) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5)) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 4) && (len_LE3 <= 7)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 331)) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4)) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5)) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 4) && (len_LE3 <= 7)) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 1)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 50) && (rbsp_G3 <= 52)) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 48) && (rbsp_G3 <= 49)) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 30) && (rbsp_G3 <= 32)) |-> (rbsp_G3 >= 16) && (rbsp_G3 <= 32));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 41) && (rbsp_G3 <= 43)) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 26) && (rbsp_G3 <= 28)) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 48) && (rbsp_G3 <= 49)) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 1)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 1)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 26) && (rbsp_G3 <= 28)) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 11) && (rbsp_G3 <= 13)) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 67)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 221) && (rbsp_LE3 <= 288)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 36) && (rbsp_G3 <= 37)) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 38) && (rbsp_G3 <= 40)) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 32) && (rbsp_G3 <= 34)) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 331)) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 12) && (rbsp_G3 <= 14)) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 240)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 12) && (rbsp_G3 <= 19)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4)) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4)) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 24) && (rbsp_G3 <= 26)) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 256)) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 32) && (rbsp_G3 <= 34)) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 48) && (rbsp_G3 <= 49)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 52)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 256)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 339)) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 339) ##1 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 240)) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 256)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 67)) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256)) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 86)) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 5) && (len_G3 <= 6)) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 221) && (rbsp_LE3 <= 256)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 5) && (len_G3 <= 6)) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 50)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 52) && (rbsp_LE3 <= 115)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 4) && (len_LE3 <= 5)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 86)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 4) && (len_LE3 <= 5)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 7)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 13) && (rbsp_G3 <= 15)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 9)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 5) && (len_G3 <= 6)) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 42) && (rbsp_G3 <= 43)) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 8)) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 7)) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 5) && (TotalZeros_LE3 <= 9)) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 9)) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 9) && (TotalZeros_G3 <= 11)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 3)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 2) && (TotalZeros_chroma_DC <= 3)) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 3)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 51) && (rbsp_G3 <= 53)) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 86)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 5) && (len_G3 <= 6)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 86)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 5) && (len_G3 <= 6)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 240)) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 30) && (rbsp_G3 <= 31)) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 22) && (rbsp_G3 <= 23)) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 320) && (rbsp_LE3 <= 331) ##1 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 2) && (TotalZeros_chroma_DC <= 3)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 9)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 5) && (len_G3 <= 6)) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 28) && (rbsp_G3 <= 30)) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 221) && (rbsp_LE3 <= 256)) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 46)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 40) && (rbsp_G3 <= 42)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 326) && (rbsp_LE3 <= 339)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 5) && (len_G3 <= 6)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 2) && (TotalZeros_chroma_DC <= 3)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 9)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 23) && (rbsp_G3 <= 31)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 5) && (TotalZeros_LE3 <= 9)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 320) && (rbsp_LE3 <= 331) ##3 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 86)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 3)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 8) && (TotalZeros_comb <= 11)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 394)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 3) && (TotalZeros_LE3 <= 9)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 5) && (TotalZeros_LE3 <= 9) ##3 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 52) ##3 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 394)) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 256)) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 30) && (rbsp_G3 <= 31)) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 19) && (rbsp_G3 <= 20)) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 238) && (rbsp_LE3 <= 288) ##3 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 86) ##2 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 50) ##1 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 256) && (rbsp_LE3 <= 394)) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 3)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 320) && (rbsp_LE3 <= 331) ##3 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 86)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 5) && (TotalZeros_LE3 <= 9)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 2) && (TotalZeros_chroma_DC <= 3)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 4) && (TotalZeros_LE3 <= 7) ##1 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 331) && (rbsp_LE3 <= 394) ##2 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 115) ##2 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 256)) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 8)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 328) ##2 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 328) ##4 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5)) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2)) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136)) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7)) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3)) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5)) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 67)) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 238) && (rbsp_LE3 <= 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5)) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 67)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 238) && (rbsp_LE3 <= 256)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5)) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7)) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 67)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 394)) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 326) && (rbsp_LE3 <= 331)) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 7) && (TotalZeros_LE3 <= 9)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 7)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7)) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5)) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 394)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 7) && (TotalZeros_LE3 <= 9)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 3) && (rbsp_G3 <= 4)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7)) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3)) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2)) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2)) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3)) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3)) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 4) && (TotalZeros_LE3 <= 5)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2)) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136)) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2)) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3)) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 7) && (TotalZeros_LE3 <= 9)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 9)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2)) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 394)) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 3) && (rbsp_G3 <= 4)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 3) && (rbsp_G3 <= 4)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 221) && (rbsp_LE3 <= 240)) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 26)) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 22)) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 14) && (rbsp_G3 <= 16)) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 18) && (rbsp_G3 <= 19)) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 17)) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 328) && (rbsp_LE3 <= 339) ##4 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 326) && (rbsp_LE3 <= 331) ##1 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 4) && (TotalZeros_LE3 <= 5) ##2 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##2 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 4) && (TotalZeros_LE3 <= 5) ##3 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 326) && (rbsp_LE3 <= 331)) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 86)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 4) && (TotalZeros_LE3 <= 5) ##2 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##2 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 238) && (rbsp_LE3 <= 256) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 238) && (rbsp_LE3 <= 256) ##2 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5)) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 238) && (rbsp_LE3 <= 256)) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 238) && (rbsp_LE3 <= 256) ##2 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 328) && (rbsp_LE3 <= 339) ##4 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 326) && (rbsp_LE3 <= 331)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 394)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 50) ##1 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##4 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 67)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 67) && (rbsp_LE3 <= 115)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 240) && (rbsp_LE3 <= 288) ##1 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 4) && (TotalZeros_LE3 <= 5)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 331) && (rbsp_LE3 <= 364) ##1 1) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3)) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 256) && (rbsp_LE3 <= 317) ##1 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 7) && (TotalZeros_LE3 <= 9) ##3 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##3 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 326) ##4 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 326) ##2 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 2) && (TotalZeros_LE3 <= 5)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 136)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 326) && (rbsp_LE3 <= 339) ##1 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 22)) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 26)) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 23) && (rbsp_G3 <= 24)) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 221) && (rbsp_LE3 <= 240)) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 238) && (rbsp_LE3 <= 256) ##3 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 4) && (TotalZeros_LE3 <= 5) ##2 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 52) && (rbsp_LE3 <= 86) ##1 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 67) ##2 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 328) && (rbsp_LE3 <= 339) ##4 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 193) ##4 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 221) ##1 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 394) ##4 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 394)) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 4) && (TotalZeros_LE3 <= 5) ##1 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 320) ##4 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 4) && (TotalZeros_LE3 <= 7) ##1 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 4) && (TotalZeros_LE3 <= 5)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17) ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 4) && (TotalZeros_LE3 <= 5) ##1 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 86)) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 320) && (rbsp_LE3 <= 331) ##3 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 2) && (TotalZeros_chroma_DC <= 3)) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 8) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 7) && (TotalZeros_LE3 <= 9) ##3 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17) ##3 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 326) ##2 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 238) && (rbsp_LE3 <= 256) ##2 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7)) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4)) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136)) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 115)) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11)) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 11)) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 52)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4)) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 52)) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 11)) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 17)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11)) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136)) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9)) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5)) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11)) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 11)) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5)) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 52)) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11)) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5)) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 11)) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 221)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 52)) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 238) && (rbsp_LE3 <= 240)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 221) && (rbsp_LE3 <= 238)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 240) && (rbsp_LE3 <= 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 238) && (rbsp_LE3 <= 240)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 240) && (rbsp_LE3 <= 256)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 221)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 193)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 52)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 17)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 221) && (rbsp_LE3 <= 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5)) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9)) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11)) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 11)) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 115)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 6) && (rbsp_G3 <= 7)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 52)) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 115)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 52)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 17)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 67) && (rbsp_LE3 <= 86)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 17)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 52)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 320)) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 373)) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 326) && (rbsp_LE3 <= 328)) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 74) && (rbsp <= 75)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 9)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 13)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 14) && (rbsp_G3 <= 15)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11)) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 11)) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 115)) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 6) && (rbsp_G3 <= 7)) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9)) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4)) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 52)) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5)) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 53) && (rbsp_G3 <= 54)) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 21)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 11)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 52)) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11)) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9)) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 5) && (TotalZeros_LE3 <= 7)) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5)) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2)) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 238) && (rbsp_LE3 <= 240)) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 320)) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 193)) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 15) && (rbsp_G3 <= 16) ##1 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##1 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 320)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 115)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 15) && (rbsp_G3 <= 16) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 15) && (rbsp_G3 <= 16) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 15) && (rbsp_G3 <= 16) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136)) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4)) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 320)) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 21) ##1 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##1 1) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 15) && (rbsp_G3 <= 16) ##1 1) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 12) ##4 1) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 320)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 115)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 52)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2)) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 12) ##4 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##2 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 21) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 320)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 115)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 52)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 238) && (rbsp_LE3 <= 240)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 11)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 50) ##2 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 256) && (rbsp_LE3 <= 288)) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 504) && (rbsp_LE3 <= 505)) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 373)) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 50)) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 17) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 67) && (rbsp_LE3 <= 86)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##4 1) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 52)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 52) ##4 1) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 17)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 240) && (rbsp_LE3 <= 256) ##1 1) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 52) ##4 1) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 6) && (rbsp_G3 <= 7)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 17)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 52)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##4 1) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 67) && (rbsp_LE3 <= 86)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 240) && (rbsp_LE3 <= 256) ##1 1) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 24)) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 238) && (rbsp_LE3 <= 240)) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 28)) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 30)) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31)) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136)) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 14) && (rbsp_G3 <= 15)) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 326) && (rbsp_LE3 <= 328) ##1 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 328) && (rbsp_LE3 <= 331) ##4 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 67) && (rbsp_LE3 <= 86) ##1 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 17) && (rbsp_LE3 <= 50) ##3 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 373) ##3 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 221) && (rbsp_LE3 <= 238) ##2 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 52) ##2 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 328) && (rbsp_LE3 <= 331) ##3 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 373) && (rbsp_LE3 <= 394)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 115) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 331) && (rbsp_LE3 <= 339) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11)) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 320) && (rbsp_LE3 <= 326) ##3 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 256) && (rbsp_LE3 <= 288)) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 15) ##1 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 21) ##4 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 52) && (rbsp_LE3 <= 67) ##3 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 52) ##3 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 256) && (rbsp_LE3 <= 288)) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 320)) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 326) && (rbsp_LE3 <= 328)) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 36)) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 221) ##1 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 504) && (rbsp_LE3 <= 505) ##2 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 5) && (TotalZeros_LE3 <= 7) ##1 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##4 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 9)) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136)) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 221) && (rbsp_LE3 <= 238) ##2 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 328) && (rbsp_LE3 <= 331) ##2 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 373) ##3 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 52) ##2 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 504) && (rbsp_LE3 <= 505)) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 67)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 67) ##4 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##2 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 317) ##2 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 373) && (rbsp_LE3 <= 394) ##4 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 67) && (rbsp_LE3 <= 86) ##3 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 52) && (rbsp_LE3 <= 67) ##3 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 238) && (rbsp_LE3 <= 240) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 50) ##3 chroma_DC_sel ##1 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 238) && (rbsp_LE3 <= 240) ##2 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 52) && (rbsp_LE3 <= 67) ##3 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11)) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31)) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 50) ##3 chroma_DC_sel ##1 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 52) && (rbsp_LE3 <= 67) ##3 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 238) && (rbsp_LE3 <= 240)) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 238) && (rbsp_LE3 <= 240) ##2 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 504) && (rbsp_LE3 <= 505) ##4 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 67) && (rbsp_LE3 <= 86) ##1 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 115) ##4 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 17) && (rbsp_LE3 <= 50) ##3 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##4 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 328) && (rbsp_LE3 <= 331) ##4 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 394) ##3 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 221) && (rbsp_LE3 <= 240) ##2 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 240) && (rbsp_LE3 <= 288) ##1 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 326) && (rbsp_LE3 <= 328) ##3 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 373)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 504) && (rbsp_LE3 <= 505)) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 328) && (rbsp_LE3 <= 331)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 320)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 373) && (rbsp_LE3 <= 394) ##4 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 12) ##3 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 193) ##1 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 17) ##1 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 317) ##2 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 504) && (rbsp_LE3 <= 505) ##2 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 67) && (rbsp_LE3 <= 86) ##3 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 5) && (TotalZeros_LE3 <= 7) ##1 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##3 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 17)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 52)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 52) ##4 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 115)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##4 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 240) && (rbsp_LE3 <= 256) ##1 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 17) ##1 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 115) ##2 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 373) && (rbsp_LE3 <= 394) ##2 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 331) && (rbsp_LE3 <= 339) ##4 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 5) && (TotalZeros_LE3 <= 7)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 331) && (rbsp_LE3 <= 339) ##2 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 373) && (rbsp_LE3 <= 394)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 331) && (rbsp_LE3 <= 339) ##1 1) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 331) && (rbsp_LE3 <= 339) ##2 1) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 52) && (rbsp_LE3 <= 67) ##1 1) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 221) ##2 1) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 504) && (rbsp_LE3 <= 505) ##1 1) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 256) && (rbsp_LE3 <= 288) ##1 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 256) && (rbsp_LE3 <= 288)) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 240) && (rbsp_LE3 <= 256) ##1 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 221) ##1 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 15) ##2 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 52) ##3 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136) ##2 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 17) ##3 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 331) && (rbsp_LE3 <= 339) ##3 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 504) && (rbsp_LE3 <= 505) ##2 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 221) ##3 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##3 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 317) ##3 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 320) ##1 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 320) ##2 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 320) ##4 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 331) && (rbsp_LE3 <= 339) ##1 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 504) && (rbsp_LE3 <= 505) ##4 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 3) && (TotalZeros_LE3 <= 9)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 238) && (rbsp_LE3 <= 256)) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 328) && (rbsp_LE3 <= 339) ##4 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 326) && (rbsp_LE3 <= 331) ##1 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 221)) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 238) && (rbsp_LE3 <= 240) ##3 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 28)) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 193)) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 238) && (rbsp_LE3 <= 240)) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 221) && (rbsp_LE3 <= 238) ##2 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 52) ##2 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 17) && (rbsp_LE3 <= 50) ##3 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 504) && (rbsp_LE3 <= 505) ##3 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 328) && (rbsp_LE3 <= 331) ##4 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 373) ##3 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 320) && (rbsp_LE3 <= 326) ##1 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 52) && (rbsp_LE3 <= 67) ##1 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 326) && (rbsp_LE3 <= 328) ##3 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 256) && (rbsp_LE3 <= 288)) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 373)) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 5) && (TotalZeros_LE3 <= 7) ##1 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 504) && (rbsp_LE3 <= 505) ##2 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##4 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 221) ##1 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 17) && (rbsp_LE3 <= 52) ##3 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136) ##4 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 115)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 2) && (TotalZeros_LE3 <= 4)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 7)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 6) && (rbsp_G3 <= 11)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 504) && (rbsp_LE3 <= 505)) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 373) ##4 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 373)) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 504) && (rbsp_LE3 <= 505) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 238) && (rbsp_LE3 <= 240) ##3 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 373) && (rbsp_LE3 <= 394) ##4 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 328) && (rbsp_LE3 <= 331) ##3 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 67) && (rbsp_LE3 <= 86) ##3 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 17) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 320) ##4 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 317) ##2 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136) ##3 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 4) && (TotalZeros_LE3 <= 5) ##1 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 115) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 331) && (rbsp_LE3 <= 339) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 5) && (TotalZeros_LE3 <= 7)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 373) && (rbsp_LE3 <= 394) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 17) ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 331) && (rbsp_LE3 <= 339) ##4 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 238) && (rbsp_LE3 <= 240) ##3 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 373) && (rbsp_LE3 <= 394) ##4 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##3 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##1 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##3 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2)) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 240) && (rbsp_LE3 <= 288) ##4 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 17)) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3)) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 394) ##2 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 67) ##2 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17)) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 221) ##4 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7)) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136)) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17) ##1 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 4) && (rbsp_G3 <= 6)) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 240) && (rbsp_LE3 <= 256) ##2 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 221) ##3 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 320) ##2 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 15) ##3 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 326) && (rbsp_LE3 <= 328) ##4 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 504) && (rbsp_LE3 <= 505) ##4 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 504) && (rbsp_LE3 <= 505) ##2 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 326) && (rbsp_LE3 <= 328) ##4 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 504) && (rbsp_LE3 <= 505) ##4 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 52) ##4 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 17) ##3 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 320) ##1 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 317) ##3 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 15) ##3 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 320) ##4 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 221) ##3 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 238) && (rbsp_LE3 <= 240) ##2 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 17) ##2 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 373) ##1 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 326) && (rbsp_LE3 <= 328) ##2 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 317) ##3 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 17) ##2 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##4 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET) |-> DEFAULT_RESET);
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6)) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) && (rbsp == 0)) |-> (len_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 1) && (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 1) ##1 (rbsp == 207) ##3 1) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 4) ##1 (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0) ##4 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 2) ##1 (rbsp == 207) ##3 1) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) (sel ##2 (rbsp == 458) ##1 1) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 4) ##1 (rbsp == 207) ##3 1) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6)) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##1 (rbsp == 207) ##3 1) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0) ##1 (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC >= 0) && (len_chroma_DC <= 1) ##3 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7) ##2 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 6) ##2 (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7) ##4 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0) ##1 (rbsp == 207) ##3 1) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 176) ##2 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 1) && (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 0) ##4 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 0) && (rbsp == 0)) |-> (len_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0)) |-> (len_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##3 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0) ##1 (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 0) ##3 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 4) ##1 (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 3) && (TotalCoeff <= 6) ##1 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 4) ##4 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##3 (rbsp == 458) ##1 1) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 52) && (rbsp_G3 <= 63) ##2 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 2) && (len_comb <= 7) ##2 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC >= 0) && (len_chroma_DC <= 1) ##3 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7) ##4 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) (sel ##2 (rbsp == 458) ##1 1) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 9) && (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 3) && (TotalCoeff <= 5) ##1 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 176) ##2 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 6) ##1 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6)) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 5) ##1 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) (sel ##3 (rbsp == 87) ##1 1) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 0) && (rbsp == 0)) |-> DEFAULT_RESET);
assert property(@(posedge DEFAULT_CLOCK) (!sel && (rbsp == 0)) |-> (len_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 10) ##2 (rbsp == 458) ##1 1) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 4) ##4 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC == 0) && (rbsp == 0)) |-> (len_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 2) ##4 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 2) && (len_comb <= 7) ##2 (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 176) ##2 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7) ##4 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 10) ##2 (rbsp == 458) ##1 1) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 5) ##1 (rbsp == 207) ##3 1) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 15) && sel) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 9) ##2 (rbsp == 458) ##1 1) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7) ##3 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 1) ##1 (rbsp == 207) ##3 1) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) (sel ##1 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 4) ##1 (rbsp == 207) ##3 1) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel ##1 (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 50) && (rbsp_G3 <= 63) ##2 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 52) && (rbsp_G3 <= 63) ##2 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##3 (rbsp == 458) ##1 1) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 55) && (rbsp_G3 <= 63) ##2 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 15) && ena) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 41) && (rbsp_G3 <= 63) ##2 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) (ena ##1 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 15) && ena) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 182) ##3 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##2 (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7) ##2 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##1 (rbsp == 458) ##1 1) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##4 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 0)) |-> (len_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 2) && (len_comb <= 7) ##1 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 5) ##1 (rbsp == 207) ##3 1) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##3 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 15) && sel) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7) ##1 (rbsp == 227) ##3 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 176) ##3 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##1 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel ##3 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 0)) |-> DEFAULT_RESET);
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 2) ##1 (rbsp == 207) ##3 1) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 2) && (len_comb <= 7) ##2 (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) (ena ##1 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7) ##3 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) (!sel && (rbsp == 0)) |-> DEFAULT_RESET);
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET) |-> (len_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 11) ##2 (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6)) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC == 0) && (rbsp == 0)) |-> DEFAULT_RESET);
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 2) && (len_comb <= 7) ##1 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 100) ##1 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 178) ##1 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 9) && (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7) ##4 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##4 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 7) ##3 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0) ##1 (rbsp == 207) ##3 1) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 11) ##1 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##1 (rbsp == 458) ##1 1) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0)) |-> DEFAULT_RESET);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 50) && (rbsp_G3 <= 63) ##2 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) (sel ##2 (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 87) ##1 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) (sel ##1 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0) && (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##2 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel && (rbsp == 0)) |-> (len_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 0) ##3 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##3 (rbsp == 458) ##1 1) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 0) && (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) && (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 114) ##1 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel && (rbsp == 0)) |-> DEFAULT_RESET);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 41) && (rbsp_G3 <= 63) ##2 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 6) ##2 (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 7) ##1 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 0) && (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##4 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 55) && (rbsp_G3 <= 63) ##2 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 2) ##4 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##3 (rbsp == 458) ##1 1) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 2) ##4 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) && (rbsp == 0)) |-> DEFAULT_RESET);
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##1 (rbsp == 458) ##1 1) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 7) ##3 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 4) ##4 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3)) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0) ##4 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 9) ##2 (rbsp == 458) ##1 1) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 0) ##4 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7) ##4 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0)) |-> (len_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0) ##4 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 7) ##1 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0) && (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) && (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##4 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##1 (rbsp == 458) ##1 1) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##4 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0)) |-> DEFAULT_RESET);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 458) ##1 (TotalZeros_G3 == 0)) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 2) ##1 (rbsp == 207) ##3 1) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 511) ##3 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 373) && (rbsp <= 511) ##1 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 315) && (rbsp <= 415) ##1 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 4) && (TotalCoeff <= 6) ##1 (rbsp == 458) ##1 1) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 1) && (TotalZeros_comb <= 2) ##1 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1) ##1 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 385) ##1 1) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##3 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 2) ##2 (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 10) ##2 (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) ##1 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 2) ##1 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 0) && (TotalZeros_comb <= 1) ##2 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 11) && (TotalCoeff <= 15) ##3 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 3) && (TotalCoeff <= 5) ##1 (rbsp == 458) ##1 1) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 458) ##1 (TotalCoeff == 9)) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##1 (rbsp == 458) ##1 1) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 2) ##3 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 0) && (TotalZeros_comb <= 1) ##2 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 254) ##3 (rbsp == 48)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 9) ##2 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11) ##2 (rbsp == 458) ##1 1) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 82) && (rbsp <= 158) ##2 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 315) && (rbsp <= 415) ##1 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1) ##2 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##4 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 0) && (TotalZeros_comb <= 2) ##2 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 9) ##2 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1) ##2 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##1 (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 0) && (TotalZeros_comb <= 1) ##3 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 254) && (rbsp <= 511) ##1 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 458) ##1 ena) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1) ##3 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 3) && (TotalCoeff <= 6) ##1 (rbsp == 458) ##1 1) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 238) && (rbsp <= 373) ##1 (rbsp == 458) ##1 1) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 0) && (rbsp == 458) ##1 1) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 2) ##2 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 177) && (rbsp <= 341) ##1 (rbsp == 458) ##1 1) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 2) && (TotalZeros_comb <= 4) ##1 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 381) && (rbsp <= 511) ##3 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 41) && (rbsp_G3 <= 54) ##1 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 173) && (rbsp <= 254) ##1 (rbsp == 458) ##1 1) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 191) && (rbsp <= 289) ##1 (rbsp == 458) ##1 1) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 458) ##1 (rbsp == 11)) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7) ##1 (rbsp == 87) ##1 1) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 104) && (rbsp <= 207) ##3 (rbsp == 458) ##1 1) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 373) && (rbsp <= 511) ##1 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 309) && (rbsp <= 410) ##2 (rbsp == 458) ##1 1) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 10) && (TotalCoeff <= 15) ##3 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##1 (rbsp == 227) ##3 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 349) && (rbsp <= 511) ##1 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 70) ##1 (len_comb == 3)) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 0) && (TotalZeros_comb <= 1) ##3 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 0) && (len_comb <= 1) ##2 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 42) && (rbsp_G3 <= 54) ##1 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##1 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##1 (rbsp == 207) ##3 1) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) (ena ##2 (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 0) && (len_comb <= 1) ##2 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 2) && (rbsp == 458) ##1 1) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##3 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 55) && (rbsp_G3 <= 63) ##1 (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 306) && (rbsp <= 408) ##4 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 2) ##3 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 397) && (rbsp <= 511) ##3 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 9) ##2 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##1 (rbsp == 458) ##1 1) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0) && (rbsp == 458) ##1 1) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 348) ##1 (rbsp == 458) ##1 1) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##1 (rbsp == 458) ##1 1) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 1) ##2 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 10) ##2 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 0) && (rbsp == 458) ##1 1) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 0) ##4 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 191) && (rbsp <= 289) ##3 (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 70) ##1 (len_LE3 == 1)) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 26) && (rbsp_G3 <= 49) ##1 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) (ena ##2 (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3) ##2 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 1) ##2 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 397) && (rbsp <= 511) ##3 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 428) && (rbsp <= 511) ##3 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 0) ##3 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##1 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 2) ##3 (rbsp == 458) ##1 1) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 41) && (rbsp_G3 <= 63) ##1 (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##1 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) (sel ##2 (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 250) && (rbsp <= 380) ##1 (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 385) ##1 1) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 382) && (rbsp <= 511) ##1 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##2 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 511) ##1 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 511) ##1 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7)) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 382) && (rbsp <= 511) ##1 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 173) && (rbsp <= 254) ##3 (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##3 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1) ##1 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 341) && (rbsp <= 427) ##1 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 127) ##2 1) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 1) ##2 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1) ##3 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##3 (rbsp == 458) ##1 1) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##4 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 1) && (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2) ##2 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 346) ##4 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##1 (rbsp_G3 == 56) ##3 1) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) (!sel ##1 (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7) ##2 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 2) ##2 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 82) && (rbsp <= 158) ##2 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 0) && (len_comb <= 1) ##3 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) (sel ##4 (rbsp == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##1 (rbsp == 458) ##1 1) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 0) && (len_comb <= 1) ##3 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 1) && (TotalZeros_comb <= 2) ##2 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 1) && (TotalZeros_comb <= 2) ##1 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 381) && (rbsp <= 511) ##3 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 252) && (rbsp <= 381) ##4 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 52) && (rbsp_G3 <= 63) ##1 (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##1 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 70) ##1 (TotalCoeff == 1)) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 4) ##3 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 511) ##4 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) (sel ##1 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) (sel ##1 (rbsp == 207) ##3 1) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 2) ##2 (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 254) && (rbsp <= 511) ##1 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##1 (rbsp == 207) ##3 1) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 114) ##1 (rbsp == 227) ##3 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 458) ##1 (rbsp_G3 == 1)) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 34) && (rbsp_G3 <= 52) ##1 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 346) ##1 (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 209) && (rbsp <= 309) ##1 (rbsp == 458) ##1 1) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 33) && (rbsp_G3 <= 51) ##2 (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7)) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0) && (rbsp == 458) ##1 1) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 115)) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 2) ##1 (rbsp == 207) ##3 1) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##2 (rbsp == 458) ##1 1) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86)) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##2 (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##3 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6)) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 247) ##3 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) (ena ##1 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 458) ##1 (len_LE3 == 1)) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115)) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 2) ##3 (rbsp == 458) ##1 1) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15)) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 15) && (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 238) && (rbsp <= 373) ##1 (rbsp == 458) ##1 1) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 114) ##3 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 348) ##1 (rbsp == 458) ##1 1) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) (ena ##3 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 5) && (TotalZeros_comb <= 11) ##2 (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##3 (rbsp == 458) ##1 1) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##2 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##1 (rbsp == 458) ##1 1) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##1 (rbsp == 207) ##3 1) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 287) && (rbsp <= 396) ##1 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 8) ##2 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 70) ##1 (rbsp_chroma_DC == 0)) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 82) ##1 (rbsp == 227) ##3 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##3 (rbsp == 458) ##1 1) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 104) && (rbsp <= 207) ##3 (rbsp == 458) ##1 1) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 70) ##1 (rbsp == 11)) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 239) && (rbsp <= 372) ##1 (rbsp == 458) ##1 1) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6)) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 452) ##3 1) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) ##1 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 188) && (rbsp <= 285) ##1 (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##1 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 42) && (rbsp_G3 <= 54) ##2 (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##2 (rbsp == 458) ##1 1) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##2 (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel ##1 (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##1 (rbsp == 207) ##3 1) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 1) && (TotalZeros_comb <= 2) ##2 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel ##2 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 0) && (TotalZeros_comb <= 2) ##2 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##2 (rbsp == 458) ##1 1) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 50) && (rbsp_G3 <= 63) ##1 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) ##1 (rbsp_G3 == 56) ##3 1) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) ##4 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 0) ##4 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 1) ##3 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 3) ##2 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 4) ##1 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 10) ##2 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 3)) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##2 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 3) && (TotalCoeff <= 6) ##1 (rbsp == 458) ##1 1) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11) ##2 (rbsp == 458) ##1 1) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) (sel ##2 (rbsp_G3 == 50) ##2 1) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 127) ##2 1) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 3) && (TotalCoeff <= 5) ##1 (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) (sel ##3 (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 309) && (rbsp <= 410) ##2 (rbsp == 458) ##1 1) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 70) ##1 sel) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 254) ##3 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 111) ##3 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC >= 0) && (len_chroma_DC <= 1) ##3 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115)) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 70) ##1 ena) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 2) ##1 (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 209) && (rbsp <= 309) ##1 (rbsp == 458) ##1 1) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) && (len_comb == 5)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##1 (rbsp == 458) ##1 1) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 511) ##4 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 91) ##1 (rbsp == 227) ##3 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) (!ena ##2 (rbsp == 458) ##1 1) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11) ##2 (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 4) && (TotalCoeff <= 6) ##1 (rbsp == 458) ##1 1) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 50) && (rbsp_G3 <= 63) ##1 (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 1) ##2 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0) ##3 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##2 (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 2) && (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 0) ##4 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 428) && (rbsp <= 511) ##3 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##3 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 96) && (rbsp <= 191) ##2 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0) ##3 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 0) && (rbsp == 458) ##1 1) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 340) && (rbsp <= 426) ##4 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##4 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3) ##2 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##1 (rbsp == 207) ##3 1) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 306) && (rbsp <= 408) ##4 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 252) && (rbsp <= 381) ##4 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 341) ##2 (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 26) && (rbsp_G3 <= 49) ##2 (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 458) ##1 (TotalCoeff == 9)) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 511) ##3 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 242) && (rbsp <= 325) ##1 (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 173) && (rbsp <= 254) ##1 (rbsp == 458) ##1 1) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) ##3 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 0) && (TotalZeros_comb <= 1) ##3 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 7) && (TotalCoeff <= 10) ##2 (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) (!ena ##2 (rbsp == 458) ##1 1) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##2 (rbsp == 458) ##1 1) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) ##4 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 70) ##1 (TotalZeros_comb == 3)) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 5) ##3 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 346) ##4 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 11) && (TotalCoeff <= 15) ##3 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 1) ##3 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel ##2 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 3) && (TotalCoeff <= 5) ##1 (rbsp == 458) ##1 1) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##1 (rbsp == 458) ##1 1) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##3 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 252) ##3 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 0) && (rbsp == 458) ##1 1) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 458) ##1 (rbsp == 11)) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##1 (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3) ##2 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 52) && (rbsp_G3 <= 63) ##1 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 177) && (rbsp <= 341) ##1 (rbsp == 458) ##1 1) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 191) && (rbsp <= 289) ##1 (rbsp == 458) ##1 1) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) (sel ##3 (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 239) && (rbsp <= 372) ##1 (rbsp == 458) ##1 1) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 0) && (len_comb <= 1) ##3 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 253) ##1 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 2) ##1 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 340) && (rbsp <= 426) ##4 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 2) && (rbsp == 458) ##1 1) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 253) ##3 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 10) && (TotalCoeff <= 15) ##3 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 96) && (rbsp <= 191) ##2 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) ##3 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 52)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 458) ##1 (TotalZeros_G3 == 0)) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##2 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 458) ##1 (rbsp_G3 == 1)) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 458) ##1 ena) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7) ##2 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 33) && (rbsp_G3 <= 51) ##1 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) (sel ##1 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##1 (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 0) ##2 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##2 (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0) ##2 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 0) ##4 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 458) ##1 (len_LE3 == 1)) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 4) ##1 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 2) && (TotalZeros_comb <= 4) ##1 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) ##3 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 26) && (rbsp_G3 <= 49) ##1 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 41) && (rbsp_G3 <= 54) ##1 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3) ##2 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 34) && (rbsp_G3 <= 52) ##1 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 349) && (rbsp <= 511) ##1 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 452) ##3 1) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 70) ##1 (TotalZeros_G3 == 0)) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 42) && (rbsp_G3 <= 54) ##1 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##3 (rbsp == 458) ##1 1) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##4 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 341) && (rbsp <= 427) ##1 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) ##3 (rbsp == 15)) |-> (len_comb == 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##1 (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 4) ##3 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 287) && (rbsp <= 396) ##1 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 33) && (rbsp_G3 <= 51) ##1 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##1 (rbsp == 458) ##1 1) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136)) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 115)) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 70) ##1 (len_chroma_DC == 3)) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) (sel ##2 (rbsp_G3 == 50) ##2 1) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 70) ##1 (len_G3 == 0)) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2) ##2 (rbsp == 15)) |-> (len_LE3 == 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 8) ##2 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 89) && (rbsp <= 173) ##2 (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##2 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 115) && (rbsp <= 237) ##3 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 348) ##3 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##1 (rbsp_chroma_DC == 1) ##2 1) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel && (rbsp == 207) ##3 1) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##1 (rbsp == 87) ##1 1) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##3 (rbsp == 15)) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC == 7) && (rbsp == 207) ##3 1) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##3 ena) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0) && (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) (sel ##3 (rbsp == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 373) && (rbsp <= 511) ##1 (rbsp == 207) ##3 1) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 207) ##3 (TotalZeros_G3 == 0)) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 428) && (rbsp <= 511) ##1 (rbsp == 207) ##3 1) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 207) ##2 sel ##1 1) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 0)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 8) ##1 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 237) ##1 !chroma_DC_sel) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 178) ##1 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 254) && (rbsp <= 511) ##2 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##2 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 415) && (rbsp <= 511) ##2 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 346) ##3 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##1 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) (!ena ##2 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##2 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 105) && (rbsp <= 209) ##3 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 172) && (rbsp <= 254) ##3 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 115) && (rbsp <= 235) ##3 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 241) && (rbsp <= 325) ##4 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7)) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 87) ##2 (rbsp == 87) ##1 1) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 237) ##1 (TotalCoeff == 4)) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel ##1 (rbsp_G3 == 56) ##3 1) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 0) && (TotalZeros_comb <= 1) ##1 (rbsp_G3 == 56) ##3 1) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 89) && (rbsp <= 171) ##2 (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 207) ##3 sel) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 373) && (rbsp <= 511) ##1 (rbsp == 207) ##3 1) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 6) ##2 (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##3 (TotalZeros_comb == 9)) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##2 !chroma_DC_sel ##1 1) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##2 (rbsp == 458) ##1 1) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 452) ##3 1) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##3 sel) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##3 (len_G3 == 0)) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 83) ##3 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) ##3 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 237) ##1 (rbsp == 28)) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 207) ##2 (rbsp == 41) ##1 1) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7) ##1 (rbsp == 458) ##1 1) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 104) && (rbsp <= 209) ##3 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##2 (rbsp == 458) ##1 1) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##3 (TotalCoeff == 1)) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 1) && (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 0) && (TotalZeros_comb <= 1) ##2 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##1 (rbsp == 207) ##3 1) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 93) ##3 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##3 (rbsp == 87) ##1 1) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) (sel ##1 (rbsp == 207) ##3 1) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 385) ##1 1) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) ##2 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 7) ##1 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##3 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##1 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 102) ##1 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) (sel ##2 (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 15) && (rbsp_G3 == 56) ##3 1) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##3 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7) ##2 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 0) && (rbsp == 207) ##3 1) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 126)) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) (ena ##1 (rbsp == 48)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##1 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 237) ##1 (TotalZeros_LE3 == 0)) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) && (rbsp == 207) ##3 1) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 237) ##1 (rbsp_chroma_DC == 7)) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 237) && (rbsp_chroma_DC == 3) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1) && (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 0) && (TotalZeros_comb <= 2) ##2 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7) ##3 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 207) ##1 (len_G3 == 2) ##2 1) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 374) && (rbsp <= 511) ##2 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 237) ##1 (len_LE3 == 0)) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 93) ##2 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##1 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 0) ##2 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##1 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5)) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 0) && (TotalZeros_comb <= 2) ##1 (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 1) && (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 3) ##1 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 9) && (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 114) ##1 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 1) && (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7) ##3 (rbsp == 87) ##1 1) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##1 (TotalZeros_G3 == 5) ##2 1) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 237) ##1 (len_G3 == 5)) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 373) && (rbsp <= 511) ##1 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11) ##1 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115)) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7) ##1 (rbsp == 458) ##1 1) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 207) ##2 (TotalCoeff == 6) ##1 1) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 91) && (rbsp <= 185) ##2 (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 207) && (rbsp <= 305) ##3 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##1 (len_G3 == 2) ##2 1) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##2 (TotalCoeff == 14) ##1 1) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 237) && ena ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 126)) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 129) && (rbsp <= 151) ##2 (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 91) && (rbsp <= 178) ##2 (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##2 (TotalZeros_G3 == 2) ##1 1) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 15) && sel) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) (ena ##1 (rbsp == 227) ##3 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 4) ##3 (rbsp == 87) ##1 1) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 177) && (rbsp <= 341) ##3 (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 250) && (rbsp <= 380) ##1 (rbsp_G3 == 56) ##3 1) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) (ena ##1 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 207) ##3 (TotalZeros_G3 == 0)) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 382) && (rbsp <= 511) ##1 (rbsp == 207) ##3 1) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 0) ##1 (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##2 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 207) ##1 sel ##2 1) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 207) ##2 sel ##1 1) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 15) && ena) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 207) ##1 chroma_DC_sel ##2 1) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 207) ##2 (TotalCoeff == 6) ##1 1) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 207) ##1 (TotalCoeff == 9) ##2 1) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 254) ##3 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 99) ##3 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 1) && (rbsp_G3 == 56) ##3 1) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##1 (TotalZeros_LE3 == 1) ##2 1) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 207) && (rbsp_chroma_DC == 7) ##3 1) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 207) ##3 (TotalCoeff == 1)) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) && (rbsp == 207) ##3 1) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) && (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##2 (rbsp == 458) ##1 1) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 207) ##1 (len_G3 == 2) ##2 1) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 5) ##1 (rbsp == 458) ##1 1) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 237) ##1 (len_comb == 5)) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 40) ##1 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC == 4) ##4 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 0) ##1 (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##1 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##3 (TotalZeros_G3 == 0)) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 237) && (len_comb == 1) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 0) && (len_comb <= 1) ##2 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) && (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##3 !chroma_DC_sel) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##3 (TotalZeros_LE3 == 9)) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 4) ##1 (rbsp == 458) ##1 1) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 52) && (rbsp_G3 <= 63) ##2 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##1 (TotalCoeff == 7) ##2 1) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##3 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 327) && (rbsp <= 417) ##1 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3)) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 207) ##1 !ena ##2 1) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 207) ##1 (TotalCoeff == 9) ##2 1) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 95) && (rbsp <= 187) ##2 (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 2) && (rbsp == 207) ##3 1) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 207) ##3 sel) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) && (rbsp == 207) ##3 1) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 207) ##3 ena) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##1 (rbsp == 207) ##3 1) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 207) ##3 (TotalZeros_LE3 == 3)) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 207) ##1 (rbsp == 161) ##2 1) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 207) ##1 chroma_DC_sel ##2 1) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 93) ##2 (rbsp == 87) ##1 1) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 397) && (rbsp <= 511) ##1 (rbsp == 207) ##3 1) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 207) ##2 (rbsp == 41) ##1 1) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 127) ##2 1) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 207) ##2 (len_LE3 == 3) ##1 1) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##2 (TotalZeros_comb == 2) ##1 1) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 5) ##1 (rbsp == 458) ##1 1) |-> (len_G3 == 6));
assert property(@(posedge DEFAULT_CLOCK) (ena ##1 (rbsp == 87) ##1 1) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##1 (rbsp == 207) ##3 1) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 6) && (rbsp == 207) ##3 1) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 428) && (rbsp <= 511) ##1 (rbsp == 207) ##3 1) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 4) ##2 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 207) ##3 (TotalZeros_LE3 == 3)) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##1 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 4) ##1 (rbsp == 458) ##1 1) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86)) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 207) ##3 (len_comb == 4)) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 11) ##2 (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 207) ##3 (TotalZeros_comb == 3)) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 207) ##2 (TotalZeros_G3 == 2) ##1 1) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 42) && (rbsp_G3 <= 54) ##1 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 207) ##3 (len_G3 == 0)) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 237) && (rbsp <= 372) ##1 (rbsp == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 382) && (rbsp <= 511) ##1 (rbsp == 207) ##3 1) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##1 (rbsp == 207) ##3 1) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 177) && (rbsp <= 341) ##2 (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 0) && (rbsp == 207) ##3 1) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 1) && (rbsp_G3 == 56) ##3 1) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 0) && (rbsp == 207) ##3 1) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 207) ##3 (TotalCoeff == 1)) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 207) ##1 sel ##2 1) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 127) && (rbsp <= 151) ##2 (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 0) && (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7) ##3 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 6) ##1 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##4 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 399) && (rbsp <= 511) ##1 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 207) ##3 ena) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 397) && (rbsp <= 511) ##1 (rbsp == 207) ##3 1) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel && (rbsp == 207) ##3 1) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 11) ##1 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) (!ena && (rbsp == 207) ##3 1) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 0) && (rbsp == 207) ##3 1) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 0) ##1 (rbsp_G3 == 56) ##3 1) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 86) ##2 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 33) && (rbsp_G3 <= 51) ##1 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 3) && (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 240) ##4 1) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 115)) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##2 (TotalZeros_LE3 == 0) ##1 1) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##2 (rbsp_G3 == 48) ##1 1) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##1 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##2 (TotalZeros_chroma_DC == 0) ##1 1) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 0) && (len_comb <= 1) ##1 (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7)) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) (sel ##1 (rbsp == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##1 (rbsp == 207) ##3 1) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136)) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 10) ##2 (rbsp_G3 == 50) ##2 1) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11) ##3 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 9) && (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 2) && (TotalZeros_comb <= 4) ##1 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##2 (rbsp == 458) ##1 1) |-> (len_comb == 6));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##1 (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 0) && (TotalZeros_comb <= 1) ##1 (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) && (rbsp == 207) ##3 1) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 10) ##1 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) && (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 207) ##1 (rbsp == 161) ##2 1) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 0) && (rbsp == 207) ##3 1) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 52)) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 178) ##1 (rbsp == 227) ##3 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15)) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50)) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52)) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) (!ena && (rbsp == 207) ##3 1) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##2 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 6) && (rbsp == 207) ##3 1) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##3 (rbsp == 70) ##1 1) |-> (TotalZeros_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 29) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##1 (len_LE3 == 3) ##2 1) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 55) && (rbsp_G3 <= 63) ##2 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 207) ##2 (TotalZeros_G3 == 2) ##1 1) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 207) ##3 (TotalZeros_comb == 3)) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 207) ##3 (len_G3 == 0)) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##1 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 207) ##1 !ena ##2 1) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 207) ##3 (len_comb == 4)) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##3 1) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 0) && (rbsp == 207) ##3 1) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##2 (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 6) ##3 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##1 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##4 1) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 66) ##2 1) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel ##1 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 50) && (rbsp_G3 <= 63) ##2 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 207) ##2 (len_LE3 == 3) ##1 1) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 207) ##3 (len_LE3 == 4)) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 3)) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##2 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##2 (rbsp_chroma_DC == 7) ##1 1) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 10) ##2 (rbsp_G3 == 50) ##2 1) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 2) && (rbsp == 207) ##3 1) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) (sel ##1 (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 207) && (len_comb == 0) ##3 1) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 1) && (TotalZeros_G3 <= 2) ##4 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 41) && (rbsp_G3 <= 63) ##2 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) ##3 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3) ##2 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7) ##4 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##2 (rbsp_G3 == 50) ##2 1) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 2) ##3 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 238) && (rbsp <= 373) ##3 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 287) && (rbsp <= 396) ##1 (rbsp_G3 == 56) ##3 1) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) (!ena ##1 (rbsp == 207) ##3 1) |-> (rbsp_LE3 >= 115) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##2 (rbsp_G3 == 50) ##2 1) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 397) && (rbsp <= 511) ##3 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 209) ##1 (len_chroma_DC == 3)) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 250) && (rbsp <= 380) ##1 (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 242) && (rbsp <= 326) ##3 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 240) ##4 1) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 340) && (rbsp <= 426) ##4 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1) ##3 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 3) ##2 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) (sel ##2 (rbsp == 48)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 381) && (rbsp <= 511) ##3 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 30) ##2 (TotalZeros_comb == 4)) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##2 (TotalCoeff == 14) ##1 1) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##3 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 1) && (rbsp_G3 == 56) ##3 1) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##1 (rbsp_chroma_DC == 1) ##2 1) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 30) ##2 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 209) ##1 (TotalZeros_G3 == 0)) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 1) ##3 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##2 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1) ##1 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 6) ##1 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) ##2 (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 11) && (TotalCoeff <= 15) ##1 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 116) && (rbsp <= 178) ##2 (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 30) ##2 sel) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) (!sel ##2 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 242) && (rbsp <= 324) ##3 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel ##2 (rbsp_G3 == 50) ##2 1) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 0) ##2 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 0) ##2 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 341) && (rbsp <= 427) ##1 (rbsp_G3 == 50) ##2 1) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 485) && (rbsp_LE3 <= 511) ##1 (rbsp_G3 == 56) ##3 1) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 30) ##2 (TotalCoeff == 1)) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 30) ##1 !ena ##1 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 0) && (TotalZeros_comb <= 2) ##1 (rbsp_G3 == 56) ##3 1) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 7) ##3 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 204) ##2 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##2 (rbsp == 48)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 511) ##3 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##3 sel) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 70) ##1 (len_LE3 == 1)) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) ##3 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 266) ##3 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 5) ##2 (rbsp == 448) ##2 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 314) && (rbsp <= 414) ##2 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 82) && (rbsp <= 158) ##2 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 9) ##3 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##3 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 306) && (rbsp <= 408) ##4 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 6) && (rbsp_G3 <= 7) ##4 1) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##1 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 1) ##2 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 93) ##2 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 42) && (rbsp_G3 <= 54) ##1 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 346) ##3 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##2 (TotalZeros_comb == 2) ##1 1) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 209) ##1 (TotalCoeff == 1)) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 50) ##1 (TotalZeros_chroma_DC == 1) ##1 1) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##3 (rbsp == 87) ##1 1) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 9) ##2 (rbsp_G3 == 50) ##2 1) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 31) ##2 (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 253) ##1 (rbsp == 227) ##3 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 209) ##1 (TotalZeros_comb == 2)) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 1) && (rbsp_G3 == 56) ##3 1) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 128) && (rbsp <= 251) ##2 (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##3 (len_G3 == 0)) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1) ##1 (rbsp_G3 == 56) ##3 1) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 30) ##1 (len_comb == 0) ##1 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##1 (TotalCoeff == 7) ##2 1) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##3 (rbsp == 15)) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 7) && (TotalCoeff <= 10) ##2 (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 10) && (TotalCoeff <= 15) ##2 (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 50) ##1 chroma_DC_sel ##1 1) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 254) ##3 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 10) && (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2) ##2 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 116) ##1 (rbsp == 48)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 50) ##2 (len_chroma_DC == 1)) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6)) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 252) && (rbsp <= 382) ##3 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##1 (rbsp_G3 == 50) ##2 1) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 452) ##3 1) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##2 (TotalZeros_chroma_DC == 0) ##1 1) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##2 (TotalZeros_G3 == 2) ##1 1) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##2 (TotalZeros_LE3 == 0) ##1 1) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##2 (rbsp_G3 == 48) ##1 1) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel ##2 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##2 (rbsp_chroma_DC == 7) ##1 1) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 50) ##2 (len_LE3 == 0)) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 4) ##3 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 253) ##4 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##1 (len_G3 == 2) ##2 1) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 7) ##3 (rbsp == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 126) ##1 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 15) && (rbsp_G3 == 56) ##3 1) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 8) && (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##3 (TotalCoeff == 1)) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 223) && (rbsp <= 321) ##2 (rbsp_G3 == 50) ##2 1) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 511) ##1 (rbsp_G3 == 56) ##3 1) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##2 (rbsp_G3 == 50) ##2 1) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##3 (TotalZeros_G3 == 0)) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##3 (TotalZeros_comb == 9)) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 242) && (rbsp <= 325) ##1 (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##1 (rbsp == 87) ##1 1) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 381) && (rbsp <= 511) ##1 (rbsp_G3 == 50) ##2 1) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) (ena ##1 (rbsp == 448) ##2 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 30) ##1 !chroma_DC_sel ##1 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 10) ##2 (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 511) ##1 (rbsp_G3 == 50) ##2 1) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 50) ##1 (rbsp == 237) ##1 1) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 58) ##3 1) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 10) && (rbsp_G3 <= 20) ##2 (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 397) && (rbsp <= 511) ##1 (rbsp_G3 == 50) ##2 1) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 2) ##1 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 191) && (rbsp <= 289) ##2 (rbsp_G3 == 50) ##2 1) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) && (rbsp_G3 == 50) ##2 1) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##1 (TotalZeros_LE3 == 1) ##2 1) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 382) && (rbsp <= 511) ##1 (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 8) ##2 (rbsp_G3 == 50) ##2 1) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 0) && (TotalZeros_comb <= 1) ##2 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) (!sel && (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 1) && (TotalZeros_comb <= 2) ##1 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 30) && ena ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 70) ##1 (len_G3 == 0)) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##4 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 70) ##1 (len_comb == 3)) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 0) && (rbsp_G3 == 50) ##2 1) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 50) ##1 (TotalZeros_comb == 1) ##1 1) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 4) && (rbsp_G3 == 50) ##2 1) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 452) ##3 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 50) ##2 (rbsp == 28)) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 178) && (rbsp <= 344) ##3 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 249) ##4 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 250) && (rbsp <= 380) ##1 (rbsp_G3 == 56) ##3 1) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 29) ##1 1) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 3) && (TotalCoeff <= 5) ##1 (rbsp == 87) ##1 1) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 349) && (rbsp <= 511) ##1 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) && (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##2 (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) ##1 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 55) && (rbsp_G3 <= 63) ##1 (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 2) ##1 (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1) ##2 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 30) ##2 (len_G3 == 0)) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 17) && (rbsp_G3 <= 39) ##2 (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 326) && (rbsp <= 417) ##1 (rbsp_G3 == 56) ##3 1) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 428) && (rbsp <= 511) ##3 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 209) ##1 (len_comb == 3)) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 9) ##2 (rbsp_G3 == 50) ##2 1) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) ##1 (rbsp_G3 == 56) ##3 1) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##1 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 70) ##1 (TotalZeros_comb == 3)) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 0) && (TotalZeros_comb <= 2) ##2 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) ##1 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##1 (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 382) && (rbsp <= 511) ##1 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 50) ##1 (rbsp_chroma_DC == 3) ##1 1) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 2) ##1 (rbsp_G3 == 56) ##3 1) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 50) ##2 (rbsp_chroma_DC == 7)) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##3 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 4) && (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 30) ##1 (rbsp == 134) ##1 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 30) ##2 (len_comb == 4)) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##3 !chroma_DC_sel) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3) ##2 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 24) ##2 (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 1) && (TotalZeros_comb <= 2) ##2 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 50) && (len_comb == 3) ##2 1) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 50) ##1 (rbsp_G3 == 63) ##1 1) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 17) && (rbsp_G3 <= 31) ##2 (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 3) && (rbsp_G3 == 50) ##2 1) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 50) ##2 (len_comb == 5)) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 4) && (rbsp_G3 == 50) ##2 1) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 254) ##4 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 50) ##2 !chroma_DC_sel) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 50) ##2 (TotalCoeff == 4)) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 4) && (rbsp_G3 == 50) ##2 1) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 2) ##2 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##1 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 50) ##1 (len_comb == 1) ##1 1) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 33) && (rbsp_G3 <= 51) ##2 (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) (sel ##1 (rbsp == 227) ##3 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 2) && (TotalZeros_comb <= 4) ##1 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 30) ##2 (rbsp == 86)) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 11) && (TotalCoeff <= 15) ##2 (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 209) ##1 (len_LE3 == 1)) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 3)) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##1 (rbsp == 207) ##3 1) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 33) && (rbsp_G3 <= 51) ##1 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 5) && (TotalZeros_comb <= 11) ##2 (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 127) ##2 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##3 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11) ##3 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 66) ##2 1) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 2) ##2 (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 41) && (rbsp_G3 <= 63) ##1 (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 373) && (rbsp <= 511) ##1 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 0) ##3 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 123) && (rbsp <= 245) ##2 (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 30) ##1 (rbsp_chroma_DC == 7) ##1 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##1 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 42) && (rbsp_G3 <= 54) ##2 (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 55) && (rbsp_G3 <= 63) ##2 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 266) ##3 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 252) ##1 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 11) && (TotalCoeff <= 15) ##3 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 3) && (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 385) ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) (!ena ##1 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 253) ##3 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) (!sel ##3 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) (!ena ##3 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 16) && (rbsp_G3 <= 32) ##2 (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 134) && (rbsp <= 178) ##2 (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 209) ##1 (rbsp_chroma_DC == 1)) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 70) ##1 ena) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 1) ##2 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 0) && (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 397) && (rbsp <= 511) ##1 (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 17) ##3 (TotalZeros_comb == 0) ##1 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 2) ##2 (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 41) && (rbsp_G3 <= 54) ##1 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##2 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 4) ##3 (rbsp == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 3) ##3 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) (!sel && (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 17) && (rbsp_G3 <= 20) ##2 (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) && (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 40) ##2 (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##2 !chroma_DC_sel ##1 1) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##3 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 17) && (rbsp_G3 <= 18) ##2 (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 385) ##1 1) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1) ##2 (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 253) ##1 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 0) ##3 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 176) ##1 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86)) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 30) ##1 (len_LE3 == 1) ##1 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 3) && (TotalCoeff <= 5) ##1 (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) ##4 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 70) ##1 (rbsp == 11)) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50)) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 26) && (rbsp_G3 <= 49) ##2 (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 5) ##1 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) ##3 (rbsp == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##2 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 341) && (rbsp <= 427) ##1 (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##1 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 341) && (rbsp <= 427) ##1 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 34) && (rbsp_G3 <= 52) ##1 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 2) ##2 (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##1 (TotalZeros_G3 == 5) ##2 1) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 12) && (TotalCoeff <= 15) ##2 (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 1) ##2 (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##3 ena) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 52) && (rbsp_G3 <= 63) ##1 (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 4) ##1 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 50) ##2 (TotalZeros_chroma_DC == 0)) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 70) ##1 (rbsp_chroma_DC == 0)) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 70) ##1 sel) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 30) ##2 (TotalZeros_G3 == 0)) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel && (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 50) && (rbsp_G3 <= 63) ##1 (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52)) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5)) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 96) && (rbsp <= 191) ##2 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) && (rbsp_G3 == 50) ##2 1) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 86) ##2 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 52)) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 30) ##1 (TotalCoeff == 13) ##1 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 127) ##2 1) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##4 1) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 1) ##4 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 0) ##1 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 15) && (rbsp_G3 <= 28) ##2 (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 1) && (rbsp_G3 <= 40) ##1 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##2 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##3 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##1 (len_LE3 == 3) ##2 1) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 209) ##1 (len_G3 == 0)) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 4) ##1 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 0) && (TotalZeros_comb <= 1) ##1 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##2 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 0) ##1 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 70) ##1 (TotalCoeff == 1)) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67)) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 15) && (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 70) ##1 (TotalZeros_G3 == 0)) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 7) && (TotalCoeff <= 11) ##1 (TotalZeros_LE3 == 9)) |-> (len_LE3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 1) && (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) && (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 30) ##1 (TotalZeros_G3 == 2) ##1 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 26) && (rbsp_G3 <= 49) ##1 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 20) ##2 (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6)) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##3 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 1) && (rbsp == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 29) ##1 1) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) && (rbsp_G3 == 50) ##2 1) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 315) ##3 (len_LE3 == 0) ##1 1) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 4) && (rbsp_G3 == 50) ##2 1) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 346) ##4 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50)) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52)) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) (!ena ##1 (rbsp == 207) ##3 1) |-> (len_LE3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 165) && (rbsp <= 242) ##2 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 4) ##3 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1) && (rbsp == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 9) ##1 (rbsp == 48)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 7) && (TotalCoeff <= 11) ##3 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 254) ##1 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 128) && (rbsp <= 251) ##2 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5)) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 173) && (rbsp <= 254) ##3 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7) ##4 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 239) && (rbsp <= 372) ##1 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 10) ##1 (rbsp_G3 == 50) ##2 1) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 315) && ena ##4 1) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 52)) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1) ##3 (rbsp == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 3) && (TotalCoeff <= 6) ##3 (rbsp == 87) ##1 1) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 9) && (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 287) && (rbsp <= 396) ##1 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 2) ##1 (rbsp_G3 == 56) ##3 1) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 9) ##2 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 62) && ena) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 3) && (TotalCoeff <= 5) ##3 (rbsp == 87) ##1 1) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 511) ##1 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 288) && (rbsp <= 397) ##3 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 3) && (TotalCoeff <= 5) ##2 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) (sel ##1 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) (ena ##1 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 315) && (rbsp <= 415) ##1 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0) && (rbsp == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 511) ##4 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 254) && (rbsp <= 511) ##1 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 315) ##4 ena) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) (!sel ##1 (rbsp_G3 == 50) ##2 1) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 66) ##2 1) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 315) ##4 (len_comb == 5)) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 1) && (rbsp == 315) ##4 1) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 315) ##2 (len_comb == 1) ##2 1) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) (!ena ##1 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 315) ##3 chroma_DC_sel ##1 1) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4) && (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 346) ##1 (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 176) ##1 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1) ##4 (rbsp == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 240) ##4 1) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 62) && (len_comb == 4)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##3 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 50) ##1 (rbsp_G3 == 63) ##1 1) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 315) ##1 (TotalCoeff == 14) ##3 1) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 7) && (TotalCoeff <= 10) ##3 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7) ##1 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 2) ##2 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 315) ##3 (rbsp == 55) ##1 1) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 2) ##4 (rbsp == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 315) ##2 (len_G3 == 3) ##2 1) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 50) && (len_comb == 3) ##2 1) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 2) ##3 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 2) ##3 (rbsp == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 341) ##2 (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##3 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 315) ##1 (TotalZeros_G3 == 2) ##3 1) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 0) && (rbsp == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 163) && (rbsp <= 241) ##3 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7) ##2 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 0) && (len_comb <= 1) ##1 (rbsp_G3 == 56) ##3 1) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 7) && (TotalCoeff <= 15) ##3 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 511) ##3 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) && (rbsp == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 511) ##1 (rbsp_G3 == 56) ##3 1) |-> (len_comb >= 6) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 315) ##3 (TotalZeros_LE3 == 0) ##1 1) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 315) ##3 sel ##1 1) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 315) ##3 (TotalZeros_G3 == 4) ##1 1) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 315) ##3 !ena ##1 1) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 4) && (TotalZeros_G3 <= 5) ##3 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 9) ##1 (rbsp_G3 == 50) ##2 1) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 315) ##1 !chroma_DC_sel ##3 1) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 240)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 5) ##3 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##1 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 315) ##4 sel) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) && (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) (!sel ##1 (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 511) ##1 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 8) ##2 (rbsp_G3 == 50) ##2 1) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##2 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##1 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 10) && (TotalCoeff <= 15) ##3 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 50) ##2 !chroma_DC_sel) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 93) ##1 (rbsp == 48)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##3 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 87) ##1 (rbsp == 48)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##2 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) (!ena ##1 (rbsp_G3 == 50) ##2 1) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 9) ##1 (rbsp_G3 == 50) ##2 1) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 315) ##2 (TotalZeros_G3 == 3) ##2 1) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 11)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 7)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##2 (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 6)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1) ##1 (rbsp_G3 == 56) ##3 1) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 287) && (rbsp <= 396) ##1 (rbsp_G3 == 56) ##3 1) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 2) ##3 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 50) ##2 (rbsp == 28)) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 2) && (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##1 (rbsp_G3 == 56) ##3 1) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 326) && (rbsp <= 417) ##1 (rbsp_G3 == 56) ##3 1) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel ##1 (rbsp_G3 == 56) ##3 1) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 4) && (rbsp_G3 == 50) ##2 1) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 315) ##4 (TotalZeros_comb == 9)) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 315) ##2 (TotalCoeff == 5) ##2 1) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 10) ##1 (rbsp_G3 == 50) ##2 1) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 191) && (rbsp <= 289) ##1 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 341) && (rbsp <= 427) ##1 (rbsp_G3 == 50) ##2 1) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 50) ##1 (rbsp == 237) ##1 1) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 6) ##4 1) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 173) && (rbsp <= 254) ##3 (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 315) ##1 (rbsp == 194) ##3 1) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 254) && (rbsp <= 511) ##3 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 0) ##4 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 4) && (rbsp_G3 == 50) ##2 1) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 0) && (TotalZeros_comb <= 2) ##1 (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 3) && (TotalCoeff <= 6) ##2 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 50) ##2 (TotalZeros_chroma_DC == 0)) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##3 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) && (rbsp_G3 == 50) ##2 1) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 188) && (rbsp <= 285) ##1 (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 50) ##2 (TotalCoeff == 4)) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 8) ##1 (rbsp_G3 == 50) ##2 1) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 58) ##3 1) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 140) && (rbsp <= 178) ##2 (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 315) ##1 (TotalZeros_LE3 == 0) ##3 1) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 315) ##2 ena ##2 1) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 339) ##1 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 50) ##1 (TotalZeros_chroma_DC == 1) ##1 1) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 3) && (TotalCoeff <= 5) ##2 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 315) ##2 (rbsp == 488) ##2 1) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 0) && (rbsp == 315) ##4 1) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 50) ##2 (len_LE3 == 0)) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 3)) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 10) ##2 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 315) ##4 (TotalZeros_LE3 == 9)) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 252) && (rbsp <= 381) ##4 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel ##2 (rbsp_G3 == 50) ##2 1) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##2 (rbsp_G3 == 50) ##2 1) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 315) ##3 (TotalCoeff == 8) ##1 1) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##1 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel && (rbsp == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) ##3 (rbsp == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 17));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 315) ##2 (len_LE3 == 1) ##2 1) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 50) ##1 (TotalZeros_comb == 1) ##1 1) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel && (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 0) && (rbsp_G3 == 50) ##2 1) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 315) ##1 !sel ##3 1) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 4) ##3 (rbsp == 237) ##1 1) |-> (TotalZeros_comb == 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 315) ##2 (TotalZeros_LE3 == 0) ##2 1) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1) && (rbsp == 315) ##4 1) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 511) ##1 (rbsp_G3 == 56) ##3 1) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC == 4) && (rbsp == 315) ##4 1) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 256) && ena) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##1 (rbsp == 227) ##3 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 3) && (rbsp_G3 == 50) ##2 1) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 50) ##1 (rbsp_chroma_DC == 3) ##1 1) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) (ena ##2 (rbsp == 448) ##2 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 3) && (TotalZeros_G3 <= 5) ##3 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 50) ##2 (len_comb == 5)) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11) ##2 (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 50) ##1 (len_comb == 1) ##1 1) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 2) && (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 50) ##2 (len_chroma_DC == 1)) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0) && (rbsp == 315) ##4 1) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 50) ##1 chroma_DC_sel ##1 1) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##4 1) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 315) ##3 (len_G3 == 2) ##1 1) |-> (rbsp_LE3 >= 50) && (rbsp_LE3 <= 86));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##4 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 50) ##2 (rbsp_chroma_DC == 7)) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##3 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 346) ##2 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 177) && (rbsp <= 341) ##1 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) && (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 0) && (rbsp == 87) ##1 1) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 373) && (rbsp <= 511) ##2 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 114) && (rbsp <= 235) ##3 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 238) && sel) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0) && (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 410) && (rbsp <= 511) ##4 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##1 (rbsp == 48)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 58) ##3 1) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##1 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 4) && (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##1 (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 254) ##1 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 414) && (rbsp <= 511) ##2 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 0)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 0) ##1 (rbsp_G3 == 50) ##2 1) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 191) && (rbsp <= 289) ##2 (rbsp_G3 == 50) ##2 1) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 414) && (rbsp <= 511) ##4 (rbsp == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 4) && (rbsp == 87) ##1 1) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 511) ##1 (rbsp == 87) ##1 1) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 429) && (rbsp <= 511) ##2 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 10) && (TotalCoeff <= 15) ##1 (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 87) ##1 (TotalZeros_comb == 1)) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 374) && (rbsp <= 511) ##4 (rbsp == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##1 (rbsp == 87) ##1 1) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 171) ##4 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 373) && (rbsp <= 511) ##4 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 10) && (TotalCoeff <= 15) ##4 (rbsp == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 0) && (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel && (rbsp == 87) ##1 1) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 3) && (TotalCoeff <= 5) ##1 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 254) && (rbsp <= 511) ##3 (rbsp == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 87) ##1 (TotalZeros_LE3 == 0)) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 8) && (rbsp == 87) ##1 1) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 254) ##1 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##4 (rbsp == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 374) && (rbsp <= 511) ##3 (rbsp == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 9) && (TotalCoeff <= 10) ##4 (rbsp == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##1 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##2 (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 6) ##2 (rbsp == 448) ##2 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##4 (rbsp == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##3 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11) ##1 (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 382) && (rbsp <= 511) ##1 (rbsp == 87) ##1 1) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 89) && (rbsp <= 173) ##3 (rbsp == 87) ##1 1) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 419) && (rbsp <= 511) ##4 (rbsp == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 2) && (len_comb <= 7) ##2 (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 410) && (rbsp <= 511) ##4 (rbsp == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 3) ##2 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##1 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 415) && (rbsp <= 511) ##3 (rbsp == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 397) && (rbsp <= 511) ##1 (rbsp == 87) ##1 1) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 240)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 176) ##1 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##1 (rbsp == 87) ##1 1) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 3) && (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 8) ##1 (rbsp_G3 == 50) ##2 1) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 3) && (TotalCoeff <= 6) ##1 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 66) ##2 1) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 104) && (rbsp <= 205) ##3 (rbsp == 48)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 7) ##1 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 87) ##1 (TotalCoeff == 10)) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 29) ##1 1) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 416) ##1 1) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 0) ##1 (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 346) ##2 (rbsp == 448) ##2 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 87) ##1 (rbsp == 13)) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 399) && (rbsp <= 511) ##4 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 0) ##1 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 11) && (TotalCoeff <= 15) ##1 (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 433) ##3 1) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 0) && (TotalZeros_comb <= 1) ##1 (rbsp_G3 == 50) ##2 1) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) (ena ##2 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 0) && (TotalZeros_comb <= 2) ##1 (rbsp_G3 == 50) ##2 1) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) (sel ##3 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 10) && (TotalCoeff <= 15) ##1 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 191) && (rbsp <= 289) ##3 (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 12) && (TotalCoeff <= 15) ##1 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0) ##2 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 87) ##1 (TotalZeros_G3 == 1)) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) ##1 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 188) && (rbsp <= 285) ##2 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 0) ##2 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 15) ##1 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 92) && (rbsp <= 187) ##2 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##1 (rbsp == 87) ##1 1) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 2) && (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3) ##1 (rbsp == 227) ##3 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 4) ##1 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 0) ##1 (rbsp_G3 == 50) ##2 1) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 373) && (rbsp <= 511) ##4 (rbsp == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) ##1 (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 428) && (rbsp <= 511) ##1 (rbsp == 87) ##1 1) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 346) ##1 (rbsp == 448) ##2 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 0) ##1 (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 238) && ena) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##1 (rbsp == 48)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 2) ##2 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 6) && (rbsp_G3 <= 7) ##4 1) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##3 (rbsp == 48)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 115) && (rbsp <= 235) ##3 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) && (rbsp == 87) ##1 1) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 346) && (rbsp <= 511) ##4 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7) ##3 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 90) ##1 1) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) (!ena ##1 (rbsp_G3 == 50) ##2 1) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 0) && (TotalZeros_comb <= 1) ##1 (rbsp_G3 == 56) ##3 1) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 0) ##1 (rbsp_G3 == 56) ##3 1) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) ##1 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 172) && (rbsp <= 341) ##2 (rbsp == 448) ##2 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##4 1) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##1 (rbsp_G3 == 50) ##2 1) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 87) ##1 ena) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 87) ##1 (rbsp_G3 == 1)) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 349) && (rbsp <= 511) ##4 (rbsp == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##4 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7) ##1 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 254) ##2 (rbsp == 48)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##4 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) (ena ##2 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 240) ##4 1) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 5) ##3 (rbsp == 48)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 178) ##4 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 0) ##1 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 397) && (rbsp <= 511) ##1 (rbsp_G3 == 50) ##2 1) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##1 (rbsp == 48)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 378) && (rbsp <= 511) ##4 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##1 (rbsp_G3 == 50) ##2 1) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##1 (rbsp == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##1 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 0) ##1 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 52)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 2) ##1 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 419) && (rbsp <= 511) ##4 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 511) ##1 (rbsp_G3 == 50) ##2 1) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11) ##1 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##2 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 2) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 381) && (rbsp <= 511) ##1 (rbsp_G3 == 50) ##2 1) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 223) && (rbsp <= 321) ##2 (rbsp_G3 == 50) ##2 1) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##1 (rbsp == 227) ##3 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 0) ##1 (rbsp_G3 == 50) ##2 1) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 0) && (TotalZeros_comb <= 2) ##1 (rbsp_G3 == 50) ##2 1) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) (!sel ##1 (rbsp_G3 == 50) ##2 1) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 55) && (rbsp_G3 <= 63) ##1 (rbsp_G3 == 50) ##2 1) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 127) ##2 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50)) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 227) ##2 (rbsp == 129) ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 204) ##2 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 227) ##1 !sel ##2 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 227) ##3 sel) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) (ena ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 48) && sel) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 2) && (len_comb <= 6) ##2 (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 83) && (rbsp <= 162) ##2 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 0) && (TotalZeros_comb <= 1) ##1 (rbsp_G3 == 50) ##2 1) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##3 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 102) ##4 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 0) && (len_comb <= 1) ##1 (rbsp_G3 == 50) ##2 1) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 227) ##1 (len_G3 == 2) ##2 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7) ##1 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 227) ##1 (TotalCoeff == 9) ##2 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 113) ##4 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 52) && (rbsp_G3 <= 63) ##1 (rbsp_G3 == 50) ##2 1) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 50) && (rbsp_G3 <= 63) ##1 (rbsp_G3 == 50) ##2 1) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 41) && (rbsp_G3 <= 63) ##1 (rbsp_G3 == 50) ##2 1) |-> (len_G3 == 5));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##1 (rbsp == 227) ##3 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 1) && (rbsp == 227) ##3 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 288) && (rbsp <= 397) ##1 (rbsp == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 240) ##4 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##3 (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##3 (rbsp == 87) ##1 1) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 4) ##1 (rbsp == 48)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 11) && (rbsp == 48)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 1) && (rbsp == 48)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 1) && (rbsp == 48)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 11)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 452) ##3 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 1) ##1 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 254) ##3 (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 4) ##2 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3) ##1 (rbsp == 227) ##3 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) ##2 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 6)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 6) ##1 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 206) && (rbsp <= 306) ##3 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 241) && (rbsp <= 325) ##3 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 227) ##2 (TotalCoeff == 15) ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 66) ##2 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 115)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11) ##4 (rbsp == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 177) && (rbsp <= 341) ##2 (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel ##3 (rbsp == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 115) ##1 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 7)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 114) ##4 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 87) ##4 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6)) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7)) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##2 (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 6) ##4 1) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7)) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 227) && (len_comb == 1) ##3 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 1) ##1 (rbsp == 227) ##3 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##2 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 227) && (rbsp_chroma_DC == 3) ##3 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 4) ##2 (rbsp == 48)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 227) ##2 (len_G3 == 1) ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##2 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##2 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##1 (rbsp_G3 == 50) ##2 1) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 1) && (rbsp == 227) ##3 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 227) ##2 (TotalZeros_LE3 == 1) ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 227) ##3 (TotalCoeff == 0)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 227) ##3 (rbsp == 67)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 12) && (rbsp == 227) ##3 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##1 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 4) ##2 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 0) && (len_comb <= 1) ##1 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15)) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##3 (rbsp == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 3) && (rbsp == 227) ##3 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##4 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##1 (rbsp == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 7) ##2 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 254) && (rbsp <= 511) ##1 (rbsp == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##4 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) (!ena ##1 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) (ena ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 416) ##1 1) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##1 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 2) ##1 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 0) && (TotalZeros_comb <= 1) ##1 (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 227) ##1 (rbsp == 483) ##2 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 177) && (rbsp <= 341) ##3 (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 1) ##1 (rbsp == 227) ##3 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel ##2 (rbsp == 87) ##1 1) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6)) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52)) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 15) ##2 (rbsp == 30) ##2 1) |-> (rbsp_LE3 >= 86) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 511) ##1 (rbsp_G3 == 56) ##3 1) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 385) ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 3)) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 0) && (len_comb <= 1) ##1 (rbsp == 70) ##1 1) |-> (len_chroma_DC == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##1 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 52)) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5)) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 7) ##1 (rbsp == 48)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##1 (rbsp == 227) ##3 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##3 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 227) ##1 ena ##2 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2) ##1 (rbsp == 227) ##3 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 227) && ena ##3 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) ##1 (rbsp == 87) ##1 1) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 433) ##3 1) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 6) ##3 (rbsp == 48)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC >= 0) && (len_chroma_DC <= 1) ##1 (rbsp == 209) ##1 1) |-> (TotalZeros_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1) && (rbsp == 227) ##3 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 227) ##3 (len_LE3 == 0)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##3 1) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##3 (rbsp == 87) ##1 1) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 0) && (len_comb <= 1) ##1 (rbsp_G3 == 56) ##3 1) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 485) && (rbsp_LE3 <= 511) ##1 (rbsp_G3 == 56) ##3 1) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##1 (rbsp == 227) ##3 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) && (rbsp == 227) ##3 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 0) && (TotalZeros_comb <= 2) ##1 (rbsp_G3 == 56) ##3 1) |-> (len_LE3 >= 5) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 227) ##2 (TotalZeros_G3 == 1) ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 2) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) (sel ##3 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) ##2 (rbsp == 448) ##2 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 9) ##1 (rbsp == 87) ##1 1) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 52)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) && (len_comb == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) (sel ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 95) && (rbsp <= 187) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 24) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 87) && (rbsp <= 164) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 115) && (rbsp <= 237) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 240) ##4 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 177) && (rbsp <= 341) ##2 (rbsp == 48)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 93) ##1 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 173) && (rbsp <= 254) ##2 (rbsp == 48)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##1 (rbsp == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 8) ##1 (rbsp == 48)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 117) && (rbsp <= 238) ##3 (rbsp == 48)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) (!sel ##1 (rbsp == 87) ##1 1) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) (ena ##2 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##1 (rbsp == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 2) ##1 (rbsp == 227) ##3 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 127) ##2 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 7) ##4 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 29) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 3) ##1 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) ##2 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 237) ##1 !chroma_DC_sel) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 178) ##2 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1) ##1 (rbsp == 227) ##3 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 212) && (rbsp <= 313) ##2 (rbsp == 448) ##2 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 115)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 452) ##3 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 1) && (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) && (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 237) && ena ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##3 (rbsp == 87) ##1 1) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 207) && (rbsp <= 305) ##3 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7) ##1 (rbsp == 48)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0) ##3 (rbsp == 48)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##3 (rbsp == 48)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##2 (rbsp == 48)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 207) && (rbsp <= 307) ##2 (rbsp == 48)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 115) && (rbsp <= 237) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 105) && (rbsp <= 209) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##2 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 95) && (rbsp <= 187) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) (!ena ##2 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 327) && (rbsp <= 417) ##1 (rbsp == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 66) ##2 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 237) ##1 (rbsp == 28)) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 58) ##3 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 116) ##1 (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0) ##3 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 9) && (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##1 (rbsp == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 1) && (TotalZeros_comb <= 2) ##1 (rbsp == 227) ##3 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 67));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 3) ##3 (rbsp == 48)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 3) && (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) (!ena ##4 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) (!ena ##2 (rbsp == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 1) && (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##4 (rbsp == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 1) && (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 87) && (rbsp <= 164) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) && (rbsp == 86)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 385) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 6) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 0) ##2 (rbsp == 448) ##2 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 209) && (rbsp <= 307) ##2 (rbsp == 448) ##2 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##1 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) && (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 163) ##2 1) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##1 (rbsp == 87) ##1 1) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 344) && (rbsp <= 511) ##1 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 237) ##1 (len_LE3 == 0)) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1) && (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 374) && (rbsp <= 511) ##1 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 237) ##1 (TotalZeros_LE3 == 0)) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 237) ##1 (TotalCoeff == 4)) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##1 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 0)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 105) && (rbsp <= 209) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##4 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 237) ##1 (rbsp_chroma_DC == 7)) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##4 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC == 3) && (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) (sel ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel ##4 (rbsp == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 254) && (rbsp <= 511) ##1 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##4 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 116) && (rbsp <= 237) ##4 (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##4 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 10) ##4 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 314) && (rbsp <= 414) ##1 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 0) ##1 (rbsp_G3 == 50) ##2 1) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 7) ##3 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##1 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) && (len_comb == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 314) && (rbsp <= 414) ##1 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 242) && (rbsp <= 324) ##3 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 399) && (rbsp <= 511) ##1 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##3 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 95) && (rbsp <= 190) ##1 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel ##1 (rbsp == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 7) ##2 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 95) && (rbsp <= 190) ##1 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 41) && (rbsp_G3 <= 63) ##1 (rbsp_G3 == 50) ##2 1) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##4 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 114) ##2 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) && (rbsp == 86)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 4) && (TotalCoeff <= 6) ##1 (rbsp == 48)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 240) ##4 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 7) && (TotalCoeff <= 11) ##3 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 448) ##2 (TotalZeros_comb == 2)) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7) ##2 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) (!ena ##3 (rbsp == 87) ##1 1) |-> (len_comb == 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 209) && (rbsp <= 309) ##4 (rbsp == 48)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 15) ##4 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 87) ##1 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##1 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 5) ##4 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 52)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 448) ##1 !sel ##1 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 326) && (rbsp <= 417) ##3 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 395) ##1 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 252) && (rbsp <= 382) ##3 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 13) && (TotalCoeff <= 15) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 2) && (TotalZeros_comb <= 4) ##1 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 16) && (rbsp_G3 <= 32) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 50) && (rbsp_G3 <= 63) ##1 (rbsp_G3 == 50) ##2 1) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 511) ##4 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 55) && (rbsp_G3 <= 63) ##1 (rbsp_G3 == 50) ##2 1) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 324) ##2 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 327) && (rbsp <= 417) ##1 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 52) && (rbsp_G3 <= 63) ##1 (rbsp_G3 == 50) ##2 1) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 3) ##4 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 242) && (rbsp <= 326) ##3 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 173) && (rbsp <= 254) ##3 (rbsp == 48)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 33) && (rbsp_G3 <= 51) ##1 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##2 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 448) ##1 (len_comb == 0) ##1 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 448) ##2 sel) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 448) ##2 (TotalCoeff == 2)) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 89) && (rbsp <= 172) ##1 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 0) && (rbsp == 448) ##2 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) (ena ##1 (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11) ##1 (rbsp == 256)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 0) && (len_comb <= 1) ##1 (rbsp_G3 == 50) ##2 1) |-> (len_G3 >= 5) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 115)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##4 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##4 (rbsp == 48)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 448) ##2 (rbsp == 67)) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 448) && sel ##2 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0) && (rbsp == 448) ##2 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 385) ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 42) && (rbsp_G3 <= 54) ##1 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) && (rbsp == 448) ##2 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 1) && (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 0) ##4 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 0) ##4 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 448) ##2 (rbsp_chroma_DC == 1)) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 448) ##2 (len_comb == 2)) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 3) && (TotalCoeff <= 5) ##2 (rbsp == 448) ##2 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 254) && (rbsp <= 511) ##4 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) ##1 (rbsp == 48)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##4 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 254) ##4 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 40) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 314) && (rbsp <= 414) ##2 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##3 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 238) && (rbsp <= 373) ##3 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##3 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 2) && (len_comb <= 7) ##1 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 448) ##1 (rbsp == 298) ##1 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 448) ##1 (TotalCoeff == 4) ##1 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##3 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##1 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) (!ena && (rbsp == 448) ##2 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 448) ##1 !chroma_DC_sel ##1 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 24) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 448) ##2 chroma_DC_sel) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 15) && (rbsp_G3 <= 28) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 448) ##2 (len_LE3 == 3)) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 448) ##1 (TotalZeros_G3 == 1) ##1 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 448) ##2 (len_G3 == 0)) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##2 (rbsp == 448) ##2 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11) ##4 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 15) && (rbsp_G3 <= 33) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 14) && (rbsp_G3 <= 26) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 7) ##3 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 448) ##1 (len_G3 == 3) ##1 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 448) ##2 ena) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 1) && (rbsp_G3 <= 24) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 0) && (rbsp == 448) ##2 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 448) ##2 (TotalZeros_chroma_DC == 2)) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 448) ##2 (TotalZeros_G3 == 0)) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 0)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 10) && (TotalCoeff <= 15) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 341) ##4 (rbsp == 48)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 9) ##2 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 1) && (len_G3 <= 3) ##4 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 89) && (rbsp <= 172) ##1 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 15) && (rbsp_G3 <= 28) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##3 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 346) ##3 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 288) && (rbsp <= 397) ##3 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 4) ##4 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339)) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394)) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 240) ##4 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 178) && (rbsp <= 344) ##3 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##1 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) (!sel ##3 (rbsp == 48)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 452) ##3 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 11) && (TotalCoeff <= 15) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 95) && (rbsp <= 187) ##1 (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 381) && (rbsp <= 511) ##3 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel ##3 (rbsp == 48)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 511) ##3 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317)) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326)) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##3 1) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331)) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 253) && (rbsp <= 382) ##4 (rbsp == 48)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364)) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373)) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288)) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 326)) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##4 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##2 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 394)) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 1) && (rbsp_G3 <= 24) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 8) ##2 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 240) && (rbsp <= 325) ##1 (rbsp == 448) ##2 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 1) && (rbsp_G3 <= 40) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##2 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##3 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##2 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 14) && (rbsp_G3 <= 26) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11) ##2 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##2 (rbsp == 41) ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 339) ##2 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 346) ##4 (rbsp == 48)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 128) && (rbsp <= 251) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 385) ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 55) && (rbsp_G3 <= 63) ##2 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 0) ##1 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##3 (rbsp == 62)) |-> (len_G3 == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 16) && (rbsp_G3 <= 32) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##3 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 237) && (rbsp <= 372) ##1 (rbsp == 448) ##2 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 373) && (rbsp <= 511) ##1 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) (!sel ##2 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328)) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 40) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) ##4 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) ##1 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320)) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 397) && (rbsp <= 511) ##3 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##2 (rbsp == 238)) |-> (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 15) && (rbsp_G3 <= 33) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 4) && (TotalCoeff <= 6) ##1 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 177) && (rbsp <= 341) ##3 (rbsp == 48)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##2 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 7) && (TotalCoeff <= 11) ##4 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) ##1 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) (!sel ##2 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 307) ##1 (TotalZeros_G3 == 4) ##3 1) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 61) ##3 1) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 0) ##2 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 326) && (rbsp <= 417) ##3 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 116) && (rbsp <= 237) ##3 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 307) ##3 ena ##1 1) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 172) && (rbsp <= 254) ##2 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 3) ##2 (rbsp == 448) ##2 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 0) && (TotalZeros_comb <= 1) ##2 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 4) ##3 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 8) ##1 (rbsp == 448) ##2 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 307) && sel ##4 1) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 13) && (TotalCoeff <= 15) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 307) ##2 sel ##2 1) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 307) ##4 (TotalZeros_G3 == 0)) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 0) && (TotalZeros_comb <= 2) ##2 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##2 (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1) && (rbsp == 307) ##4 1) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 0) ##2 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 307) ##3 (TotalZeros_G3 == 0) ##1 1) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 237) && (rbsp <= 372) ##2 (rbsp == 448) ##2 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 3) && (TotalCoeff <= 5) ##1 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 307) ##4 !chroma_DC_sel) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 7) && (TotalCoeff <= 15) ##3 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 117) && (rbsp <= 238) ##2 (rbsp == 48)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 307) && (len_comb == 1) ##4 1) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 9) ##3 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 307) ##3 (TotalCoeff == 2) ##1 1) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##1 (rbsp == 448) ##2 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 397) && (rbsp <= 511) ##3 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 8) ##2 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 307) && (rbsp_chroma_DC == 4) ##4 1) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##3 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 4) && (TotalZeros_G3 <= 5) ##3 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 38) ##1 1) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 307) ##2 ena ##2 1) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 128) && (rbsp <= 251) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 8) ##1 (rbsp == 448) ##2 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 307) ##2 (rbsp_G3 == 24) ##2 1) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 117) && (rbsp <= 238) ##1 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 307) ##2 (TotalCoeff == 10) ##2 1) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) ##2 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##2 (rbsp == 448) ##2 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 307) ##2 (len_G3 == 2) ##2 1) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 307) ##1 (TotalCoeff == 8) ##3 1) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 307) ##2 (TotalZeros_comb == 5) ##2 1) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 307) ##2 (len_comb == 2) ##2 1) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 3) && (TotalCoeff <= 6) ##2 (rbsp == 448) ##2 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 4) ##2 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 381) && (rbsp <= 511) ##3 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##3 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##1 (rbsp == 448) ##2 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 237) && (rbsp <= 370) ##2 (rbsp == 448) ##2 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 307) ##4 (TotalCoeff == 3)) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 307) ##3 (len_G3 == 0) ##1 1) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485) ##1 1) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 307) ##1 (rbsp == 258) ##3 1) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##2 (rbsp == 448) ##2 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 307) ##3 (len_LE3 == 3) ##1 1) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 307) ##4 (TotalZeros_LE3 == 3)) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##2 (rbsp == 448) ##2 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 307) ##3 (rbsp == 332) ##1 1) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 307) ##4 (len_G3 == 0)) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 307) ##2 (rbsp == 192) ##2 1) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 4) ##3 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 87) ##1 (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 307) ##4 (len_comb == 3)) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 346) ##3 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 1) && (rbsp_G3 <= 40) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 307) ##2 (len_LE3 == 3) ##2 1) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 9) && (TotalCoeff <= 12) ##3 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##1 (rbsp == 48)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 307) ##4 (TotalZeros_chroma_DC == 0)) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 117) && (rbsp <= 238) ##1 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 307) ##2 (TotalZeros_G3 == 5) ##2 1) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 307) ##1 (len_LE3 == 0) ##3 1) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 307) ##1 (TotalZeros_LE3 == 0) ##3 1) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 307) ##4 (TotalZeros_comb == 3)) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##1 (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 93) ##1 (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##2 (rbsp == 448) ##2 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 307) ##4 (rbsp == 320)) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 105) && (rbsp <= 207) ##4 (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 307) ##4 (rbsp_chroma_DC == 7)) |-> (rbsp_LE3 >= 288) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 511) ##3 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 74)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 188) && (rbsp <= 285) ##2 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11) ##3 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 10) && (TotalCoeff <= 15) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 15)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 11)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 7) && (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 173) && (rbsp <= 254) ##3 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 11) && (TotalCoeff <= 15) ##3 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 128) && (rbsp <= 251) ##2 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 1) && (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 75)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##2 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 2) && (len_comb <= 3) ##2 (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 14)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 511) ##3 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11) ##1 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 52)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 66)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) ##1 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 288) && (rbsp <= 397) ##1 (rbsp == 448) ##2 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 10) && (TotalCoeff <= 15) ##1 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 511) ##4 (rbsp == 48)) |-> (len_comb == 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 254) && (rbsp <= 511) ##1 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) ##3 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 256) ##2 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##3 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 394) ##2 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 9) && (TotalCoeff <= 12) ##3 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) && (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 254) && (rbsp <= 511) ##3 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 11) && (TotalCoeff <= 15) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 11) && (TotalCoeff <= 15) ##1 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 346) ##2 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##3 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 4) ##3 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 240) ##2 1) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 9) ##1 (rbsp == 448) ##2 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 6) && (rbsp_G3 <= 7) ##4 1) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 6) ##4 1) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 1) ##3 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##4 1) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##2 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 6) && (rbsp_G3 <= 7) ##4 1) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##2 1) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) (sel ##3 (rbsp == 41) ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##4 1) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 2) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) (!sel ##1 (rbsp == 448) ##2 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) ##1 (rbsp_G3 == 56) ##3 1) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) ##3 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2) ##3 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 11) && (TotalCoeff <= 15) ##3 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11) ##2 (rbsp == 448) ##2 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 33) ##2 1) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 95) && (rbsp <= 187) ##4 (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3) ##3 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3) ##3 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 10) && (TotalCoeff <= 15) ##3 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 403) ##4 1) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##3 (rbsp == 41) ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##1 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) (sel ##2 (rbsp == 41) ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 0) ##4 1) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##3 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##2 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##3 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##4 1) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) ##3 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 5) ##2 (rbsp == 448) ##2 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86)) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6)) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 254) && (rbsp <= 511) ##1 (rbsp == 448) ##2 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 10) && (TotalCoeff <= 15) ##3 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11) ##3 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 177) && (rbsp <= 341) ##4 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 52)) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##3 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 115)) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 11)) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 11) && (TotalCoeff <= 15) ##1 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6)) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 2) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15)) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7)) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 50) && (rbsp_G3 <= 63) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 6) ##4 1) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 10) ##2 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 6)) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 7)) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 55) && (rbsp_G3 <= 63) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##3 (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 10) && (TotalCoeff <= 15) ##1 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 52) && (rbsp_G3 <= 63) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 41) && (rbsp_G3 <= 63) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11) ##1 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5)) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52)) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 205) && (rbsp <= 305) ##3 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7)) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##1 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 115));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) ##1 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) (!sel ##2 (rbsp == 448) ##2 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 5) ##3 (rbsp == 237) ##1 1) |-> (len_comb >= 5) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) ##3 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50)) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##1 (rbsp == 448) ##2 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 3)) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115)) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##1 (rbsp == 448) ##2 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 1) && (rbsp_G3 == 56) ##3 1) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##2 (TotalZeros_G3 == 2) ##1 1) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##3 sel) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 15) && (rbsp_G3 == 56) ##3 1) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##4 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##2 (TotalZeros_chroma_DC == 0) ##1 1) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##3 (TotalZeros_G3 == 0)) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##1 (len_LE3 == 3) ##2 1) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##2 (TotalZeros_comb == 2) ##1 1) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) && (len_LE3 == 3)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1) ##3 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##4 1) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 254) && (rbsp <= 511) ##2 (rbsp == 448) ##2 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 452) ##3 1) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##3 (len_G3 == 0)) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##1 (rbsp == 448) ##2 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##1 (rbsp_chroma_DC == 1) ##2 1) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) && (len_comb == 3)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##2 (rbsp_chroma_DC == 7) ##1 1) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 254) ##2 (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##2 (TotalZeros_LE3 == 0) ##1 1) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##3 (TotalZeros_comb == 9)) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 2) ##3 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 89) && (rbsp <= 171) ##1 (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##3 ena) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 1) ##1 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##3 (rbsp == 15)) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 173) && (rbsp <= 254) ##2 (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##1 (TotalZeros_LE3 == 1) ##2 1) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##2 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##3 !chroma_DC_sel) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##1 (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) && (rbsp == 238)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 191) && (rbsp <= 289) ##3 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 250) && (rbsp <= 511) ##2 (rbsp == 448) ##2 1) |-> (len_chroma_DC == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##3 (TotalCoeff == 1)) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##1 (TotalCoeff == 7) ##2 1) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 175) && (rbsp <= 238) ##2 (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##2 !chroma_DC_sel ##1 1) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##2 (TotalCoeff == 14) ##1 1) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##1 (TotalZeros_G3 == 5) ##2 1) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 2) && (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11) ##3 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##2 (rbsp_G3 == 48) ##1 1) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##3 (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##3 1) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 56) ##1 (len_G3 == 2) ##2 1) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 1) && (rbsp_G3 == 56) ##3 1) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11) ##1 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##1 (len_LE3 == 4) ##3 1) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 10) && (TotalCoeff <= 15) ##3 (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 250) && (rbsp <= 380) ##1 (rbsp_G3 == 56) ##3 1) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 1) ##1 (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) ##2 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 341) ##4 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 104) && (rbsp <= 209) ##2 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 239) && (rbsp <= 372) ##4 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 6) ##2 (rbsp_G3 == 24) ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 1) ##2 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 8) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 3) && (TotalCoeff <= 6) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 10) ##2 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##1 (rbsp_G3 == 56) ##3 1) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 6) ##2 (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 3) && (TotalCoeff <= 5) ##1 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) (sel ##2 (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 38) ##1 1) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 11) && (TotalCoeff <= 15) ##3 (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##1 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 136));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485) ##1 1) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 172) && (rbsp <= 254) ##3 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##3 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 287) && (rbsp <= 396) ##1 (rbsp_G3 == 56) ##3 1) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 326) && (rbsp <= 417) ##1 (rbsp_G3 == 56) ##3 1) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 253) ##3 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 1) && (TotalZeros_comb <= 2) ##2 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##1 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel ##3 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##1 (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 114) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1) ##1 (rbsp_G3 == 56) ##3 1) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##3 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 102) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 12) && (TotalCoeff <= 15) ##2 (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##3 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 2) ##1 (rbsp_G3 == 56) ##3 1) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 9) && (TotalCoeff <= 12) ##4 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) (!sel ##4 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 2) ##1 (rbsp == 41) ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##3 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##1 (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 511) ##1 (rbsp_G3 == 56) ##3 1) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 6) ##1 (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##1 (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##2 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 290) && (rbsp <= 397) ##2 (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 115) && (rbsp <= 235) ##3 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 10) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##1 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##1 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##2 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 2) && (TotalZeros_comb <= 4) ##1 (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 89) && (rbsp <= 171) ##4 (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 11) ##1 (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##2 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##1 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 311) && (rbsp <= 410) ##2 (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) ##3 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 191) && (rbsp <= 289) ##2 (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 11) && (TotalCoeff <= 15) ##3 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 177) && (rbsp <= 341) ##2 (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 180) ##4 (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 3) ##2 (rbsp_G3 == 24) ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 10) && (TotalCoeff <= 15) ##3 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 7) ##2 (rbsp == 41) ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##1 (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 9) && (TotalCoeff <= 12) ##1 (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 374) && (rbsp <= 511) ##1 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 13) && (TotalCoeff <= 15) ##2 (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) ##1 (len_LE3 == 4) ##3 1) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 2) ##3 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) (sel ##1 (rbsp_G3 == 42) ##3 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) (sel ##1 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) (!ena ##1 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) (!sel ##1 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 3) ##2 (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) (ena ##2 (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 0) ##4 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##2 (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel ##1 (rbsp_G3 == 56) ##3 1) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 2) && (len_comb <= 7) ##1 (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 485) && (rbsp_LE3 <= 511) ##1 (rbsp_G3 == 56) ##3 1) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 207) ##2 (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 511) ##1 (rbsp_G3 == 56) ##3 1) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##1 (len_LE3 == 4) ##3 1) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 40) ##1 1) |-> (rbsp_G3 >= 30) && (rbsp_G3 <= 41));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 178) ##4 (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##4 (TotalCoeff == 15)) |-> (rbsp_G3 >= 30) && (rbsp_G3 <= 41));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##1 (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##3 (TotalCoeff == 15) ##1 1) |-> (rbsp_G3 >= 30) && (rbsp_G3 <= 41));
assert property(@(posedge DEFAULT_CLOCK) (!sel ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 (TotalCoeff == 13) ##2 1) |-> (rbsp_G3 >= 30) && (rbsp_G3 <= 41));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##2 1) |-> (rbsp_G3 >= 30) && (rbsp_G3 <= 41));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 (rbsp_G3 == 45) ##3 1) |-> (rbsp_G3 >= 30) && (rbsp_G3 <= 41));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 chroma_DC_sel ##2 1) |-> (rbsp_G3 >= 30) && (rbsp_G3 <= 41));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 (TotalCoeff == 9) ##3 1) |-> (rbsp_G3 >= 30) && (rbsp_G3 <= 41));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 (len_G3 == 1) ##2 1) |-> (rbsp_G3 >= 30) && (rbsp_G3 <= 41));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 (TotalZeros_comb == 4) ##3 1) |-> (rbsp_G3 >= 30) && (rbsp_G3 <= 41));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 198) && (rbsp <= 238) ##2 (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##4 !chroma_DC_sel) |-> (rbsp_G3 >= 30) && (rbsp_G3 <= 41));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##4 (len_comb == 1)) |-> (rbsp_G3 >= 30) && (rbsp_G3 <= 41));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 42) && (rbsp_G3 <= 63) ##3 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##3 (rbsp == 197) ##1 1) |-> (rbsp_G3 >= 30) && (rbsp_G3 <= 41));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 51) ##4 1) |-> (rbsp_G3 >= 30) && (rbsp_G3 <= 41));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##3 (TotalZeros_LE3 == 1) ##1 1) |-> (rbsp_G3 >= 30) && (rbsp_G3 <= 41));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##3 (len_LE3 == 3) ##1 1) |-> (rbsp_G3 >= 30) && (rbsp_G3 <= 41));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 (len_LE3 == 1) ##2 1) |-> (rbsp_G3 >= 30) && (rbsp_G3 <= 41));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 1) && (TotalZeros_LE3 == 2) ##4 1) |-> (rbsp_G3 >= 30) && (rbsp_G3 <= 41));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 (len_LE3 == 1) ##3 1) |-> (rbsp_G3 >= 30) && (rbsp_G3 <= 41));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) && (rbsp == 136) ##4 1) |-> (rbsp_G3 >= 30) && (rbsp_G3 <= 41));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 (rbsp == 143) ##2 1) |-> (rbsp_G3 >= 30) && (rbsp_G3 <= 41));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 11) && (TotalCoeff <= 15) ##1 (len_LE3 == 4) ##3 1) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##3 (len_G3 == 1) ##1 1) |-> (rbsp_G3 >= 30) && (rbsp_G3 <= 41));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 51) && (rbsp_G3 <= 63) ##3 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##4 (TotalZeros_comb == 1)) |-> (rbsp_G3 >= 30) && (rbsp_G3 <= 41));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##3 (TotalZeros_G3 == 1) ##1 1) |-> (rbsp_G3 >= 30) && (rbsp_G3 <= 41));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 52) && (rbsp_G3 <= 63) ##3 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##4 (rbsp == 317)) |-> (rbsp_G3 >= 30) && (rbsp_G3 <= 41));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 178) ##1 (rbsp == 41) ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 330) && (rbsp <= 417) ##2 (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##4 ena) |-> (rbsp_G3 >= 30) && (rbsp_G3 <= 41));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##4 (len_G3 == 1)) |-> (rbsp_G3 >= 30) && (rbsp_G3 <= 41));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11) ##3 (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##4 1) |-> (rbsp_G3 >= 30) && (rbsp_G3 <= 41));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##1 1) |-> (rbsp_G3 >= 30) && (rbsp_G3 <= 41));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 0) ##2 1) |-> (rbsp_G3 >= 30) && (rbsp_G3 <= 41));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 0)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##4 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 61) ##2 1) |-> (rbsp_G3 >= 30) && (rbsp_G3 <= 41));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 (TotalZeros_G3 == 2) ##2 1) |-> (rbsp_G3 >= 30) && (rbsp_G3 <= 41));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##2 1) |-> (rbsp_G3 >= 30) && (rbsp_G3 <= 41));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 (TotalZeros_G3 == 4) ##3 1) |-> (rbsp_G3 >= 30) && (rbsp_G3 <= 41));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##4 (TotalZeros_G3 == 1)) |-> (rbsp_G3 >= 30) && (rbsp_G3 <= 41));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##2 1) |-> (rbsp_G3 >= 30) && (rbsp_G3 <= 41));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 41) && sel ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 416) ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 8) ##1 (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) ##1 (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 6) && (rbsp_G3 <= 7) ##4 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 14));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 11) ##1 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 182) && (rbsp <= 207) ##2 (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 41) ##1 (TotalZeros_LE3 == 3)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 41) ##1 (len_G3 == 0)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 41) ##1 (rbsp_G3 == 63)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 7) && (TotalCoeff <= 11) ##1 (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 38) ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) (!ena && (rbsp == 41) ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 4) ##1 (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 41) ##1 (TotalZeros_comb == 3)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##3 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 41) ##1 (TotalCoeff == 1)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 7) ##1 (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 385) ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 0) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 191) && (rbsp <= 289) ##2 (rbsp == 41) ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 4) ##2 (rbsp == 41) ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485) ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) ##3 (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 41) ##1 (TotalZeros_G3 == 0)) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 0) ##3 (len_comb == 3)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 14));
assert property(@(posedge DEFAULT_CLOCK) (!sel ##3 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 0) ##1 (rbsp == 112) ##2 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 14));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) ##1 (len_LE3 == 4) ##3 1) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 0) ##1 (len_comb == 0) ##2 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 14));
assert property(@(posedge DEFAULT_CLOCK) (sel ##1 (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 0) ##3 !chroma_DC_sel) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 14));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 0) ##1 !ena ##2 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 14));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 14));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 0) ##1 (TotalCoeff == 8) ##2 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 14));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 0) && (TotalZeros_comb <= 2) ##1 (rbsp_G3 == 56) ##3 1) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 0) ##1 (len_G3 == 2) ##2 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 14));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 0) ##3 (TotalCoeff == 10)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 14));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 0) ##3 (TotalZeros_comb == 2)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 14));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 0) ##2 (rbsp == 245) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 14));
assert property(@(posedge DEFAULT_CLOCK) (ena ##1 (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 0) ##2 !ena ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 14));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 0) ##2 (TotalCoeff == 6) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 14));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##1 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##4 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 14));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 0) ##2 (TotalZeros_comb == 0) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 14));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 1) && (TotalZeros_G3 <= 2) ##2 (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 6) ##4 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 14));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 0) ##2 (len_comb == 0) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 14));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 0) && (TotalZeros_comb <= 1) ##1 (rbsp_G3 == 56) ##3 1) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 0) ##3 (rbsp == 79)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 14));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 0) ##1 (rbsp_chroma_DC == 7) ##2 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 14));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel ##1 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 2) ##2 (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 14));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##1 (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 0) ##1 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 0) ##4 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 14));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 104) && (rbsp <= 205) ##3 (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) (!ena ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 14));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11) ##4 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 0) ##2 (len_G3 == 3) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 14));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 0) ##2 (rbsp_G3 == 63) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 14));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##4 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 14));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 6) && (rbsp_G3 <= 7) ##4 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##4 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 14));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) ##4 (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 0) ##3 sel) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 14));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 0) ##1 (TotalZeros_G3 == 4) ##2 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 14));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 0) ##2 (len_LE3 == 3) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 14));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4) && (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 1) && (rbsp == 0) ##3 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 14));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 11) && (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 0) && chroma_DC_sel ##3 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 14));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4) && (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) ##1 (rbsp == 41) ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 2) && (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##1 (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) (!DEFAULT_RESET && (rbsp == 0) ##3 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 14));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 41) ##3 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 14));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) && (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 0) && (len_comb <= 1) ##3 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 0) && (rbsp_G3 == 63) ##3 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 14));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 48) && sel) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 9) ##1 (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 40) ##1 (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 3) && (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 1) && (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) ##2 (rbsp == 41) ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 0) ##4 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7) ##1 (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 172) && sel) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 0) && (TotalZeros_comb <= 1) ##3 (rbsp_G3 == 8)) |-> (TotalZeros_comb >= 7) && (TotalZeros_comb <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 13) && (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 3) && (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 138)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 128)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 44) ##4 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 14));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##4 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 0) && (rbsp_chroma_DC == 7) ##3 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 14));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##4 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 1) && (rbsp == 0) ##3 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 14));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##4 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) && (rbsp == 0) ##3 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 14));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 6) ##4 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 0) && sel ##3 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 14));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 419) && (rbsp <= 511) ##3 (rbsp == 41) ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 0) && (rbsp_LE3 == 511) ##3 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 14));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##2 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 14));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 1) && (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 172) && (len_comb == 2)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) && (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 33) ##2 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 14));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 6)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 117) && (rbsp <= 238) ##3 (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 (rbsp == 161) ##1 1) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) ##3 (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 41) ##3 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 (TotalCoeff == 11)) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 95) && (rbsp <= 127) ##1 (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 (len_comb == 1)) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) (sel ##1 (rbsp_G3 == 24) ##3 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC == 3) ##2 (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##2 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 4) && (len_LE3 == 4) ##3 1) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 chroma_DC_sel ##1 1) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 sel ##2 1) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 sel) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) && (len_LE3 == 4) ##3 1) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 95) && (rbsp <= 187) ##1 (rbsp == 41) ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 87) && (rbsp <= 164) ##1 (rbsp == 41) ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##4 1) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 82) && (rbsp <= 127) ##1 (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 7) && (TotalCoeff <= 9) ##1 (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 (len_LE3 == 3) ##1 1) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (TotalCoeff == 11) ##2 1) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) && (rbsp == 86) ##3 1) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##1 1) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7) ##1 (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 96) && (rbsp <= 127) ##1 (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 33) ##2 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 414) && (rbsp <= 511) ##3 (rbsp == 41) ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 38) ##2 1) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##1 (len_LE3 == 4) ##3 1) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##1 1) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (rbsp == 216) ##2 1) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 (TotalCoeff == 2) ##1 1) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##3 (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 1) && (TotalZeros_G3 <= 3) ##2 (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 (len_G3 == 1)) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (TotalZeros_LE3 == 1) ##2 1) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (len_LE3 == 3) ##2 1) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##1 1) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##3 1) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) (sel ##2 (rbsp_G3 == 13) ##1 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 (TotalZeros_G3 == 4)) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (TotalZeros_G3 == 4) ##2 1) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##4 1) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 (TotalZeros_comb == 4)) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##1 1) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##1 (len_LE3 == 4) ##3 1) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##1 1) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (len_comb == 0) ##1 1) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 44) ##4 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 (TotalZeros_LE3 == 1)) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 0) ##1 (rbsp_G3 == 56) ##3 1) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 172) && (rbsp <= 254) ##2 (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 178) ##2 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 254) ##1 (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##3 (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##4 (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) (!ena ##2 (TotalZeros_LE3 == 4)) |-> (rbsp_LE3 >= 193) && (rbsp_LE3 <= 394));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 128) && (rbsp <= 251) ##2 (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 399) && (rbsp <= 511) ##3 (rbsp == 41) ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 253) ##2 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 4) && (TotalCoeff <= 6) ##1 (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##4 (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##2 (rbsp == 41) ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) (sel ##2 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 206) && (rbsp <= 306) ##3 (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 117) && (rbsp <= 238) ##2 (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 176) ##1 (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 6) ##3 (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 373) && (rbsp <= 511) ##3 (rbsp == 41) ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##3 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##2 (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##2 (rbsp == 41) ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 209) && (rbsp <= 309) ##4 (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 173) && (rbsp <= 254) ##3 (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##2 (rbsp == 41) ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 173) && (rbsp <= 254) ##2 (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 160) && (rbsp <= 240) ##2 (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##3 (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 9) ##1 (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 5) ##3 (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel ##1 (rbsp_G3 == 13) ##1 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) (sel ##2 (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 346) ##2 (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##1 (rbsp == 41) ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 9) ##1 (rbsp == 41) ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 0) ##2 (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##2 (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##3 (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11) ##3 (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 12) ##1 (rbsp == 268) ##3 1) |-> (rbsp_G3 >= 16) && (rbsp_G3 <= 32));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 38) ##2 1) |-> (rbsp_G3 >= 16) && (rbsp_G3 <= 32));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 12) ##3 !sel ##1 1) |-> (rbsp_G3 >= 16) && (rbsp_G3 <= 32));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 253) ##1 (rbsp_G3 == 13) ##1 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 12) ##2 !ena ##2 1) |-> (rbsp_G3 >= 16) && (rbsp_G3 <= 32));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##1 1) |-> (rbsp_G3 >= 16) && (rbsp_G3 <= 32));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 11) && (rbsp_G3 == 12) ##4 1) |-> (rbsp_G3 >= 16) && (rbsp_G3 <= 32));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 2) && (rbsp_G3 == 12) ##4 1) |-> (rbsp_G3 >= 16) && (rbsp_G3 <= 32));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 10) ##1 (rbsp == 41) ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 12) ##4 (len_comb == 2)) |-> (rbsp_G3 >= 16) && (rbsp_G3 <= 32));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##3 (rbsp == 41) ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 1) && (rbsp_G3 == 12) ##4 1) |-> (rbsp_G3 >= 16) && (rbsp_G3 <= 32));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 12) ##2 sel ##2 1) |-> (rbsp_G3 >= 16) && (rbsp_G3 <= 32));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 12) ##3 (rbsp == 377) ##1 1) |-> (rbsp_G3 >= 16) && (rbsp_G3 <= 32));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 4) && (TotalZeros_G3 <= 11) ##1 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 344) && (rbsp <= 511) ##3 (rbsp == 41) ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 12) ##1 (len_G3 == 1) ##3 1) |-> (rbsp_G3 >= 16) && (rbsp_G3 <= 32));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##1 1) |-> (rbsp_G3 >= 16) && (rbsp_G3 <= 32));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 12) && (rbsp == 96) ##4 1) |-> (rbsp_G3 >= 16) && (rbsp_G3 <= 32));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 12) ##3 (len_LE3 == 0) ##1 1) |-> (rbsp_G3 >= 16) && (rbsp_G3 <= 32));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 0) && (len_comb <= 1) ##1 (rbsp_G3 == 56) ##3 1) |-> (len_comb >= 4) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 12) ##4 (len_G3 == 2)) |-> (rbsp_G3 >= 16) && (rbsp_G3 <= 32));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 61) ##2 1) |-> (rbsp_G3 >= 16) && (rbsp_G3 <= 32));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 12) ##3 (rbsp_chroma_DC == 7) ##1 1) |-> (rbsp_G3 >= 16) && (rbsp_G3 <= 32));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 12) ##4 (TotalZeros_LE3 == 0)) |-> (rbsp_G3 >= 16) && (rbsp_G3 <= 32));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##3 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 177) && (rbsp <= 341) ##2 (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 12) ##1 (len_LE3 == 3) ##3 1) |-> (rbsp_G3 >= 16) && (rbsp_G3 <= 32));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##1 1) |-> (rbsp_G3 >= 16) && (rbsp_G3 <= 32));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 12) ##3 (TotalCoeff == 0) ##1 1) |-> (rbsp_G3 >= 16) && (rbsp_G3 <= 32));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 2) && (rbsp_G3 == 12) ##4 1) |-> (rbsp_G3 >= 16) && (rbsp_G3 <= 32));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 12) ##4 (TotalCoeff == 14)) |-> (rbsp_G3 >= 16) && (rbsp_G3 <= 32));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 12) ##3 (len_comb == 0) ##1 1) |-> (rbsp_G3 >= 16) && (rbsp_G3 <= 32));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 207) && (rbsp <= 307) ##2 (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 8) ##2 (rbsp == 41) ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) && (rbsp_G3 == 12) ##4 1) |-> (rbsp_G3 >= 16) && (rbsp_G3 <= 32));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 12) ##1 (TotalCoeff == 15) ##3 1) |-> (rbsp_G3 >= 16) && (rbsp_G3 <= 32));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 96) && (rbsp_G3 == 12) ##4 1) |-> (rbsp_G3 >= 16) && (rbsp_G3 <= 32));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 12) ##1 (TotalZeros_G3 == 1) ##3 1) |-> (rbsp_G3 >= 16) && (rbsp_G3 <= 32));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 12) ##1 (TotalZeros_LE3 == 1) ##3 1) |-> (rbsp_G3 >= 16) && (rbsp_G3 <= 32));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 341) ##4 (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 3) ##3 (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 93) ##1 (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 188) && (rbsp <= 285) ##2 (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 2) ##1 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 5) ##3 (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0) ##3 (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 251) ##1 (rbsp_G3 == 4) ##3 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 10) && (TotalCoeff <= 15) ##1 (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 115) ##1 (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 87) ##1 (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##3 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 239) && (rbsp <= 372) ##3 (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 346) ##4 (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 254) ##1 (rbsp_G3 == 4) ##3 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 339) ##2 (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 2) ##1 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 3) && (TotalCoeff <= 5) ##1 (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 11) && (TotalCoeff <= 15) ##1 (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 4) && (TotalCoeff <= 6) ##1 (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 0) ##3 (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 116) && (rbsp <= 235) ##1 (len_LE3 == 4) ##3 1) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##1 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 116) && (rbsp <= 237) ##1 (len_LE3 == 4) ##3 1) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 6) ##2 (rbsp_G3 == 24) ##2 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 104) && (rbsp <= 209) ##1 (len_LE3 == 4) ##3 1) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 101) && (rbsp <= 207) ##1 (len_LE3 == 4) ##3 1) |-> (rbsp_G3 >= 42) && (rbsp_G3 <= 54));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 253) && (rbsp <= 382) ##4 (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 3) ##1 (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 10) && (TotalCoeff <= 15) ##2 (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 6) ##1 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##3 (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) (ena ##2 (rbsp_G3 == 24) ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel ##3 (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 237) && (rbsp <= 370) ##2 (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##3 (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) ##2 (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 7) ##2 (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) (!ena ##1 (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 8) && (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 (rbsp == 50)) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##1 (rbsp == 197) ##1 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 7) && (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##1 (rbsp >= 197) && (rbsp <= 284) ##1 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 8) && (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 2) && (TotalZeros_comb <= 8) && (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 9) ##3 (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 50) ##1 !chroma_DC_sel) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 126) ##2 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##1 (TotalZeros_G3 == 4) ##1 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##1 (TotalCoeff >= 6) && (TotalCoeff <= 11) ##1 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 4) ##2 (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193)) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7)) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 (TotalCoeff == 1)) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 62) && (rbsp <= 66) && (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##1 (TotalCoeff == 11) ##1 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 (TotalZeros_G3 == 0)) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 256) ##2 (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 7) && (TotalCoeff <= 9) && (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5)) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 (len_G3 == 0)) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15)) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##2 (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 (len_comb == 5)) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 10) ##3 (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50)) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 50) ##1 (rbsp_chroma_DC == 7)) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 8) && (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 66) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52)) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 7) && (rbsp_G3 <= 8) && (rbsp >= 62) && (rbsp <= 66) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##1 !sel ##1 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##1 (TotalZeros_LE3 == 1) ##1 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 11) && (TotalCoeff <= 15) ##2 (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 50) ##1 (TotalZeros_comb == 3)) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 102) ##2 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) && (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 1) && (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 (rbsp_G3 == 63)) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 50) ##1 (TotalZeros_chroma_DC == 0)) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 50) ##1 (len_comb == 2)) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 394) ##2 (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) ##3 (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 177) && (rbsp <= 341) ##3 (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7)) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##4 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 40) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##4 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 51) ##4 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 10) ##2 (rbsp == 41) ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##4 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##1 (rbsp == 41) ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 1) && (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 33) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 7) && (TotalCoeff <= 10) ##3 (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 40) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) && (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 0) ##4 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 221) && (rbsp_LE3 <= 394) ##2 (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 9) ##2 (rbsp == 41) ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 6) && (rbsp_G3 <= 7) ##4 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 15) && (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 221) && (rbsp_LE3 <= 288) ##2 (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) (!sel ##3 (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 1) && (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) && (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##4 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 6) ##4 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1) && (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 50) && (len_comb == 1) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 1) && (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) ##2 (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 252) ##1 (rbsp_G3 == 24) ##3 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 0) ##2 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 24) ##1 (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) (ena ##1 (rbsp_G3 == 24) ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11) ##1 (rbsp == 41) ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 2) && (TotalZeros_comb <= 4) ##1 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##4 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##4 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##1 (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 14) ##1 (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 4) ##2 (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 1) ##2 (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel ##3 (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##1 (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 253) ##1 (rbsp_G3 == 24) ##3 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##1 (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##4 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##2 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##2 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##3 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##2 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 15) ##1 (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) (ena ##3 (rbsp_G3 == 13) ##1 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 1) ##1 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) (sel ##2 (rbsp_G3 == 24) ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##3 (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 511) ##4 (rbsp == 48)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 2) ##2 (rbsp_G3 == 24) ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 7) && (TotalCoeff <= 11) ##1 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) ##2 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##2 (rbsp == 41) ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 4) ##2 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 7) ##2 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11) ##2 (rbsp == 41) ##1 1) |-> (rbsp_LE3 >= 0) && (rbsp_LE3 <= 339));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##1 (rbsp_G3 == 42) ##3 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 4) ##1 (rbsp_G3 == 42) ##3 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) ##1 (rbsp_G3 == 42) ##3 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 102) ##1 (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 7) ##1 (rbsp_G3 == 42) ##3 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) (!ena ##3 (rbsp == 172)) |-> (rbsp_G3 >= 15) && (rbsp_G3 <= 28));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 245) ##1 (rbsp_G3 == 42) ##3 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 254) ##1 (rbsp_G3 == 42) ##3 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 24) ##1 (TotalCoeff == 12) ##2 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##2 !ena ##2 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##4 sel) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 104) && (rbsp <= 206) ##3 (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##2 (rbsp_LE3 == 511) ##2 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##4 (len_comb == 1)) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 24) ##3 (rbsp == 251)) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 24) ##1 (len_G3 == 1) ##2 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 24) ##2 (TotalZeros_comb == 0) ##1 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 24) ##2 (len_comb == 0) ##1 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##1 (rbsp == 13) ##3 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 24) ##1 (rbsp == 139) ##2 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 24) ##2 (rbsp == 37) ##1 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 1) ##2 (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##1 chroma_DC_sel ##3 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##1 (TotalCoeff == 6) ##3 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 24) ##3 chroma_DC_sel) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 24) ##3 (TotalCoeff == 2)) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 24) ##2 (TotalCoeff == 7) ##1 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 24) ##3 (TotalZeros_comb == 1)) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 24) ##2 !ena ##1 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##4 (len_G3 == 1)) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 24) ##3 (TotalZeros_G3 == 0)) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##3 (TotalZeros_LE3 == 1) ##1 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##4 (TotalZeros_comb == 2)) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 24) ##3 (rbsp_chroma_DC == 3)) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 24) ##1 (TotalZeros_G3 == 3) ##2 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 24) ##3 (TotalZeros_chroma_DC == 1)) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 24) ##1 (len_LE3 == 0) ##2 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##1 (len_comb == 0) ##3 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 24) ##3 (len_G3 == 0)) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##1 (rbsp_LE3 == 511) ##3 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 105) && (rbsp <= 207) ##3 (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 24) ##3 (TotalZeros_LE3 == 0)) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 105) && (rbsp <= 209) ##3 (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 24) ##3 ena) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##4 !chroma_DC_sel) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 6) && (rbsp_G3 <= 7) ##4 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##2 (len_G3 == 2) ##2 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 24) ##2 (rbsp_LE3 == 511) ##1 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##1 !sel ##3 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 24) ##2 (len_G3 == 2) ##1 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##3 (len_LE3 == 3) ##1 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##2 !sel ##2 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##4 (rbsp == 312)) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##2 (TotalZeros_G3 == 5) ##2 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##3 (TotalCoeff == 7) ##1 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##3 (rbsp == 164) ##1 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##2 (len_comb == 0) ##2 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##4 (TotalCoeff == 14)) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 24) ##2 (TotalZeros_LE3 == 1) ##1 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##2 chroma_DC_sel ##2 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##2 (TotalCoeff == 7) ##2 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##2 (rbsp == 295) ##2 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##3 (TotalZeros_G3 == 5) ##1 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##4 (TotalZeros_G3 == 2)) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 24) ##2 (TotalZeros_G3 == 5) ##1 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##2 (len_LE3 == 3) ##2 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##2 (TotalZeros_LE3 == 1) ##2 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##3 (len_G3 == 2) ##1 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##1 (TotalZeros_G3 == 2) ##3 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##1 (len_G3 == 3) ##3 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 40) ##1 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##4 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 38) ##2 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 113) && (rbsp <= 240) ##1 (rbsp_G3 == 42) ##3 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 40) ##1 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 248) && (rbsp_G3 == 31) ##4 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 9) && (rbsp_G3 == 24) ##3 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) && (rbsp_G3 == 31) ##4 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##2 (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 127) && (rbsp <= 252) ##1 (rbsp_G3 == 13) ##1 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 1) && (TotalZeros_comb <= 2) ##2 (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) && (rbsp_G3 == 24) ##3 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 6) && (rbsp_G3 == 24) ##3 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 40) ##2 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) && (len_comb == 1) ##4 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 0) ##4 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 6) && (rbsp_G3 == 24) ##3 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 0) && (rbsp_G3 == 31) ##4 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 15) && (rbsp_G3 == 31) ##4 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1) && (rbsp_G3 == 31) ##4 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 127) ##1 (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) && (rbsp == 248) ##4 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 6) ##4 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##4 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##4 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11) ##1 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) && (rbsp_G3 == 31) ##4 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 115) && (rbsp <= 245) ##1 (rbsp_G3 == 4) ##3 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 1) && (rbsp_G3 == 31) ##4 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 0) && (rbsp_G3 == 31) ##4 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) && (rbsp == 331) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 (len_LE3 == 0)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 41) ##3 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 33) ##2 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 9) && (TotalCoeff <= 10) ##1 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 4) ##1 (rbsp_G3 == 24) ##3 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##4 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##1 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 (rbsp == 180)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##4 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##2 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##3 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##2 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 44) ##4 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##4 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) ##1 (rbsp_G3 == 24) ##3 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##3 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 51) ##4 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##2 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505) ##1 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##1 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 178) ##1 (rbsp_G3 == 24) ##3 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##1 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 7) ##1 (rbsp_G3 == 24) ##3 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 485) && (rbsp_LE3 <= 511) ##3 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##4 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##1 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 0) ##2 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 (TotalCoeff == 12)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 61) ##2 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 38) ##2 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 (TotalZeros_comb == 2)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 2) && (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##2 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 (TotalZeros_G3 == 2)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##4 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##2 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##2 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##1 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##1 1) |-> (rbsp_G3 >= 26) && (rbsp_G3 <= 49));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 373) && (rbsp_LE3 <= 511) ##3 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 176) ##1 (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 10) ##1 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 26) && (rbsp_G3 <= 49) ##1 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##1 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 30) && (rbsp_G3 <= 41) ##1 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 82) ##1 (rbsp_G3 == 24) ##3 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 91) ##1 (rbsp_G3 == 24) ##3 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##1 (rbsp_G3 == 13) ##1 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 33) && (rbsp_G3 <= 51) ##1 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 28) && (rbsp_G3 <= 40) ##1 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 34) && (rbsp_G3 <= 52) ##1 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238)) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240)) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##3 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136)) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504)) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 102) ##1 (rbsp_G3 == 24) ##3 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485)) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 3) ##2 (rbsp_G3 == 24) ##2 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##2 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7)) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320)) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 41) ##3 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##1 (rbsp_G3 == 24) ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193)) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##3 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364)) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3)) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317)) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331)) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 180) ##3 (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 42) ##2 (TotalZeros_LE3 == 1) ##1 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 8) && (rbsp_G3 == 42) ##3 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 42) ##1 (TotalCoeff == 3) ##2 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 337) && (rbsp_G3 == 42) ##3 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 42) ##2 (TotalCoeff == 15) ##1 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 42) ##2 (len_LE3 == 3) ##1 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 33) ##2 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 42) ##1 (rbsp == 251) ##2 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 38) ##1 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 42) ##2 (len_G3 == 1) ##1 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 42) ##2 (rbsp == 70) ##1 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 42) ##3 (rbsp == 11)) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 5) && (rbsp_G3 == 42) ##3 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##4 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 5) && (rbsp_G3 == 42) ##3 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 0) ##4 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##4 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 42) ##2 (TotalZeros_G3 == 1) ##1 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 42) ##1 (TotalZeros_LE3 == 1) ##2 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 42) ##3 (TotalZeros_comb == 3)) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##4 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) && (rbsp_G3 == 42) ##3 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 42) ##3 (rbsp_chroma_DC == 0)) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) (sel ##2 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 42) ##2 sel ##1 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 42) && (rbsp == 337) ##3 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 2) && (rbsp_G3 == 42) ##3 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 42) ##2 !ena ##1 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 42) && (len_comb == 2) ##3 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 44) ##4 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) && (rbsp_G3 == 42) ##3 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 177) ##3 (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11) ##1 (rbsp_G3 == 42) ##3 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 115) ##1 (rbsp_G3 == 24) ##3 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 114) ##1 (rbsp_G3 == 24) ##3 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 128) && (rbsp <= 251) ##1 (rbsp_G3 == 42) ##3 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 172) && (rbsp <= 254) ##1 (rbsp_G3 == 42) ##3 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 9) && (TotalCoeff <= 12) ##1 (rbsp_G3 == 42) ##3 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 128) && (rbsp <= 252) ##1 (rbsp_G3 == 4) ##3 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 348) ##1 (rbsp_G3 == 42) ##3 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 346) ##1 (rbsp_G3 == 42) ##3 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) (!ena ##1 (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 10) ##1 (rbsp_G3 == 42) ##3 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 188) && (rbsp <= 287) ##1 (rbsp_G3 == 42) ##3 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 240) && (rbsp <= 325) ##1 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 116) ##2 (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 116) ##2 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 254) ##1 (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7) ##1 (rbsp_G3 == 24) ##3 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel ##1 (rbsp_G3 == 24) ##3 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 186) && (rbsp <= 283) ##3 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 6) ##1 (rbsp_G3 == 24) ##3 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##3 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) (ena ##1 (rbsp_G3 == 24) ##2 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) (!sel ##1 (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##1 (rbsp_G3 == 24) ##3 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##1 (rbsp_G3 == 24) ##3 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##1 (rbsp_G3 == 24) ##3 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 3) && (TotalCoeff <= 6) ##1 (rbsp_G3 == 24) ##3 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) ##1 (rbsp_G3 == 13) ##1 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 346) ##1 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 212) && (rbsp <= 314) ##1 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) (sel ##2 (rbsp_G3 == 24) ##2 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 348) ##1 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11) ##3 (rbsp_G3 == 13) ##1 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##3 (rbsp_G3 == 13) ##1 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) ##3 (rbsp_G3 == 13) ##1 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 241) && (rbsp <= 325) ##3 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 511) ##2 (rbsp_G3 == 24) ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 346) ##3 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 253) && (rbsp <= 511) ##2 (rbsp_G3 == 24) ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 288) && (rbsp <= 397) ##1 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) (!sel ##2 (rbsp_G3 == 50) ##1 1) |-> (rbsp_G3 >= 33) && (rbsp_G3 <= 51));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) ##1 (rbsp_G3 == 13) ##1 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 2) && (len_comb <= 7) ##2 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) (ena ##2 (rbsp_G3 == 24) ##2 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 10) && (TotalCoeff <= 15) ##1 (rbsp_G3 == 42) ##3 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 10) ##1 (rbsp_G3 == 42) ##3 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 4) ##1 (rbsp_G3 == 13) ##1 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 7) ##1 (rbsp_G3 == 13) ##1 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 2) && (len_comb <= 7) ##2 (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) ##3 (rbsp_G3 == 13) ##1 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##1 (rbsp_G3 == 13) ##1 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 93) ##2 (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 81) ##2 (rbsp_G3 == 13) ##1 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 93) ##2 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 41) && (rbsp_G3 <= 63) ##1 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##3 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##3 (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1) ##2 (rbsp_G3 == 24) ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 0) && (TotalZeros_comb <= 1) ##1 (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##1 (rbsp_G3 == 24) ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 0) && (TotalZeros_comb <= 1) ##1 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 41) && (rbsp_G3 <= 63) ##1 (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 7) && (TotalCoeff <= 15) ##1 (rbsp_G3 == 42) ##3 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 87) ##2 (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 87) ##2 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 238) && (rbsp <= 373) ##1 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) ##3 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 10) && (TotalCoeff <= 15) ##3 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##1 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##1 (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 0) ##1 (rbsp_G3 >= 7) && (rbsp_G3 <= 8) ##2 1) |-> (TotalZeros_comb >= 5) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 237) && (rbsp <= 372) ##1 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 10) && (TotalCoeff <= 15) ##3 (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 6) ##2 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) (!sel ##2 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 13) ##1 (TotalZeros_comb == 1)) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 13) ##1 (TotalCoeff == 10)) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 51) ##1 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 3) ##3 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 7) && (rbsp_G3 == 13) ##1 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 511) ##1 (rbsp_G3 == 24) ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##4 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##3 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##2 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##3 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##2 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 11) && (TotalCoeff <= 15) ##3 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 13) ##1 (rbsp == 232)) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) ##3 (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 15) ##1 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 7) ##2 (rbsp_G3 == 13) ##1 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 8) && (rbsp_G3 == 13) ##1 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 13) ##1 (len_G3 == 2)) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 346) ##1 (rbsp_G3 == 13) ##1 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 8) && (rbsp_G3 == 13) ##1 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 13) ##1 (len_LE3 == 3)) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##3 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 4) ##2 (rbsp_G3 == 13) ##1 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##3 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 16) ##1 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 6) && (rbsp_G3 <= 7) ##2 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##3 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##4 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 60) ##4 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 1) && (rbsp_G3 == 13) ##1 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) ##2 (rbsp_G3 == 13) ##1 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 11) && (TotalCoeff <= 15) ##3 (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 12) && (TotalCoeff <= 15) ##3 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##2 (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##3 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 3) ##3 (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 1) && (TotalZeros_G3 <= 3) ##3 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 3) && (TotalZeros_G3 <= 4) ##3 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 1) && (TotalZeros_G3 <= 3) ##3 (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 287) && (rbsp <= 396) ##2 (rbsp_G3 == 24) ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##1 (rbsp_G3 == 42) ##3 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##3 (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 3) && (TotalZeros_G3 <= 4) ##3 (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##2 (rbsp_G3 == 13) ##1 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 10) && (TotalCoeff <= 15) ##2 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##3 (rbsp_G3 == 13) ##1 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 12) && (TotalCoeff <= 15) ##3 (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 4) ##3 (TotalZeros_LE3 == 0)) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) (!ena ##1 (rbsp_G3 == 24) ##3 1) |-> (len_comb == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (TotalCoeff == 11)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (rbsp == 161) ##1 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (rbsp_chroma_DC == 7)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 2) && (TotalZeros_comb <= 4) ##2 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4) && (rbsp_G3 == 4) ##3 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (TotalZeros_comb == 0) ##1 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 0) && (rbsp_G3 == 4) ##3 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 !chroma_DC_sel) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 4) && (rbsp == 37) ##3 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##4 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 3) ##2 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##3 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##1 (rbsp_G3 == 42) ##3 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (TotalZeros_G3 == 0) ##1 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 4) ##2 (TotalZeros_LE3 == 0) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 1) && (rbsp_G3 == 4) ##3 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##4 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (TotalZeros_chroma_DC == 0) ##1 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (len_G3 == 0) ##1 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (TotalZeros_G3 == 4)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (rbsp_G3 == 52)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 4) && (len_comb == 4) ##3 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 4) ##3 (rbsp_chroma_DC == 0)) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 6) && (rbsp_G3 <= 7) ##2 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 16) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 4) ##3 (len_LE3 == 0)) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 4) ##2 (TotalCoeff == 6) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 209) && (rbsp <= 309) ##1 (rbsp_G3 == 13) ##1 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 1) && (rbsp_G3 == 4) ##3 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 15) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 60) ##4 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4) && (rbsp_G3 == 4) ##3 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 51) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 4) ##3 sel) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##3 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 4) ##2 (TotalZeros_G3 == 2) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 4) ##3 (TotalZeros_comb == 1)) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##4 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 4) ##3 (TotalCoeff == 0)) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 !ena ##1 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 10) && (TotalCoeff <= 15) ##2 (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3)) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##3 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (len_comb == 0) ##1 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 0) ##3 (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 4) ##3 (rbsp == 42)) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 4) ##3 chroma_DC_sel) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 8) && (rbsp_G3 == 4) ##3 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 0) ##3 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 4) ##3 (len_comb == 1)) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 (len_comb == 1)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (rbsp_chroma_DC == 7) ##1 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (TotalCoeff == 2) ##1 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 37) && (rbsp_G3 == 4) ##3 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (len_LE3 == 3) ##1 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 4) ##2 sel ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (TotalZeros_chroma_DC == 0)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 4) ##2 (len_G3 == 3) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) && (rbsp_G3 == 4) ##3 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##3 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##2 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 6) ##2 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##3 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 4) ##1 (rbsp == 321) ##2 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 252) && (rbsp <= 381) ##2 (rbsp_G3 == 24) ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##1 (rbsp_G3 == 24) ##2 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##2 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 49) && (len_comb == 2) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##4 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 9) && (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 201) && (rbsp <= 299) ##1 (rbsp_G3 == 4) ##3 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 86) ##3 (len_comb == 1)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 60) ##4 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0)) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 1) && (TotalZeros_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 395) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 10) && (TotalCoeff <= 15) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 !ena ##2 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 253) && (rbsp <= 382) ##2 (rbsp_G3 == 24) ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) (!ena ##3 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 49) ##1 (TotalZeros_comb == 1)) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 49) ##1 (len_comb == 2)) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 6) ##2 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##4 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 (TotalZeros_comb == 0) ##2 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##3 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) && (len_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##1 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##3 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##3 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 4) ##1 (TotalZeros_comb == 0) ##2 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 117) && (rbsp <= 238) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3)) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 3) ##2 (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 (rbsp == 216) ##2 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 40) ##2 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 4) ##1 !sel ##2 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 49) ##1 (rbsp == 145)) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) && (rbsp == 86) ##3 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 4) ##1 (len_G3 == 3) ##2 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##2 (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 4) ##1 (TotalCoeff == 4) ##2 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) && (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 51) ##4 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##1 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##4 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 16) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 3) && (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 2) && (TotalZeros_comb <= 4) ##2 (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##3 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 15) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) && (len_comb == 4) ##3 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 51) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 0)) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0)) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##4 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 (rbsp_G3 == 63) ##2 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 4) ##1 (len_LE3 == 0) ##2 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 (len_comb == 0) ##2 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 4) ##1 (len_comb == 0) ##2 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 49) ##1 sel) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##2 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 40) ##1 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 3) && (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 11) && (TotalCoeff <= 15) ##2 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 6) && (rbsp_G3 <= 7) ##2 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 4) ##1 (rbsp_chroma_DC == 7) ##2 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) && (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 4) ##1 (TotalZeros_G3 == 1) ##2 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##3 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 0) && (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0) ##2 (rbsp_G3 == 13) ##1 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 4) ##1 !chroma_DC_sel ##2 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##3 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 4) ##1 (TotalZeros_chroma_DC == 0) ##2 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 2) && (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 49) ##1 (len_comb == 2)) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 16) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 3) && (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##3 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 395) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 253) && (rbsp <= 511) ##1 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 14) ##2 (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##2 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 24) ##2 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 24) ##2 (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##3 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 14) ##2 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##1 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 177) && (rbsp <= 341) ##1 (rbsp_G3 == 4) ##3 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 15) ##2 (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##4 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##2 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 254) && (rbsp <= 511) ##1 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 60) ##4 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 40) ##2 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 49) ##1 sel) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##4 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 15) ##2 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 6) ##2 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 2) && (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 3) && (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 11) ##4 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 9) && (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505) ##1 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 11) && (TotalCoeff <= 15) ##2 (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 0) && (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 49) ##1 (TotalZeros_comb == 1)) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 40) ##2 (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 49) ##1 (rbsp == 145)) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##2 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##3 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##3 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) && (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 15) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 49) && (len_comb == 2) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 51) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##3 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 6) && (rbsp_G3 <= 7) ##2 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) && (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##1 !sel ##3 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 0) && (TotalZeros_comb <= 2) ##3 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##4 (TotalZeros_comb == 2)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 346) ##2 (rbsp_G3 == 24) ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##4 (len_comb == 1)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##1 (TotalCoeff == 6) ##3 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##3 (TotalCoeff == 7) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 6) ##2 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##4 (TotalCoeff == 14)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 340) ##1 (rbsp_G3 == 24) ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##4 sel) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 95) && (rbsp <= 190) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 11) && (TotalCoeff <= 15) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##2 (TotalZeros_G3 == 5) ##2 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##3 (len_G3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##4 !chroma_DC_sel) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##1 (len_G3 == 3) ##3 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##2 chroma_DC_sel ##2 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##4 (TotalZeros_G3 == 2)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##1 (rbsp == 13) ##3 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 348) ##2 (rbsp_G3 == 24) ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##1 chroma_DC_sel ##3 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##2 !sel ##2 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##2 (rbsp == 295) ##2 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 340) ##2 (rbsp_G3 == 24) ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##1 (len_comb == 0) ##3 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##3 (len_LE3 == 3) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 11) ##2 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##2 (TotalCoeff == 7) ##2 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##1 (TotalZeros_G3 == 2) ##3 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 6) && (rbsp_G3 <= 7) ##4 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##2 (len_comb == 0) ##2 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##3 (TotalZeros_LE3 == 1) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##2 (len_G3 == 2) ##2 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##2 !ena ##2 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##3 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##1 (rbsp_LE3 == 511) ##3 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##4 (len_G3 == 1)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##4 (rbsp == 312)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##3 (TotalZeros_G3 == 5) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##3 (rbsp == 164) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##2 (len_LE3 == 3) ##2 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##2 (TotalZeros_LE3 == 1) ##2 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##3 (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) ##2 (rbsp_LE3 == 511) ##2 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 252) && (rbsp <= 381) ##1 (rbsp_G3 == 24) ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) && (rbsp_G3 == 31) ##4 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 11) ##2 (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 6) ##2 (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 0) && (rbsp_G3 == 31) ##4 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 89) && (rbsp <= 172) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 1) && (rbsp_G3 == 31) ##4 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) (!sel ##3 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 176) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##4 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 172) && (rbsp <= 341) ##1 (rbsp_G3 == 4) ##3 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 33) ##2 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##1 (rbsp_G3 == 24) ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 15) && (rbsp_G3 == 31) ##4 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##4 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 0) ##2 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##2 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##2 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) && (rbsp_G3 == 31) ##4 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 6) ##4 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 38) ##2 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 40) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 0) && (rbsp_G3 == 31) ##4 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) && (rbsp == 248) ##4 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##4 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##2 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0)) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 248) && (rbsp_G3 == 31) ##4 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##2 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1) && (rbsp_G3 == 31) ##4 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 31) && (len_comb == 1) ##4 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 0) ##4 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238)) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 209) && (rbsp <= 308) ##1 (rbsp_G3 == 4) ##3 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##3 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86)) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##3 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 346) ##1 (rbsp_G3 == 24) ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##1 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 51) ##4 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 254) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 2) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##1 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 51) ##4 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115)) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 44) ##4 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##2 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317)) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3)) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364)) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##1 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 38) ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320)) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 44) ##4 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##4 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 41) ##3 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331)) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 61) ##2 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 40));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##1 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 373) && (rbsp <= 511) ##3 (rbsp_G3 == 13) ##1 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 326) && (rbsp <= 417) ##3 (rbsp_G3 == 13) ##1 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##1 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##4 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##2 (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136)) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##4 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 4) ##2 (rbsp_G3 == 24) ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##2 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##2 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 24) ##2 (len_comb == 3)) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 24) ##1 (len_LE3 == 3) ##1 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 24) ##1 (TotalCoeff == 2) ##1 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##2 (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC == 4) ##2 (rbsp_G3 == 24) ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 24) ##1 (len_G3 == 0) ##1 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 24) ##2 ena) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##2 (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 0) && (TotalZeros_comb <= 1) ##3 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 10) && (rbsp_G3 == 24) ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 24) ##2 (rbsp == 320)) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 24) ##1 (TotalZeros_G3 == 0) ##1 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 24) ##2 (TotalCoeff == 3)) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 11) ##4 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 212) && (rbsp <= 310) ##2 (rbsp_G3 == 24) ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 5) && (rbsp_G3 == 24) ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##2 (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##1 (rbsp_G3 == 24) ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 24) ##2 (TotalZeros_G3 == 0)) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 0) ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##2 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 24) ##2 (len_G3 == 0)) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 5) && (rbsp_G3 == 24) ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) && (rbsp_G3 == 24) ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505) ##1 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 188) && (rbsp <= 285) ##1 (rbsp_G3 == 24) ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) (!ena ##1 (rbsp_G3 == 42) ##3 1) |-> (len_comb == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##3 (rbsp_G3 == 13) ##1 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##1 (rbsp_G3 == 24) ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 0) ##2 (rbsp_G3 == 24) ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##3 (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##3 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 0) ##3 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 6) && (rbsp_G3 <= 7) ##2 1) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504)) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 6) ##2 1) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 324) && (rbsp <= 417) ##3 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240)) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 327) && (rbsp <= 417) ##3 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 2) ##2 (rbsp_G3 == 24) ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##4 (len_G3 == 1)) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##4 (TotalCoeff == 15)) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##3 (TotalCoeff == 15) ##1 1) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##4 1) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 (rbsp == 143) ##2 1) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 15) ##1 1) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##4 ena) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 (TotalCoeff == 9) ##3 1) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 (len_LE3 == 1) ##3 1) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 (len_LE3 == 1) ##2 1) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 41) ##3 1) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 51) ##1 1) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 (TotalZeros_G3 == 2) ##2 1) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 60) ##4 1) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##4 (rbsp == 317)) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 (rbsp_G3 == 45) ##3 1) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##4 !chroma_DC_sel) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 chroma_DC_sel ##2 1) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##3 (rbsp == 197) ##1 1) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 (TotalZeros_comb == 4) ##3 1) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 327) && (rbsp <= 417) ##3 (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##4 (len_comb == 1)) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##3 (TotalZeros_G3 == 1) ##1 1) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##4 (TotalZeros_G3 == 1)) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##3 1) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 176) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 16) ##1 1) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 2) && (len_comb <= 7) ##2 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##3 (len_LE3 == 3) ##1 1) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##3 (TotalZeros_LE3 == 1) ##1 1) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##3 1) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##2 1) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 1) && (TotalZeros_LE3 == 2) ##4 1) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) && (rbsp == 136) ##4 1) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##4 (rbsp_G3 == 39)) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##3 1) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##4 1) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 (TotalCoeff == 13) ##2 1) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##3 1) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##4 1) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 (TotalZeros_G3 == 4) ##3 1) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##3 (len_G3 == 1) ##1 1) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 (len_G3 == 1) ##2 1) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##3 1) |-> (TotalZeros_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 324) && (rbsp <= 417) ##3 (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0) ##2 (rbsp_G3 == 24) ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 0) ##3 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 254) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 0) ##2 (rbsp_G3 == 24) ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 311) && (rbsp <= 410) ##3 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (len_LE3 == 3) ##1 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (rbsp == 161) ##1 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (TotalCoeff == 11)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (rbsp_chroma_DC == 7) ##1 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (rbsp_G3 == 52)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 !chroma_DC_sel) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 399) && (rbsp <= 511) ##1 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (len_G3 == 0) ##1 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 !ena ##1 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (TotalCoeff == 2) ##1 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 340) && (rbsp <= 426) ##1 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (TotalZeros_chroma_DC == 0)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (TotalZeros_comb == 0) ##1 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 0) && (len_comb <= 1) ##3 (TotalZeros_LE3 == 2) ##1 1) |-> (rbsp_G3 >= 0) && (rbsp_G3 <= 24));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (TotalZeros_G3 == 0) ##1 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (TotalZeros_chroma_DC == 0) ##1 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 (len_comb == 1)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (len_comb == 0) ##1 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (TotalZeros_G3 == 4)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (rbsp_chroma_DC == 7)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 311) && (rbsp <= 410) ##3 (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 (TotalZeros_comb == 0) ##2 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 (rbsp == 216) ##2 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 11) ##4 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##2 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##3 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) && (rbsp == 86) ##3 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 86) ##3 (len_comb == 1)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 117) && (rbsp <= 238) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##4 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 11) && (TotalCoeff <= 15) ##3 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) && (len_comb == 4) ##3 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 (len_comb == 0) ##2 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 40) ##2 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##1 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 !ena ##2 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 399) && (rbsp <= 511) ##1 (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 1) && (TotalZeros_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 95) && (rbsp <= 190) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##4 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 89) && (rbsp <= 172) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 51) ##4 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) && (len_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 340) && (rbsp <= 426) ##1 (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 (rbsp_G3 == 63) ##2 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##1 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##2 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193)) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 373) && (rbsp <= 511) ##1 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505) ##1 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 2) && (TotalZeros_comb <= 4) ##2 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##2 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 6) && (rbsp_G3 <= 7) ##4 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 0) ##4 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##4 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 4) ##2 (rbsp_G3 == 24) ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 10) && (TotalCoeff <= 15) ##3 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 6) ##4 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##4 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##4 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##4 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##1 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 33) ##2 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 373) && (rbsp <= 511) ##1 (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 12) && (TotalCoeff <= 15) ##3 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7) ##2 (rbsp_G3 == 24) ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 10) && (TotalCoeff <= 15) ##2 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 11) && (TotalCoeff <= 15) ##2 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 1) && (TotalZeros_G3 <= 3) ##3 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 344) && (rbsp <= 511) ##1 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 10) && (TotalCoeff <= 15) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) (!sel ##1 (rbsp_G3 == 13) ##1 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##2 (rbsp_G3 == 24) ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) (sel ##1 (len_LE3 == 5) ##3 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##2 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 2) ##2 (rbsp_G3 == 24) ##2 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) ##3 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 344) && (rbsp <= 511) ##1 (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 11) && (TotalCoeff <= 15) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 40) ##2 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##1 (len_LE3 == 5) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 24) ##2 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##3 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##3 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) (!sel ##3 (rbsp_G3 == 13) ##1 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 2) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 3) ##2 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 116) ##2 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##1 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 93) ##2 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 14) ##2 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) (!ena ##2 (rbsp_G3 == 13) ##1 1) |-> (TotalZeros_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 87) ##2 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 15) ##2 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 3) && (TotalZeros_comb <= 11));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##3 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##3 (rbsp_G3 == 49) ##1 1) |-> (rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 346) ##2 (rbsp_G3 == 24) ##2 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) (!sel ##1 (rbsp_G3 == 24) ##2 1) |-> (TotalZeros_comb >= 2) && (TotalZeros_comb <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 348) ##2 (rbsp_G3 == 24) ##2 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##4 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504)) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240)) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136)) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 41) ##3 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##2 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331)) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 3) && (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 2) && (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 0) && (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 49) ##1 sel) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##3 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##3 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##2 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 49) ##1 (rbsp == 145)) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 38) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 49) ##1 (len_comb == 2)) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 49) && (len_comb == 2) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) && (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##2 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##3 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 3) && (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 9) && (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##3 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##4 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) && (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 44) ##4 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 51) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##2 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 16) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##2 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 38) ##2 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 0) ##2 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##3 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 395) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 15) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##4 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##3 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##2 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 60) ##4 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 4) ##2 (rbsp_G3 == 24) ##2 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 212) && (rbsp <= 310) ##2 (rbsp_G3 == 24) ##2 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 24) ##2 (rbsp == 320)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 24) ##1 (TotalZeros_G3 == 0) ##1 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 24) ##1 (len_G3 == 0) ##1 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 24) ##2 (len_G3 == 0)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 24) ##2 (TotalZeros_comb == 3)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 287) && (rbsp <= 396) ##2 (rbsp_G3 == 24) ##2 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 24) ##1 (len_LE3 == 3) ##1 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##2 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 24) ##2 ena) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 24) ##1 (TotalCoeff == 2) ##1 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 24) ##2 (TotalZeros_G3 == 0)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 24) ##2 (TotalCoeff == 3)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 6) && (rbsp_G3 <= 7) ##4 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##3 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 6) ##2 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##2 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##1 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##1 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##4 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 11) ##2 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 41) ##3 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##3 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##4 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##4 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##1 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 252) && (rbsp <= 381) ##2 (rbsp_G3 == 24) ##2 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 253) && (rbsp <= 382) ##2 (rbsp_G3 == 24) ##2 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##2 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 10) && (rbsp_G3 == 24) ##2 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 2) ##2 (rbsp_G3 == 24) ##2 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) && (rbsp_G3 == 24) ##2 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7) ##2 (rbsp_G3 == 24) ##2 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##2 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 0) ##3 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 5) && (rbsp_G3 == 24) ##2 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364)) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##3 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 5) && (rbsp_G3 == 24) ##2 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 0) ##2 (rbsp_G3 == 24) ##2 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##4 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 33) ##2 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##4 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##4 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC == 4) ##2 (rbsp_G3 == 24) ##2 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505) ##1 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 340) ##2 (rbsp_G3 == 24) ##2 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 41) && (rbsp_G3 <= 63) ##1 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##1 (rbsp_G3 == 24) ##2 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 3) ##3 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0) ##2 (rbsp_G3 == 24) ##2 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 188) && (rbsp <= 285) ##1 (rbsp_G3 == 24) ##2 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 346) ##1 (rbsp_G3 == 24) ##2 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 399) && (rbsp <= 511) ##1 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 324) && (rbsp <= 417) ##3 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 0) && (TotalZeros_comb <= 1) ##1 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 340) ##1 (rbsp_G3 == 24) ##2 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##2 (rbsp_G3 == 24) ##2 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 327) && (rbsp <= 417) ##3 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##3 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 311) && (rbsp <= 410) ##3 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##3 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##2 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##1 (rbsp_G3 == 24) ##2 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##3 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 373) && (rbsp <= 511) ##1 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel ##1 (len_LE3 == 5) ##3 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##1 (rbsp_G3 == 24) ##2 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##2 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 340) && (rbsp <= 426) ##1 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 4) ##2 (rbsp_G3 == 24) ##2 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 252) && (rbsp <= 381) ##1 (rbsp_G3 == 24) ##2 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 0) ##2 (rbsp_G3 == 24) ##2 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##1 (rbsp_G3 == 24) ##2 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 511) ##2 (rbsp_G3 == 24) ##2 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 3) && (TotalZeros_G3 <= 4) ##3 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 253) && (rbsp <= 511) ##2 (rbsp_G3 == 24) ##2 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 344) && (rbsp <= 511) ##1 (rbsp_G3 == 49) ##1 1) |-> (TotalZeros_comb >= 1) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 511) ##1 (rbsp_G3 == 24) ##2 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1) ##2 (rbsp_G3 == 24) ##2 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 8) ##1 (len_LE3 == 5) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##1 (TotalZeros_LE3 == 4) ##2 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 9) ##1 (len_LE3 == 5) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) (sel ##2 (len_LE3 == 4) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2)) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 0) ##3 (len_LE3 == 4) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##1 (TotalZeros_comb == 11) ##3 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7) ##1 (TotalZeros_comb == 11) ##3 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505)) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 0) ##1 (TotalZeros_comb == 11) ##3 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256)) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288)) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326)) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) && (len_LE3 == 5) ##3 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 2) && (len_LE3 == 5) ##3 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##1 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 (len_G3 == 3) ##1 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 9) && (len_LE3 == 5) ##3 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##4 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 (rbsp == 310)) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 !chroma_DC_sel ##1 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 !chroma_DC_sel ##2 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 52) ##3 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 sel) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##3 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##3 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##4 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##2 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 (len_G3 == 3) ##2 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 !ena ##2 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 (rbsp == 143) ##1 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##3 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 (len_chroma_DC == 1)) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##1 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 (TotalCoeff == 4) ##1 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 (rbsp == 136) ##2 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 (TotalZeros_comb == 0)) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 (TotalCoeff == 5)) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 (TotalZeros_chroma_DC == 0)) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##1 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 (len_G3 == 3)) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 (TotalZeros_G3 == 3)) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 (TotalZeros_G3 == 1) ##2 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 (len_LE3 == 0) ##1 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##3 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##4 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##2 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##1 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 (TotalCoeff == 4) ##2 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##3 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##4 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##2 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##1 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##1 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##1 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 (TotalZeros_LE3 == 0) ##1 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##2 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 (len_LE3 == 0) ##2 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485) ##1 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) (!sel ##1 (TotalZeros_comb == 11) ##3 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505) ##1 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##3 (len_LE3 == 4) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505)) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 8) ##1 (len_LE3 == 4) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485) ##3 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504)) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485)) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##1 (rbsp == 35) ##2 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##2 (TotalZeros_G3 == 3) ##1 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##2 (rbsp == 6) ##1 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##2 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel ##1 (len_LE3 == 4) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288) ##4 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##2 (TotalCoeff == 12) ##1 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) (!sel ##1 (rbsp_G3 == 24) ##2 1) |-> (len_comb >= 2) && (len_comb <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##1 (TotalZeros_comb == 11) ##3 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) && (rbsp == 13) ##3 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 8) ##3 (len_LE3 == 4) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##3 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##3 !chroma_DC_sel) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##3 (TotalZeros_G3 == 2)) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##2 (TotalZeros_LE3 == 0) ##1 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) && (rbsp_G3 == 1) ##3 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##3 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 8) ##1 (len_LE3 == 4) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##3 (TotalCoeff == 14)) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) ##2 (len_LE3 == 4) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 5) && (TotalZeros_comb == 11) ##3 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##3 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) && (len_LE3 == 1) ##3 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##1 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##2 chroma_DC_sel ##1 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##2 (len_LE3 == 0) ##1 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##1 chroma_DC_sel ##2 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##3 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##1 (TotalZeros_LE3 == 1) ##2 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##1 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##4 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##2 (len_G3 == 1) ##1 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288) ##2 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##3 (len_LE3 == 3)) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##1 (len_G3 == 2) ##2 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##2 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320) ##4 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##1 (TotalCoeff == 7) ##2 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##3 (len_G3 == 1)) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##1 (TotalZeros_G3 == 5) ##2 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##2 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##3 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##2 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##1 (len_LE3 == 4) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##1 (len_LE3 == 4) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 9) ##3 (len_LE3 == 4) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 0) ##1 (TotalZeros_comb == 11) ##3 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##1 (len_LE3 == 4) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 8) ##3 (len_LE3 == 4) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 114) ##1 (len_LE3 == 5) ##3 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##3 (len_LE3 == 4) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##4 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394) ##4 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373)) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364)) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##3 (len_LE3 == 4) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394)) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##1 (len_LE3 == 5) ##3 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##3 (len_LE3 == 4) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (TotalZeros_LE3 == 0)) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##2 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##1 (len_LE3 == 5) ##3 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 3) && (len_LE3 == 4) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 9) ##1 (len_LE3 == 4) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##4 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320) ##3 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 !sel) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 3) && (len_LE3 == 4) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 115) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##3 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (TotalCoeff == 12)) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##2 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##4 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##2 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 10) ##3 (len_LE3 == 4) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (len_LE3 == 0)) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (TotalZeros_G3 == 3)) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##3 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 1) && (TotalZeros_G3 <= 3) ##3 (len_LE3 == 4) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (TotalZeros_LE3 == 0)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 chroma_DC_sel) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (TotalCoeff == 10)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (len_LE3 == 0) ##3 1) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (rbsp == 136) ##3 1) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 ena) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (TotalCoeff == 4) ##2 1) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 !ena ##3 1) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 !ena ##2 1) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalCoeff == 4) ##3 1) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (TotalZeros_G3 == 3)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (len_LE3 == 0) ##2 1) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (len_G3 == 2)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalZeros_LE3 == 0) ##3 1) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (len_G3 == 3) ##3 1) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (rbsp == 143) ##2 1) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (len_G3 == 3) ##2 1) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 91) ##1 (len_LE3 == 5) ##3 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (TotalZeros_G3 == 1) ##2 1) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalZeros_G3 == 1) ##3 1) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (TotalCoeff == 5) ##1 1) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (rbsp_chroma_DC == 4) ##1 1) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15) ##3 1) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (rbsp == 310) ##1 1) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (len_comb == 1) ##1 1) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 82) ##1 (len_LE3 == 5) ##3 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) && (len_comb == 5) ##4 1) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##4 1) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##3 1) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##1 (len_LE3 == 5) ##3 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 sel ##1 1) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##3 1) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 2) && (TotalZeros_LE3 == 9) ##4 1) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##4 1) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 52) ##4 1) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (len_G3 == 3) ##1 1) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 13) && (TotalCoeff <= 15) ##1 (TotalZeros_comb == 11) ##3 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6)) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##4 1) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 16) ##1 1) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##1 1) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 41) ##1 1) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 14) ##4 1) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##1 (len_LE3 == 4) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 44) ##4 1) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326) ##4 1) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 44) ##1 1) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##4 1) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##2 1) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320) ##2 1) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221) ##4 1) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256) ##1 1) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394) ##3 1) |-> (rbsp >= 0) && (rbsp <= 87));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 6) ##3 (len_LE3 == 4) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 0) ##1 (len_LE3 == 5) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 3) ##3 (len_LE3 == 4) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 10) && (TotalCoeff <= 15) ##1 (TotalZeros_comb == 11) ##3 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 0) ##1 (TotalZeros_comb == 11) ##3 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7) ##3 (len_LE3 == 4) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 8) ##1 (len_LE3 == 5) ##3 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 12) && (TotalCoeff <= 15) ##1 (TotalZeros_comb == 11) ##3 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) ##1 (TotalZeros_comb == 11) ##3 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 8) ##1 (len_LE3 == 5) ##3 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 178) ##1 (len_LE3 == 5) ##3 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 9) ##1 (len_LE3 == 5) ##3 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 2) ##3 (len_LE3 == 4) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 chroma_DC_sel) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (TotalCoeff == 10)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalZeros_LE3 == 0) ##3 1) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (len_G3 == 2)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (len_LE3 == 0) ##2 1) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (TotalZeros_G3 == 1) ##2 1) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (rbsp == 136) ##3 1) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 !ena ##3 1) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 !ena ##2 1) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7) ##1 (len_LE3 == 4) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (rbsp == 143) ##2 1) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (len_G3 == 3) ##2 1) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (TotalZeros_G3 == 3)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 ena) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (TotalZeros_LE3 == 0)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (TotalCoeff == 4) ##2 1) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (len_LE3 == 0) ##3 1) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) ##1 (len_LE3 == 4) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalCoeff == 4) ##3 1) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (len_G3 == 3) ##3 1) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalZeros_G3 == 1) ##3 1) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (len_G3 == 3) ##1 1) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (len_comb == 1) ##1 1) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (TotalCoeff == 5) ##1 1) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) && (len_comb == 5) ##4 1) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##4 1) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 52) ##4 1) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (rbsp_chroma_DC == 4) ##1 1) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (rbsp == 310) ##1 1) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##4 1) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##4 1) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 sel ##1 1) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##3 1) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 4) ##1 (len_LE3 == 4) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 2) && (TotalZeros_LE3 == 9) ##4 1) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15) ##3 1) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##3 1) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86)) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 7) ##1 (len_LE3 == 4) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256) ##1 1) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326) ##4 1) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 44) ##1 1) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##1 1) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##2 1) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##2 1) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394) ##3 1) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##4 1) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221) ##4 1) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320) ##2 1) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 41) ##1 1) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) (!ena ##2 (len_LE3 == 4) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 16) ##1 1) |-> (rbsp >= 0) && (rbsp <= 93));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 8) ##1 (len_LE3 == 5) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 87) ##1 (TotalZeros_comb == 11) ##3 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##1 (len_LE3 == 5) ##3 1) |-> (len_comb == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) (sel ##1 (TotalZeros_LE3 == 2) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 93) ##1 (TotalZeros_comb == 11) ##3 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 2) && (len_comb <= 7) ##1 (TotalZeros_LE3 == 2) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 121) ##2 (TotalZeros_LE3 == 2) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##3 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 102) ##2 (TotalZeros_LE3 == 2) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 23)) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238)) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221)) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193)) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240)) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7)) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (TotalCoeff == 3)) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (TotalZeros_G3 == 0)) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (len_G3 == 0)) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (TotalZeros_LE3 == 1)) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalCoeff == 3) ##3 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (len_LE3 == 3) ##3 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalZeros_G3 == 0) ##3 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 ena ##3 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115)) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (len_G3 == 0) ##3 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##2 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (TotalCoeff == 9) ##1 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115) ##3 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##1 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 !ena) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (rbsp == 120) ##2 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##3 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505) ##4 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485) ##4 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##4 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##4 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320) ##1 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (len_comb == 0) ##1 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (rbsp_chroma_DC == 7) ##1 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (TotalZeros_G3 == 3) ##2 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (TotalCoeff == 9) ##2 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (len_G3 == 2) ##1 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (len_LE3 == 1) ##2 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115) ##4 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##1 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##1 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##1 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 172) && (rbsp <= 254) ##3 (len_LE3 == 4) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##2 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (len_G3 == 2) ##2 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##4 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##4 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##4 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 126) ##2 (TotalZeros_LE3 == 2) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 1) && (TotalZeros_LE3 == 9) ##4 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15) ##4 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 !chroma_DC_sel) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 !sel ##1 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136)) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##1 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##3 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##2 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256) ##2 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalZeros_LE3 == 1) ##3 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) && (rbsp == 15) ##4 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505) ##3 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 ena ##2 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##3 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (rbsp == 44) ##1 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##4 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##3 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326) ##1 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288) ##3 1) |-> (rbsp >= 172) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (TotalZeros_G3 == 1)) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 ena ##2 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) && (len_comb == 3) ##3 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 chroma_DC_sel) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##3 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394) ##2 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) && (rbsp == 238) ##3 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 2) && (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 238) ##3 (len_comb == 1)) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##4 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##1 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##3 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (TotalCoeff == 15)) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 (len_comb == 1) ##2 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288) ##1 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (rbsp_G3 == 63)) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 (TotalZeros_comb == 4) ##2 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##3 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##4 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 (rbsp == 451) ##2 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##4 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##4 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##1 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256) ##4 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##2 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##3 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##2 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221) ##2 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 33) ##4 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##2 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504) ##3 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485) ##2 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256) ##3 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 (rbsp_G3 == 56) ##2 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) && (len_LE3 == 3) ##3 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15) ##2 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##2 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##2 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##2 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##2 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##2 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (TotalZeros_comb == 1)) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 125) ##2 (TotalZeros_LE3 == 2) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##3 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##3 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (TotalZeros_chroma_DC == 1)) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (rbsp_chroma_DC == 2)) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##4 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (TotalZeros_G3 == 3) ##1 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (len_LE3 == 1) ##1 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 ena ##1 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (rbsp == 135) ##1 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##2 (len_LE3 == 5) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (rbsp_chroma_DC == 2) ##1 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (TotalCoeff == 5) ##1 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (TotalZeros_chroma_DC == 1) ##1 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 3) && (TotalCoeff <= 5) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (len_comb == 1) ##1 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (TotalZeros_comb == 1) ##1 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (len_G3 == 3) ##1 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 205) && (rbsp <= 305) ##3 (len_LE3 == 4) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 206) && (rbsp <= 305) ##3 (len_LE3 == 4) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 2) ##1 (TotalZeros_LE3 == 2) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 2) ##1 (TotalZeros_LE3 == 2) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 (len_G3 == 0)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 (rbsp_G3 == 22) ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 (TotalZeros_G3 == 0)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 !chroma_DC_sel) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 (TotalCoeff == 12) ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 125) ##1 (TotalZeros_comb == 11) ##3 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 (rbsp == 180) ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 (len_LE3 == 0) ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 (len_LE3 == 0)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 (TotalZeros_comb == 2) ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 (TotalZeros_G3 == 2) ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 254) && (rbsp <= 511) ##1 (TotalZeros_LE3 == 2) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485) ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256) ##3 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485) ##3 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##4 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 2) && (TotalZeros_LE3 == 2) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) && (rbsp == 331) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##3 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 250) ##2 (TotalZeros_LE3 == 2) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 178) ##2 (TotalZeros_LE3 == 2) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##3 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##4 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 0)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221) ##4 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 253) ##2 (TotalZeros_LE3 == 2) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 6) ##1 (TotalZeros_LE3 == 2) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 254) ##2 (TotalZeros_LE3 == 2) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 11) ##1 (TotalZeros_LE3 == 2) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) (!sel ##2 (TotalZeros_LE3 == 2) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 104) && (rbsp <= 209) ##2 (len_LE3 == 4) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 2) && (TotalZeros_comb <= 4) ##1 (TotalZeros_LE3 == 2) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 30) && (rbsp_G3 <= 41) ##1 (TotalZeros_LE3 == 2) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 288) && (rbsp <= 397) ##1 (TotalZeros_LE3 == 2) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 2) ##2 (TotalZeros_LE3 == 4) ##2 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 4) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 10) ##1 (len_LE3 == 5) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504) ##1 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7)) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320) ##3 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##1 (len_LE3 == 5) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##4 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193)) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364)) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 3) ##4 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504) ##3 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##4 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320)) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504)) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##2 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##3 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##1 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##1 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##3 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##2 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##4 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 102) ##1 (len_LE3 == 4) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##1 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 1) && (TotalZeros_LE3 == 9) ##4 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (rbsp == 232)) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288)) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##4 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##1 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##2 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 !ena) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 6) ##4 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 !chroma_DC_sel) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326) ##3 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15) ##1 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##2 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505) ##1 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505)) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326)) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 16) ##1 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (TotalZeros_G3 == 0)) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 0) ##1 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) && (rbsp == 15) ##4 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256)) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 10) ##1 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 23) ##4 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 33) ##4 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (TotalZeros_LE3 == 1)) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##1 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15) ##4 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##2 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 6) && (rbsp_G3 <= 7) ##4 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##4 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##4 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288) ##4 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (len_G3 == 0)) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 33) && (rbsp_G3 <= 51) ##1 (TotalZeros_LE3 == 2) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##3 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##1 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 (rbsp == 143) ##2 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##4 (rbsp == 317)) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 ena ##3 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##4 (rbsp_G3 == 39)) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (len_G3 == 0) ##3 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##4 (TotalCoeff == 15)) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalZeros_G3 == 0) ##3 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##4 (TotalZeros_comb == 1)) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##3 (rbsp == 197) ##1 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##3 (len_LE3 == 3) ##1 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 1) && (TotalZeros_LE3 == 2) ##4 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##4 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (len_comb == 0) ##1 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##1 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##3 (TotalZeros_G3 == 1) ##1 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##4 ena) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##3 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##2 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##2 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##4 (len_G3 == 1)) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalZeros_LE3 == 1) ##3 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalCoeff == 3) ##3 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##4 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##1 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##4 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##1 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 !sel ##1 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##1 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##4 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) && (rbsp == 136) ##4 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##3 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##4 (TotalZeros_G3 == 1)) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##3 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 chroma_DC_sel ##2 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##1 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 ena ##2 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##1 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##2 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##1 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##3 (TotalCoeff == 15) ##1 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##1 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485) ##1 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##4 !chroma_DC_sel) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##3 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##3 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##1 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##4 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 (TotalCoeff == 13) ##2 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##1 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (rbsp == 44) ##1 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##3 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##3 (len_G3 == 1) ##1 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##3 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##2 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##2 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 (len_G3 == 1) ##2 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##2 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 (len_LE3 == 1) ##2 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 (TotalZeros_G3 == 2) ##2 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (TotalCoeff == 9) ##1 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##3 (TotalZeros_LE3 == 1) ##1 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (TotalCoeff == 9) ##2 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (rbsp == 120) ##2 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (len_LE3 == 1) ##2 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (len_G3 == 2) ##1 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (rbsp_chroma_DC == 7) ##1 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (len_LE3 == 3) ##3 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##4 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (len_G3 == 2) ##2 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (TotalZeros_G3 == 3) ##2 1) |-> (TotalCoeff >= 3) && (TotalCoeff <= 5));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##1 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 26) && (rbsp_G3 <= 49) ##1 (TotalZeros_LE3 == 2) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 (TotalZeros_comb == 4) ##3 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 (TotalZeros_G3 == 4) ##3 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 (rbsp_G3 == 45) ##3 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 (TotalCoeff == 9) ##3 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 (len_LE3 == 1) ##3 1) |-> (len_comb >= 1) && (len_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 240) && (rbsp <= 325) ##1 (TotalZeros_LE3 == 2) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 116) && (rbsp <= 237) ##2 (len_LE3 == 4) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 40) ##1 (TotalZeros_LE3 == 2) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 114) ##1 (len_LE3 == 4) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 346) ##3 (len_LE3 == 4) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 237) && (rbsp <= 372) ##1 (TotalZeros_LE3 == 2) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##1 (len_LE3 == 5) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 346) ##1 (TotalZeros_LE3 == 2) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 chroma_DC_sel ##2 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##4 !chroma_DC_sel) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##1 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##1 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##3 (TotalCoeff == 15) ##1 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##3 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339)) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 40)) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 (rbsp == 143) ##2 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 (len_LE3 == 1) ##2 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288)) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##4 (TotalCoeff == 15)) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 (TotalCoeff == 9) ##3 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##4 ena) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 2) ##1 (TotalZeros_LE3 == 4) ##2 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326)) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##4 (len_comb == 1)) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##3 (TotalZeros_LE3 == 1) ##1 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 (TotalZeros_comb == 4) ##3 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 (TotalZeros_G3 == 2) ##2 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##4 (len_G3 == 1)) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##3 (TotalZeros_G3 == 1) ##1 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##3 (rbsp == 197) ##1 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317)) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 (TotalCoeff == 13) ##2 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320)) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256)) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328)) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##4 (TotalZeros_comb == 1)) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 (TotalZeros_G3 == 4) ##3 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##3 (len_G3 == 1) ##1 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 (rbsp_G3 == 45) ##3 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##4 (TotalZeros_G3 == 1)) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326) ##2 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##3 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 (len_LE3 == 1) ##3 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##3 (len_LE3 == 3) ##1 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331)) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##2 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326) ##3 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 (len_G3 == 1) ##2 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221) ##3 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##4 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485) ##1 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) && (rbsp == 136) ##4 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##1 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##1 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##2 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##4 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##1 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221) ##1 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505) ##2 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##1 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##4 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##4 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 1) && (TotalZeros_LE3 == 2) ##4 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##2 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##3 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##1 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) ##1 (len_LE3 == 4) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504) ##2 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##1 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##1 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##4 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##2 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115) ##2 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504) ##4 1) |-> (rbsp >= 256) && (rbsp <= 340));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 4) ##1 (len_LE3 == 4) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##2 (len_LE3 == 5) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 7) ##1 (len_LE3 == 4) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 178) ##1 (TotalZeros_comb == 11) ##3 1) |-> (rbsp >= 428) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##2 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 89) && (rbsp <= 171) ##2 (TotalZeros_LE3 == 2) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136)) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) (sel ##1 (len_LE3 == 5) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115)) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115) ##3 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) ##2 (len_LE3 == 5) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 8) ##3 (len_LE3 == 4) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##3 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##2 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##3 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504) ##3 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##4 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7) ##1 (len_LE3 == 4) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##4 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394) ##2 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256) ##4 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485) ##2 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 ena ##2 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##2 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15) ##2 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##2 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) && (len_LE3 == 3) ##3 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##2 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221) ##2 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (rbsp_chroma_DC == 2)) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##2 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 (TotalZeros_comb == 4) ##2 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (TotalCoeff == 15)) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (TotalZeros_comb == 1)) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##1 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256) ##3 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) && (rbsp == 238) ##3 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##4 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 10) ##3 (len_LE3 == 4) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 (rbsp == 451) ##2 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 (len_comb == 1) ##2 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##4 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (TotalZeros_chroma_DC == 1)) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##1 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##3 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##2 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##1 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 238) ##3 (len_comb == 1)) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 178) ##1 (len_LE3 == 5) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##3 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (TotalZeros_G3 == 1)) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 chroma_DC_sel) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 8) ##1 (len_LE3 == 4) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (rbsp_G3 == 63)) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288) ##1 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##3 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##2 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326) ##1 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) && (len_comb == 3) ##3 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 (rbsp_G3 == 56) ##2 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##4 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 2) && (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##3 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##2 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##4 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##4 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 116) && (rbsp <= 238) ##3 (len_LE3 == 4) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (len_G3 == 3) ##1 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 115) && (rbsp <= 235) ##3 (len_LE3 == 4) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (rbsp == 135) ##1 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (TotalCoeff == 5) ##1 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (TotalZeros_comb == 1) ##1 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 ena ##1 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (TotalZeros_chroma_DC == 1) ##1 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (len_comb == 1) ##1 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (TotalZeros_G3 == 3) ##1 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (rbsp_chroma_DC == 2) ##1 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 8) ##1 (len_LE3 == 4) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (len_LE3 == 1) ##1 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 3) && (TotalCoeff <= 5) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 254) && (rbsp <= 511) ##2 (len_LE3 == 5) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504)) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505)) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485)) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485) ##3 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##2 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##2 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320) ##3 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 3) && (len_LE3 == 4) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320) ##4 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##3 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##3 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##2 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) ##2 (len_LE3 == 4) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##2 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##3 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (len_LE3 == 0)) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 3) && (len_LE3 == 4) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288) ##4 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288) ##2 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##3 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##3 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##2 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394) ##4 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 115) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##2 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (TotalCoeff == 12)) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (TotalZeros_G3 == 3)) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 !sel) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (TotalZeros_LE3 == 0)) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##3 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##4 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 82) ##1 (len_LE3 == 5) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 373) && (rbsp <= 511) ##2 (len_LE3 == 5) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##1 (len_LE3 == 4) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 9) ##1 (len_LE3 == 4) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 8) ##3 (len_LE3 == 4) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11) ##1 (TotalZeros_LE3 == 2) ##3 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 0) ##3 (len_LE3 == 4) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##1 (len_LE3 == 4) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 91) ##1 (len_LE3 == 5) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 3) ##3 (len_LE3 == 4) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##1 (len_LE3 == 4) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 89) ##1 (len_LE3 == 5) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 2) && (len_LE3 == 5) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 (TotalZeros_G3 == 1) ##1 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 !ena ##1 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##3 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 2) ##3 (len_LE3 == 4) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 !chroma_DC_sel) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) && (len_LE3 == 5) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##4 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##4 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 9) && (len_LE3 == 5) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##3 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##3 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 (rbsp == 143)) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 (TotalCoeff == 4)) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 (TotalCoeff == 4) ##1 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##4 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 (len_LE3 == 0)) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 !chroma_DC_sel ##1 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##1 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##3 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##4 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 1) && (TotalZeros_G3 <= 3) ##3 (len_LE3 == 4) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##4 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##1 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 (rbsp == 136) ##1 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 52) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 (len_LE3 == 0) ##1 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326) ##1 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 (len_G3 == 3) ##1 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##3 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 (TotalZeros_LE3 == 0)) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##1 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##4 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288) ##4 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##1 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504) ##1 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##1 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##3 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##3 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##1 (len_LE3 == 4) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##4 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##1 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 102) ##1 (len_LE3 == 5) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 124) ##1 (len_LE3 == 5) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##3 (len_LE3 == 4) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) (!ena ##2 (len_LE3 == 4) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) (sel ##2 (len_LE3 == 4) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 114) ##1 (len_LE3 == 5) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7) ##3 (len_LE3 == 4) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 52) ##2 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 52) ##4 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##3 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##4 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 17)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 52)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel ##1 (len_LE3 == 4) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 0) ##2 (len_LE3 == 5) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 7) ##2 (TotalZeros_LE3 == 2) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 9) && (TotalCoeff <= 10) ##1 (TotalZeros_LE3 == 2) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##1 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326) ##1 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 4) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 415) && (rbsp <= 511) ##2 (len_LE3 == 5) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##2 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 9) ##3 (len_LE3 == 4) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 1) && (len_LE3 == 5) ##4 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) && (rbsp == 50) ##4 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##4 !chroma_DC_sel) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##4 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##2 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##4 (TotalZeros_G3 == 2)) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256) ##2 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 5) && (len_LE3 == 5) ##4 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##2 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##3 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##3 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##4 (rbsp == 19)) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##4 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##4 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##3 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##2 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##1 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 314) && (rbsp <= 414) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##1 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##4 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288) ##4 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##3 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##2 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504) ##1 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##4 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##3 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##3 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##4 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##1 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##4 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##3 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##1 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##2 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##1 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 (TotalCoeff == 14) ##3 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 6) ##3 (len_LE3 == 4) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 chroma_DC_sel ##3 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 (TotalZeros_LE3 == 1) ##2 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 (TotalZeros_G3 == 2) ##3 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 (TotalCoeff == 15) ##2 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 (len_G3 == 1) ##2 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 (len_LE3 == 3) ##2 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 (rbsp == 160) ##2 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 (len_G3 == 0) ##1 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 ena ##3 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 (len_G3 == 1) ##3 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 (len_comb == 2) ##1 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 (rbsp_chroma_DC == 3) ##1 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 (TotalZeros_G3 == 0) ##1 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 (len_LE3 == 3) ##3 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 chroma_DC_sel ##2 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 (TotalZeros_chroma_DC == 1) ##1 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 (TotalZeros_comb == 1) ##1 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 (len_chroma_DC == 2) ##1 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 (TotalCoeff == 1) ##1 1) |-> (len_G3 >= 3) && (len_G3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 41) && (rbsp_G3 <= 63) ##2 (len_LE3 == 5) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 4) ##2 (TotalZeros_LE3 == 2) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) ##2 (TotalZeros_LE3 == 2) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##3 (len_LE3 == 4) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 50) && (rbsp_G3 <= 63) ##2 (len_LE3 == 5) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6)) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##4 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6)) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##1 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##1 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##3 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##2 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##3 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##3 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##4 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##1 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##4 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##3 (len_LE3 == 4) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##3 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##1 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##1 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326) ##1 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 0) && (TotalZeros_comb <= 2) ##2 (len_LE3 == 5) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##2 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##4 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##1 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 52) && (rbsp_G3 <= 63) ##2 (len_LE3 == 5) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 55) && (rbsp_G3 <= 63) ##2 (len_LE3 == 5) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) && (rbsp == 50) ##4 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504) ##1 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##4 (rbsp == 19)) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##4 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##4 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##2 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##2 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##3 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##3 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288) ##4 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##3 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##4 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##4 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##4 (TotalZeros_G3 == 2)) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256) ##2 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##2 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##4 !chroma_DC_sel) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 1) && (len_LE3 == 5) ##4 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 5) && (len_LE3 == 5) ##4 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##2 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256) ##2 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 (TotalCoeff == 1) ##1 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##3 (len_LE3 == 4) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256)) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##3 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 ena ##3 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221) ##1 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 chroma_DC_sel ##2 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7)) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238)) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 (TotalCoeff == 14) ##3 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240)) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 (TotalZeros_G3 == 2) ##3 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 (len_LE3 == 3) ##3 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 (len_G3 == 1) ##3 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 (len_G3 == 1) ##2 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 (len_chroma_DC == 2) ##1 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 (TotalZeros_chroma_DC == 1) ##1 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 (TotalZeros_G3 == 0) ##1 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221)) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 (TotalCoeff == 15) ##2 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 (TotalZeros_comb == 1) ##1 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 (len_comb == 2) ##1 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 (rbsp_chroma_DC == 3) ##1 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 (rbsp == 160) ##2 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193)) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 (len_G3 == 0) ##1 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 chroma_DC_sel ##3 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 (TotalZeros_LE3 == 1) ##2 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 (len_LE3 == 3) ##2 1) |-> (len_G3 >= 3) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##4 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (len_comb == 0) ##1 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (len_LE3 == 3) ##3 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (TotalCoeff == 9) ##2 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalCoeff == 3) ##3 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##4 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##4 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##2 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##2 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115) ##4 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288) ##3 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##3 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (rbsp_chroma_DC == 7) ##1 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 1) && (TotalZeros_LE3 == 9) ##4 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (rbsp == 44) ##1 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 ena ##3 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 !sel ##1 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 ena ##2 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (TotalZeros_G3 == 0)) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (len_G3 == 0)) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) && (rbsp == 15) ##4 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##1 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##4 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 !ena) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15) ##4 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##1 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485) ##4 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##1 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504) ##4 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##1 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (TotalCoeff == 9) ##1 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 9) && (TotalCoeff <= 10) ##1 (TotalZeros_LE3 == 2) ##3 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (TotalZeros_LE3 == 1)) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 !chroma_DC_sel) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320) ##1 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##3 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (len_G3 == 2) ##2 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##4 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (TotalZeros_G3 == 3) ##2 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505) ##3 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel ##1 (len_LE3 == 5) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (TotalCoeff == 3)) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##3 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (len_LE3 == 1) ##2 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (rbsp == 120) ##2 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalZeros_LE3 == 1) ##3 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##3 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (len_G3 == 0) ##3 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##4 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505) ##4 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##1 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##1 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (len_G3 == 2) ##1 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##2 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##2 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel ##2 (len_LE3 == 5) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##1 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalZeros_G3 == 0) ##3 1) |-> (rbsp >= 188) && (rbsp <= 285));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 0) && (TotalZeros_comb <= 1) ##2 (len_LE3 == 5) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 8) ##4 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 0) && (len_comb <= 1) ##2 (len_LE3 == 5) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1) ##2 (len_LE3 == 5) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 238) && (rbsp_LE3 <= 240) ##2 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 240) && (rbsp_LE3 <= 256) ##4 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 240) && (rbsp_LE3 <= 256) ##1 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 373) ##3 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##1 (len_LE3 == 4) ##3 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 3) && (TotalCoeff <= 5) ##2 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##1 (TotalZeros_LE3 == 2) ##3 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 3) ##2 (TotalZeros_LE3 == 2) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##1 (len_LE3 == 4) ##3 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##2 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##2 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504)) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394)) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394) ##1 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##1 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326) ##3 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485) ##3 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##3 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505)) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##3 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505) ##1 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485)) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##1 (len_LE3 == 4) ##3 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##4 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394) ##4 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##3 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##2 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326) ##2 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##4 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##1 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##2 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (len_comb == 1) ##2 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##1 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 chroma_DC_sel ##1 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (len_LE3 == 1) ##2 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 4) && (TotalCoeff <= 6) ##2 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (rbsp_chroma_DC == 2) ##2 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 324) && (rbsp <= 417) ##2 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##1 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##2 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (TotalZeros_comb == 1) ##1 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##1 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (rbsp_chroma_DC == 2) ##1 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (TotalCoeff == 5) ##2 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##3 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320) ##4 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (rbsp_G3 == 63) ##1 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##4 (TotalZeros_G3 == 5)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) && (len_comb == 3) ##4 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##1 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) && (rbsp == 86) ##3 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15) ##1 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (TotalZeros_G3 == 3) ##2 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 (len_comb == 1) ##3 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##2 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (len_G3 == 3) ##2 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##4 (TotalCoeff == 7)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##2 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##4 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221) ##3 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504) ##2 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) && (len_LE3 == 3) ##4 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115) ##2 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##1 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##4 (len_G3 == 2)) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##4 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 238) ##2 sel ##2 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 (rbsp == 161) ##1 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 chroma_DC_sel ##1 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##1 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 (rbsp_G3 == 56) ##3 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 (TotalZeros_comb == 4)) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (rbsp == 171) ##1 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##3 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 (TotalCoeff == 2) ##1 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (TotalCoeff == 15) ##1 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) && (rbsp == 238) ##4 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 188) && (rbsp <= 285) ##1 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (TotalZeros_G3 == 1) ##1 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485) ##1 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288) ##2 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 (len_comb == 1)) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##2 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##4 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##3 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 (TotalZeros_LE3 == 1)) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) && (len_LE3 == 4) ##3 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 (TotalZeros_G3 == 4)) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##4 chroma_DC_sel) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 2) && (TotalZeros_LE3 == 4) ##4 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 (TotalCoeff == 11)) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (TotalZeros_comb == 1) ##2 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##1 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##1 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 (TotalZeros_comb == 4) ##3 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##1 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 ena ##2 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##4 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 ena ##3 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##3 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##4 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (rbsp == 135) ##2 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##2 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 238) ##1 (TotalCoeff == 11) ##3 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 sel) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 (rbsp == 451) ##3 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##3 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320) ##3 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##3 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##2 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505) ##2 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 (len_G3 == 1)) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##3 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##2 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288) ##4 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 4) && (len_LE3 == 4) ##3 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##2 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##1 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 (len_LE3 == 3) ##1 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504) ##1 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (TotalZeros_chroma_DC == 1) ##2 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##1 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (len_comb == 0) ##1 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115) ##1 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##4 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (TotalZeros_chroma_DC == 1) ##1 1) |-> (rbsp >= 287) && (rbsp <= 396));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 374) && (rbsp <= 511) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (len_LE3 == 3) ##2 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (TotalCoeff == 11) ##2 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (TotalZeros_G3 == 4) ##2 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (rbsp == 216) ##2 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 sel ##2 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (TotalZeros_LE3 == 1) ##2 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 332) && (rbsp <= 419) ##2 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) ##1 (len_LE3 == 4) ##3 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 2) ##2 (len_LE3 == 5) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##1 (len_LE3 == 4) ##3 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##1 (TotalZeros_LE3 == 2) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 ena) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (TotalZeros_LE3 == 0)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (TotalCoeff == 10)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (len_G3 == 2)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (rbsp == 136) ##3 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (len_G3 == 3) ##3 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalZeros_G3 == 1) ##3 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 chroma_DC_sel) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (TotalZeros_G3 == 3)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalCoeff == 4) ##3 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 !ena ##3 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalZeros_LE3 == 0) ##3 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (len_LE3 == 0) ##3 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##4 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 2) && (TotalZeros_LE3 == 9) ##4 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##3 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 !ena ##2 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##3 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (TotalZeros_G3 == 1) ##2 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##4 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##2 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (rbsp == 310) ##1 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115) ##3 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##3 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) && (len_comb == 5) ##4 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (TotalCoeff == 4) ##2 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 52) ##4 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##4 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (TotalCoeff == 5) ##1 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (rbsp == 143) ##2 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (len_G3 == 3) ##1 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (len_G3 == 3) ##2 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##4 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (len_comb == 1) ##1 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##4 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15) ##2 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##4 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 sel ##1 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7)) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (len_LE3 == 0) ##2 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) ##1 (len_LE3 == 4) ##3 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (rbsp_chroma_DC == 4) ##1 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##4 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15) ##3 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221) ##4 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394) ##3 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##2 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##2 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256) ##1 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##3 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 346) ##1 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394) ##2 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##4 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485) ##2 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288) ##1 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320) ##2 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326) ##4 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##3 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##1 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##2 1) |-> (rbsp >= 0) && (rbsp <= 127));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 172) && (rbsp <= 254) ##3 (len_LE3 == 4) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 86) ##2 (TotalZeros_LE3 == 4) ##2 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 11) && (TotalCoeff <= 15) ##1 (len_LE3 == 4) ##3 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 349) && (rbsp <= 511) ##2 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##2 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 171) && (rbsp <= 251) ##1 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 253) ##3 (len_LE3 == 4) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 308) && (rbsp <= 408) ##3 (TotalZeros_G3 == 9) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 254) ##3 (len_LE3 == 4) ##1 1) |-> (rbsp >= 341) && (rbsp <= 427));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 314) && (rbsp <= 414) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 511) ##4 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 102) ##1 (len_LE3 == 4) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) (sel ##2 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 93) ##2 (TotalZeros_LE3 == 4) ##2 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##1 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel ##4 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 3) && (TotalZeros_LE3 <= 9)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 349) && (rbsp <= 511) ##3 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel ##1 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) (!ena ##3 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 102) ##2 (TotalZeros_LE3 == 4) ##2 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 177) && (rbsp <= 341) ##4 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 340) && (rbsp <= 426) ##3 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) (ena ##2 (TotalZeros_LE3 == 4) ##2 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 344) && (rbsp <= 511) ##3 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 206) && (rbsp <= 305) ##3 (len_LE3 == 4) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) (sel ##1 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 114) ##1 (len_LE3 == 4) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 205) && (rbsp <= 305) ##3 (len_LE3 == 4) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 511) ##2 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 373) && (rbsp <= 511) ##3 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##4 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 191) && (rbsp <= 289) ##4 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 254) && (rbsp <= 511) ##2 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 382) && (rbsp <= 511) ##2 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 254) ##1 (TotalZeros_LE3 == 4) ##2 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 384) && (rbsp <= 511) ##2 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 339) ##4 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 (TotalZeros_comb == 0) ##1 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (rbsp == 161)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 (rbsp == 216) ##1 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 397) && (rbsp <= 511) ##2 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (TotalZeros_comb == 0)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 !ena) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 !ena ##1 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (TotalZeros_chroma_DC == 0)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 (rbsp_G3 == 63) ##1 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (rbsp_chroma_DC == 7)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (len_comb == 0)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 (len_comb == 0) ##1 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (len_LE3 == 3)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (TotalZeros_G3 == 0)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##1 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 1) && (TotalZeros_LE3 == 4) ##2 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 104) && (rbsp <= 209) ##2 (len_LE3 == 4) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15) ##1 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 0)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 288) && (rbsp <= 397) ##1 (TotalZeros_LE3 == 2) ##3 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##4 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221) ##2 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) && (rbsp == 86) ##2 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) && (len_comb == 4) ##2 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##2 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##1 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##4 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##1 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115) ##2 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##2 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##1 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15) ##4 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0)) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256) ##3 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##4 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288) ##2 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##4 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##3 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##4 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##2 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##2 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485) ##1 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394) ##2 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485) ##3 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##4 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221) ##4 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##4 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 10) ##1 (TotalZeros_LE3 == 2) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 42) && (rbsp_G3 <= 54) ##2 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) && (rbsp == 28)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##3 1) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##1 1) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 2) ##1 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##1 1) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##1 1) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##1 1) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 3)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##3 1) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221) ##3 1) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##2 1) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##4 1) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221) ##4 1) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##4 1) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221) ##2 1) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 41) && (rbsp_G3 <= 54) ##2 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##1 1) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326) ##4 1) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 7) && (TotalCoeff <= 11) ##1 (TotalZeros_LE3 == 2) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##2 1) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##3 1) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##2 1) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##2 1) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 1) ##1 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 239) && (rbsp <= 372) ##4 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##1 1) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485) ##4 1) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326) ##2 1) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##1 1) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##1 1) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##2 (TotalZeros_LE3 == 4) ##2 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##3 1) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288) ##3 1) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505) ##1 1) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##2 1) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 237) && (rbsp <= 372) ##1 (TotalZeros_LE3 == 2) ##3 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115) ##1 1) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505) ##4 1) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 176) ##1 (TotalZeros_LE3 == 4) ##2 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504) ##1 1) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##2 1) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288) ##4 1) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115) ##4 1) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 33) && (rbsp_G3 <= 51) ##2 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 382) && (rbsp <= 511) ##3 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 3) ##2 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 34) && (rbsp_G3 <= 52) ##2 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 117) && (rbsp <= 238) ##1 (TotalZeros_LE3 == 4) ##2 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 9) ##4 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3) ##1 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 9) && (TotalCoeff <= 12) ##1 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3) ##1 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 1) ##1 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2) ##1 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1) ##1 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 240) && (rbsp <= 325) ##1 (TotalZeros_LE3 == 2) ##3 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 3) && (len_comb <= 4) ##2 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 116) && (rbsp <= 237) ##2 (len_LE3 == 4) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 128) && (rbsp <= 251) ##1 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 6) ##2 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##1 (TotalZeros_LE3 == 2) ##3 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 3) && (len_comb <= 7) ##2 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 40) ##1 (TotalZeros_LE3 == 2) ##3 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 2) && (TotalZeros_comb <= 4) ##2 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 2) && (len_comb <= 7) ##1 (TotalZeros_LE3 == 2) ##3 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 11) ##1 (TotalZeros_LE3 == 2) ##3 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 11) ##2 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##1 (len_LE3 == 5) ##2 1) |-> (len_G3 == 3));
assert property(@(posedge DEFAULT_CLOCK) (sel ##1 (TotalZeros_LE3 == 2) ##3 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 2) ##1 (TotalZeros_LE3 == 2) ##3 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 10) ##4 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 1) && (TotalZeros_comb <= 2) ##1 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 6) ##1 (TotalZeros_LE3 == 2) ##3 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 2) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 4) ##2 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 2) ##1 (TotalZeros_LE3 == 2) ##3 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 7) ##2 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 2) && (len_comb <= 7) ##2 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 89) && (rbsp <= 172) ##1 (TotalZeros_LE3 == 4) ##2 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) ##2 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 26) && (rbsp_G3 <= 49) ##1 (TotalZeros_LE3 == 2) ##3 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 30) && (rbsp_G3 <= 41) ##1 (TotalZeros_LE3 == 2) ##3 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 374) && (rbsp <= 511) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 95) && (rbsp <= 190) ##1 (TotalZeros_LE3 == 4) ##2 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 33) && (rbsp_G3 <= 51) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 33) && (rbsp_G3 <= 51) ##1 (TotalZeros_LE3 == 2) ##3 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##4 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 26) && (rbsp_G3 <= 49) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326)) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256) ##3 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##4 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6)) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6)) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256) ##1 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3)) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288)) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288) ##1 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505)) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256)) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 115) && (rbsp <= 235) ##3 (len_LE3 == 4) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 2) && (TotalZeros_LE3 == 2) ##3 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 42) && (rbsp_G3 <= 54) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##3 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 4) ##1 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) ##1 (TotalZeros_LE3 == 4) ##2 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) && (rbsp == 331) ##3 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##3 (TotalZeros_LE3 == 0)) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##1 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##3 (len_G3 == 0)) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##3 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##2 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 2) && (TotalZeros_comb <= 4) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115) ##2 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15) ##2 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##3 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##3 (TotalZeros_G3 == 0)) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##3 (TotalCoeff == 1)) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 346) ##1 (TotalZeros_LE3 == 2) ##3 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504) ##4 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##4 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 2) && (TotalZeros_comb <= 4) ##1 (TotalZeros_LE3 == 2) ##3 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##2 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##3 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##3 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394) ##4 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##3 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##3 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##2 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##4 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##3 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##1 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##2 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##2 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##2 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394) ##3 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##1 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##1 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221) ##1 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##4 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##3 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485) ##2 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##2 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##2 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##1 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15) ##3 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485) ##1 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##1 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320) ##2 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 116) && (rbsp <= 238) ##3 (len_LE3 == 4) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 (TotalCoeff == 0) ##1 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 (TotalCoeff == 12) ##2 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 (TotalZeros_G3 == 2) ##2 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 !chroma_DC_sel ##1 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 (len_LE3 == 0) ##1 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 (len_G3 == 0) ##1 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 (rbsp_G3 == 22) ##2 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 (TotalZeros_comb == 2) ##2 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 331) ##1 (len_comb == 2) ##2 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 (TotalZeros_G3 == 0) ##1 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 (len_LE3 == 0) ##2 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) ##1 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 !sel) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (TotalCoeff == 9)) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalZeros_G3 == 0) ##2 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (TotalZeros_G3 == 3) ##1 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (len_LE3 == 3) ##2 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15) ##3 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 1) && (TotalZeros_LE3 == 9) ##3 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 7) ##1 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##2 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (len_G3 == 0) ##2 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (len_G3 == 2) ##1 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##1 (TotalZeros_LE3 == 4) ##2 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320) ##2 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 ena ##1 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##3 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (len_comb == 0)) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##4 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalCoeff == 3) ##2 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##2 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##2 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##2 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##3 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 ena ##2 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15) ##2 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504) ##2 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115) ##3 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##3 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##4 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221) ##3 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##3 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##3 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288) ##3 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##3 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326) ##4 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##4 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##4 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505) ##2 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##1 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##3 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalZeros_LE3 == 1) ##2 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485) ##4 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 254) && (rbsp <= 511) ##1 (TotalZeros_LE3 == 2) ##3 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 7) && (TotalCoeff <= 11) ##1 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (TotalCoeff == 9) ##1 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##1 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##3 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115) ##4 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505) ##4 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320) ##4 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##1 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320) ##1 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504) ##4 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326) ##2 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##1 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##1 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505) ##1 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (rbsp_chroma_DC == 7)) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (rbsp == 44)) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) && (rbsp == 15) ##3 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (rbsp == 120) ##1 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (len_LE3 == 1) ##1 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##1 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 10) ##1 (TotalZeros_LE3 == 2) ##3 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 3) ##2 (TotalZeros_LE3 == 2) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) (sel ##4 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 254) && (rbsp <= 511) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) (ena ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 314) && (rbsp <= 414) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11) ##2 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##1 (TotalZeros_LE3 == 2) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 288) && (rbsp <= 397) ##3 (TotalZeros_G3 == 9) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 7) && (TotalCoeff <= 11) ##1 (TotalZeros_LE3 == 2) ##3 1) |-> (len_LE3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 1) && (TotalZeros_comb <= 2) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 254) && (rbsp <= 511) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp >= 89) && (rbsp <= 171));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##2 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7)) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240)) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221)) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##3 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193)) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##3 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221) ##2 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##2 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238)) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136)) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##3 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11) ##4 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##1 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##1 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (len_comb == 0) ##1 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 !chroma_DC_sel) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (len_G3 == 0)) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) && (rbsp == 15) ##4 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15) ##4 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504) ##3 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 !ena) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##3 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 !sel ##1 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (rbsp_chroma_DC == 7) ##1 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##2 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (TotalZeros_LE3 == 1)) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##3 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326) ##1 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (TotalCoeff == 3)) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##2 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485) ##4 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##4 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256) ##4 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##1 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (TotalCoeff == 9) ##1 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##3 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##1 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##1 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##4 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288) ##3 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##2 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 1) && (TotalZeros_LE3 == 9) ##4 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##4 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##1 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##4 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##2 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256) ##3 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##2 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (rbsp == 44) ##1 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (len_G3 == 2) ##1 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##2 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (TotalZeros_G3 == 0)) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505) ##4 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##4 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115) ##4 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256) ##2 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505) ##3 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##3 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##3 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##4 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##1 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320) ##1 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##3 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 326) && (rbsp_LE3 <= 328) ##1 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 320) ##1 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 221) ##1 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 326) && (rbsp_LE3 <= 328) ##2 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 328) && (rbsp_LE3 <= 331) ##4 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 221)) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 ena ##2 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 ena ##3 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (rbsp == 120) ##2 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (len_G3 == 2) ##2 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 373) && (rbsp <= 511) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (TotalZeros_G3 == 3) ##2 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (TotalCoeff == 9) ##2 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalZeros_LE3 == 1) ##3 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalCoeff == 3) ##3 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalZeros_G3 == 0) ##3 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (len_G3 == 0) ##3 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (len_LE3 == 3) ##3 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (len_LE3 == 1) ##2 1) |-> (rbsp >= 128) && (rbsp <= 251));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##4 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##4 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##4 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##3 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##3 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326) ##3 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 104) && (rbsp <= 209) ##1 (len_LE3 == 4) ##3 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 41) && (rbsp_G3 <= 63) ##2 (TotalZeros_G3 == 9) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##4 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##3 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##2 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326) ##2 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 (TotalCoeff == 11) ##1 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505) ##2 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (TotalCoeff == 11) ##3 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##3 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115) ##2 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394) ##1 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##1 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##4 (TotalZeros_G3 == 1)) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##1 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (rbsp == 216) ##3 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##2 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##1 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##2 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##1 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 sel ##1 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) && (rbsp == 86) ##4 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##4 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 (TotalZeros_LE3 == 1) ##1 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##4 (TotalCoeff == 15)) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 (rbsp_G3 == 52) ##1 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 (len_comb == 1) ##1 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 sel ##3 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##4 (len_LE3 == 3)) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##4 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##4 (len_G3 == 1)) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504) ##4 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504) ##2 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 (TotalZeros_comb == 4) ##1 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##4 !chroma_DC_sel) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (TotalZeros_LE3 == 1) ##3 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##4 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##1 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##1 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 (TotalZeros_G3 == 4) ##1 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##4 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (len_LE3 == 3) ##3 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##4 !sel) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##1 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 4) && (len_LE3 == 4) ##4 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##2 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##4 (TotalZeros_LE3 == 1)) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221) ##3 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 (len_G3 == 1) ##1 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##4 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##4 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (TotalZeros_G3 == 4) ##3 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 346) ##3 (len_LE3 == 4) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##1 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 (len_LE3 == 3) ##2 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 (TotalCoeff == 2) ##2 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 1) && (TotalZeros_G3 <= 3) ##2 (TotalZeros_LE3 == 2) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 (rbsp == 161) ##2 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 chroma_DC_sel ##2 1) |-> (rbsp >= 252) && (rbsp <= 381));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 101) && (rbsp <= 207) ##1 (len_LE3 == 4) ##3 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 15) ##4 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##4 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 504) && (rbsp_LE3 <= 505) ##4 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 52) ##3 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 504) && (rbsp_LE3 <= 505) ##2 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 115) ##4 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 116) && (rbsp <= 235) ##1 (len_LE3 == 4) ##3 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 9) ##1 (TotalZeros_comb == 11)) |-> (len_LE3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##2 (TotalZeros_G3 == 9) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 116) && (rbsp <= 237) ##1 (len_LE3 == 4) ##3 1) |-> (rbsp >= 382) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 2) && (TotalZeros_LE3 <= 5)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 4) && (len_G3 <= 6)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 394)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 4) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 7) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##1 (TotalZeros_G3 == 9) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 50) && (rbsp_G3 <= 63) ##2 (TotalZeros_G3 == 9) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel ##2 (TotalZeros_G3 == 9) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##3 (TotalZeros_G3 == 9) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 52) && (rbsp_G3 <= 63) ##2 (TotalZeros_G3 == 9) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 86) ##1 (TotalCoeff == 11) ##3 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##2 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) && (len_LE3 == 4) ##4 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##2 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364)) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373)) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485) ##3 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394) ##4 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##4 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (TotalCoeff == 2) ##2 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394)) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##2 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485)) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504)) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505)) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##3 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) && (rbsp == 86) ##4 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (rbsp == 161) ##2 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (len_comb == 0) ##2 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (len_G3 == 0) ##2 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (len_LE3 == 3) ##2 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (rbsp_chroma_DC == 7) ##2 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##4 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##4 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (TotalZeros_G3 == 0) ##2 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##1 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (TotalZeros_comb == 0) ##2 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##4 !chroma_DC_sel) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##4 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 1) && (TotalZeros_LE3 == 4) ##4 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##1 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##4 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##2 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##2 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (TotalZeros_chroma_DC == 0) ##2 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) && (len_comb == 4) ##4 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##2 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485) ##2 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##2 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##4 (TotalZeros_G3 == 1)) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##3 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##3 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##3 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##4 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##2 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505) ##3 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 !ena ##2 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##2 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##3 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##1 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##1 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##2 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256) ##4 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##4 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##4 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394) ##4 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 9) ##1 (len_LE3 == 0)) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320) ##3 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##3 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##4 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (TotalZeros_comb == 4) ##1 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 9) ##1 (len_comb == 1)) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (TotalZeros_G3 == 4) ##1 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288) ##4 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320) ##4 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 0) ##2 (TotalZeros_G3 == 9) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##2 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 1) ##3 (TotalZeros_G3 == 9) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 9) ##1 (TotalCoeff == 12)) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##2 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (TotalCoeff == 11) ##3 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##2 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 (TotalZeros_comb == 0) ##3 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 (rbsp_G3 == 63) ##3 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##3 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##3 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 (len_comb == 0) ##3 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##4 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288) ##2 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##2 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 9) ##1 sel) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 (rbsp == 216) ##3 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 3) && (TotalCoeff <= 5) ##2 (TotalZeros_G3 == 9) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##2 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 9) ##1 chroma_DC_sel) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (rbsp_G3 == 52) ##1 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##2 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##3 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 !chroma_DC_sel ##1 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 9) ##1 (len_G3 == 1)) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 9) && (rbsp == 105) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##2 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 9) ##1 (TotalZeros_G3 == 3)) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##3 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (rbsp_chroma_DC == 7) ##1 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (TotalZeros_chroma_DC == 0) ##1 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (TotalCoeff == 11) ##1 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##3 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 !ena ##3 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##3 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 9) && (rbsp_G3 == 13) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 4) ##2 (TotalZeros_G3 == 9) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 1) && (TotalZeros_LE3 <= 2) ##3 (TotalZeros_G3 == 9) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) (sel ##1 (TotalZeros_G3 == 9) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##1 (TotalZeros_G3 == 9) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4) ##1 (TotalCoeff == 11) ##3 1) |-> (len_G3 == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 136)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 4) && (len_G3 <= 6)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7) ##2 (TotalZeros_G3 == 9) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##1 (TotalZeros_G3 == 9) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0) ##3 (TotalZeros_G3 == 9) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) (!sel ##2 (TotalZeros_G3 == 9) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##2 (TotalZeros_G3 == 9) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 0) ##3 (TotalZeros_G3 == 9) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##2 (TotalZeros_G3 == 9) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##2 (TotalZeros_G3 == 9) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##3 (TotalZeros_G3 == 9) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##1 (TotalZeros_G3 == 9) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 1) && (len_G3 <= 2) ##2 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) ##1 (TotalZeros_G3 == 9) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##2 (TotalZeros_G3 == 9) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 176) ##4 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) ##3 (TotalZeros_G3 == 9) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136) ##3 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 238) && (rbsp_LE3 <= 240) ##3 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 373) && (rbsp_LE3 <= 394) ##4 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 4) ##3 (TotalZeros_G3 == 9) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11) ##1 (TotalZeros_LE3 == 2) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 7) ##3 (TotalZeros_G3 == 9) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 254) && (rbsp <= 511) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp >= 95) && (rbsp <= 187));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (TotalZeros_LE3 == 1)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (rbsp == 232)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (len_comb == 0) ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (len_G3 == 2) ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (TotalCoeff == 9) ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 !sel ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 !chroma_DC_sel) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 !ena) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (TotalZeros_G3 == 0)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 178) ##4 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (rbsp_chroma_DC == 7) ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##2 (TotalZeros_G3 == 9) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 1) && (TotalZeros_LE3 == 9) ##4 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (len_G3 == 2) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288) ##4 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (TotalCoeff == 9) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##4 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalZeros_G3 == 0) ##3 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##4 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) && (rbsp == 15) ##4 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##4 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15) ##4 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15) ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 3)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (len_LE3 == 3) ##3 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalZeros_LE3 == 1) ##3 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504) ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##4 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221) ##4 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (rbsp == 120) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 0)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##4 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485) ##3 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##4 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 ena ##3 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 ena ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (len_LE3 == 1) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256) ##3 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (len_G3 == 0) ##3 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalCoeff == 3) ##3 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##4 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485) ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##4 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (TotalZeros_G3 == 3) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 253) ##3 (len_LE3 == 4) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 254) ##3 (len_LE3 == 4) ##1 1) |-> (rbsp >= 397) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 0) && (TotalZeros_comb <= 1) ##2 (TotalZeros_G3 == 9) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##2 (TotalZeros_LE3 == 4) ##2 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 86) ##1 (TotalCoeff == 11) ##3 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) (!ena ##1 (TotalZeros_G3 == 9) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256) ##4 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##3 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##3 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##3 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##1 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (len_comb == 0) ##2 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##2 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##2 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##2 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##4 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##4 !chroma_DC_sel) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##1 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) && (rbsp == 86) ##4 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##4 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##2 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##1 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##2 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##4 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (TotalZeros_comb == 0) ##2 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) && (len_comb == 4) ##4 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (TotalZeros_G3 == 0) ##2 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (len_G3 == 0) ##2 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##4 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (rbsp_chroma_DC == 7) ##2 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) && (len_LE3 == 4) ##4 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (TotalCoeff == 2) ##2 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##4 (TotalZeros_G3 == 1)) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 1) && (TotalZeros_LE3 == 4) ##4 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394) ##4 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (TotalZeros_chroma_DC == 0) ##2 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##3 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (len_LE3 == 3) ##2 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (rbsp == 161) ##2 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##3 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##4 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 !ena ##2 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##2 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505) ##3 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##2 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##2 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485) ##2 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##2 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##1 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##4 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 !ena ##3 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 (TotalZeros_comb == 0) ##3 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (TotalZeros_G3 == 4) ##1 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 (rbsp == 216) ##3 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 (rbsp_G3 == 63) ##3 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (rbsp_G3 == 52) ##1 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 4) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 (len_comb == 0) ##3 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (rbsp_chroma_DC == 7) ##1 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (TotalCoeff == 11) ##3 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 !chroma_DC_sel ##1 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (TotalZeros_comb == 4) ##1 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (TotalZeros_chroma_DC == 0) ##1 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (TotalCoeff == 11) ##1 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 7) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4) ##1 (TotalCoeff == 11) ##3 1) |-> (TotalCoeff >= 11) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 0) ##3 (TotalZeros_G3 == 9) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 256) && (rbsp_LE3 <= 339)) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 125) ##2 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 127) ##2 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 178) ##1 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##1 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 0) ##2 (TotalZeros_G3 == 9) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 254) ##4 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) (!ena ##3 (TotalZeros_G3 == 9) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 84) && (rbsp <= 165) ##4 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 95) && (rbsp <= 190) ##4 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 253) ##4 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 0) ##2 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7) ##4 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 102) ##2 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 33) && (rbsp_G3 <= 51) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 125) ##1 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 87) ##1 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7) ##1 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 0) ##1 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 42) && (rbsp_G3 <= 54) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 180) ##2 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 176) ##2 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##4 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 26) && (rbsp_G3 <= 49) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 93) ##1 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 2) && (TotalZeros_comb <= 4) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 105) && (rbsp <= 209) ##4 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6)) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) && (rbsp_G3 == 1)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##3 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 0) ##2 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) && (rbsp == 13)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##3 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) && (len_LE3 == 1)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15) ##3 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##3 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##3 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##4 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##2 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##4 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326) ##1 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##4 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326) ##4 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##2 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##4 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##4 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485) ##4 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504) ##4 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326) ##2 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256) ##2 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##2 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##2 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##2 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##2 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##4 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##3 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##4 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##3 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##4 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115) ##4 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##3 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (len_G3 == 2)) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##3 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (len_LE3 == 1) ##1 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (rbsp == 44)) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##4 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##4 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (rbsp == 120) ##1 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288) ##3 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (rbsp_chroma_DC == 7)) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (TotalCoeff == 9) ##1 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalZeros_G3 == 0) ##2 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (TotalZeros_G3 == 3) ##1 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505) ##4 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (len_LE3 == 3) ##2 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##3 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 1) && (TotalZeros_LE3 == 9) ##3 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 ena ##2 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##3 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##2 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##3 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##2 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115) ##3 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##3 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 ena ##1 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##3 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504) ##4 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##4 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##4 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221) ##3 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##4 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221) ##3 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15) ##3 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##3 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##2 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalCoeff == 3) ##2 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##4 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##1 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##1 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320) ##1 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##1 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##1 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505) ##1 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##4 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##2 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15) ##2 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##4 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##3 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##3 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320) ##4 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##4 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##2 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288) ##3 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##3 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (len_G3 == 2) ##1 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320) ##2 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 !sel) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##3 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##1 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##1 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalZeros_LE3 == 1) ##2 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485) ##4 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##2 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (len_comb == 0)) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (len_G3 == 0) ##2 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##2 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115) ##4 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505) ##4 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##3 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##3 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##3 1) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326) ##4 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##4 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) (ena ##3 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 253) && (rbsp <= 382) ##3 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) ##1 (TotalZeros_LE3 == 4) ##2 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 373) ##2 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 115) ##2 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 240) && (rbsp_LE3 <= 256) ##4 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 331) && (rbsp_LE3 <= 339) ##2 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 193) ##4 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5)) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4)) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 331) && (rbsp_LE3 <= 339) ##4 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 256) && (rbsp_LE3 <= 288) ##4 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136)) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 4)) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##3 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 17) ##1 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 52) ##2 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 67) && (rbsp_LE3 <= 86) ##4 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##4 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 11) && (TotalCoeff <= 15) ##1 (TotalZeros_LE3 == 4) ##2 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 0) ##1 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 10) ##2 (TotalZeros_LE3 == 4) ##2 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 52) && (rbsp_G3 <= 63) ##2 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 116) && (rbsp <= 238) ##4 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 55) && (rbsp_G3 <= 63) ##2 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) (!sel ##4 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 117) && (rbsp <= 238) ##4 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 254) && (rbsp <= 511) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 314) && (rbsp <= 414) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) (ena ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 254) ##2 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 253) ##2 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 0) ##1 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 0) && (len_comb <= 1) ##2 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 0) && (TotalZeros_comb <= 1) ##2 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 2) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 0) && (TotalZeros_comb <= 2) ##2 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 1) && (TotalZeros_comb <= 2) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) (!sel ##1 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 177) && (rbsp <= 341) ##3 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) (!sel ##2 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 1)) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 82) ##2 (TotalZeros_G3 == 9) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 373) && (rbsp <= 511) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 91) ##2 (TotalZeros_G3 == 9) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 10) && (TotalCoeff <= 15) ##1 (TotalZeros_LE3 == 4) ##2 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 !ena ##3 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 chroma_DC_sel) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (rbsp == 136) ##3 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (TotalCoeff == 10)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (TotalZeros_LE3 == 0)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalCoeff == 4) ##3 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalZeros_LE3 == 0) ##3 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 ena) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (TotalZeros_G3 == 3)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (len_G3 == 3) ##3 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (len_LE3 == 0) ##3 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalZeros_G3 == 1) ##3 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (len_G3 == 2)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (rbsp_chroma_DC == 4) ##1 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##2 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##1 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (len_comb == 1) ##1 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (rbsp == 143) ##2 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##4 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##4 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (TotalCoeff == 5) ##1 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##4 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##4 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 2) && (TotalZeros_LE3 == 9) ##4 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15) ##2 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 sel ##1 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (TotalZeros_G3 == 1) ##2 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) && (len_comb == 5) ##4 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##4 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 52) ##4 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 !ena ##2 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##3 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15) ##3 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (len_G3 == 3) ##2 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##2 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##2 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##3 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##4 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115) ##3 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##4 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (TotalCoeff == 4) ##2 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##2 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##3 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (len_LE3 == 0) ##2 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (rbsp == 310) ##1 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##2 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##2 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (len_G3 == 3) ##1 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##3 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##1 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136)) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##2 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##4 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394) ##3 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256) ##4 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##1 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256) ##3 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504) ##3 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##2 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##3 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##3 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485) ##2 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##3 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##2 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221) ##2 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##4 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##2 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##3 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326) ##4 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##3 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394) ##2 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256) ##1 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##2 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288) ##1 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320) ##2 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221) ##4 1) |-> (rbsp >= 0) && (rbsp <= 178));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 114) ##2 (TotalZeros_G3 == 9) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 2) && (TotalZeros_LE3 <= 5)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 394)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326) ##3 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##2 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##1 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7)) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##4 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326) ##1 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##1 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221)) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##4 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193)) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##2 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256) ##2 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##3 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##1 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##4 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288)) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##1 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##1 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##4 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288) ##3 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##3 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221) ##1 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320) ##1 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##4 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##4 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221) ##3 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##3 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326) ##2 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (len_G3 == 0)) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##1 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (TotalCoeff == 3)) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 1) && (TotalZeros_LE3 == 9) ##4 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalZeros_G3 == 0) ##3 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalZeros_LE3 == 1) ##3 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##3 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##4 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15) ##4 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115) ##4 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##1 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##3 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485) ##4 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##4 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115) ##2 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (TotalZeros_LE3 == 1)) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (TotalCoeff == 9) ##2 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##2 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##1 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 ena ##3 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalCoeff == 3) ##3 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (len_G3 == 0) ##3 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 !chroma_DC_sel) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (len_G3 == 2) ##2 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505) ##2 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485) ##1 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##2 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##1 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##2 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##1 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##3 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (rbsp == 120) ##2 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##4 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 !ena) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (TotalZeros_G3 == 0)) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505) ##3 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504) ##2 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##1 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 ena ##2 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504) ##4 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (len_LE3 == 3) ##3 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##3 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##1 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505) ##4 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (TotalZeros_G3 == 3) ##2 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (len_LE3 == 1) ##2 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##1 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) ##1 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##4 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (rbsp == 44) ##1 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (len_comb == 0) ##1 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (TotalCoeff == 9) ##1 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (rbsp_chroma_DC == 7) ##1 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 !sel ##1 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (len_G3 == 2) ##1 1) |-> (rbsp >= 180) && (rbsp <= 346));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) ##2 (len_LE3 == 4) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 2) && (TotalZeros_LE3 <= 4)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 136)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##2 (TotalZeros_LE3 == 4) ##2 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 67)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (rbsp == 143) ##2 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 sel ##1 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (TotalZeros_G3 == 3)) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (rbsp == 310) ##1 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (len_comb == 1) ##1 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##2 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (len_G3 == 3) ##2 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##2 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##3 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##1 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 ena) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505) ##3 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 !ena ##3 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##1 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 2) && (TotalZeros_LE3 == 9) ##4 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##3 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalZeros_LE3 == 0) ##3 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (TotalZeros_LE3 == 0)) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (len_G3 == 2)) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##3 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (len_G3 == 3) ##3 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##2 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalCoeff == 4) ##3 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalZeros_G3 == 1) ##3 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (len_LE3 == 0) ##3 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (TotalCoeff == 4) ##2 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##4 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 chroma_DC_sel) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##2 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320) ##4 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##1 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##4 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##4 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##1 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##4 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##4 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) && (len_LE3 == 5) ##4 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##4 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##3 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115) ##3 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##2 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##3 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##4 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) && (len_comb == 5) ##4 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##3 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 !ena ##2 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 52) ##4 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256) ##4 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (TotalCoeff == 5) ##1 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (rbsp == 59)) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (len_G3 == 3) ##1 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##4 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (TotalZeros_G3 == 1) ##2 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (len_LE3 == 0) ##2 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (rbsp_chroma_DC == 4) ##1 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394) ##4 1) |-> (TotalCoeff >= 10) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 10) && (rbsp_G3 <= 15)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 4)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 6) && (rbsp_G3 <= 9)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 1) && (TotalZeros_LE3 <= 2) ##2 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##4 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 1) ##2 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 1) ##1 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (TotalCoeff == 9) ##1 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 !sel ##1 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##1 (TotalZeros_LE3 == 4) ##2 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (len_comb == 0) ##1 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (len_G3 == 2) ##1 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 !ena) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (rbsp == 232)) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (rbsp_chroma_DC == 7) ##1 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 !chroma_DC_sel) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (TotalZeros_LE3 == 1)) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (len_LE3 == 1) ##2 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##4 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 2) ##2 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##2 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##2 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (len_LE3 == 3) ##3 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalZeros_LE3 == 1) ##3 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalCoeff == 3) ##3 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##4 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394) ##2 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (TotalCoeff == 9) ##2 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##4 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 1) && (TotalZeros_LE3 == 9) ##4 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##1 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##4 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15) ##4 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (len_G3 == 0) ##3 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504) ##1 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3)) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##2 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##4 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##1 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221) ##2 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 ena ##3 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalZeros_G3 == 0) ##3 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##1 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 ena ##2 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (len_G3 == 2) ##2 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (TotalZeros_G3 == 3) ##2 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288) ##4 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (rbsp == 120) ##2 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##2 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288) ##2 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##4 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6)) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256) ##4 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485) ##1 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##1 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##2 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##3 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 0)) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0)) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##4 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##4 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##1 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##2 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##1 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15) ##1 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) && (rbsp == 15) ##4 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##4 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7)) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 6)) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##1 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##4 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##2 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##4 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##2 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 10)) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221) ##4 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##3 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115) ##2 1) |-> (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (len_G3 == 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 13) && (TotalCoeff <= 15) ##1 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 178) ##2 (TotalZeros_G3 == 9) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 2) ##4 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 12) && (TotalCoeff <= 15) ##1 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 136)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 2) && (TotalZeros_LE3 <= 4)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 2) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 2) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 2) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) && sel ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 2) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 101) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 101) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 7) && (TotalCoeff <= 11) ##2 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 256)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 221) && (rbsp_LE3 <= 288) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0) ##2 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 3) ##2 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11) ##1 (TotalZeros_LE3 == 4) ##2 1) |-> (len_G3 == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 3) ##4 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0) ##4 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 339) ##3 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 339)) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 328) ##2 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 3) ##4 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) ##1 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 394)) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 3) ##2 (len_LE3 == 4) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 3) && (TotalZeros_LE3 <= 4)) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 339) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 253) ##2 (TotalZeros_G3 == 9) ##1 1) |-> (rbsp >= 348) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 4) ##4 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 11) ##2 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 10) && (TotalCoeff <= 15) ##1 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 2) && (TotalZeros_chroma_DC <= 3)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 320) && (rbsp_LE3 <= 331) ##3 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 221) && (rbsp_LE3 <= 256) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 240) ##4 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 86)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 339) ##4 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 288)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 52) ##3 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 136)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##2 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 7) && (TotalZeros_LE3 <= 9) ##3 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 238) && (rbsp_LE3 <= 256) ##2 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 7) && (TotalZeros_LE3 <= 9) ##2 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 136)) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 52) && (rbsp_G3 <= 63) ##2 (TotalZeros_comb == 11) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 10) && (TotalCoeff <= 15) ##1 (TotalZeros_comb == 11) ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 0) && (TotalZeros_comb <= 1) ##2 (TotalZeros_comb == 11) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 0) && (len_comb <= 1) ##2 (TotalZeros_comb == 11) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##4 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 3) ##2 (len_LE3 == 4) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 67) ##3 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 13) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 1) && (TotalZeros_G3 <= 3) ##2 (len_LE3 == 4) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 288)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 0) && (TotalZeros_comb <= 2) ##2 (TotalZeros_comb == 11) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##1 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##4 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 11) ##1 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 5) && (TotalZeros_LE3 <= 9) ##3 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 67) ##3 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 326) && (rbsp_LE3 <= 331) ##3 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17) ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 221) && (rbsp_LE3 <= 240) ##4 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 328) && (rbsp_LE3 <= 339) ##4 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 238) && (rbsp_LE3 <= 256) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 7) && (TotalZeros_LE3 <= 9)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 328) && (rbsp_LE3 <= 339) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##3 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 320) ##2 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 326) && (rbsp_LE3 <= 328) ##2 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 238) && (rbsp_LE3 <= 240) ##2 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 504) && (rbsp_LE3 <= 505) ##1 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 373) ##1 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 17) ##2 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 221) ##3 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 320) ##1 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##4 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 317) ##3 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 504) && (rbsp_LE3 <= 505) ##2 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 52) && (rbsp_LE3 <= 67) ##1 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 15) ##2 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##2 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 328) ##3 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##1 (len_LE3 == 4) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 414) && (rbsp <= 511)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 115)) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2)) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 0) ##2 (TotalZeros_comb == 11) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 7) ##3 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##1 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2)) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##4 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3)) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 3)) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 0) ##1 (TotalZeros_comb == 11) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##1 (TotalZeros_comb == 11) ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 9) ##1 (len_LE3 == 4) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 8) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 5) && (TotalZeros_LE3 <= 9) ##3 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 9) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) ##1 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##3 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 4) && (TotalZeros_LE3 <= 5) ##2 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##3 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##3 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6)) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 9)) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##4 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (len_LE3 == 0) ##3 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 ena) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 52) ##4 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 2) && (TotalZeros_LE3 == 9) ##4 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505) ##2 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (rbsp == 136) ##3 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalCoeff == 4) ##3 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (len_G3 == 3) ##3 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalZeros_LE3 == 0) ##3 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalZeros_G3 == 1) ##3 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15) ##2 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##1 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##1 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##1 (len_LE3 == 4) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##3 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 !ena ##3 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##1 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##2 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 chroma_DC_sel) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##2 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##3 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505) ##1 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##3 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##2 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504) ##2 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##3 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##4 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##3 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326) ##1 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320) ##1 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##1 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##1 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504) ##1 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320) ##2 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256) ##2 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##2 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326) ##2 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (TotalZeros_G3 == 3)) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##2 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##3 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##2 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##1 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##2 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115) ##4 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##1 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##1 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (TotalZeros_LE3 == 0)) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##4 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##1 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##1 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##2 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##2 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##2 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##1 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##1 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##3 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##4 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 320) && (rbsp_LE3 <= 326) ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 15) ##4 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 328) && (rbsp_LE3 <= 331) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 11)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 326) && (rbsp_LE3 <= 328) ##3 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 17) ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 238) && (rbsp_LE3 <= 240) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 238) && (rbsp_LE3 <= 240) ##4 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 373) && (rbsp_LE3 <= 394) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 52) ##3 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 328) && (rbsp_LE3 <= 331) ##4 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 326) && (rbsp_LE3 <= 339) ##4 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 3) ##4 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 5) && (len_G3 <= 6)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 86) ##3 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (len_comb == 1) ##1 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 !ena ##2 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (rbsp_chroma_DC == 4) ##1 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 sel ##1 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (TotalCoeff == 5) ##1 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (TotalCoeff == 4) ##2 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 11) && (TotalCoeff <= 15) ##1 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (len_G3 == 3) ##2 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (len_G3 == 3) ##1 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (rbsp == 143) ##2 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (TotalZeros_G3 == 1) ##2 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (len_LE3 == 0) ##2 1) |-> (len_G3 >= 2) && (len_G3 <= 6));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##1 (len_LE3 == 4) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 240)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 9) ##2 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 5) && (len_G3 <= 6) ##1 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 5) && (TotalZeros_LE3 <= 9)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 5) && (len_G3 <= 6)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##1 (len_LE3 == 4) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) ##1 (TotalZeros_comb == 11) ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 394)) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 394) ##4 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 320) ##4 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 326) && (rbsp_LE3 <= 331) ##3 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 221) && (rbsp_LE3 <= 256) ##2 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) (sel ##2 (len_LE3 == 4) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 416) && (rbsp <= 511)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 7) && (TotalCoeff <= 9) ##2 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 7) ##2 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) (!ena ##2 (len_LE3 == 4) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 8) ##4 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 127) ##2 (TotalZeros_comb == 11) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3)) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 3) && (TotalZeros_LE3 <= 5)) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 238) ##1 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 52) && (rbsp_LE3 <= 86) ##3 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 328) && (rbsp_LE3 <= 339) ##3 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 320) && (rbsp_LE3 <= 331) ##1 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 326) && (rbsp_LE3 <= 339) ##4 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 254) ##2 (TotalZeros_comb == 11) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 13) && (TotalCoeff <= 15) ##1 (TotalZeros_comb == 11) ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 67) ##3 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 394) ##2 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 238) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 7) && (TotalZeros_LE3 <= 9) ##4 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 240) && (rbsp_LE3 <= 288) ##2 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136)) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 320) && (rbsp_LE3 <= 328) ##1 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136) ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136) ##3 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 125) ##1 (TotalZeros_comb == 11) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 7) && (TotalZeros_LE3 <= 9) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##4 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##3 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 7) && (TotalZeros_LE3 <= 9) ##3 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##3 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##3 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 5) && (TotalZeros_LE3 <= 7) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 5) && (TotalZeros_LE3 <= 7) ##3 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 52) && (rbsp_LE3 <= 67) ##4 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 17) && (rbsp_LE3 <= 50) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 178) ##1 (TotalZeros_comb == 11) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 320) && (rbsp_LE3 <= 328) ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 240) && (rbsp_LE3 <= 288) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 7) && (TotalZeros_LE3 <= 9) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 394) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 !chroma_DC_sel) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (rbsp == 232)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 !ena) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 10) ##4 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (TotalZeros_G3 == 0)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (TotalZeros_LE3 == 1)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 5) && (TotalZeros_LE3 <= 9) ##3 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##3 chroma_DC_sel ##1 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136) ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136)) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 7) && (TotalZeros_LE3 <= 9) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##3 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##3 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 176) ##2 (TotalZeros_comb == 11) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##3 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504) ##3 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##4 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##3 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##3 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##4 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485) ##3 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##4 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##3 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) && (rbsp == 15) ##4 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256) ##3 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalCoeff == 3) ##3 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##4 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##4 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504) ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalZeros_G3 == 0) ##3 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalZeros_LE3 == 1) ##3 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (len_G3 == 0) ##3 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288) ##4 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 1) && (TotalZeros_LE3 == 9) ##4 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##3 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485) ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##4 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15) ##4 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 !sel ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (len_comb == 0) ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (TotalZeros_G3 == 3) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (rbsp == 120) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (rbsp_chroma_DC == 7) ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221) ##4 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394) ##3 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (TotalCoeff == 9) ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (len_LE3 == 3) ##3 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (len_G3 == 2) ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326) ##3 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (len_LE3 == 1) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##4 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##4 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320) ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##3 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##3 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##3 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (len_G3 == 2) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320) ##3 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (TotalCoeff == 9) ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##4 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 ena ##3 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##4 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##3 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##4 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15) ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##4 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 ena ##2 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7)) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##4 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##4 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326) ##1 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##3 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##4 1) |-> (TotalCoeff >= 0) && (TotalCoeff <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 50) ##1 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 238) && (rbsp_LE3 <= 256) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 326) && (rbsp_LE3 <= 331) ##4 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 7) && (TotalZeros_LE3 <= 9)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 67) ##3 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 238) && (rbsp_LE3 <= 256) ##2 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 326) && (rbsp_LE3 <= 331) ##3 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##1 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136) ##2 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##4 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 0) ##1 (TotalZeros_comb == 11) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 240) && (rbsp_LE3 <= 288) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 221) && (rbsp_LE3 <= 240)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##4 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 67) ##4 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 7) && (TotalZeros_LE3 <= 9)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##2 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 52) && (rbsp_LE3 <= 86) ##1 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 50) ##3 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 394) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 67)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##4 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##2 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5) ##1 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 4) && (TotalZeros_LE3 <= 5) ##2 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 320) && (rbsp_LE3 <= 328) ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 102) ##2 (TotalZeros_comb == 11) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7) ##2 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 320) ##4 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 320) ##3 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 331) && (rbsp_LE3 <= 339) ##3 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 373) ##4 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 504) && (rbsp_LE3 <= 505) ##2 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 256) && (rbsp_LE3 <= 288)) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 326) && (rbsp_LE3 <= 328) ##3 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##1 (TotalZeros_comb == 11) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##3 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 0) ##2 (TotalZeros_comb == 11) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 238)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 193) ##4 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 320)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 256) && (rbsp_LE3 <= 288)) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 52) && (rbsp_LE3 <= 67) ##3 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##4 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 373) && (rbsp_LE3 <= 394)) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##4 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 326) && (rbsp_LE3 <= 328)) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 238) && (rbsp_LE3 <= 240)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 193)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 238) && (rbsp_LE3 <= 240) ##3 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 256) && (rbsp_LE3 <= 288) ##3 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 394) ##3 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 326) && (rbsp_LE3 <= 331) ##4 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 93) ##1 (TotalZeros_comb == 11) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0) ##3 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 504) && (rbsp_LE3 <= 505) ##2 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##3 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 15) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 339) && (rbsp_LE3 <= 364) ##4 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 373) ##3 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 373) ##2 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 221) ##3 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 328) && (rbsp_LE3 <= 331) ##3 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 221) && (rbsp_LE3 <= 238) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 240) && (rbsp_LE3 <= 256) ##2 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 504) && (rbsp_LE3 <= 505) ##4 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 17) ##3 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##4 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 320) && (rbsp_LE3 <= 326) ##3 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 328) && (rbsp_LE3 <= 331) ##4 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 67)) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256)) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##3 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##4 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3)) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 193) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##1 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2)) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4)) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 52) ##3 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##4 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 115) ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 52) ##4 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 238) && (rbsp_LE3 <= 240) ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 373) && (rbsp_LE3 <= 394) ##1 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4)) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 67) && (rbsp_LE3 <= 86) ##2 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 326) && (rbsp_LE3 <= 328) ##1 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 15) ##4 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136)) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 17) && (rbsp_LE3 <= 50) ##2 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 238) && (rbsp_LE3 <= 240)) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 320)) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 115) ##3 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0) ##2 (TotalZeros_comb == 11) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) && (len_LE3 == 1) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##1 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##3 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) && (rbsp_G3 == 1) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##1 (TotalCoeff == 7)) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 5) && (TotalZeros_comb == 11) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##3 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##1 (TotalZeros_LE3 == 1)) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 87) ##1 (TotalZeros_comb == 11) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##3 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##3 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) (!sel ##1 (TotalZeros_comb == 11) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##1 (len_G3 == 2)) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##3 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##3 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##2 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##1 (TotalZeros_G3 == 5)) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##1 (rbsp == 35)) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##4 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115) ##4 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##3 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) (!sel ##1 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 104) && (rbsp <= 206) ##2 (len_LE3 == 4) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 373) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 328) && (rbsp_LE3 <= 331) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 504) && (rbsp_LE3 <= 505) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 320) && (rbsp_LE3 <= 326) ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 240) && (rbsp_LE3 <= 256) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 373) ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 67) && (rbsp_LE3 <= 86) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 253) ##2 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 252) ##2 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) ##1 (TotalZeros_comb == 11) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 104) && (rbsp <= 209) ##2 (len_LE3 == 4) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 52) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 15) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 373) && (rbsp_LE3 <= 394) ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 17) && (rbsp_LE3 <= 50) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 326) && (rbsp_LE3 <= 328) ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 105) && (rbsp <= 209) ##2 (len_LE3 == 4) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel ##1 (len_LE3 == 4) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 7) && (TotalZeros_LE3 <= 9)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 7) && (TotalZeros_LE3 <= 9) ##3 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##3 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 320)) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136)) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 52)) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4)) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 9) ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 52) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 238) && (rbsp_LE3 <= 240) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 238) && (rbsp_LE3 <= 240)) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 115)) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5)) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 115) ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 238) && (rbsp_LE3 <= 240) ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 3) ##2 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##4 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##2 (TotalZeros_comb == 11) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 374) && (rbsp <= 511) ##1 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##1 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 1) && (TotalZeros_comb <= 4) ##2 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) (!sel ##1 (TotalZeros_comb == 11) ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##1 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7) ##3 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 2) ##2 (TotalZeros_comb == 11) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 240) && (rbsp_LE3 <= 256) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136) ##4 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 504) && (rbsp_LE3 <= 505) ##4 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 15) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 238) && (rbsp_LE3 <= 240) ##2 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 326) && (rbsp_LE3 <= 328) ##3 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 52) ##3 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 328) && (rbsp_LE3 <= 331) ##4 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##4 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 320) ##4 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 115) ##2 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 17) && (rbsp_LE3 <= 50) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 320) && (rbsp_LE3 <= 326) ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 504) && (rbsp_LE3 <= 505) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 328) && (rbsp_LE3 <= 331) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 67) && (rbsp_LE3 <= 86) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 373) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 373) ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 28) && (rbsp <= 264) ##2 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 3) && (len_comb <= 5) ##2 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 116) && (rbsp <= 237) ##2 (len_LE3 == 4) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 5) && (TotalZeros_LE3 <= 7) ##3 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##3 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136) ##3 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##4 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##2 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##4 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 238) ##3 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##1 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 52) && (rbsp_LE3 <= 67) ##1 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 52)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 52) ##4 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 15) ##4 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 373) && (rbsp_LE3 <= 394) ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 17)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 238) && (rbsp_LE3 <= 240)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 326) && (rbsp_LE3 <= 328) ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326) ##3 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 chroma_DC_sel ##2 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##4 (len_comb == 1)) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##4 (TotalZeros_G3 == 1)) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 (len_LE3 == 1) ##2 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394) ##4 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##4 (TotalZeros_comb == 1)) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 (rbsp == 143) ##2 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 (TotalCoeff == 9) ##3 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 (TotalZeros_comb == 4) ##3 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 (TotalCoeff == 13) ##2 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 12) && (TotalCoeff <= 15) ##1 (TotalZeros_comb == 11) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 7) && (rbsp <= 250) ##2 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320) ##3 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 (TotalZeros_G3 == 2) ##2 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##3 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##3 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) (!sel ##2 (TotalZeros_comb == 11) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##2 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504) ##2 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326) ##2 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288) ##2 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##3 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##2 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288) ##4 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##2 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 (TotalZeros_G3 == 4) ##3 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##4 (len_G3 == 1)) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##4 (TotalCoeff == 15)) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 (rbsp_G3 == 45) ##3 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##4 ena) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 (len_LE3 == 1) ##3 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##4 !chroma_DC_sel) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485) ##3 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##1 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##3 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 (len_G3 == 1) ##2 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505) ##2 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 240) ##3 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 240) && (rbsp_LE3 <= 256) ##4 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 240) && (rbsp_LE3 <= 256) ##1 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##1 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##2 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##1 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##1 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##4 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##4 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##2 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) && (rbsp == 136) ##4 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##3 (len_G3 == 1) ##1 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC == 7) ##1 (TotalZeros_comb == 11) ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##2 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##3 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##3 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##3 (TotalCoeff == 15) ##1 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##3 (len_LE3 == 3) ##1 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##4 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##2 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 126) ##1 (TotalZeros_comb == 11) ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115) ##2 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##4 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##1 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##1 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##2 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7) ##1 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##3 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 125) ##1 (TotalZeros_comb == 11) ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##3 (TotalZeros_G3 == 1) ##1 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##3 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 1) && (TotalZeros_LE3 == 2) ##4 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##4 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##3 (TotalZeros_LE3 == 1) ##1 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##3 (rbsp == 197) ##1 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221) ##3 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 7) && (TotalCoeff <= 11) ##2 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##2 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##3 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##2 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##4 1) |-> (rbsp >= 256) && (rbsp <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 326) && (rbsp_LE3 <= 328) ##4 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 326) && (rbsp_LE3 <= 328) ##1 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 320) && (rbsp_LE3 <= 326) ##1 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 328) && (rbsp_LE3 <= 331) ##1 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##1 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288) ##3 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 178) ##1 (TotalZeros_comb == 11) ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##3 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326) ##4 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504) ##2 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##2 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##2 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0)) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##3 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221) ##3 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##3 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394)) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) && (len_comb == 3)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 2) && (len_comb <= 5) ##2 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##1 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 2) && (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328)) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##1 (TotalZeros_comb == 11) ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 9) ##2 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 1) && (rbsp_G3 <= 40) ##2 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 40) ##2 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##4 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##4 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##4 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##4 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288)) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394) ##3 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505) ##4 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339)) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17)) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256)) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221)) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##4 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373)) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67)) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326)) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##1 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##3 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##3 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320) ##1 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##3 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0)) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320) ##4 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##4 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##4 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288) ##4 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256) ##3 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##4 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##3 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##4 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505)) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221) ##4 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394) ##4 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##2 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##2 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##4 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##2 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##1 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326) ##1 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 3) && (len_LE3 == 4) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 !chroma_DC_sel) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 (rbsp == 298)) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 (TotalCoeff == 1)) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256) ##2 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505) ##2 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504) ##4 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15) ##3 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##4 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##4 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##3 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##3 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##3 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##4 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256) ##4 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485) ##4 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##1 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##3 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##4 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##2 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288) ##2 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15) ##4 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) (!sel ##3 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (len_LE3 == 0) ##1 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##1 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 115) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (TotalCoeff == 12) ##1 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##2 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##1 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##3 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##4 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##4 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (TotalZeros_LE3 == 0) ##1 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 !sel ##1 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##3 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##4 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##1 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394) ##1 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##3 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##4 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (TotalZeros_G3 == 3) ##1 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##2 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##4 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 2) && (len_comb <= 7) ##2 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 3) && (len_LE3 == 4) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##2 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115) ##4 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##4 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##1 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 1) && (rbsp_G3 <= 37) ##2 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##1 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##3 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##3 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##3 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##1 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##3 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##4 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##3 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##4 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15) ##1 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##4 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##1 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394) ##2 1) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##3 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 256)) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 320) && (rbsp_LE3 <= 339) ##3 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 331) && (rbsp_LE3 <= 394) ##2 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364)) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331)) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193)) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317)) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 254) && (rbsp <= 511) ##1 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320)) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 178) ##2 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 8) && (rbsp <= 275) ##2 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 9) ##2 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7)) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 5) && (TotalZeros_comb <= 11) ##2 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 314) && (rbsp <= 414) ##1 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 4) && (TotalZeros_comb <= 11) ##2 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 1) && (rbsp_G3 <= 23) ##2 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86)) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115)) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136)) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238)) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504)) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240)) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485)) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320) ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 5) && (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 ena ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (TotalCoeff >= 6) && (TotalCoeff <= 10));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 8) ##1 (len_LE3 == 4) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 (len_G3 == 1)) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 93) ##1 (TotalZeros_comb == 11) ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 (len_LE3 == 3) ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 (len_G3 == 1) ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 6) && (TotalZeros_comb <= 11) ##2 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 chroma_DC_sel) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15) ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394) ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 1) && (rbsp_G3 <= 14) ##2 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 1) && (rbsp_G3 <= 24) ##2 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 176) ##2 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) && (rbsp == 50) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 (TotalCoeff == 14) ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 1) && (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##2 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326) ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 chroma_DC_sel ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 24) ##2 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 15) ##2 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 14) ##2 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 (TotalZeros_G3 == 2) ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 1) && (TotalZeros_comb <= 2) ##2 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 102) ##1 (len_LE3 == 4) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 11) ##2 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel ##1 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 1) && (rbsp_G3 <= 13) ##2 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 373) ##4 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 52) ##3 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##1 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 115) ##3 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 52) ##4 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 373) ##3 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##4 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 177) && (rbsp <= 341) ##3 (TotalZeros_comb == 11) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##4 chroma_DC_sel) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240)) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320) ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##4 (TotalCoeff == 8)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193)) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136)) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7) ##1 (len_LE3 == 4) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 7) && (rbsp <= 121) ##2 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50)) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504)) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317)) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##4 (rbsp == 199)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115)) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238)) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320)) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52)) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86)) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7)) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##4 (len_LE3 == 0)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 7) && (rbsp <= 131) ##2 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##4 (len_G3 == 2)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364)) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331)) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485)) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7)) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 87) ##1 (TotalZeros_comb == 11) ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 0) ##1 (TotalZeros_comb == 11) ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7) ##1 (TotalZeros_comb == 11) ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##4 (TotalZeros_LE3 == 0)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15) ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##4 (TotalZeros_G3 == 4)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15)) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 (TotalCoeff == 10) ##1 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) && (rbsp == 13) ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) && (TotalCoeff == 5) ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (TotalZeros_LE3 == 0) ##3 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 chroma_DC_sel) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 12) && (TotalCoeff <= 15) ##1 (TotalZeros_comb == 11) ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) && (rbsp_G3 == 1) ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##3 (rbsp == 501)) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (rbsp_G3 == 63)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##3 (TotalZeros_G3 == 2)) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##2 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320) ##4 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 (rbsp == 121) ##1 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (TotalCoeff == 12) ##3 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##1 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (TotalZeros_G3 == 1)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 5) && (TotalZeros_comb == 11) ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 (rbsp == 298) ##2 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##4 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##3 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 10) && (TotalCoeff <= 15) ##1 (TotalZeros_comb == 11) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 (TotalCoeff == 1) ##2 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) (ena ##3 (TotalZeros_comb == 11) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (TotalZeros_comb == 1)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 !sel ##3 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##4 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 3) && (len_LE3 == 4) ##4 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##4 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##2 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 115) ##4 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (rbsp == 425) ##3 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394) ##4 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##3 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504) ##4 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 13) && (TotalCoeff <= 15) ##1 (TotalZeros_comb == 11) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##4 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 (TotalZeros_G3 == 3) ##1 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##4 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##2 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (TotalCoeff == 15)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 (TotalZeros_LE3 == 0) ##1 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##3 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##3 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 !chroma_DC_sel ##2 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 (TotalZeros_comb == 0) ##1 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 (rbsp_G3 == 63) ##1 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##2 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 1) ##2 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##4 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##3 !chroma_DC_sel) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326) ##3 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 (len_G3 == 2) ##1 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505) ##4 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 (len_comb == 0) ##1 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 3) && (TotalCoeff <= 5) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##3 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326) ##4 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115) ##4 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##4 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##4 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) && (len_LE3 == 1) ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 !sel ##1 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 102) ##2 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320) ##2 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (TotalZeros_G3 == 3) ##3 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115) ##2 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 7) && (TotalCoeff <= 8) ##2 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##4 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 127) ##2 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##2 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##3 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 82) && (rbsp <= 161) ##2 (len_LE3 == 4) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394) ##3 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256) ##2 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##2 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##3 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##3 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394) ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##4 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##2 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (len_LE3 == 0) ##3 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 (len_LE3 == 1) ##2 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326) ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##3 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##4 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3)) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##3 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##3 (len_G3 == 1)) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 15) ##3 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 326) ##4 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##4 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136) ##3 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 221) && (rbsp_LE3 <= 240) ##3 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136) ##4 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 394) ##4 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 326) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##1 (TotalCoeff == 7) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##1 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##4 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221) ##4 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115) ##4 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 (rbsp == 451) ##2 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##4 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##4 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##4 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##1 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) && (len_LE3 == 3) ##3 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##1 chroma_DC_sel ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##1 (TotalZeros_G3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##1 (TotalZeros_LE3 == 1) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##1 (len_G3 == 2) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 ena ##1 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##2 (TotalCoeff == 12) ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##4 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##2 (len_G3 == 1) ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##2 (len_LE3 == 0) ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##2 (TotalZeros_LE3 == 0) ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##2 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##4 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##2 (TotalZeros_G3 == 3) ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##2 (rbsp == 6) ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (len_LE3 == 1) ##1 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##3 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 237) && (rbsp <= 370) ##3 (TotalZeros_comb == 11) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##3 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 ena ##2 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##3 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (len_comb == 1) ##1 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 104) && (rbsp <= 209) ##2 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##2 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##1 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 348) ##3 (TotalZeros_comb == 11) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##4 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##2 chroma_DC_sel ##1 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) && (len_comb == 3) ##3 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (TotalZeros_G3 == 3) ##1 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 2) && (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 (len_comb == 1) ##2 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 (TotalZeros_comb == 4) ##2 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (rbsp_chroma_DC == 2) ##1 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##1 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (len_G3 == 3) ##1 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (TotalCoeff == 5) ##1 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##3 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##1 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 41) && (rbsp_G3 <= 63) ##4 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 114) ##4 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##3 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##1 (rbsp == 35) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##2 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 (rbsp_G3 == 56) ##2 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##4 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (TotalZeros_comb == 1) ##1 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (rbsp == 135) ##1 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##4 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (TotalZeros_chroma_DC == 1) ##1 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##4 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##2 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##3 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##4 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##4 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##2 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##1 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15) ##4 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##3 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##2 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##1 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##4 1) |-> sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##3 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##1 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 126) ##2 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##4 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##2 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86)) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 125) && (rbsp <= 248) ##1 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##4 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326) ##4 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 172) && (rbsp <= 254) ##1 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505) ##4 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326) ##1 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 253) ##2 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256) ##4 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256) ##1 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320) ##1 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 114) ##1 (len_LE3 == 4) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 3) && (TotalCoeff <= 6) ##4 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 127) && (rbsp <= 252) ##2 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##4 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##4 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288) ##1 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##4 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485) ##2 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##1 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##1 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##1 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 2) ##1 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 102) ##4 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485) ##4 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 253) && (rbsp <= 382) ##3 (TotalZeros_comb == 11) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 0) ##1 (TotalZeros_comb == 11) ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 104) && (rbsp <= 207) ##2 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##1 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) (!sel ##4 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 253) ##3 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 28) && (rbsp <= 207) ##2 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 104) && (rbsp <= 209) ##1 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 55) && (rbsp_G3 <= 63) ##4 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 28) && (rbsp <= 171) ##2 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 1) ##2 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 115) && (rbsp <= 235) ##3 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 115) && (rbsp <= 235) ##1 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 0) ##1 (TotalZeros_comb == 11) ##3 1) |-> (len_LE3 >= 3) && (len_LE3 <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##1 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 52) && (rbsp_G3 <= 63) ##4 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 3)) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 5) && (TotalZeros_LE3 <= 9)) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 86)) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) (!ena ##4 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 7) && (rbsp <= 75) ##2 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 26) && (rbsp_G3 <= 49) ##1 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 4) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 101) && (rbsp <= 207) ##1 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 116) && (rbsp <= 235) ##1 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##2 (TotalZeros_comb == 11)) |-> (TotalCoeff >= 5) && (TotalCoeff <= 9));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 346) ##1 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 50) && (rbsp_G3 <= 63) ##4 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (TotalCoeff == 10)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (len_G3 == 2)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 127) && (rbsp <= 251) ##2 (len_LE3 == 4) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 chroma_DC_sel) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (rbsp == 59)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1) ##1 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (TotalZeros_LE3 == 0)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (TotalZeros_G3 == 3)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##2 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##4 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (len_comb == 1) ##1 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (rbsp == 143) ##2 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485) ##4 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##4 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##1 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 129) && (rbsp <= 252) ##2 (len_LE3 == 4) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##1 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##3 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##4 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##1 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##4 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##3 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (TotalCoeff == 4) ##2 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##3 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (rbsp_chroma_DC == 4) ##1 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 sel ##1 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##4 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 1) && (TotalZeros_comb <= 2) ##1 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##4 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##4 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 52) ##4 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (len_G3 == 3) ##2 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (TotalCoeff == 5) ##1 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##2 (TotalZeros_comb == 11) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##4 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221) ##4 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##4 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 !ena ##2 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 !ena ##3 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 2) && (TotalZeros_LE3 == 9) ##4 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##4 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##2 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalCoeff == 4) ##3 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) && (len_comb == 5) ##4 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7)) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (rbsp == 136) ##3 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (len_LE3 == 0) ##2 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##1 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalZeros_LE3 == 0) ##3 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (len_LE3 == 0) ##3 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##3 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##4 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (len_G3 == 3) ##1 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##3 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (TotalZeros_G3 == 1) ##2 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (len_G3 == 3) ##3 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalZeros_G3 == 1) ##3 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136) ##3 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##4 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 15) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 193) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 504) && (rbsp_LE3 <= 505) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 320) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 320) ##4 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 317) ##3 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 5) && (TotalZeros_LE3 <= 7) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 15) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 373) ##4 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 238) && (rbsp_LE3 <= 240) ##3 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 504) && (rbsp_LE3 <= 505) ##4 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 115) ##4 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 0) ##4 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##2 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##4 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 8) && (rbsp <= 214) ##2 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##3 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 7) && (rbsp <= 207) ##2 (len_LE3 == 5) ##2 1) |-> (len_LE3 >= 3) && (len_LE3 <= 4));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##1 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 33) && (rbsp_G3 <= 51) ##1 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 4) ##2 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##3 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##1 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) ##2 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##2 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##4 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##4 1) |-> ena);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 1) ##2 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 410) && (rbsp <= 511) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 410) && (rbsp <= 511)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 410) && (rbsp <= 511) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7) ##1 (TotalZeros_comb == 11) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 7) ##2 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 205) && (rbsp <= 305) ##3 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11) ##4 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 42) && (rbsp_G3 <= 54) ##1 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 0) ##1 (TotalZeros_comb == 11) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3) ##2 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2) ##2 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3) ##2 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2)) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 238) && (rbsp_LE3 <= 256) ##3 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7)) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136)) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 7) && (TotalZeros_LE3 <= 9)) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3)) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 4) && (TotalZeros_LE3 <= 5)) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17)) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 4) && (TotalZeros_LE3 <= 5) ##3 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 2) && (TotalZeros_comb <= 4) ##1 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 172) && (rbsp <= 254) ##3 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 346) ##3 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 2) ##2 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 178) ##2 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##4 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6)) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##1 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221) ##3 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##3 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##3 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##3 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505) ##3 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##4 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##4 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288) ##3 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (len_LE3 == 1)) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (len_LE3 == 3) ##1 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##3 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 ena) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##3 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##3 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##1 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##4 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15) ##3 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485) ##4 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalCoeff == 3) ##1 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (len_G3 == 2)) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##3 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 254) && (rbsp <= 511) ##1 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (TotalZeros_G3 == 3)) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (rbsp == 120)) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 1) && (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalZeros_LE3 == 1) ##1 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##4 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320) ##4 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##4 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 320) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##3 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364) ##4 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (len_G3 == 0) ##1 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115) ##3 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 ena ##1 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##3 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##4 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326) ##4 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalZeros_G3 == 0) ##1 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 317) ##4 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505) ##4 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 2) ##3 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504) ##4 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256) ##4 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394) ##4 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115) ##4 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) (!ena ##2 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) ##1 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 314) && (rbsp <= 414) ##1 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 8) && (rbsp <= 127) ##2 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 4) ##3 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 8) && (rbsp <= 149) ##2 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##1 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 4) ##1 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) (ena ##1 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 7) ##1 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##1 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 6) ##4 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 331) && (rbsp_LE3 <= 339) ##4 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 115) ##1 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 373) && (rbsp_LE3 <= 394) ##4 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 193) ##4 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 221) ##1 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 17) ##4 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 17) ##1 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##3 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 221) && (rbsp_LE3 <= 238) ##1 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4)) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 221) ##4 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 240) && (rbsp_LE3 <= 256) ##4 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4)) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136)) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 256) && (rbsp_LE3 <= 288) ##1 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9)) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5)) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2)) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##1 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##4 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##1 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 414) && (rbsp <= 511) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##2 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##2 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 4) ##1 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 8) ##1 (len_LE3 == 4) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##2 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 (TotalCoeff == 11) ##1 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 (TotalZeros_comb == 4) ##1 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 (rbsp_G3 == 52) ##1 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##4 !chroma_DC_sel) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 sel ##1 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##4 !sel) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 (len_comb == 1) ##1 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 (TotalZeros_G3 == 4) ##1 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##4 (TotalZeros_G3 == 1)) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 (TotalZeros_LE3 == 1) ##1 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##4 (TotalZeros_LE3 == 1)) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 (len_G3 == 1) ##1 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##4 (len_LE3 == 3)) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##2 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (TotalCoeff == 11) ##3 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##1 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##2 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##4 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) && (rbsp == 86) ##4 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15) ##4 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7)) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (rbsp == 216) ##3 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##1 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288) ##1 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3)) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 (rbsp == 161) ##2 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115) ##1 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7)) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##1 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##4 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373) ##4 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##4 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 sel ##3 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##1 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 !chroma_DC_sel ##1 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394) ##4 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 4) && (len_LE3 == 4) ##4 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##3 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##4 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##4 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 240) ##4 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221) ##1 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##2 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##1 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 (len_LE3 == 3) ##2 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##3 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256) ##1 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##4 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##1 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7)) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0)) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394) ##1 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485) ##1 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (len_LE3 == 3) ##3 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339) ##4 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 chroma_DC_sel ##2 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 50) ##3 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328) ##1 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221) ##4 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5)) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 (TotalCoeff == 2) ##2 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##3 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17) ##1 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##4 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (TotalZeros_G3 == 4) ##3 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15) ##1 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##1 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 331) ##4 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (TotalZeros_LE3 == 1) ##3 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) && (len_LE3 == 4) ##4 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256) ##4 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 414) && (rbsp <= 511) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 415) && (rbsp <= 511)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##4 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##1 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 3) && (TotalCoeff <= 5) ##1 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##2 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##4 1) |-> (len_G3 >= 0) && (len_G3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##1 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 373) && (rbsp <= 511) ##1 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##4 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##4 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##4 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##1 (TotalZeros_LE3 == 9) ##2 1) |-> (TotalCoeff >= 8) && (TotalCoeff <= 15));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 100) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##4 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 326) && (rbsp <= 417) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 327) && (rbsp <= 417) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 419) && (rbsp <= 511) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 1)) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 419) && (rbsp <= 511) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 83) && (rbsp <= 162) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 83) && (rbsp <= 162) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 314) && (rbsp <= 414) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 419) && (rbsp <= 511) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 419) && (rbsp <= 511) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 419) && (rbsp <= 511) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 6) ##4 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 3) && (TotalZeros_LE3 <= 4) ##1 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 288) ##1 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##4 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 5) && (len_G3 <= 6) ##4 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4) ##4 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 4) && (TotalZeros_LE3 <= 7) ##1 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 3) ##4 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 328) ##4 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 328) ##2 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 3) ##1 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5) ##4 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 7) && (TotalZeros_LE3 <= 9) ##3 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##2 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 394) ##4 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##4 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##2 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17) ##2 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 238) && (rbsp_LE3 <= 256) ##2 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##1 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##4 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##2 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##1 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 5) && (TotalZeros_LE3 <= 7) ##1 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 193) ##2 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 52) ##4 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##3 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 115) ##3 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##4 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 2) && (TotalZeros_LE3 == 9) ##4 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##3 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##2 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 !ena ##3 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##4 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##1 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (rbsp == 136) ##3 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##4 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 chroma_DC_sel) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##2 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##4 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##4 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalCoeff == 4) ##3 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##4 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##2 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##3 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (TotalCoeff == 10)) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 52) ##4 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalZeros_G3 == 1) ##3 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 ena) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##3 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115) ##4 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485) ##4 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (len_G3 == 3) ##3 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##2 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##4 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##1 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalZeros_LE3 == 0) ##3 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##3 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##1 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##4 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (len_G3 == 2)) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (len_LE3 == 0) ##3 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##3 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##2 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##4 (TotalZeros_LE3 == 0)) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##2 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##3 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##3 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (rbsp == 143) ##2 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 !ena ##2 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (TotalCoeff == 5) ##1 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (len_comb == 1) ##1 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (TotalZeros_G3 == 1) ##2 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (TotalCoeff == 4) ##2 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (len_G3 == 3) ##1 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (len_G3 == 3) ##2 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 sel ##1 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (len_LE3 == 0) ##2 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (rbsp_chroma_DC == 4) ##1 1) |-> (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 340) && (rbsp <= 426)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 427) && (rbsp <= 511)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) ##2 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##3 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##3 !sel ##1 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 374) && (rbsp <= 511) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 87) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 87) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##2 (rbsp >= 254) && (rbsp <= 511) ##2 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 91) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##2 (len_LE3 >= 3) && (len_LE3 <= 5) ##2 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##2 (len_LE3 == 3) ##2 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##1 (len_G3 >= 0) && (len_G3 <= 1) ##3 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 428) && (rbsp <= 511) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##4 (len_LE3 == 3)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 82) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 82) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##2 (TotalCoeff >= 10) && (TotalCoeff <= 15) ##2 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##1 (rbsp >= 173) && (rbsp <= 341) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 1) && (TotalZeros_comb <= 2)) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##1 (rbsp >= 164) && (rbsp <= 328) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##1 (TotalZeros_comb == 11) ##1 1) |-> chroma_DC_sel);
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) ##1 (len_LE3 == 4) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 4) ##1 (len_LE3 == 4) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 7) ##1 (len_LE3 == 4) ##2 1) |-> (len_LE3 >= 0) && (len_LE3 <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 136) ##2 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##3 (TotalZeros_LE3 == 4)) |-> (len_LE3 == 3));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2) ##4 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 339) ##3 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 1)) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##3 !sel ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##3 !sel ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17) ##3 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 5) && (TotalZeros_LE3 <= 9) ##1 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 373) && (rbsp_LE3 <= 394)) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 373) && (rbsp_LE3 <= 394) ##3 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 254) && (rbsp <= 511) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp >= 0) && (rbsp <= 254));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##4 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 7) && (TotalZeros_LE3 <= 9) ##1 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5) ##1 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##3 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##3 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##1 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##2 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##2 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##4 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##2 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 15) ##3 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##3 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136) ##3 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##4 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##2 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 5) && (TotalZeros_LE3 <= 7) ##1 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##2 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##4 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##3 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##1 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 9) ##4 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##4 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0)) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 0)) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67)) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221)) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17)) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##3 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328)) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67) ##3 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394)) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##3 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0)) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373)) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339)) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##2 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##3 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##4 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 1) && (TotalZeros_LE3 == 9) ##3 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 15) ##3 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##3 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##2 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 314) && (rbsp <= 414) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##1 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (TotalCoeff == 9)) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##4 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##3 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##1 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##2 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##3 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##4 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##1 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##3 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (rbsp_chroma_DC == 7)) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##4 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##2 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 (len_G3 == 2)) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (TotalCoeff == 9) ##1 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (len_G3 == 2) ##1 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 ena ##2 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalZeros_LE3 == 1) ##2 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalCoeff == 3) ##2 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (len_LE3 == 3) ##2 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (TotalZeros_G3 == 0) ##2 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (len_LE3 == 1) ##1 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 (len_G3 == 0) ##2 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 ena ##1 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (TotalZeros_G3 == 3) ##1 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 (rbsp == 120) ##1 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 373) && (rbsp <= 511) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 254) && (rbsp <= 511) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 4) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 7) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 42) && (rbsp_G3 <= 54) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 1)) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 33) && (rbsp_G3 <= 51) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 1)) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3)) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##1 (TotalCoeff >= 11) && (TotalCoeff <= 15) ##3 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2)) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 26) && (rbsp_G3 <= 49) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3)) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2)) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3)) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 1)) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2)) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC == 5)) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 1)) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 2) && (len_comb <= 7) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 2) && (len_comb <= 7) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 2) && (len_comb <= 7) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 2) && (len_comb <= 7) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 2) && (len_comb <= 7) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 2) && (len_comb <= 7) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 2) && (len_comb <= 7) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##1 (len_G3 == 1) ##3 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 2) && (TotalZeros_comb <= 4) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 1)) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2)) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC == 4)) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 40)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC == 6)) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 1) && (TotalZeros_comb <= 2) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 40) ##4 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 1) && (rbsp_G3 <= 40)) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 40) ##4 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 1)) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 1) && (TotalZeros_comb <= 2) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 1) && (TotalZeros_comb <= 2) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 1) && (TotalZeros_comb <= 2) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 1) && (TotalZeros_comb <= 2) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##3 (len_LE3 == 1) ##1 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##3 (TotalCoeff >= 11) && (TotalCoeff <= 15) ##1 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 3)) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3)) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel ##1 (len_LE3 == 5) ##3 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2)) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##2 (rbsp >= 355) && (rbsp <= 511) ##2 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 8) ##3 !sel ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##1 (len_LE3 == 5) ##3 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 8) ##3 !sel ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 8) ##1 (len_LE3 == 5) ##3 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 9) ##1 (len_LE3 == 5) ##3 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 8) ##1 (len_LE3 == 5) ##3 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 1)) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 115) ##1 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##1 (len_LE3 == 5) ##3 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 136) ##2 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 115) ##4 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##1 (len_LE3 == 5) ##3 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2) ##4 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7) ##1 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7) ##2 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##1 (len_LE3 == 5) ##3 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 115) ##1 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 1) && (TotalZeros_comb <= 2) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##1 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##2 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17) ##1 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 9) ##3 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 5) && (TotalZeros_LE3 <= 9) ##1 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 3) ##2 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 373) && (rbsp_LE3 <= 394) ##4 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##2 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##1 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##3 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##4 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##2 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##3 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 7) && (TotalZeros_LE3 <= 9) ##1 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##2 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##4 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##1 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##2 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##4 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##3 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##1 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##3 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##4 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 5) && (TotalZeros_LE3 <= 7) ##1 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##4 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##1 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##3 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##3 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##1 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0)) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##2 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 0)) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##4 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##3 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6)) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 10)) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6)) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##1 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##4 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 2) && (len_LE3 == 5) ##3 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 52) ##3 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##2 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 (len_G3 == 3)) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##3 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##1 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 (TotalZeros_G3 == 3)) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##2 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 (len_comb == 1)) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 (len_chroma_DC == 1)) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##3 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 (TotalZeros_chroma_DC == 0)) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##2 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 (TotalCoeff == 5)) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##1 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##3 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##1 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##2 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##4 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##3 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 (len_LE3 == 0) ##2 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 !ena ##2 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 (TotalCoeff == 4) ##1 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 (TotalZeros_G3 == 1) ##2 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 (len_G3 == 3) ##1 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 !chroma_DC_sel ##2 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 (len_G3 == 3) ##2 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 (TotalZeros_LE3 == 0) ##1 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 (TotalCoeff == 4) ##2 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 !chroma_DC_sel ##1 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 (len_LE3 == 0) ##1 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) ##2 (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##2 (rbsp >= 381) && (rbsp <= 511) ##2 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 82) ##1 (len_LE3 == 5) ##3 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 91) ##1 (len_LE3 == 5) ##3 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 11) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 11) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 11) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 11) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 114) ##1 (len_LE3 == 5) ##3 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 11) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 11) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 11) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 1) && (rbsp_G3 <= 40)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 381) ##4 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##2 (TotalCoeff >= 10) && (TotalCoeff <= 12) ##2 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 26) ##1 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 1) && (rbsp_G3 <= 40)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 1) ##4 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 1) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 2) && (TotalZeros_comb <= 4) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 178) ##1 (len_LE3 == 5) ##3 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 1) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 1) ##4 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 0) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 0) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 1) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 1) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 1)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 1) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 2) && (TotalZeros_comb <= 4) ##2 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 380) ##4 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 26) && (rbsp_G3 <= 49)) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 193) && (rbsp <= 221) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 26) && (rbsp_G3 <= 49)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 24)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 24) ##4 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 1) && (rbsp_G3 <= 24)) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 24) ##4 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 3) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 0) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 0) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 40) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 40) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 40)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 378) ##4 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 40) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 40) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 1) && (rbsp_G3 <= 40)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 40) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 40) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 2) && (TotalZeros_comb <= 4) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 2) && (TotalZeros_comb <= 4) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 2) && (TotalZeros_comb <= 4) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 2) && (TotalZeros_comb <= 4) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 1)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel ##1 (len_LE3 == 5) ##3 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 2) ##2 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 2) ##4 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 2) ##4 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 2) ##2 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 24) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 6) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 6) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 1)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 6) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 6) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 40)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 40) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 3) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 34) && (rbsp_G3 <= 52)) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel ##1 (len_LE3 == 4) ##3 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 2) && (TotalZeros_comb <= 4) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 40) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 40) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 40) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 15) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 2) && (TotalZeros_comb <= 4) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 2) && (TotalZeros_comb <= 4) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 2) && (TotalZeros_comb <= 4) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 15) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 33) && (rbsp_G3 <= 51)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) (ena ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 5) && (TotalZeros_comb <= 11) ##2 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 5) && (TotalZeros_comb <= 11) ##4 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 5) && (TotalZeros_comb <= 11)) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 339)) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 5) && (TotalZeros_comb <= 11)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 5) && (TotalZeros_comb <= 11) ##4 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 5) && (TotalZeros_comb <= 11) ##3 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 5) && (TotalZeros_comb <= 11) ##2 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 2)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) (!sel ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 12) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 6) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 6) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 3) && (TotalZeros_comb <= 6) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 339) ##3 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 14) ##1 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 339)) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 0) && (rbsp_chroma_DC <= 3) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 5) && (TotalZeros_comb <= 11) ##3 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) (!sel ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 2)) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 339) ##3 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 3) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2) ##4 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 2) ##4 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 339)) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2) ##4 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC >= 1) && (TotalZeros_chroma_DC <= 2) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) (!ena ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 5) && (TotalZeros_comb <= 11) ##3 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 15) && (rbsp_G3 <= 33)) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 6) && (TotalZeros_comb <= 11) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 4) && (TotalZeros_comb <= 7) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 1) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 1) ##4 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 1) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 1) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 394) ##3 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 394)) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 1) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 1) ##4 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 1) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 1) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 4) && (len_comb <= 7) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 1) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 1)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 1) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 1) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) (!ena ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 16) && (rbsp_G3 <= 32) ##2 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 16) && (rbsp_G3 <= 32) ##4 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 4) && (len_comb <= 7) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 16) && (rbsp_G3 <= 32)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 16) && (rbsp_G3 <= 32) ##4 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 16) && (rbsp_G3 <= 32) ##2 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 16) && (rbsp_G3 <= 33) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 394)) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 394) ##3 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 0) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 14) && (rbsp_G3 <= 28) ##2 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 41) && (rbsp_G3 <= 54)) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 6) && (TotalZeros_comb <= 11) ##1 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 3) ##3 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2) ##4 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 2) ##1 (TotalZeros_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel ##1 (len_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 2) ##2 (TotalZeros_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 11) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 4) && (len_comb <= 7) ##1 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 4) && (len_G3 <= 6) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 394) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 394) ##2 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 0) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 394) ##3 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 394)) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 50) && (rbsp_G3 <= 57)) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 4) && (len_G3 <= 6) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 4) && (len_G3 <= 6) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 2) ##1 (TotalZeros_LE3 == 9) ##3 1) |-> (len_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 41) && (rbsp_G3 <= 54)) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 15) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 6) && (TotalZeros_comb <= 7) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 5) ##1 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 9) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 136) ##2 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) ##1 (TotalZeros_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##1 (TotalZeros_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 14) && (rbsp_G3 <= 28) ##2 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 15) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 6) && (TotalZeros_comb <= 11) ##3 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 13) ##3 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 3) ##3 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 115) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 115) ##1 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 339) ##3 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 339) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7) ##1 (len_LE3 == 4) ##3 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0) ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 15) && (rbsp_G3 <= 28) ##4 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 394) ##2 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 136) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 136) ##4 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 136) ##4 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 288) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##2 (TotalZeros_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 15) && (rbsp_G3 <= 28)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 42) && (rbsp_G3 <= 54)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 15) && (rbsp_G3 <= 28) ##4 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 15)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 14) && (rbsp_G3 <= 26) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 115) ##4 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 115) ##4 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 288) ##3 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 288) ##1 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 67) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 221) && (rbsp_LE3 <= 288) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) ##3 (TotalZeros_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 14) && (rbsp_G3 <= 28) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 14) && (rbsp_G3 <= 28) ##2 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 15) ##4 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 15) ##4 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 14) && (rbsp_G3 <= 26)) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 6) && (TotalZeros_comb <= 11) ##3 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 5) && (TotalZeros_comb <= 6) ##3 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 3) ##3 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 4) && (len_comb <= 7) ##2 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 394) ##3 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 394)) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 8) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 6) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 8) && (TotalZeros_comb <= 9) ##1 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 4) && (len_G3 <= 6) ##2 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 6) ##1 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 8) && (TotalZeros_comb <= 9) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2) ##3 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2) ##4 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 86) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 86) ##4 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 86) ##4 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##1 (len_LE3 == 5) ##3 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0) ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 2)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 2) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 26) && (rbsp_G3 <= 49)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 5) && (TotalZeros_comb <= 11) ##3 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 2) ##1 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 14)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 13) ##3 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 12) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7) ##1 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4) ##1 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7) ##2 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 136) ##2 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 256) ##1 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 256) ##3 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 86) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 86) ##2 (TotalZeros_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) ##1 (TotalZeros_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 93) ##2 (TotalZeros_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##1 (len_LE3 == 5) ##3 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 24) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 2) ##1 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 2) ##2 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 14) ##4 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 14) ##4 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 1) && (rbsp_G3 <= 14)) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 339) ##3 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 394) ##2 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 394) ##3 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2) ##4 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2)) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 136) ##2 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 136)) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2) ##3 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4) ##3 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4) ##2 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 115) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 5) && (len_G3 <= 6) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 5) && (len_G3 <= 6) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 5) && (len_G3 <= 6) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 17)) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 4) && (rbsp_G3 <= 6)) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 4) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 5) ##3 (TotalZeros_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 2) ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 1) && (rbsp_G3 <= 24)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 28) && (rbsp_G3 <= 50) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 1) && (rbsp_G3 <= 24) ##2 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 2) ##2 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 5) && (TotalZeros_comb <= 6) ##3 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 339)) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 9) ##4 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 9) ##2 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 115) ##1 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##2 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##1 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4) ##1 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 86) ##4 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 86) ##4 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 394) ##1 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17) ##2 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 394) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17) ##3 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 117) && (rbsp <= 238) ##1 (TotalZeros_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 89) && (rbsp <= 172) ##1 (TotalZeros_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 5) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 1) ##3 (TotalZeros_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 26) && (rbsp_G3 <= 49)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 2)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 2) ##4 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 28) && (rbsp_G3 <= 40)) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 13) ##3 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 1) && (rbsp_G3 <= 13)) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 4) && (len_comb <= 7) ##3 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 4) && (len_comb <= 7) ##2 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 394)) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 115) ##2 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 115) ##4 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 8) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 9) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 9) ##3 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 7) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 8) ##1 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 5) && (len_G3 <= 6) ##2 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4) ##2 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 5) && (len_G3 <= 6) ##1 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 5) && (TotalZeros_LE3 <= 9) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 9) ##1 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 4)) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 373) && (rbsp_LE3 <= 394)) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 256) && (rbsp_LE3 <= 288)) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 373) && (rbsp_LE3 <= 394)) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 373) && (rbsp_LE3 <= 394) ##3 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 326) && (rbsp_LE3 <= 328)) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 3) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 8) ##1 (len_LE3 == 5) ##3 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 24) ##1 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 339) ##1 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 339)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 339) ##1 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 11) ##3 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 394) ##3 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 394) ##2 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 136) ##3 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##4 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##4 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##2 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##2 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136) ##3 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##2 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 193) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##3 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 7) && (TotalZeros_LE3 <= 9) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##4 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##3 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5) ##1 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##4 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##1 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##4 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5) ##2 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##4 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 52) && (rbsp_LE3 <= 67) ##3 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 17) ##4 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##4 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 17) ##4 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 2) ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 4) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) ##3 (TotalZeros_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 4) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 8) ##1 (len_LE3 == 5) ##3 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##1 (len_LE3 == 5) ##3 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 1) && (rbsp_G3 <= 24)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 28) && (rbsp_G3 <= 50) ##3 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 339)) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 5) && (TotalZeros_comb <= 6) ##4 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 30) && (rbsp_G3 <= 41) ##4 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2)) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2) ##4 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 136) ##2 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2) ##3 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 136)) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 288) ##1 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 288) ##3 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 86) ##2 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 288)) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##4 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##4 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##4 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136) ##4 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##4 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##3 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##1 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##4 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##1 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##2 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##4 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 5) && (TotalZeros_LE3 <= 7) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##4 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136) ##4 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 397) && (rbsp <= 511) ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 511) ##3 (TotalZeros_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 253) && (rbsp <= 511) ##3 (TotalZeros_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 254) ##1 (TotalZeros_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505)) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##3 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373)) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##4 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 4) ##3 (TotalZeros_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 95) && (rbsp <= 190) ##1 (TotalZeros_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 0)) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0)) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0)) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6)) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6)) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221)) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67)) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 5) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 288)) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 17)) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 326)) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##3 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##2 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##2 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##1 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394)) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 328)) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 6)) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 397) && (rbsp <= 511) ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 339)) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 0)) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 == 10)) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##4 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256)) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 5) && (TotalZeros_comb <= 6) ##4 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 331) ##4 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 30) && (rbsp_G3 <= 41)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 331) ##4 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 30) && (rbsp_G3 <= 41) ##4 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 394) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 4) && (len_comb <= 7) ##3 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 4) && (len_comb <= 7) ##2 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 9) ##2 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 9) ##3 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 9) ##4 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 9) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 7) && (TotalZeros_G3 <= 11) ##1 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 7) && (TotalZeros_G3 <= 11) ##4 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 394)) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 115) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 115) ##3 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 67) ##3 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##3 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##2 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##4 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##4 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##2 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##1 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##3 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 1) && (TotalZeros_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##4 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 (TotalZeros_comb == 0)) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##1 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##3 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 2) && (len_LE3 == 5) ##3 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##4 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##1 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##2 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 (TotalCoeff == 5)) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 (rbsp_G3 == 63)) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##1 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##4 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##2 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 (len_chroma_DC == 1)) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##4 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##4 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##3 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 (TotalZeros_chroma_DC == 0)) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##4 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 52) ##3 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##1 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##2 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##3 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 9) ##1 (len_LE3 == 5) ##3 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 (len_G3 == 3)) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 4) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 (TotalZeros_G3 == 3)) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 11) ##3 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 5) ##3 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 136) ##3 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 115) ##4 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7) ##3 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7) ##2 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 115) ##2 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 115) ##4 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 256) ##1 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 256) ##4 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 221) && (rbsp_LE3 <= 288) ##3 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 (TotalCoeff == 4) ##1 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##1 (TotalZeros_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 (TotalCoeff == 4) ##2 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 !chroma_DC_sel ##2 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 (len_LE3 == 0) ##2 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 428) && (rbsp <= 511) ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 11) && (TotalCoeff <= 15) ##1 (TotalZeros_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 10) && (TotalCoeff <= 15) ##1 (TotalZeros_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 397) && (rbsp <= 511) ##3 (TotalZeros_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 (len_G3 == 3) ##1 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 (len_G3 == 3) ##2 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 (len_LE3 == 0) ##1 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 !chroma_DC_sel ##1 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 (TotalZeros_G3 == 1) ##2 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 (TotalZeros_LE3 == 0) ##1 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 !ena ##2 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 3) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2)) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2) ##4 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2) ##3 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 136) ##2 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 136)) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4) ##1 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) (!sel ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) (sel ##1 (len_LE3 == 5) ##3 1) |-> (TotalZeros_comb == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 176) ##1 (TotalZeros_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 382) && (rbsp <= 511) ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 382) && (rbsp <= 511) ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 7) ##3 (TotalZeros_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 3) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 3) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 3) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 6) && (TotalZeros_comb <= 11) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 9) ##4 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 9) ##3 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 9) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 9) ##2 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 115) ##3 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 115) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##3 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4) ##2 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 86) ##2 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 288)) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 288) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 3) ##3 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 86) ##2 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##2 (TotalZeros_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 384) && (rbsp <= 511) ##3 (TotalZeros_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##3 (TotalZeros_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 381) && (rbsp <= 511) ##3 (TotalZeros_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 8) ##1 (len_LE3 == 4) ##3 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 11) && (TotalCoeff <= 15) ##3 (TotalZeros_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 3) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 3) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 3) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC == 5)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 5) ##3 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 7) && (TotalZeros_G3 <= 11) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 7) && (TotalZeros_G3 <= 11) ##4 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 7) && (TotalZeros_G3 <= 11) ##2 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 115) ##4 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 115) ##2 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 67) ##3 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##3 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##2 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##1 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 10) && (TotalCoeff <= 15) ##3 (TotalZeros_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 312) && (rbsp <= 410) ##3 (TotalZeros_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 428) && (rbsp <= 511) ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 8) ##1 (len_LE3 == 4) ##3 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##3 (TotalZeros_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 326) && (rbsp <= 417) ##3 (TotalZeros_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 350) && (rbsp <= 511) ##3 (TotalZeros_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 1) && (len_G3 <= 6) ##3 (TotalZeros_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 8) && (TotalZeros_comb <= 9) ##3 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7) ##2 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7) ##3 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 256) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 256) ##4 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 115) ##4 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 256) ##3 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##2 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##3 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##2 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##3 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##1 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##4 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2)) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##2 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7)) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##4 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##3 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 394) ##1 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##4 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3)) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 193) ##3 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 511) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 9) ##1 (len_LE3 == 4) ##3 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 26) && (rbsp_G3 <= 49) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 26) && (rbsp_G3 <= 49)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 26) && (rbsp_G3 <= 49) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 34) && (rbsp_G3 <= 52)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 32) && (rbsp_G3 <= 51) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 394)) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 394) ##4 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 394) ##3 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 4) && (len_comb <= 7) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 7) && (TotalZeros_G3 <= 9) ##4 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 86) ##2 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 288)) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##3 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 288) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 91) ##1 (len_LE3 == 5) ##3 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) (!ena ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 114) ##1 (len_LE3 == 5) ##3 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 3) && (TotalCoeff <= 5) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 26) && (rbsp_G3 <= 49) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 24)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 24) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 26) && (rbsp_G3 <= 49)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 26) && (rbsp_G3 <= 49) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 24) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 7) && (TotalZeros_G3 <= 11) ##4 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 6) ##3 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 67) ##3 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4) ##3 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4) ##2 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 86) ##2 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 86) ##3 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##4 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4)) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 17) ##4 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136) ##2 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5)) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##4 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 511) ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 17) ##2 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 511) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 1) && (rbsp_G3 <= 24)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 24) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 24) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 24) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 24) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 33) && (rbsp_G3 <= 51) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 16) && (rbsp_G3 <= 32) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 8) && (TotalZeros_comb <= 9) ##3 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7) ##2 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7) ##3 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 7) && (TotalZeros_G3 <= 8) ##4 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 256) ##4 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 115) ##4 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##2 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##3 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 256) ##3 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 256) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##3 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##4 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##2 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 82) ##1 (len_LE3 == 5) ##3 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 (TotalZeros_comb == 0)) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 (len_G3 == 2)) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 10) ##2 (TotalZeros_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 (TotalZeros_G3 == 3)) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 (TotalCoeff == 10)) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 (TotalZeros_LE3 == 0)) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 32) && (rbsp_G3 <= 51) ##2 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 34) && (rbsp_G3 <= 52)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 3) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 394)) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 394) ##1 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2) ##4 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2)) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 9) ##3 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3)) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##3 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 394) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##4 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 67) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##2 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##3 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2)) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##3 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##2 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##4 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##2 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7)) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136) ##3 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##4 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##2 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##4 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##2 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 !chroma_DC_sel ##1 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 115) ##3 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##4 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (TotalCoeff == 12) ##2 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (TotalZeros_G3 == 3) ##2 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 3) && (TotalCoeff <= 5) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##1 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##3 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (len_LE3 == 0) ##2 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 (TotalCoeff == 1) ##1 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (TotalZeros_LE3 == 0) ##2 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 !sel ##2 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 3) && (TotalCoeff <= 5) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3)) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 (len_LE3 == 1) ##1 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##4 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##2 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##2 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##1 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##3 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7)) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115) ##3 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##4 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##3 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 394) ##1 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 394)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 394) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 394) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 6) ##3 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 4) && (len_G3 <= 5) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 4) && (len_G3 <= 6) ##2 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4) ##2 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4) ##3 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 86) ##3 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 86) ##2 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 7) ##3 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17) ##3 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 (TotalZeros_comb == 0)) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 (rbsp >= 49) && (rbsp <= 141)) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 (len_LE3 >= 0) && (len_LE3 <= 1)) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 3)) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 (len_G3 >= 0) && (len_G3 <= 2)) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 (TotalCoeff >= 0) && (TotalCoeff <= 9)) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 511) ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 (TotalZeros_LE3 == 0)) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##2 (TotalZeros_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 186) && (rbsp <= 251) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##3 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##1 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##2 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##4 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##3 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##3 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 33) && (rbsp_G3 <= 51) ##3 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 14) && (rbsp_G3 <= 28) ##2 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 4) && (len_G3 <= 6) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##3 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##2 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 8) ##3 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 8) ##4 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##4 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4)) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136) ##2 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136) ##3 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5)) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##4 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 17) ##2 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 17) ##4 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 3) && (TotalCoeff <= 5) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 3) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 3) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 3) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 3) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 4) && (TotalZeros_comb <= 5)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 4) && (TotalZeros_comb <= 5) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC == 4)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 4) && (len_comb <= 7) ##4 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 136) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 9) ##3 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##3 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##3 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##3 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7)) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##2 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 394) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##2 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##4 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##4 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##4 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 7) ##4 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3)) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2)) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 67) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##2 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136) ##3 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##4 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##3 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##2 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 (TotalCoeff == 9)) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 212) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 (TotalZeros_G3 == 3)) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 (len_G3 == 2)) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 (TotalZeros_G3 == 0)) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 3) ##1 (len_LE3 == 4) ##3 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 (len_LE3 == 1)) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 (len_LE3 == 0)) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 4) && (TotalZeros_comb <= 5) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 4) && (TotalZeros_comb <= 5)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 4) && (len_comb <= 7) ##4 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 9) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 7) ##3 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17) ##3 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 346) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 9) ##4 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 (rbsp >= 49) && (rbsp <= 141)) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 11) ##4 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 (TotalZeros_comb == 0)) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 (TotalCoeff >= 0) && (TotalCoeff <= 9)) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##2 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##3 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##4 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 (TotalZeros_LE3 == 0)) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 (len_G3 >= 0) && (len_G3 <= 2)) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 (len_LE3 >= 0) && (len_LE3 <= 1)) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 3)) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 178) ##1 (len_LE3 == 5) ##3 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##2 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3)) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 186) && (rbsp <= 251) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 2) && (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##4 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 168) && (rbsp <= 209) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) && (len_LE3 == 3) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0) ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7)) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##4 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##3 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 126) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11) ##1 (TotalZeros_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##2 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 172) && (rbsp <= 254) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##3 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7)) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##3 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) && (len_comb == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##2 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 252) && (rbsp <= 381) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##4 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 2) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 2) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 5) && (TotalZeros_comb <= 11) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 5) && (TotalZeros_comb <= 11) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 221) && (rbsp <= 238) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 7) && (TotalZeros_G3 <= 11) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 7) && (TotalZeros_G3 <= 11) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 136) ##4 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 115) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 8) ##3 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 5) && (len_G3 <= 6) ##2 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4) ##2 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 17) ##4 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4)) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##4 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5)) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136) ##2 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 17) ##2 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136) ##3 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##4 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11) ##3 (TotalZeros_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##3 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 339) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##3 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 121) ##1 (len_LE3 == 4) ##3 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##3 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 9) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 114) ##1 (len_LE3 == 4) ##3 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##2 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##4 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 26) && (rbsp_G3 <= 49) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 2)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 2) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 26) && (rbsp_G3 <= 49) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 24)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 26) && (rbsp_G3 <= 49) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 26) && (rbsp_G3 <= 49)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 2) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 2) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 24) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 2) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 2) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 13) ##3 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 9) ##2 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 9) ##4 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 5) ##4 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 288) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5) ##2 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##4 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##3 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##2 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 (TotalCoeff == 9)) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 10) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##1 (len_LE3 == 5) ##3 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 (TotalZeros_G3 == 0)) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 212) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 (len_LE3 == 1)) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##1 (len_LE3 == 4) ##3 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 102) ##1 (len_LE3 == 4) ##3 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 (len_LE3 == 0)) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 (len_G3 == 2)) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 (TotalZeros_G3 == 3)) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 24) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 24) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 24) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 1) && (rbsp_G3 <= 13) ##2 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 9) ##2 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 5) ##4 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 9) ##4 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC == 6)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 394) ##3 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 394) ##2 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 7) && (TotalZeros_G3 <= 9) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 115) ##4 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 67) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 221) && (rbsp_LE3 <= 288) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##4 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 346) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##3 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##2 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 172) && (rbsp <= 254) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##3 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 7) ##1 (len_LE3 == 4) ##3 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) ##1 (len_LE3 == 4) ##3 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3)) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##4 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 168) && (rbsp <= 209) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##4 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##3 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) && (len_comb == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 126) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##2 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##2 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##4 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7)) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7)) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 2) && (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 4) ##1 (len_LE3 == 4) ##3 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) && (len_LE3 == 3) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 7) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##3 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##2 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 4) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 5) && (TotalZeros_comb <= 11) ##4 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 5) && (TotalZeros_comb <= 11) ##1 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 7) && (TotalZeros_G3 <= 11) ##3 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 6) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 136) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 86) ##4 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 206) && (rbsp <= 305) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 511) ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##2 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 382) && (rbsp <= 511) ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 340) ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 2) ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##4 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##3 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##2 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##3 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 252) && (rbsp <= 381) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 9) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 339) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##3 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 34) && (rbsp_G3 <= 52)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 15) && (rbsp_G3 <= 33)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 4) && (len_comb <= 7) ##3 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 4) && (len_comb <= 7) ##2 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 7) && (TotalZeros_G3 <= 11) ##3 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 394) ##4 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 394)) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 7) && (TotalZeros_G3 <= 8) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 287) && (rbsp <= 396) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 128) && (rbsp <= 251) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 160) && (rbsp <= 239) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 394) ##1 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 394) ##2 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 136) ##3 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 136) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 5) && (len_G3 <= 6) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 5) && (len_G3 <= 6) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 5) && (len_G3 <= 6) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2)) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##4 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 0) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 397) && (rbsp <= 511) ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 9) && (TotalCoeff <= 12) ##3 (TotalZeros_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 511) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 10) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 33) && (rbsp_G3 <= 51) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 193) ##2 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 394) ##1 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 394) ##2 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 394)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 193) ##2 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2) ##4 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 136) ##2 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 136)) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2) ##3 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2)) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 86) ##4 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 394) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##4 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 206) && (rbsp <= 305) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 4) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##1 (len_LE3 == 4) ##3 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 252) && (rbsp <= 381) ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 7) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##1 (len_LE3 == 4) ##3 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 4) && (TotalZeros_comb <= 5)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 33) && (rbsp_G3 <= 51) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 33) && (rbsp_G3 <= 51)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 15) && (rbsp_G3 <= 33)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 9) ##2 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 9) ##4 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 9) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 394) ##3 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 7) && (TotalZeros_G3 <= 9) ##3 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 394)) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 115) ##3 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 115) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 5) && (TotalZeros_LE3 <= 9) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 3) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 8) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 193) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2)) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 287) && (rbsp <= 396) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 4) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 5) && (TotalZeros_comb <= 11)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 5) && (TotalZeros_comb <= 11) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 5) && (TotalZeros_comb <= 11) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 5) && (TotalZeros_comb <= 11) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 16) && (rbsp_G3 <= 32) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 7) && (TotalZeros_G3 <= 9) ##3 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 136) ##4 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 136)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 394) ##3 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 136) ##1 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 136) ##4 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 136) ##1 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 339) ##4 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 115) ##2 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 115) ##4 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 7) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 7) && (TotalZeros_LE3 <= 9) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##4 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##4 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 0) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136) ##4 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 17) ##4 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 160) && (rbsp <= 239) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 116) && (rbsp <= 239) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 5) && (TotalZeros_comb <= 11) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 5) && (TotalZeros_comb <= 11) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 5) && (TotalZeros_comb <= 11) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 5) && (TotalZeros_comb <= 11)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 136)) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 6) ##4 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 8) ##4 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 11) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##4 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##4 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 5) && (TotalZeros_LE3 <= 7) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 9) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##4 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 340) ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##4 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 4) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136)) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##1 (len_LE3 == 4) ##3 1) |-> (rbsp_G3 >= 55) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0)) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 67)) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6)) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 428) && (rbsp <= 511) ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) ##1 (len_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 5) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 115) ##4 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 8) ##4 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 115) ##2 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 115)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 115) ##1 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 115) ##4 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 6) ##4 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 115) ##1 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 115) ##2 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 288) ##4 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 86) ##2 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##3 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 288)) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC == 7) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 (rbsp_G3 == 63)) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 (TotalZeros_G3 == 3)) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##4 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##4 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 128) && (rbsp <= 251) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 (TotalCoeff == 10)) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 3) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 115) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##4 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 (len_G3 == 2)) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 (TotalZeros_LE3 == 0)) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 16) && (rbsp_G3 <= 32) ##1 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 7) && (TotalZeros_G3 <= 11) ##3 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 7) && (TotalZeros_G3 <= 11) ##4 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7) ##4 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7) ##1 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4)) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7) ##2 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7)) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 339) ##3 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 7) && (TotalZeros_G3 <= 8) ##3 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 67) ##3 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 (len_LE3 == 1) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (len_LE3 == 0) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (TotalZeros_G3 == 3) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 (TotalCoeff == 1) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 !sel ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (TotalCoeff == 12) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 !chroma_DC_sel ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 4) ##1 (len_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 (TotalZeros_LE3 == 0) ##2 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 4) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7) ##3 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 339) ##3 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7) ##2 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7) ##2 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7) ##4 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7) ##1 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 7) && (TotalZeros_G3 <= 8) ##3 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4) ##4 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 256) ##4 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 115) ##4 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 256) ##3 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 114) ##1 (len_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 252) && (rbsp <= 381) ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 253) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 254) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4) ##4 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##1 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 288)) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##4 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC == 7) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 121) ##1 (len_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 8) ##1 (len_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 102) ##1 (len_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 0) && (TotalCoeff <= 7) ##1 (len_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 8) ##1 (len_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 287) && (rbsp <= 396) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11) ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 41) && (rbsp_G3 <= 54) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 41) && (rbsp_G3 <= 54)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 4) && (len_G3 <= 6) ##2 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 4) && (len_G3 <= 5) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 67) ##4 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##4 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 67) ##1 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 67) ##1 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 67)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4) ##2 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##1 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 67) ##4 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4) ##3 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 86) ##3 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 86) ##4 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 86) ##2 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 116) && (rbsp <= 239) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 252) && (rbsp <= 381) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 11) && (TotalCoeff <= 15) ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 7) ##1 (len_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 33) && (rbsp_G3 <= 51)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 33) && (rbsp_G3 <= 51) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 33) && (rbsp_G3 <= 51) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 33) && (rbsp_G3 <= 51) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 256) ##4 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##2 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##1 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##3 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 256) ##1 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5)) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##2 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##4 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 10) && (TotalCoeff <= 15) ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 9) ##1 (len_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 15) && (rbsp_G3 <= 33)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##2 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##1 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##4 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 256)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 256) ##4 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 256) ##1 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136) ##3 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 67) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##3 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##3 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3)) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##4 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 394) ##4 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2)) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7)) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##2 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##3 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##2 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##2 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##4 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##4 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 3) && (TotalCoeff <= 5) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 3) && (TotalCoeff <= 5) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 5) && (TotalZeros_comb <= 11) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 5) && (TotalZeros_comb <= 11) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 5) && (TotalZeros_comb <= 11) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 5) && (TotalZeros_comb <= 11)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 41) && (rbsp_G3 <= 54) ##3 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 41) && (rbsp_G3 <= 54)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 15) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2) ##4 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2) ##2 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 86) ##3 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 8) ##3 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 3) ##3 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 9) ##4 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 5) && (TotalZeros_LE3 <= 9) ##2 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 3) ##2 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 7) ##4 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 86) ##1 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 86) ##4 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 8) ##4 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17) ##3 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 (rbsp >= 49) && (rbsp <= 141)) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 3)) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 (TotalZeros_comb == 0)) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 (len_LE3 >= 0) && (len_LE3 <= 1)) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 (TotalZeros_LE3 == 0)) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 (TotalCoeff >= 0) && (TotalCoeff <= 9)) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 (len_G3 >= 0) && (len_G3 <= 2)) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 11) && (TotalCoeff <= 15) ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11) ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 15) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 15) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 14) && (rbsp_G3 <= 26)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2) ##2 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2) ##4 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4) ##2 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 9) ##4 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 5) && (len_G3 <= 6) ##2 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 5) && (TotalZeros_LE3 <= 9) ##2 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 7) ##4 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 8) ##4 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 8) ##3 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 3) ##3 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 86) ##1 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 86) ##4 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 86)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 3) ##2 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 86) ##3 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##4 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136) ##2 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5)) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##4 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4)) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 17) ##2 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 17) ##4 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136) ##3 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 9) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 254) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##1 (len_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 10) && (TotalCoeff <= 15) ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 253) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 2) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 2) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 7) ##3 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136) ##3 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##4 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##1 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5) ##2 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136) ##1 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 394) ##3 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7)) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##2 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136) ##4 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 7) && (TotalZeros_LE3 <= 9) ##2 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##3 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##2 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##4 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 (TotalCoeff == 9)) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 (TotalZeros_G3 == 0)) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 186) && (rbsp <= 251) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 (TotalZeros_G3 == 3)) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 (len_G3 == 2)) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##1 (len_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 (len_LE3 == 1)) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 (len_LE3 == 0)) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 16) && (rbsp_G3 <= 32) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 16) && (rbsp_G3 <= 32) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 16) && (rbsp_G3 <= 32) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 15) ##1 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 14) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 1) && (rbsp_G3 <= 14)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##1 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17) ##3 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 7) && (TotalZeros_LE3 <= 9) ##2 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 394) ##3 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17) ##3 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17) ##1 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136) ##4 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17) ##1 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17) ##4 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##2 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##4 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136) ##1 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136) ##3 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 7) ##3 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17) ##4 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##4 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##2 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 10) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7)) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) && (len_LE3 == 3) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) && (len_comb == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##3 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##4 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 2) && (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##3 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 126) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##4 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##2 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##4 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 115) ##4 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##2 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##3 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7)) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##2 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3)) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 16) && (rbsp_G3 <= 32) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 16) && (rbsp_G3 <= 32)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 16) && (rbsp_G3 <= 32) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 16) && (rbsp_G3 <= 32) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 15) ##3 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 15) ##4 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 14) && (rbsp_G3 <= 26)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 9) ##3 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##3 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 52) && (rbsp_LE3 <= 67) ##3 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4)) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 346) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##1 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136) ##1 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##2 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##1 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##4 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 11) ##3 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136) ##4 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7)) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##4 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##3 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##2 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##4 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5)) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##4 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##3 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##1 (len_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##2 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##3 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##2 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##3 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##4 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 212) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 4)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 4) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 2) ##3 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 2) ##4 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 28) && (rbsp_G3 <= 40)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 1) && (rbsp_G3 <= 13)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##4 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##3 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##2 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##1 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##2 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##3 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##2 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 52) && (rbsp_LE3 <= 67) ##3 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136) ##1 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##3 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##2 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##2 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##2 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##4 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##4 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##4 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##1 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##1 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##4 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136) ##4 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##3 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 9) ##3 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 11) ##3 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (rbsp_chroma_DC == 7) ##1 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 7) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (TotalZeros_comb == 0) ##1 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 252) && (rbsp <= 381) ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 3) ##1 (len_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 !ena ##1 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (TotalCoeff == 11)) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (len_comb == 0) ##1 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (TotalZeros_G3 == 4)) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (len_LE3 == 3) ##1 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 3) && (len_LE3 <= 4) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 3) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (len_G3 == 0) ##1 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (TotalCoeff == 2) ##1 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 339) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (TotalZeros_G3 == 0) ##1 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (TotalZeros_chroma_DC == 0) ##1 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 4) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 4)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 14) ##3 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 1) && (rbsp_G3 <= 14)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 6) && (TotalZeros_comb <= 11) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##2 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##1 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##2 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##3 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##4 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##3 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##4 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (TotalCoeff == 11)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##3 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 !ena ##2 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 1) && (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##2 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##2 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 (rbsp_G3 == 63) ##2 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (TotalZeros_chroma_DC == 0) ##1 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (TotalZeros_comb == 0) ##1 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 !ena ##1 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##1 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (TotalZeros_G3 == 0) ##1 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (len_G3 == 0) ##1 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##3 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##2 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##2 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7)) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (len_comb == 0) ##1 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##1 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 (TotalZeros_comb == 0) ##2 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##1 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6)) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##2 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##3 (TotalZeros_G3 == 4)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##3 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) && (len_comb == 4) ##3 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##3 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##4 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 (len_comb == 0) ##2 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (len_LE3 == 3) ##1 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##4 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 172) && (rbsp <= 254) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 168) && (rbsp <= 209) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (TotalCoeff == 2) ##1 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7)) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##2 (rbsp_chroma_DC == 7) ##1 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 206) && (rbsp <= 305) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 0) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##4 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##3 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##3 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) && (len_comb == 4) ##3 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##3 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##3 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 1) && (TotalZeros_LE3 == 4) ##3 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##2 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##2 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##1 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 (len_comb == 0) ##2 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##2 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##4 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##4 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##1 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##1 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##4 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##2 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##3 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##4 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 !ena ##2 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##4 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##1 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##2 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 (rbsp_G3 == 63) ##2 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##2 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6)) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##3 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##3 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 5) ##2 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 86) ##3 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##1 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##1 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##2 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##3 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##1 (TotalZeros_comb == 0) ##2 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##1 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##2 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##2 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##1 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##4 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 28) && (rbsp_G3 <= 40)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 1) && (rbsp_G3 <= 13)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##4 (TotalCoeff == 3)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##1 (len_LE3 == 4) ##3 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##2 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##1 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##3 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 2) ##2 !sel ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 41) && (rbsp_G3 <= 54)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 6) && (TotalZeros_comb <= 11) ##1 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 30) && (rbsp_G3 <= 40) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 160) && (rbsp <= 239) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 10) && (TotalCoeff <= 15) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 256) && (rbsp <= 340) ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 2) ##2 !sel ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_chroma_DC == 7) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 10) && (TotalCoeff <= 15) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 15) && (rbsp_G3 <= 28) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 15) && (rbsp_G3 <= 28) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 42) && (rbsp_G3 <= 54) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 15) && (rbsp_G3 <= 28) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##1 (TotalZeros_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 16) && (rbsp_G3 <= 32)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 16) && (rbsp_G3 <= 32) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 16) && (rbsp_G3 <= 32) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 16) && (rbsp_G3 <= 32) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 16) && (rbsp_G3 <= 32) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 15) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 15) && (rbsp_G3 <= 28) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 15) && (rbsp_G3 <= 28) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 42) && (rbsp_G3 <= 54) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 15) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 15)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 15) && (rbsp_G3 <= 28) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 15) && (rbsp_G3 <= 28)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 42) && (rbsp_G3 <= 54)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 30) && (rbsp_G3 <= 40) ##3 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 11) && (TotalCoeff <= 15) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 15) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 15) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 15) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 14) && (rbsp_G3 <= 26)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 15) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 11) && (TotalCoeff <= 15) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 1) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 4)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 2) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 14) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 14) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 14)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 2) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 14) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 6) && (TotalZeros_comb <= 11)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 1) && (rbsp_G3 <= 14)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 14) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 14) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 14) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 6) && (TotalZeros_comb <= 11) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 11) ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 128) && (rbsp <= 251) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 6) && (TotalZeros_comb <= 11) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 6) && (TotalZeros_comb <= 11)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) (ena ##2 (TotalZeros_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 116) && (rbsp <= 239) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 1) && (rbsp_G3 <= 13)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 28) && (rbsp_G3 <= 40)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 28) && (rbsp_G3 <= 40) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 339) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 339)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 339) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 339) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 28) && (rbsp_G3 <= 40) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 339) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 339) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 339) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) (sel ##1 (len_LE3 == 5) ##3 1) |-> (len_comb >= 0) && (len_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 5) && (TotalZeros_comb <= 6)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 30) && (rbsp_G3 <= 41) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 30) && (rbsp_G3 <= 41) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 5) && (TotalZeros_comb <= 6) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 30) && (rbsp_G3 <= 41) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 339)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 3) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 3) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) (sel ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 15) && (rbsp_G3 <= 28) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 15) && (rbsp_G3 <= 28) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 15) && (rbsp_G3 <= 28) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 15) && (rbsp_G3 <= 28)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 15)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 42) && (rbsp_G3 <= 54) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 42) && (rbsp_G3 <= 54) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 15) && (rbsp_G3 <= 28) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 15) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 42) && (rbsp_G3 <= 54)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 42) && (rbsp_G3 <= 54) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 5) && (TotalZeros_comb <= 6)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 30) && (rbsp_G3 <= 41)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 30) && (rbsp_G3 <= 41) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 30) && (rbsp_G3 <= 41) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 5) && (TotalZeros_comb <= 6) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 30) && (rbsp_G3 <= 41) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) (sel ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 11) && (TotalCoeff <= 15) ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 15) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 15) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 15) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 3) ##2 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 3) ##1 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 2) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 2) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 14) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 14)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 10) && (TotalCoeff <= 15) ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 14) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 14) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 0) && (rbsp_G3 <= 14) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 95) && (rbsp <= 190) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 6) && (TotalZeros_comb <= 11)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 4) && (len_comb <= 7) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##4 (len_comb == 3)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 8) && (TotalCoeff <= 15) ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 95) && (rbsp <= 190) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 4) && (len_comb <= 7) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 4) && (len_comb <= 7) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 4) && (len_comb <= 7) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 253) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 254) ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 339) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 339)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 339) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 339) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 339) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 339) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 339) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 9) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 9) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) (sel ##3 (TotalZeros_LE3 == 4) ##1 1) |-> (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 4) && (len_comb <= 7) ##1 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 117) && (rbsp <= 238) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 30) && (rbsp_G3 <= 41)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 30) && (rbsp_G3 <= 41) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 30) && (rbsp_G3 <= 41) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 30) && (rbsp_G3 <= 41) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 5) && (TotalZeros_comb <= 6)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_G3 >= 30) && (rbsp_G3 <= 41) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 4) && (len_comb <= 7) ##4 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 4) && (len_comb <= 7) ##2 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 4) && (len_comb <= 7) ##3 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 89) && (rbsp <= 172) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) (ena ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 117) && (rbsp <= 238) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) (ena ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 339) ##3 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 339) ##1 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 339) ##2 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 394) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 394)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 394) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 394) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 394) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 9) ##3 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 9) ##4 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 4) && (len_G3 <= 6) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 176) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 176) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 89) && (rbsp <= 172) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 394) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 394) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 394) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 394)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 394) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 4) && (len_G3 <= 6) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 4) && (len_G3 <= 6) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 4) && (len_G3 <= 6) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) (sel ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 11) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 11)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 11) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 4) && (len_comb <= 7) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 394) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 394) ##2 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 394) ##1 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 394) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 11) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 4) && (len_comb <= 7) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 11)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 11) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 4) && (len_comb <= 7) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 4) && (len_comb <= 7) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 4) && (len_G3 <= 6) ##1 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 4) && (len_comb <= 7) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 4) && (len_comb <= 7) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 4) && (len_G3 <= 6) ##4 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 4) && (len_G3 <= 6) ##2 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 52) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2) ##2 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2) ##1 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2) ##4 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2) ##3 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##1 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 50) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 9) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 6) && (TotalZeros_comb <= 7)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 9)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 5)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 9) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 5) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 9) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 9) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 9) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 6) && (TotalZeros_comb <= 7)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 9) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 5) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 5)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 9)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 394) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 394) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 394) ##4 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 394) ##2 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 394) ##1 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 394) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 193) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) (ena ##3 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 394) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 394) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 394) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 394)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 394) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 136) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 136) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 136) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4) ##1 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 254) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (rbsp_chroma_DC >= 4) && (rbsp_chroma_DC <= 7));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 254) ##1 (TotalZeros_LE3 == 4) ##3 1) |-> (TotalZeros_chroma_DC == 0));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 394) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 394) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 394) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 115) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 115) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 115) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 115) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7) ##2 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7) ##1 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7) ##4 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7) ##3 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4) ##2 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4) ##4 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4) ##3 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 5) && (len_G3 <= 6) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 5) && (len_G3 <= 6) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 5) && (len_G3 <= 6) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 5) && (len_G3 <= 6)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 5) && (len_G3 <= 6) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel ##3 (TotalZeros_LE3 == 3)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##1 (TotalCoeff >= 7) && (TotalCoeff <= 15) ##3 (TotalZeros_LE3 == 3)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 4) && (len_comb <= 7) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 11)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 394) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 193) ##4 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 394) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 394) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 394)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4) ##1 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 7) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 136) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##4 (TotalZeros_LE3 == 3)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 4) && (len_comb <= 7) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 4) && (len_comb <= 7) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 4) && (len_comb <= 7) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 136) ##1 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 394)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 136) ##2 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 136) ##3 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 394) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 67) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 67) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4) ##4 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4) ##3 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4) ##2 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 4) ##4 (TotalZeros_LE3 == 3)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 346) && (rbsp <= 511) ##3 (TotalZeros_LE3 == 3)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 3) && (len_G3 <= 6) ##4 (TotalZeros_LE3 == 3)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 3) ##4 (TotalZeros_LE3 == 3)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 136) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 317) && (rbsp_LE3 <= 394) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 136) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 136) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 136) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 136)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 136) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 136) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 4) && (len_G3 <= 6) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 115) ##4 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 115) ##1 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 115) ##3 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 115) ##2 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##1 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##4 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##4 (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##2 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 256) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##4 (len_comb >= 0) && (len_comb <= 1)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##3 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##4 (len_LE3 >= 0) && (len_LE3 <= 3)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##4 (TotalZeros_LE3 >= 0) && (TotalZeros_LE3 <= 1)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 256) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 5) && (len_G3 <= 6) ##2 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 5) && (len_G3 <= 6) ##3 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 5) && (len_G3 <= 6) ##1 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 5) && (len_G3 <= 6) ##4 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 5) && (len_G3 <= 6)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 193) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 221) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 3) ##4 (TotalZeros_LE3 == 3)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 8) && (TotalZeros_comb <= 9)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 8) && (TotalZeros_comb <= 9) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 6) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 8)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 6)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 15) && (rbsp_LE3 <= 136)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 4) && (len_G3 <= 6) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##2 (len_comb >= 0) && (len_comb <= 2) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##2 (rbsp >= 135) && (rbsp <= 447) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##2 (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 4) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##1 (rbsp >= 50) && (rbsp <= 451) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##2 (TotalZeros_comb >= 0) && (TotalZeros_comb <= 4) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##1 (len_G3 >= 1) && (len_G3 <= 2) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##2 (rbsp_G3 >= 55) && (rbsp_G3 <= 63) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##1 (TotalCoeff >= 9) && (TotalCoeff <= 13) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##2 (TotalZeros_LE3 == 0) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 86) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 86) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 >= 4) && (TotalZeros_LE3 <= 7) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 504) && (rbsp_LE3 <= 505)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##3 (rbsp >= 189) && (rbsp <= 349) ##1 (TotalZeros_LE3 == 3)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 373) && (rbsp <= 511) ##3 (TotalZeros_LE3 == 3)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##3 (len_LE3 >= 0) && (len_LE3 <= 1) ##1 (TotalZeros_LE3 == 3)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 4) && (TotalCoeff <= 6) ##4 (TotalZeros_LE3 == 3)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 4) && (TotalCoeff <= 7) ##4 (TotalZeros_LE3 == 3)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 4) && (TotalCoeff <= 8) ##4 (TotalZeros_LE3 == 3)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##2 !sel ##2 (TotalZeros_LE3 == 3)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 6) && (TotalZeros_comb <= 7)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 5)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 9) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 9) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 9)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 9) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 9) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 115) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 8) && (TotalZeros_comb <= 9) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 8)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 115)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 6)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 115) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 6) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 8) && (TotalZeros_comb <= 9)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 115) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 115) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 115) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 115) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 67) ##3 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##2 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 67) ##2 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##3 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##1 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##4 (len_comb == 0)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##4 (TotalZeros_LE3 == 1)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##4 (TotalZeros_comb == 0)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##4 (len_LE3 == 3)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5) ##4 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5) ##3 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##1 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##3 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 394)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 364)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##4 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##2 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##2 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5) ##2 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##4 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5) ##1 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##3 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 238) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 256) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##1 (rbsp >= 258) && (rbsp <= 508) ##3 (TotalZeros_LE3 == 3)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 1) ##4 (TotalZeros_LE3 == 3)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 3) && (TotalCoeff <= 6) ##4 (TotalZeros_LE3 == 3)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 339) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 256) ##3 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 256) ##2 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##2 (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 4) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##1 (TotalCoeff >= 11) && (TotalCoeff <= 13) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##1 (rbsp >= 284) && (rbsp <= 451) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##2 (len_comb >= 0) && (len_comb <= 1) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##2 (rbsp_G3 == 63) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##1 !chroma_DC_sel ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##3 ena ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##2 (rbsp >= 135) && (rbsp <= 213) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##2 (len_LE3 >= 0) && (len_LE3 <= 1) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##2 (TotalZeros_comb >= 0) && (TotalZeros_comb <= 1) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##1 (len_G3 == 1) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 0) && (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) && (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 221) && (rbsp_LE3 <= 238) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) && (len_comb >= 0) && (len_comb <= 1) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 136) && (rbsp <= 193) && (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 2) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 0) && (len_comb <= 1) && (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) && (rbsp >= 136) && (rbsp <= 193) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 193) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 0) && (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 4) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 221) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 414) && (rbsp <= 511) ##3 (TotalZeros_LE3 == 3)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 339) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 86) ##2 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 86) ##3 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##4 (rbsp >= 295) && (rbsp <= 321)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##4 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##3 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 373)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 504) && (rbsp_LE3 <= 505)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 2) && (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##1 ena ##3 (TotalZeros_LE3 == 3)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) (!chroma_DC_sel ##2 (TotalZeros_chroma_DC == 2) ##1 1) |-> (rbsp_G3 >= 41) && (rbsp_G3 <= 63));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 428) && (rbsp <= 511) ##3 (TotalZeros_LE3 == 3)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) && chroma_DC_sel ##4 (TotalZeros_LE3 == 3)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 0) && (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 0) && (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 193) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 136) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 511) ##2 !chroma_DC_sel ##2 (TotalZeros_LE3 == 3)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) && (len_comb == 1) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 238) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) && (len_comb == 0) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 221) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 256) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 7) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 1) && (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 1) && (len_comb <= 2) ##3 (TotalZeros_LE3 == 3)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1) && (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 1) && (len_G3 <= 3) && (rbsp >= 348) && (rbsp <= 511) ##4 (TotalZeros_LE3 == 3)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) && (rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##4 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 288)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 288) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##2 (len_comb == 0) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##2 (TotalZeros_comb == 0) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##1 ena ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##3 chroma_DC_sel ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##1 (TotalCoeff == 13) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##2 (TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 3) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##3 (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##1 (rbsp >= 284) && (rbsp <= 363) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##3 (len_LE3 >= 0) && (len_LE3 <= 1) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##1 (TotalZeros_G3 == 2) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##2 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##2 chroma_DC_sel ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136) ##3 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##3 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##2 !ena ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##2 (rbsp >= 135) && (rbsp <= 161) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136) ##2 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17) ##2 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##4 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##3 (TotalZeros_LE3 == 0) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##1 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17) ##3 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##3 sel ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##1 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##2 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##3 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##4 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 394) ##4 (TotalZeros_LE3 == 3)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 430) ##4 (TotalZeros_LE3 == 3)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 1) ##3 (TotalZeros_LE3 == 3)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 429) ##4 (TotalZeros_LE3 == 3)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 348) && (rbsp <= 400) ##4 (TotalZeros_LE3 == 3)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 394) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 394) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 394) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 394) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 288) && (rbsp_LE3 <= 394)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 67) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 67) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 67) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 67) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 67) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 67) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 67)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 288) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##4 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##4 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##4 (rbsp >= 317) && (rbsp <= 321)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136) ##2 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136) ##3 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 373)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 504)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##1 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##3 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##2 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##2 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##4 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##1 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##2 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##4 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##1 (len_LE3 == 5) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 394)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 505)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##1 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##3 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##4 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##3 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 485)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 364)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 256) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 256) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 256) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 256) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##3 (TotalCoeff >= 1) && (TotalCoeff <= 8) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##3 (TotalCoeff >= 8) && (TotalCoeff <= 9) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##3 (len_comb == 1) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##1 sel ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##3 (rbsp_chroma_DC >= 1) && (rbsp_chroma_DC <= 2) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##3 (TotalZeros_comb == 1) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##2 (TotalZeros_G3 == 2) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##1 (TotalZeros_G3 == 4) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##3 (rbsp >= 118) && (rbsp <= 137) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##3 (len_G3 == 2) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##2 (len_G3 >= 0) && (len_G3 <= 1) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##3 (TotalCoeff == 15) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##2 (len_LE3 == 0) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##3 (TotalZeros_chroma_DC == 1) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##3 (TotalZeros_G3 == 1) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##3 (len_LE3 == 1) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##2 (len_LE3 == 1) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##2 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##2 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##3 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##4 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##2 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##3 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##3 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##1 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##4 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##4 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##1 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##4 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##3 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##1 (len_LE3 == 5) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##1 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##1 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##2 1) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 136) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 136) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 136) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 136) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 136)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 256) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 256)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 256) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 256) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 256) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##4 (rbsp == 317)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 310) && (rbsp <= 410) ##4 (TotalZeros_LE3 == 3)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##4 (TotalZeros_comb == 1)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##4 (len_comb == 1)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##4 (TotalCoeff == 3)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 326) && (rbsp <= 417) ##2 (TotalZeros_LE3 == 3)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##4 (len_LE3 == 0)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##4 (TotalCoeff == 0)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##1 (len_LE3 == 5) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##4 (TotalZeros_LE3 == 0)) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 5) && (len_G3 <= 6) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 9) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 86) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 5) && (len_G3 <= 6)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 5) && (len_G3 <= 6) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 7) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 5) && (len_G3 <= 6) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 8) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 7)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 86) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 9)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 9) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 8)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 86) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 5) && (len_G3 <= 6) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##2 (len_comb == 2) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##1 (len_LE3 == 5) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##2 (TotalCoeff == 0) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##1 (TotalCoeff == 9) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##1 (TotalCoeff == 11) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##2 (TotalCoeff == 6) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##2 (len_G3 == 1) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##3 (len_G3 == 0) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##2 (TotalCoeff == 5) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##2 (TotalCoeff == 8) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##2 (TotalZeros_G3 == 0) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##3 (TotalZeros_G3 == 0) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##1 (TotalZeros_LE3 == 1) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##2 (TotalZeros_comb == 1) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##2 (len_comb == 1) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##3 (TotalCoeff == 9) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##2 (len_G3 == 0) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##2 (rbsp == 161) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##2 (len_G3 == 2) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##3 (rbsp_chroma_DC == 2) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##1 (len_comb == 1) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##1 (len_comb == 2) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##3 (len_LE3 == 0) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##3 (TotalCoeff == 8) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##2 !sel ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##2 (TotalZeros_chroma_DC == 1) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##2 (TotalZeros_G3 == 3) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##3 (TotalZeros_G3 == 3) ##1 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##1 (len_G3 == 2) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##1 (len_LE3 == 3) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 212) && (rbsp <= 313) ##1 (TotalZeros_LE3 == 3)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##2 (TotalZeros_G3 == 4) ##2 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##1 (rbsp_G3 == 56) ##3 1) |-> (rbsp_LE3 >= 485) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 6)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 115) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 115)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 7) && (TotalZeros_comb <= 8)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 115) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 2) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb >= 8) && (TotalZeros_comb <= 9)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 115) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 115) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 86)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 8) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 7)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 5) && (len_G3 <= 6) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 86) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 9)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 86) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 86) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 9) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 9) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 7) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 8)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 5) && (len_G3 <= 6)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 5) && (len_G3 <= 6) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 5) && (len_G3 <= 6) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 5) && (len_G3 <= 6) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 9) ##1 (len_LE3 == 5) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 394) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 288) && (rbsp <= 397) ##2 (TotalZeros_LE3 == 3)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 9) ##1 (len_LE3 == 5) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 5) && (len_comb <= 7) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 364) && (rbsp_LE3 <= 394) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 8) ##1 (len_LE3 == 5) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 8) ##1 (len_LE3 == 5) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 4) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 52) && (rbsp_LE3 <= 67) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 8) ##1 (len_LE3 == 5) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 8) ##1 (len_LE3 == 5) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 67)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 67) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 136) && (rbsp_LE3 <= 256)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 67) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 67) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 67) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 52) && (rbsp_LE3 <= 67) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 9) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##1 (len_LE3 == 5) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##1 (len_LE3 == 5) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 2) && (len_LE3 == 5) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 !ena ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 (len_G3 == 3) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 !chroma_DC_sel ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 (len_G3 == 3) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 (TotalCoeff == 4) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 (len_LE3 == 0) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 !chroma_DC_sel ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7)) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 (TotalCoeff == 4) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 91) ##1 (len_LE3 == 5) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 82) ##1 (len_LE3 == 5) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 (TotalZeros_G3 == 1) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 91) ##1 (len_LE3 == 5) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 (len_LE3 == 0) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 52) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 (TotalZeros_LE3 == 0) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 82) ##1 (len_LE3 == 5) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 256) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 256) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 256) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 5) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 256)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 193) && (rbsp_LE3 <= 256) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 !chroma_DC_sel ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 !ena ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 52) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 (len_G3 == 3) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 (TotalCoeff == 4) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 (TotalCoeff == 4) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff == 2) && (len_LE3 == 5) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 == 52) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 !chroma_DC_sel ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 114) ##1 (len_LE3 == 5) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 (len_LE3 == 0) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 (TotalZeros_LE3 == 0) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 (TotalZeros_G3 == 1) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##1 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 (len_G3 == 3) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 114) ##1 (len_LE3 == 5) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##2 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 (len_LE3 == 0) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##4 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 4) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 178) ##1 (len_LE3 == 5) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 178) ##1 (len_LE3 == 5) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##1 (len_LE3 == 5) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 0) && (len_LE3 <= 1) ##1 (len_LE3 == 5) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 9)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 7)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 5) && (len_G3 <= 6) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 5) && (len_G3 <= 6) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 5) && (len_G3 <= 6) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 86)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 5) && (len_G3 <= 6)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 86) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 8)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 5) && (len_G3 <= 6) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 86) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 86) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 50) && (rbsp_LE3 <= 86) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp == 67)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 5) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 >= 5) && (len_LE3 <= 7) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 86) && (rbsp_LE3 <= 136) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 0) && (rbsp_LE3 <= 17)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) (sel ##1 (len_LE3 == 5) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 6) && (TotalCoeff <= 10) ##3 (TotalZeros_chroma_DC == 2)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 2) && (TotalZeros_G3 <= 3) ##2 (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##2 (TotalZeros_chroma_DC == 2)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) (sel ##1 (len_LE3 == 5) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalCoeff >= 5) && (TotalCoeff <= 9) ##3 (TotalZeros_chroma_DC == 2)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 2) && (len_G3 <= 6) ##3 (TotalZeros_chroma_DC == 2)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 1) && (TotalZeros_G3 <= 3) ##2 (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##2 (TotalZeros_chroma_DC == 2)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel ##1 (len_LE3 == 5) ##3 1) |-> (len_chroma_DC == 1));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 2) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb >= 6) && (len_comb <= 7) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 4)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_comb == 11) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp_LE3 >= 115) && (rbsp_LE3 <= 136)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 5)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 188) && (rbsp <= 285) ##4 (TotalZeros_chroma_DC == 2)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) (chroma_DC_sel ##1 (len_LE3 == 5) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 1));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 178) && (rbsp <= 350) ##4 (TotalZeros_chroma_DC == 2)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 349) ##4 (TotalZeros_chroma_DC == 2)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 180) && (rbsp <= 346) ##4 (TotalZeros_chroma_DC == 2)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 3) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 287) && (rbsp <= 396) ##3 (TotalZeros_chroma_DC == 2)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 172) && (rbsp <= 254) ##4 (TotalZeros_chroma_DC == 2)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 >= 0) && (len_G3 <= 1) ##2 (TotalZeros_LE3 == 3)) |-> (rbsp_LE3 >= 364) && (rbsp_LE3 <= 511));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 309) && (rbsp <= 410) ##3 (TotalZeros_chroma_DC == 2)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 3) ##2 (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##2 (TotalZeros_chroma_DC == 2)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 0) ##3 (TotalZeros_chroma_DC == 2)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 2) ##3 (TotalZeros_chroma_DC == 2)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) (ena ##3 (TotalZeros_chroma_DC == 2)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_LE3 == 0) ##2 (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##2 (TotalZeros_chroma_DC == 2)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_LE3 == 7) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 6) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_comb == 7) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) (DEFAULT_RESET ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 6) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_chroma_DC == 0) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##1 (len_comb == 0) ##1 (TotalZeros_chroma_DC == 2)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##2 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##1 (TotalZeros_comb == 0) ##1 (TotalZeros_chroma_DC == 2)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##1 (TotalZeros_chroma_DC == 0) ##1 (TotalZeros_chroma_DC == 2)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((rbsp >= 0) && (rbsp <= 254) ##2 (TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##2 (TotalZeros_chroma_DC == 2)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##3 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##1 !chroma_DC_sel ##1 (TotalZeros_chroma_DC == 2)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##4 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_chroma_DC == 3) ##1 1) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) ##1 (TotalZeros_chroma_DC == 2)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 >= 0) && (TotalZeros_G3 <= 1) && (len_G3 >= 0) && (len_G3 <= 1) ##2 (TotalZeros_chroma_DC == 2)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((len_G3 == 0) ##2 (TotalZeros_chroma_DC == 2)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
assert property(@(posedge DEFAULT_CLOCK) ((TotalZeros_G3 == 0) ##2 (TotalZeros_chroma_DC == 2)) |-> (len_chroma_DC >= 0) && (len_chroma_DC <= 2));
endmodule
